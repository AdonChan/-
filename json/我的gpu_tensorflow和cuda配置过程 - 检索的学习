{"title": "我的gpu_tensorflow和cuda配置过程 - 检索的学习 ", "index": "python", "content": "1.首先去官网下载cuda9.0版本 然后安装，配置环境变量。\nCUDA_PATH是C:Program FilesNVIDIA GPU Computing ToolkitCUDA9.0但是仅仅如此，是不够的，还需要在环境变量里的path全局变量里加入，这个下面的bin和libx64目录的路径。安装过程就是一路默认下一步就好了。\n2.下载cudnncuDNN的全称为NVIDIA CUDA® Deep Neural Network library，是NVIDIA专门针对深度神经网络（Deep Neural Networks）中的基础操作而设计基于GPU的加速库。cuDNN为深度神经网络中的标准流程提供了高度优化的实现方式，例如convolution、pooling、normalization以及activation layers的前向以及后向过程。\ncuDNN只是NVIDIA深度神经网络软件开发包中的其中一种加速库。想了解NVIDIA深度神经网络加速库中的其他包请戳链接https://developer.nvidia.com/...。\n下面我们说一下正确的安装cuDNN方式，其实跟着官方安装说明进行安装就可以了。\n从https://developer.nvidia.com/...（可能需要注册或登录）。\n如果这个压缩包不是.tgz格式的，把这个压缩包重命名为.tgz格式。解压当前的.tgz格式的软件包到系统中的任意路径，解压后的文件夹名为cuda，文件夹中包含三个文件夹：一个为include，另一个为lib64，还有一个是bin，然后复制到CUDA_PATH下面。\n将解压后的文件中的lib/x64文件夹关联到环境变量中。这一步很重要。\n运行tensorflow检验\n#coding=utf-8\n\nimport tensorflow as tf\n\nimport numpy as np\n\nhello=tf.constant('hhh')\n\nsess=tf.Session()\n\nprint (sess.run(hello))\n\n3.安装tensorflow按照官网教程安装，然后用按照anaconda启动tensorflow，pythonimport tensorflow as tf 如果不报错就成功了。查看tensorflow版本\n4.如何查看自己用的是cpu还是gpu？在Python环境中输入：在Python环境中输入：\nimport numpy\nimport tensorflow as tf\na = tf.constant([1.0, 2.0, 3.0, 4.0, 5.0, 6.0], shape=[2, 3], name='a')\nb = tf.constant([1.0, 2.0, 3.0, 4.0, 5.0, 6.0], shape=[3, 2], name='b')\nc = tf.matmul(a, b)\nsess = tf.Session(config=tf.ConfigProto(log_device_placement=True))\nprint(sess.run(c))\n\n之后就会出现详细的信息：\nDevice mapping:\n/job:localhost/replica:0/task:0/device:GPU:0 -> device: 0, name: Tesla K40c, pci bus\nid: 0000:05:00.0\nb: /job:localhost/replica:0/task:0/device:GPU:0\na: /job:localhost/replica:0/task:0/device:GPU:0\nMatMul: /job:localhost/replica:0/task:0/device:GPU:0\n[[ 22.  28.]\n [ 49.  64.]]\n\n就能看到是GPU在工作还是CPU再工作了。\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "0"}