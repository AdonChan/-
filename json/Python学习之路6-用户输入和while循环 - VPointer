{"title": "Python学习之路6-用户输入和while循环 - VPointer ", "index": "python,input,while", "content": "《Python编程：从入门到实践》笔记。本章主要介绍如何进行用户输入，while循环，以及与循环配合使用的break, continue语句。\n1. input() 函数\n在Python中，使用input()函数获取用户输入，这里请注意：input()的返回值为字符串。如果输入的是数字，并且要用于后续计算，需要进行类型转换。input()函数可以传入字符串参数作为输入提示，如下：\n# 代码：\nnumber = input()\n# 判断数据类型的两种方法\nprint(type(number))\nprint(isinstance(number, str))\n\nprint(int(number) ** 2)    # int()函数将字符串转换成整数\n\n# 如果提示超过一行，可以将提示放在变量中，再将变量传入input()；\n# 并且最好在提示后面留一个空格以区分提示和用户输入\nmessage = input(\"Tell me something, and I will repeat it back to you: \")\nprint(message)\n\n# 结果：\n123\n<class 'str'>\nTrue\n15129\nTell me something, and I will repeat it back to you: Hello, everyone!\nHello, everyone!\n判断奇偶（作为对前文常见运算的补充）：取模运算%，返回余数\n# 代码：\nnumber = input(\"Enter a number, and I'll tell you if it's even or odd: \")\nnumber = int(number)\n\nif number % 2:\n    print(\"\\nThe number \" + str(number) + \" is even.\")\nelse:\n    print(\"\\nThe number \" + str(number) + \" is odd.\")\n\n# 结果：\nEnter a number, and I'll tell you if it's even or odd: 123\n\nThe number 123 is even.\n2. while 循环简介\nfor循环用于针对集合中的每个元素的一个代码块，而while循环不断地运行，直到指定的条件不满足为止。比如，让用户选择何时退出：\n# 代码：\nprompt = \"\\nTell me something, and I will repeat it back to you:\"\nprompt += \"\\nEnter 'quit' to end the program. \"\nmessage = \"\"\nwhile message != \"quit\":\n    message = input(prompt)\n    if message != \"quit\":\n        print(message)\n\n# 结果：\nTell me something, and I will repeat it back to you:\nEnter 'quit' to end the program. Hello everyone!\nHello everyone!\n\nTell me something, and I will repeat it back to you:\nEnter 'quit' to end the program. Hello again.\nHello again.\n\nTell me something, and I will repeat it back to you:\nEnter 'quit' to end the program. quit\n2.1 使用标志\n在上述代码中我们直接对输入数据进行判断，这样做在简单的程序中可行，但复杂的程序中，如果有多个状态同时决定while循环的继续与否，要是还用上述的方法，则while循环的条件判断将很长很复杂，这时可以定义一个变量作为标志来代替多个条件。使用标志来改写上述代码：\nprompt = \"\\nTell me something, and I will repeat it back to you:\"\nprompt += \"\\nEnter 'quit' to end the program. \"\n\nactive = True\nwhile active:\n    message = input(prompt)\n    if message != \"quit\":\n        active = False\n    else:\n        print(message)\n在复杂的程序中，如很多事件都会导致程序停止运行的游戏中，标志很有用：在其中的任何一个事件导致活动标志变为False时，主游戏循环将退出。\n2.2 使用break退出循环\n要立即退出while或者for循环，不在执行循环中余下的代码，也不管条件测试的结果如何，可使用break语句。再将上述使用标志的代码改写为break：\nprompt = \"\\nTell me something, and I will repeat it back to you:\"\nprompt += \"\\nEnter 'quit' to end the program. \"\n\nwhile True:\n    message = input(prompt)\n    if message != \"quit\":\n        break\n    print(message)\n2.3 在循环中使用continue\n如果满足某条件时要返回循环开始处，而不是跳出循环，则使用continue语句。以下是打印1到10中的所有奇数的代码：\n# 代码：\ncount = 0\nwhile count < 10:\n    count += 1\n    if count % 2 == 0:\n        continue\n    print(count)\n\n# 结果：\n1\n3\n5\n7\n9\nbreak与continue的区别：break跳过循环体内余下的所有代码，并跳出循环；continue跳过循环体内余下的所有代码，回到循环体开始处继续执行，而不是跳出循环体。值得提醒的是，编写循环时应避免死循环，或者叫做无限循环，比如while循环忘记了变量自增。\n3. 使用while循环来处理列表和字典\n3.1 在列表之间移动元素\n将未验证用户经验证后变为已验证用户：\n# 代码：\nunconfirmed_users = [\"alice\", \"brian\", \"candace\"]\nconfirmed_users = []\n\nwhile unconfirmed_users:\n    current_user = unconfirmed_users.pop()\n\n    print(\"Verifying user: \" + current_user.title())\n    confirmed_users.append(current_user)\n\nprint(\"\\nThe following users have been confirmed:\")\nfor confirmed_user in confirmed_users:\n    print(confirmed_user.title())\n\n# 结果：\nVerifying user: Candace\nVerifying user: Brian\nVerifying user: Alice\n\nThe following users have been confirmed:\nCandace\nBrian\nAlice\n3.2 删除包含特定值的所有列表元素\n之前的章节中使用remove()函数来删除列表中的值，但只删除了列表中的第一个指定值，以下代码循环删除列表中指定的值：\n# 代码：\npets = [\"dog\", \"cat\", \"dog\", \"goldfish\", \"cat\", \"rabbit\", \"cat\"]\nprint(pets)\n\nwhile \"cat\" in pets:\n    pets.remove(\"cat\")\n\nprint(pets)\n\n# 结果：\n['dog', 'cat', 'dog', 'goldfish', 'cat', 'rabbit', 'cat']\n['dog', 'dog', 'goldfish', 'rabbit']\n3.3 使用用户输入来填充字典\n# 代码：\nresponses = {}\n\n# 设置一个标志，指出调查是否继续\npolling_active = True\nwhile polling_active:\n    # 提示输入被调查者的名字和回答\n    name = input(\"\\nWhat is your name? \")\n    response = input(\"Which mountain would you like to climb someday? \")\n\n    # 将回答存入字典\n    responses[name] = response\n    \n    # 是否还有人要参与调查\n    repeat = input(\"World you like to let another person respond?(yes/ no) \")\n    if repeat == \"no\":\n        polling_active = False\n\n# 调查结束，输出结果\nprint(\"\\n--- Poll Results ---\")\nfor name, response in responses.items():\n    print(name + \" world like to climb \" + response + \".\")\n    \n# 结果：\nWhat is your name? Eric\nWhich mountain would you like to climb someday? Denali\nWorld you like to let another person respond?(yes/ no) yes\n\nWhat is your name? Lynn\nWhich mountain would you like to climb someday? Devil's Thumb\nWorld you like to let another person respond?(yes/ no) no\n\n--- Poll Results ---\nEric world like to climb Denali.\nLynn world like to climb Devil's Thumb.\n\n迎大家关注我的微信公众号\"代码港\" & 个人网站 www.vpointer.net ~\n\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "1"}