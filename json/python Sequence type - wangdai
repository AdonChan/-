{"title": "python Sequence type - wangdai ", "index": "python", "content": "其实本来是要reverse一下list的，就去查了一下list[::-1]是什么意思，发现还有很多要注意的地方，所以就记一下。\n主要是参照https://docs.python.org/3/library/stdtypes.html?highlight=list#list\n\n首先Sequence type有三种\n\n\nlist\ntuple\nrange\n\nslice\n\n[i:j:k]表示的是slice of s from i to j with step k, 对三种类型都有用\n\n>>> a = [1, 2, 3]\n>>> a[::-1]\n[3, 2, 1]\n>>> a = (1, 2, 3)\n>>> a[::-1]\n(3, 2, 1)\n>>> a = range(3)\n>>> a[::-1]\nrange(2, -1, -1)\n\n\nrange中参数是range(start, stop[, step])\n\ninitialize a list\n\ns * n表示的是n shallow copies of s concatenated\n注意是浅拷贝哦，所以会有如下情况\n\n>>> lists = [[]] * 3\n>>> lists\n[[], [], []]\n>>> lists[0].append(3)\n>>> lists\n[[3], [3], [3]]\n\n\n如果元素不是对象的话就没关系\n\n>>> lists = [0] * 3\n>>> lists\n[0, 0, 0]\n>>> lists[0] = 1\n>>> lists\n[1, 0, 0]\n\n\n正确的初始化嵌套list的方法应该是\n\n>>> lists = [[] for i in range(3)]\n>>> lists[0].append(3)\n>>> lists[1].append(5)\n>>> lists[2].append(7)\n>>> lists\n[[3], [5], [7]]\n\n\nconcatenation pitfall\n\n(感觉还是英文说的清楚些，这一点跟Java是一样的)\nConcatenating immutable sequences always results in a new object. This means that building up a sequence by repeated concatenation will have a quadratic runtime cost in the total sequence length. To get a linear runtime cost, you must switch to one of the alternatives below:\n\n\n\nstr.join()或者写入io.StringIO\n\n\nbytes.join()或者写入io.BytesIO或者使用可变的bytearray\n\n使用list代替tuple\n\n\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "0"}