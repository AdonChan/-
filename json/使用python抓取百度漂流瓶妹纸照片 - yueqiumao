{"title": "使用python抓取百度漂流瓶妹纸照片 - yueqiumao ", "index": "抓网页数据,网页爬虫,爬虫图片,python,python2.7", "content": "\n无意中发现贴吧也出了个漂流瓶的东西，随手翻了翻发现居然有好多妹子图，闲来无事于是就想写个爬虫程序把图片全部抓取下来。\n这里是贴吧漂流瓶地址http://tieba.baidu.com/bottle...\n1.分析\n首先打开抓包神器 Fiddler ，然后打开漂流瓶首页，加载几页试试，在Fiddler中过滤掉图片数据以及非 http 200 状态码的干扰数据后，发现每一页的数据获取都很有规律，这就给抓取提供了便利。具体获取一页内容的url如下：\nhttp://tieba.baidu.com/bottle...\n看参数很容易明白，page_number 就是当前页码，page_size 就是当前页中包含的漂流瓶数量。\n访问后得到的是一个json格式的数据，结构大致如下：\n{\n    \"error_code\": 0,\n    \"error_msg\": \"success\",\n    \"data\": {\n        \"has_more\": 1,\n        \"bottles\": [\n            {\n                \"thread_id\": \"5057974188\",\n                \"title\": \"美得不可一世\",\n                \"img_url\": \"http://imgsrc.baidu.com/forum/pic/item/a8c87dd062d9f2d3f0113c2ea0ec8a136227cca9.jpg\"\n            },\n            {\n                \"thread_id\": \"5057974188\",\n                \"title\": \"美得不可一世\",\n                \"img_url\": \"http://imgsrc.baidu.com/forum/pic/item/a8c87dd062d9f2d3f0113c2ea0ec8a136227cca9.jpg\"\n            },\n            ...\n   }\n}\n内容很直白一眼就看出，bottles 中的数据就是我们想要的（thread_id  瓶子具体id, title 妹纸吐槽的内容, img_url  照片真实地址），遍历 bottles 就可以获得当前页的所有漂流瓶子。（其实现在得到的只是封面图哦，打开具体的瓶子有惊喜，因为我比较懒就懒得写了，不过我也分析了内部的数据，具体url是：http://tieba.baidu.com/bottle...瓶子thread_id>）\n还有一个参数 has_more 猜测是是否存在下一页的意思。到这里采集方式应该可以确定了。就是从第一页不停往后循环采集，直到 has_more 这个参数不为 1 结束。\n2.编码\n这里采用的是 python2.7 + urllib2 + demjson 来完成此项工作。urllib2 是python2.7自带的库，demjson 需要自己安装下（一般情况下用python自带的json库就可以完成json解析任务，但是现在好多网站提供的json并不规范，这就让自带json库无能为力了。）\ndemjson 安装方式 (windows 不需要 sudo)\nsudo pip install demjson\n或者\nsudo esay_install demjson\n2.1获得一页内容\ndef bottlegen():\n    page_number = 1\n    while True:\n        try:\n            data = urllib2.urlopen(\n                \"http://tieba.baidu.com/bottle/bottles?page_number=%d&page_size=30\" % page_number).read()\n            json = demjson.decode(data)\n            if json[\"error_code\"] == 0:\n                data = json[\"data\"]\n                has_more = data[\"has_more\"]\n                bottles = data[\"bottles\"]\n                for bottle in bottles:\n                    thread_id = bottle[\"thread_id\"]\n                    title = bottle[\"title\"]\n                    img_url = bottle[\"img_url\"]\n                    yield (thread_id, title, img_url)\n                if has_more != 1:\n                    break\n                page_number += 1\n        except:\n            raise\n            print(\"bottlegen exception\")\n            time.sleep(5)\n这里使用python的生成器来源源不断的输出分析到的内容。\n2.2根据url保存图片数据\nfor thread_id, title, img_url in bottlegen():\n    filename = os.path.basename(img_url)\n    pathname = \"tieba/bottles/%s_%s\" % (thread_id, filename)\n        print filename\n        with open(pathname, \"wb\") as f:\n            f.write(urllib2.urlopen(img_url).read())\n            f.close()\n2.3全部代码如下\n# -*- encoding: utf-8 -*-\nimport urllib2\nimport demjson\nimport time\nimport re\nimport os\n\ndef bottlegen():\n    page_number = 1\n    while True:\n        try:\n            data = urllib2.urlopen(\n                \"http://tieba.baidu.com/bottle/bottles?page_number=%d&page_size=30\" % page_number).read()\n            json = demjson.decode(data)\n            if json[\"error_code\"] == 0:\n                data = json[\"data\"]\n                has_more = data[\"has_more\"]\n                bottles = data[\"bottles\"]\n                for bottle in bottles:\n                    thread_id = bottle[\"thread_id\"]\n                    title = bottle[\"title\"]\n                    img_url = bottle[\"img_url\"]\n                    yield (thread_id, title, img_url)\n                if has_more != 1:\n                    break\n                page_number += 1\n        except:\n            raise\n            print(\"bottlegen exception\")\n            time.sleep(5)\n\ndef imggen(thread_id):\n    try:\n        data = urllib2.urlopen(\n            \"http://tieba.baidu.com/bottle/photopbPage?thread_id=%s\" % thread_id).read()\n        match = re.search(r\"\\_\\.Module\\.use\\(\\'encourage\\/widget\\/bottle\\',(.*?),function\\(\\)\\{\\}\\);\", data)\n        data = match.group(1)\n        json = demjson.decode(data)\n        json = demjson.decode(json[1].replace(\"\\r\\n\", \"\"))\n        for i in json:\n            thread_id = i[\"thread_id\"]\n            text = i[\"text\"]\n            img_url = i[\"img_url\"]\n            yield (thread_id, text, img_url)\n    except:\n        raise\n        print(\"imggen exception\")\n\ntry:\n    os.makedirs(\"tieba/bottles\")\nexcept:\n    pass\n\nfor thread_id, _, _ in bottlegen():\n    for _, title, img_url in imggen(thread_id):\n        filename = os.path.basename(img_url)\n        pathname = \"tieba/bottles/%s_%s\" % (thread_id, filename)\n        print filename\n        with open(pathname, \"wb\") as f:\n            f.write(urllib2.urlopen(img_url).read())\n            f.close()\n\n运行后会先获得每页所有瓶子，然后再获得具体瓶子中的所有图片，输出到 tieba/bottles/xxxxx.jpg 中。(因为比较懒就没做错误兼容，见谅 ^_^,,,)\n结论\n结论是,,, 都是骗人的就首页有几张好看的 - -,,, 他喵的,,,\n最后贴下采集成果\n\n                ", "mainLikeNum": ["1 "], "mainBookmarkNum": "1"}