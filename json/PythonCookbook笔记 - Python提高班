{"title": "PythonCookbook笔记 - Python提高班 ", "index": "Pythonic,python", "content": "写出更Pythonic的代码。\n1. 将序列分解为单独的变量,直接将序列赋值给变量即可。但是要注意：\n\n变量的数量要和序列中元素的数量相等。\n\n例子如下：<!--more-->\n>>>x, y = (4,5)\n>>>x\n4\n>>>y\n5\n>>>a,_,(c,d) = [1,2,(3,4)]\n>>>a\n1\n>>>_\n2\n>>>c\n3\n>>>d\n4\n\n不只是元组与列表可以，任何可迭代对象都可以，包括字符串，文件，迭代器，生成器等。\n可以用 _ 作为变量名，表示要丢弃的值。\n\n2. 当序列特别长时，而我们又只需某一部分的话可以用 *arg来表示。\n比如要取到序列中除去第一项和最后一项的值,求平均值。\n def drop_first_last(grades):\n     first, *middle, last = grades\n     return avg(middle)\n*arg 也可以放到第一个位置，事实上可以放到任何位置，表示剩余的所有值。\n3.从队列两端添加或弹出元素的复杂度为O(1),这和列表不同，当从列表头部插入或移除元素时，列表的复杂度为O(N).\n>>>from collections import deque\n>>>q = deque(1)\n>>>q = deque(2)\n>>>q = deque(3)\n>>>q\ndeque([1,2,3])\n>>>q.appendleft(4)\n>>>q\ndeque([4,1,2,3])\n>>>q.insert(0,8)#这种插入方法需要首先将列表中的所有元素向后移一个单位\n4.找到最大或最小的N个元素\nheapq 模块中有两个函数 nlargest()和nsmallest()\n import heapq\n nums = [1, 2, 5, 34, -5, 42, -9]\n print(heapq.nlargest(3,nums))# Prints [42,34,5]\n print(heapq.nsmallest(3,nums))#Prints [-9,-5,1]\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "1"}