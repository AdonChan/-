{"title": "Postgresql Server Side Cursor - dreambei ", "index": "python,postgresql", "content": "Postgresql Server Side Cursor\nWhen a database query is executed, the Psycopg cursor usually fetches all the records returned by the backend, transferring them to the client process. If the query returned an huge amount of data, a proportionally large amount of memory will be allocated by the client.\nIf the dataset is too large to be practically handled on the client side, it is possible to create a server side cursor. Using this kind of cursor it is possible to transfer to the client only a controlled amount of data, so that a large dataset can be examined without keeping it entirely in memory.\nServer side cursor are created in PostgreSQL using the DECLARE command and subsequently handled using MOVE, FETCH and CLOSE commands. postgresql-cursor\nCursor\nPsycopg wraps the database server side cursor in named cursors. A named cursor is created using the cursor() method specifying the name parameter.\n1. using DECLARE command create named cursor (note: declare must be in transaction)\nisnp=# declare xxxx CURSOR WITHOUT HOLD FOR select * from citys;\nERROR:  DECLARE CURSOR can only be used in transaction blocks\nisnp=# fetch xxxx;\nERROR:  cursor \"xxxx\" does not exist\nisnp=# begin;\nBEGIN\nisnp=# declare xxxx CURSOR WITHOUT HOLD FOR select * from citys;\nDECLARE CURSOR\nisnp=# fetch xxxx;\n    created_date        |        updated_date        |   id   | level |  name  | parent_id \n----------------------------+----------------------------+--------+-------+--------+-----------\n 2016-09-09 15:10:47.291513 | 2016-09-09 15:10:47.291513 | 410000 |     1 | 河南省 |          \n(1 row)\n\nisnp=# fetch xxxx;\n    created_date        |        updated_date        |   id   | level |  name  | parent_id \n----------------------------+----------------------------+--------+-------+--------+-----------\n2016-09-12 15:10:29.192463 | 2016-09-12 15:10:29.192463 | 410100 |     2 | 郑州市 |    410000\n\n2. using function return cursor\nisnp=# create function myfunction(refcursor) returns refcursor as $$\nisnp$# begin\nisnp$# open $1 for select * from citys;\nisnp$# return $1;\nisnp$# end;\nisnp$# $$\nisnp-# language plpgsql;\nCREATE FUNCTION\nisnp=# begin;\nBEGIN\nisnp=# select myfunction('mycursor');\nmyfunction \n------------\nmycursor\n(1 row)\n\nisnp=# fetch mycursor;\n    created_date        |        updated_date        |   id   | level |  name  | parent_id \n----------------------------+----------------------------+--------+-------+--------+-----------\n2016-09-09 15:10:47.291513 | 2016-09-09 15:10:47.291513 | 410000 |     1 | 河南省 |          \n(1 row)\n\nisnp=# fetch mycursor;\n    created_date        |        updated_date        |   id   | level |  name  | parent_id \n----------------------------+----------------------------+--------+-------+--------+-----------\n2016-09-12 15:10:29.192463 | 2016-09-12 15:10:29.192463 | 410100 |     2 | 郑州市 |    410000\n(1 row)\n\nisnp=# fetch mycursor;\n    created_date        |        updated_date        |   id   | level | name | parent_id \n----------------------------+----------------------------+--------+-------+------+-----------\n2016-09-12 15:10:29.194794 | 2016-09-12 15:10:29.194794 | 410101 |     3 | 直属 |    410100\n(1 row)\n\nPython Code\n1. psycopg2 example\nimport psycopg2\n# server side cursor via function method\nconnection = psycopg2.connect(\"dbname=isnp\")\ncursor = connection.cursor()\ncursor.callproc(\"myfunction\", [\"xxxx\"])\ncursor1 = connection.cursor(\"xxxx\")\nprint(cursor1.fetchmany(100))\ncursor1.close()\nconnection.close()\n\n2. sqlalchemy example\nfrom sqlalchemy import engine_from_config\n\nconfig = {\n    \"sqlalchemy.url\": \"postgresql:///isnp\",\n    \"sqlalchemy.echo\": True,\n    \"sqlalchemy.server_side_cursors\": True,\n}\nengine = engine_from_config(config)\n\nconnection = engine.connect()\nproxy_results = connection.execution_options(stream_results=True).execute(\"select * from citys\")\nprint(proxy_results.fetchmany(10))\n\n                ", "mainLikeNum": ["1 "], "mainBookmarkNum": "0"}