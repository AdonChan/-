{"title": "爱卡_xcar_汽车详解抓取 - 笔记 @BONFY ", "index": "网页爬虫,python", "content": "爬虫练手，主要运用requests，由于要对script内部进行分析，所以就直接用了 re 正则匹配，平时也可以用用Beautifulsoup， 应该更加方便\n\n思路：\n\n\n  读取首页，就是如 http://newcar.xcar.com.cn/2674/2015/detail/1.htm；为了全部抓取，我们这里都是 1.htm 结尾\n\n\n\n  找到页面里面的 script 标签里面的 \" var nextUrl \" ，这个这个地址就是页面自动播放的下个页面;同时读出 img src 即 图片地址，然后保存（我这里是把 说明 等内容全部放进 目标文件的名称中了，其实大家只要图片的话完全不需要）\n\n\n\n  递归抓取 全部页面\n\n\n这里另外做的一点实际 弄了个xcar_lst 记录所有页面、图片等信息，只是留作记录，暂时没用\n\n上代码：\n\npython# coding:utf-8\n\n\n\n__author__ = 'BONFY CHEN'\n\n\n\nimport requests\n\nimport re\n\n\n\nPROXIES = None\n\n\n\nHEADERS = {\n\n    'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/38.0.2125.122 Safari/537.36'\n\n    , 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8'\n\n    , 'Accept-Encoding': 'gzip,deflate,sdch'\n\n    , 'Accept-Language': 'zh-CN,zh;q=0.8'\n\n}\n\n\n\nBASE_FOLDER = 'D:/xxx_folder/'\n\n\n\n\n\nclass xcarDown(object):\n\n\n\n    _base_folder = None\n\n    _proxies = None\n\n    _headers = None\n\n    _website = 'http://newcar.xcar.com.cn'\n\n    _xcar_lst = []\n\n\n\n    def set_base_folder(self, base_folder):\n\n        self._base_folder = base_folder\n\n\n\n    def set_headers(self, headers):\n\n        self._headers = headers\n\n\n\n    def set_proxies(self, proxies):\n\n        self._proxies = proxies\n\n\n\n    def __init__(self, base_folder=BASE_FOLDER, proxies=PROXIES, headers=HEADERS):\n\n        self.set_base_folder(base_folder)\n\n        self.set_headers(headers)\n\n        self.set_proxies(proxies)\n\n\n\n    def download_image_from_url(self, url, name=None):\n\n\n\n        \"\"\"\n\n        download_image_from_url\n\n        :param url: the resource image url\n\n        :param name: he destination file name\n\n        :return:\n\n        \"\"\"\n\n\n\n        local_filename = name + '_' + url.split('/')[-1]\n\n        r = requests.get(url, proxies=self._proxies, headers=self._headers, stream=True)\n\n        with open(self._base_folder + local_filename, 'wb') as f:\n\n            for chunk in r.iter_content(chunk_size=1024):\n\n                if chunk:\n\n                    f.write(chunk)\n\n                    f.flush()\n\n            f.close()\n\n        return local_filename\n\n\n\n\n\n    def download_xcar(self, url):\n\n\n\n        \"\"\"\n\n\n\n        :param url: the source url in xcar.com.cn\n\n                    http://newcar.xcar.com.cn/2674/2015/detail/1.htm\n\n        :return:\n\n        \"\"\"\n\n\n\n        r = requests.get(url, proxies=self._proxies, headers=self._headers)\n\n        # print r.encoding\n\n        r.encoding = 'gbk'\n\n\n\n        m1 = re.search(r\"var nextUrl = '(?P<n_url>.*.htm)'\", r.text)\n\n        next_url = m1.groupdict()['n_url'] if m1 else None\n\n\n\n        m2 = re.search(r\"<div class=\\\"zs_img\\\"><img src=\\\"(?P<pic_url>.*.jpg)\\\"\", r.text)\n\n        pic_url = m2.groupdict()['pic_url'] if m2 else None\n\n\n\n        m3 = re.search(r\"<div class=\\\"zs_t\\\">(?P<title>.*)</div>\", r.text)\n\n        title = m3.groupdict()['title'] if m3 else ''\n\n\n\n        m4 = re.search(r\"<div class=\\\"zs_c\\\">(?P<cont>.*)</div>\", r.text)\n\n        cont = m4.groupdict()['cont'] if m4 else ''\n\n\n\n        m5 = re.search(r\"<title>(?P<model>.*)</title>\", r.text)\n\n        model = m5.groupdict()['model'] if m5 else ''\n\n\n\n        if pic_url:\n\n            try:\n\n                self.download_image_from_url(pic_url, name='_'.join([model, title, cont]))\n\n                print 'download complete: pic from {} '.format(pic_url)\n\n            except IOError:\n\n                print 'file name IOERROR'\n\n                self.download_image_from_url(pic_url, name=model)\n\n                print 'download complete: pic from {} '.format(pic_url)\n\n            except Exception as e:\n\n                print e\n\n\n\n        dct = dict(pic_url=pic_url, next_url=next_url, title=title, cont=cont, model=model)\n\n        self._xcar_lst.append(dct)\n\n       if next_url[-4:] == '.htm':\n\n            self.download_xcar(self._website + next_url)\n\n\n\n\n\nif __name__ == '__main__':\n\n    print(\"Welcome to the Pic Download for xcar.com\")\n\n    print(\"Downloaded files in the folder: \" + BASE_FOLDER )\n\n    print(\"---------------------------------------\")\n\n\n\n    id_modell = int(input(\"Please enter the modell id(eg.2674): \"))\n\n    year = int(input(\"Please enter the year (eg.2015): \"))\n\n\n\n    url = 'http://newcar.xcar.com.cn/{}/{}/detail/1.htm'.format(id_modell, year)\n\n    xcar = xcarDown()\n\n    xcar.download_xcar(url)\n\n\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "3"}