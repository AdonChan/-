{"title": "Python打印“菱形”星号代码 - 个人文章 ", "index": "python", "content": "小计\n\n本人是一名python初学者，刚刚看到一道有趣的python问题，“用python如何在编译器中打印出菱形图案？”\n因此决定尝试一下，代码不多，仅供参考。\n代码\ndef printStar(intNum):               # 打印星号\n    s = \"*\"\n    spaceLength = intNum             # 空间长度（循环打印次数）\n    blockCount = int(intNum/2+1)     # 第一个星号左边的空格数\n\n    for i in range(spaceLength):     # 开始循环并打印\n        result = s.rjust(blockCount) # rjust(i)方法：设定一个字符串长度i，不足则向左填充空格\n        if i >= int(spaceLength/2):  # 菱形下方\n            print(result)\n            s = s[2:]\n            blockCount -= 1\n        else:                        # 菱形上方\n            print(result)\n            s = s+(2*\"*\")\n            blockCount += 1\n\n\ndef oddOReven(intNum):               # 判断是否是奇数（偶数打印六边形，非菱形）\n\n    if intNum%2 == 0:                \n        print(\"please input a odd num data！！！\")\n    else: \n        printStar(intNum)\n\nif __name__ == '__main__':\n    \n    while True:\n        try:\n            intNum = eval(input(\"please input a odd num data\\n\"))\n            oddOReven(intNum)\n        except BaseException as e:\n            print(\"Please input as 1/2/3... Errorcode:%s\" % e)\n\n            \n            \n\n运行结果：\n\n\n                ", "mainLikeNum": ["1 "], "mainBookmarkNum": "1"}