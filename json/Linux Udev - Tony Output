{"title": "Linux Udev - Tony Output ", "index": "linux,udev,后端,python,linux-kernel", "content": "在我入门udev的时候，看着各种各样的资料觉得这个东西很高深的时候，突然瞄到一篇文章里面说道： 要树立一个信念：udev很简单，当时不以为然，现在能够理解，其实稍作研究就能理解了，看起来很高端很遥远的Title，比如Linux Kernel，比如软硬件交互，比如热插拔等等，其实掌握几个rules，然后再动手实践实践，对比着讲解，就能知道七七八八了，想要再深入，就多看看文档实现和内核源码，其实很多东西都是这样，了解了就很简单，没事了解一点就比别人多知道一些，共勉\nUdev 是什么\nudev是linux kernel的设备管理器，处理硬件的添加和删除，但它的功能远远不仅于此。比如U盘插入，电脑是如何即时的做出响应？耳机插入又是如何做到自动关闭外部音量？这些都跟udev有关。虽然udev很强大，功能很多，本来就针对SCSI硬盘设备的插拔做一些经验的分享。至于为什么我会研究到这个东西，是因为最近在做ceph相关的项目，需要实现一个类似热插拔的feature，懂的人应该很清楚，就是拔插硬盘后，osd自动恢复，主要应用于硬盘寿命即将到期，替换新盘的场景，不明白的同学也不要紧，因为本文主要讨论的是udev\nUdev Rules\nudev管理各种各样的设备，比如USB,DISK,CD等等，为了区别设备类型，精确匹配，udev制定了一套特色的rules，为什么说特色呢？因为我觉得它用最简洁的语法满足了方方面面的需求\n这里推荐一些有用的link：\n\nUDEV Primer  udev入门必读，可以快速将udev了解一番\nWriting udev rules  经典文章，看完这个基本就能掌握udev rules\nWriting udev rules 修订版  国内论坛对格式样式做了一些修改，有洁癖的可以看看\nWriting udev rules 译  翻译版本，英文不好的可以中英文对比着看\nudev 中文手册  这位金步国先生为开源事业做出了杰出的贡献，早前就看过他翻译的Apache的手册\nWriting udev rules and kernel examples  看够了上面各种规则，来看看具体的例子吧\nUdev 详解  文章如名，真的很详细\nUdev 使用方法  一些特殊的技巧\n\n大家看完上面的文章应该知道rules文件的位置和规则,下面我贴一些我实践中的代码和例子\n这是两条分别针对SCSI硬盘设备的添加和删除的rules，设备事件分别会触发相应的脚本：\nKERNEL==\"sd[a-z]\", ACTION==\"add\", SUBSYSTEM==\"block\", RUN+=\"/usr/bin/python /root/test.py %k add\"\nKERNEL==\"sd[a-z]\", ACTION==\"remove\", SUBSYSTEM==\"block\", RUN+=\"/usr/bin/python /root/test.py %k remove\"\n注意：\n\n执行外部命令必须加上环境变量路径, 上面的这个也可以不加/usr/bin/python，但是必须在py脚本头部加上shebang：#! /usr/bin/python\nRUN可以运行程序外的程序，而PROGRAM不是做这个事情的，而是为了生成之后需要的变量\n\n相关 Link\n\nhashtag and shebang\nshebang\n\nUdevadm\nudevadm是一个udev的管理工具，可以用来获取设备信息(info)，监视和控制udev运行时的行为(control)，请求内核事件(trigger)，管理事件队列(settle)，以及提供简单的调试机制(test)。很实用，很好用！！！\n推荐 Link\n\nudevadm 中文手册  很全，很基础 ~~\nudevadm command examples  很多udevadm的命令可以借鉴，说不定以后可以用到呢？\n\n介绍几个我具体使用过的例子：\nudevadm info\n可以从udev数据库中提取设备信息,此外，还可以从sysfs中提取设备的属性， 以帮助创建与此设备匹配的udev规则\n获取/dev/sdb的path信息\nudevadm info -q path -n /dev/sdb\nudevadm test\n模拟向udev发送设备信息，并不会真的触发，而是将触发后的过程信息打印出来，对调试很有帮助， 我用这个查看脚本是否会被执行\nudevadm test --action='add' `udevadm info -q path -n /dev/sdb`\n注意： test不会真正触发事件，而trigger可以\nudevadm trigger\n可以真正触发udev事件，但是不会真正改变硬件，只是触发kernel和udev的事件，会触发udev rules，我用这个触发事件，校验rules匹配\nudevadm trigger -v --action=add --sysname-match=sda\n注意：\n\n不加sysname-match那么会触发所有设备，如果是action=remove，那么则会移除很多设备，甚至导致sshd服务停掉\n后面是sda而不是/dev/sda因为它是根据pci路径来定位name的，比如sda的路径是：\n\n/sys/devices/pci0000:00/0000:00:10.0/host2/target2:0:0/2:0:0:0/block/sda\nudevadm control\n重载udev rules，对之后触发的新设备有效，对之前已经触发的无效\nudevadm control --relaod-rules\n更改udev日志等级为info，udev默认等级为err，可以在/etc/udev/udev.conf中查看，日志具体信息可以在syslog中查看\nudevadm control --log-priority=info\nMore about udev\nudev还有很多有意思的地方，如果想要更加深入的学习，那么除了熟练地掌握rules等技巧，还要对其实现原理有了解，这就得多看文档，多看源码了，建议大家有条件的情况下多看源码，多看原始的东西，因为经过别人的总结就可能会变味，相互对比，不要一味依赖别人总结的产物\n\nLinux 自动挂载usb设备 小例子  如何在usb设备插入后自动挂载？\nudev使用笔记  这篇文章里面那张图片不错\n写个程序检测我们的设备插拔  模仿内核源码简单地实现一个设备插拔的检测\nlinux下热插拔事件的产生是怎样通知到用户空间  事件传递过程，udev源码解析\n热插拔的工作原理 hotplug机制和udev  udev原理讲解\nUevent 上报event事件给上层的详细讲解  uevent源码讲解\nlinux内核空间和用户空间的是怎样区别的，如何交互，如何从用户空间进入内核空间  内核空间和用户空间的一些剖析\nNetlink实现热拔插监控   消息传输用的是什么？Netlink是如何做到的\n\n\n                ", "mainLikeNum": ["2 "], "mainBookmarkNum": "4"}