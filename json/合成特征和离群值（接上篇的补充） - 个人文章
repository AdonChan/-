{"title": "合成特征和离群值（接上篇的补充） - 个人文章 ", "index": "python,tensorflow", "content": "合成特征和离群值\n学习目标：\n尝试合成特征\n\n上一次我们只使用了单个特征，但这是不切实际的，往往我们需要多个特征，但此次并不是使用多个特征，而是创建一个合成特诊\ntotal_rooms 和 population 特征都会统计指定街区的相关总计数据。但是，如果一个街区比另一个街区的人口更密集，会怎么样？我们可以创建一个合成特征（即 total_rooms 与 population 的比例）来探索街区人口密度与房屋价值中位数之间的关系。\n# 创建合成特征\ncalifornia_housing_dataframe[\"rooms_per_person\"] =california_housing_dataframe[\"total_rooms\"]/california_housing_dataframe[\"population\"]\n\ncalibration_data = train_model(\n    learning_rate=0.0005,\n    steps=500,\n    batch_size=1,\n    input_feature=\"rooms_per_person\"\n)\n结果:\nTraining model... RMSE (on training data): period 00 : 237.29 period 01 : 237.04  period 02 : 236.78  period 03 : 236.53 period 04 : 236.28 period 05 : 236.03  period 06 : 235.78  period 07 : 235.53  period 08 : 235.27 period 09 : 235.02 Model training finished\n效果很差，因为RMSE变化很小,我们可以尝试增大学习速率，*10  learning_rate=0.005\nTraining model... RMSE (on training data): period 00 : 235.03 period 01 : 232.52 period 02 : 230.03 period 03 : 227.56 period 04 : 225.13 period 05 : 222.70 period 06 : 220.38 period 07 : 217.95 period 08 : 215.54 period 09 : 213.17 Model training finished.\n可以发现RMSE是在逐渐收敛的，学习速率没有过大，继续*10  learning_rate=0.05\nTraining model... RMSE (on training data): period 00 : 212.86 period 01 : 190.91 period 02 : 172.64 period 03 : 155.99 period 04 : 149.72 period 05 : 141.27 period 06 : 136.94 period 07 : 134.30 period 08 : 131.94 period 09 : 130.69 Model training finished.\n从RMSE的下降速率来看，说明已经接近最小值了，为其增大一点点，+0.005 learning_rate=0.055\nTraining model...RMSE (on training data):  period 00 : 210.61  period 01 : 185.76  period 02 : 166.58  period 03 : 150.86  period 04 : 142.97  period 05 : 136.05  period 06 : 133.06  period 07 : 132.46  period 08 : 131.34  period 09 : 130.55Model training finished.\n\n\n \npredictions\ntargets\n\n\n\ncount\n17000.0\n17000.0\n\n\nmean\n170.9\n207.3\n\n\nstd\n77.4\n116.0\n\n\nmin\n41.1\n15.0\n\n\n25%\n140.6\n119.4\n\n\n50%\n168.3\n180.4\n\n\n75%\n191.9\n265.0\n\n\nmax\n3693.8\n500.0\n\n\n\nFinal RMSE (on training data): 130.55\n\n可以发现结果变化很小，我们在这里就可以停止了，因为再次尝试下去，要浪费太多的计算量和时间\n识别离群值\n\n通过上图的预测值与目标值的散点图效果，可以发现，如果是在理想情况下，这些值将位于一条完全相关的对角线上。但是现在却是存在许多异常的散点，如果我们能够查找到这些异常点的原因并将其筛除掉，那么效果一定会更好更贴近真实情况\n# 尺寸15*6\nplt.figure(figsize=(15, 6))\n# 1行2列，先画第一个格\nplt.subplot(1, 2, 1)\n# x，y轴标签\nplt.xlabel(\"predictioon\")\nplt.ylabel(\"targets\")\n# 绘制散点图\nplt.scatter(calibration_data[\"predictions\"], calibration_data[\"targets\"])\n# 第二个绘制直方图\nplt.subplot(1, 2, 2)\ncalifornia_housing_dataframe[\"rooms_per_person\"].hist()\n结果:\n\n从散点图中可以看出，绝大部分的散点汇集在一条竖直的直线上（其实这也并不是一条直线，而是因为x轴的分辨率太大了，一格500），还有一些是散乱分布的为什么大部分点会垂直排列，这个原因我们先不讲，这不是这次训练目的，我们的目的是要找出极少出的异常的点再看直方图，大部分是在0-5这条线上，少数的应该就是异常值了，下面我们滤掉他们，并看下结果会怎样\ncalifornia_housing_dataframe[\"rooms_per_person\"] = (\n    california_housing_dataframe[\"rooms_per_person\"]).apply(lambda x: min(x, 5))\n_ = california_housing_dataframe[\"rooms_per_person\"].hist()\n结果:\n\n这次都在0-5之内了\n再次训练\ncalibration_data = train_model(\n    learning_rate=0.055,\n    steps=500,\n    batch_size=5,\n    input_feature=\"rooms_per_person\")\n结果:Training model...RMSE (on training data):  period 00 : 210.41  period 01 : 184.47  period 02 : 160.39  period 03 : 140.40  period 04 : 124.11  period 05 : 117.53  period 06 : 110.61  period 07 : 108.84  period 08 : 108.26  period 09 : 108.65Model training finished.\n\n\n \npredictions\ntargets\n\n\n\ncount\n17000.0\n17000.0\n\n\nmean\n191.6\n207.3\n\n\nstd\n50.1\n116.0\n\n\nmin\n44.8\n15.0\n\n\n25%\n159.7\n119.4\n\n\n50%\n191.7\n180.4\n\n\n75%\n218.9\n265.0\n\n\nmax\n425.3\n500.0\n\n\n\nFinal RMSE (on training data): 108.65\n\n这次的结果好过以前的每一次，体现在RMSE下降的速度特别快，说明少了很多干扰，其次便是RMSE这次是最小的，说明去除离群值后效果真的是好了很多\nplt.scatter(calibration_data[\"predictions\"], calibration_data[\"targets\"])\n结果:\n\n现在可以看出散点分布其实是挺集中的。\n\n以上，结束\n\n                ", "mainLikeNum": ["4 "], "mainBookmarkNum": "2"}