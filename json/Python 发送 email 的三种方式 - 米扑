{"title": "Python 发送 email 的三种方式 - 米扑 ", "index": "python,email,sendmail", "content": "Python发送email的三种方式，分别为使用登录邮件服务器、使用smtp服务、调用sendmail命令来发送三种方法\n本文原文自米扑博客：Python 发送 email 的三种方式\nPython发送email比较简单，可以通过登录邮件服务来发送，linux下也可以使用调用sendmail命令来发送，还可以使用本地或者是远程的smtp服务来发送邮件，不管是单个，群发，还是抄送都比较容易实现。本米扑博客先介绍几个最简单的发送邮件方式记录下，像html邮件，附件等也是支持的，需要时查文档即可。\n一、登录邮件服务器\n通过smtp登录第三方smtp邮箱发送邮件，支持 25 和 465端口\nvim python_email_1.py\n#!/usr/bin/env python\n# -*- coding:utf-8 -*-\n#\n# author: mimvp.com\n# 2015.10.05\n \n \nimport smtplib  \nfrom email.mime.text import MIMEText  \n   \nsmtpHost = 'smtp.exmail.qq.com' \nsender = 'robot@mimvp.com' \npassword = \"mimvp-password\" \nreceiver = 'yanggang@mimvp.com'\n   \ncontent = 'hello mimvp.com' \nmsg = MIMEText(content)  \n   \nmsg['Subject'] = 'email-subject' \nmsg['From'] = sender  \nmsg['To'] = receiver  \n   \n## smtp port 25\nsmtpServer = smtplib.SMTP(smtpHost, 25)         # SMTP\nsmtpServer.login(sender, password)  \nsmtpServer.sendmail(sender, receiver, msg.as_string())  \nsmtpServer.quit()  \nprint 'send success by port 25' \n \n## smtp ssl port 465\nsmtpServer = smtplib.SMTP_SSL(smtpHost, 465)    # SMTP_SSL\nsmtpServer.login(sender, password)  \nsmtpServer.sendmail(sender, receiver, msg.as_string())  \nsmtpServer.quit()  \nprint 'send success by port 465'\n执行命令：\n$ python python_email_1.py \nsend success by port 25\nsend success by port 465\n发送结果，会收到两封邮件，截图其中一份邮件如下图：\n\n\n二、使用smtp服务\n测试失败，略过或留言指正\n#!/usr/bin/env python\n# -*- coding:utf-8 -*-\n#\n# author: mimvp.com\n# 2015.10.05\n \n \nimport smtplib  \nfrom email.mime.text import MIMEText  \nimport subprocess\n   \nsmtpHost = 'smtp.exmail.qq.com' \nsender = 'robot@mimvp.com' \npassword = \"mimvp-password\" \nreceiver = 'yanggang@mimvp.com'\n   \ncontent = 'hello mimvp.com' \nmsg = MIMEText(content)   \n   \n   \n \nif __name__ == \"__main__\":   \n    p = subprocess.Popen(['/usr/sbin/sendmail', '-t'], stdout=subprocess.PIPE)  \n    print(str(p.communicate()))\n    p_res = str(p.communicate()[0])\n    msg = MIMEText(p_res)\n \n    msg[\"From\"] = sender  \n    msg[\"To\"] = receiver  \n    msg[\"Subject\"] = \"hello mimvp.com\" \n    s = smtplib.SMTP(smtpHost)  \n    s.login(sender, password)\n    s.sendmail(sender, receiver, msg.as_string())  \n    s.quit()  \n    print 'send success'\n三、调用sendmail命令\n调用本机linux自身sendmail服务发送邮件，不需要启动sendmail后台进程，不需要发送者登录，邮件发送者可以是任意名字，没有限制。\n特别注意：sendmail 命令发送邮件，默认用25端口号，由于阿里云、腾讯云等封禁了25端口号，因此本示例需在开通25端口机器上测试\nvim python_email_3.py\n#!/usr/bin/env python\n# -*- coding:utf-8 -*-\n#\n# author: mimvp.com\n# 2015.10.05\n  \n  \nfrom email.mime.text import MIMEText\nfrom subprocess import Popen, PIPE\nimport commands\n  \nimport sys \nreload(sys)\nsys.setdefaultencoding('utf-8')\n  \ndef send_mail(sender, recevier, subject, html_content):\n        msg = MIMEText(html_content, 'html', 'utf-8')\n        msg[\"From\"] = sender\n        msg[\"To\"] = recevier\n        msg[\"Subject\"] = subject\n        p = Popen([\"/usr/sbin/sendmail\", \"-t\"], stdin=PIPE)\n        p.communicate(msg.as_string())\n  \n  \nsender = 'robot@mimvp.com'\nrecevier = 'yanggang@mimvp.com'\nsubject = 'sendmail-subject'\nhtml_content = 'hello mimvp.com'\nsend_mail(sender, recevier, subject, html_content)\n执行命令：\npython python_email_3.py\n收件结果：\n\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "0"}