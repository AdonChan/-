{"title": "操作一个二维数据 - 易水禾 ", "index": "二维数组,算法,python", "content": "问题\n\n定义一个20*5的二维数组，用来存储某班级20位学员的5门课的成绩；这5门课按存储顺序依次为：core C++，coreJava，Servlet，JSP和EJB。\n\n（1）循环给二维数组的每一个元素赋0~100之间的随机整数。\n\n（2）按照列表的方式输出这些学员的每门课程的成绩。\n\n（3）要求编写程序求每个学员的总分，将其保留在另外一个一维数组中。\n\n（4）要求编写程序求所有学员的某门课程的平均分。\n\n解决（python）\n\n#! /usr/bin/env python\n#coding:utf-8\n\nfrom __future__ import division\nimport random\n\n\ndef score(score_list,course_list,student_num):\n    course_num = len(course_list)\n\n    every_score = [[score_list[j][i] for j in range(course_num)] for i in range(student_num)]\n\n    every_total = [sum(every_score[i]) for i in range(student_num)]\n\n    ave_course = [sum(score_list[i])/len(score_list[i]) for i in range(len(score_list))]\n\n    return (every_score,every_total,ave_course)\n\nif __name__==\"__main__\":\n\n    course_list = [\"C++\",\"Java\",\"Servlet\",\"JSP\",\"EJB\"]\n    student_num = 20\n\n    score_list = [[random.randint(0,100) for i in range(student_num)] for j in range(len(course_list))]\n    for i in range(len(course_list)):\n        print \"score of every one in %s:\"%course_list[i]\n        print score_list[i]\n\n    every_score,every_total,ave_one_course = score(score_list,course_list,student_num)\n    print \"\\n\"\n    print \"NEXT IS EVERY ONE SCORE IN EVERY COURSE:\"\n    for name in course_list:\n        print name,\n    print \"\\t\"\n    print every_score\n    print \"\\n\"\n    print \"every one all score:\\t\",every_total\n    print \"every course of average score:\\t\",ave_one_course\n\n\nqiwsir#gmail.com (# to @)\n\n解法 (racket 5.2.1)\n\n#lang racket\n\n(define (2d-list)\n  (let*\n    ([rand-100 (lambda () (random 101))]\n     [nth-picker (lambda (n) (lambda (l) (list-ref l n)))]\n     [average (lambda (number-list) (exact->inexact (/ (apply + number-list) (length number-list))))]\n     [course-list (list \"coreC++\" \"coreJava\" \"Servlet\" \"JSP\" \"EJB\")]\n     [score-list (for/list ([i 20]) (for/list ([j 5]) (rand-100)))]\n     [score-by-course-list (for/list ([i 5]) (list ((nth-picker i) course-list) (map (nth-picker i) score-list)))]\n     [score-by-student-list (for/list ([i 20]) (list-ref score-list i))]\n     [total-by-student-list (for/list ([i 20]) (apply + (list-ref score-list i)))]\n     [average-by-course-list (for/list ([i 5]) (list ((nth-picker i) course-list) (average (map (nth-picker i) score-list))))])\n    (for ([i 5]) \n      (display \"score of every one in \")\n      (displayln (first ((nth-picker i) score-by-course-list)))\n      (displayln (second ((nth-picker i) score-by-course-list))))\n    (displayln \"\")\n    (displayln \"NEXT IS EVERY ONE SCORE IN EVERY COURSE: \")\n    (displayln course-list)\n    (for ([i 10]) \n      (displayln (list-ref score-by-student-list i)))\n    (displayln \"\")\n    (displayln \"every one all score: \")\n    (displayln total-by-student-list)\n    (displayln \"\")\n    (displayln \"every course of average score: \")\n    (displayln average-by-course-list)))\n\n; 调用函数, 正常时应输出类似如下结果\n;score of every one in coreC++\n;(12 58 60 28 78 23 34 83 19 83 78 26 51 94 93 74 53 89 8 23)\n;... ...\n;NEXT IS EVERY ONE SCORE IN EVERY COURSE: \n;(coreC++ coreJava Servlet JSP EJB)\n;(12 49 75 88 68)\n;(58 78 6 88 81)\n;... ...\n;every one all score: \n;(292 311 370 241 289 250 254 258 147 232 271 170 224 248 317 286 246 270 186 212)\n;\n;every course of average score: \n;((coreC++ 53.35) (coreJava 53.9) (Servlet 51.95) (JSP 49.6) (EJB 44.9))\n(2d-list)\n\n\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "1"}