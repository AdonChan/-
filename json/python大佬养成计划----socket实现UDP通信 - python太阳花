{"title": "python大佬养成计划----socket实现UDP通信 - python太阳花 ", "index": "python", "content": "UDP\nTCP是建立可靠连接， 并且通信双方都可以以流的形式发送数据。 相对TCP， UDP则是面向无连接的协议。使用UDP协议时， 不需要建立连接， 只需要知道对方的IP地址和端口号， 就可以直接发数据包。 但是， 能不能到达就不知道了。\n我们来看看如何通过UDP协议传输数据。 和TCP类似， 使用UDP的通信双方也分为客户端和服务器socket实现UDP通信的结构图\nUDP服务端\n和TCP类似， 使用UDP的通信双方也分为客户端和服务器。 服务器首先需要绑定端口。但不需要监听客户端的连接\n#server\nimport socket\n#创建Socket时， SOCK_DGRAM 指定了这个Socket的类型是UDP。\nserver = socket.socket(type=socket.SOCK_DGRAM)\nserver.bind(('192.168.1.165',7890))\n#不需要调用 listen() 方法， 而是直接接收来自任何客户端的数据\nprint('服务端已开启7890端口，正在等待被连接...')\n#recvfrom() 方法返回数据和客户端的地址与端口， 这样， 服务器收到数据后，\n#直接调用 sendto() 就可以把数据用UDP发给客户端\ndata,address = server.recvfrom(1024)\nprint(\"client>>\",data.decode('utf-8'))\nprint(\"客户端连接的socket地址：\",  address)\nserver.sendto(b'drink more water!',address)\nserver.close()\nUDP客户端\n客户端使用UDP时， 首先仍然创建基于UDP的Socket， 然后， 不需要调用 connect() ， 直接通过 sendto() 给服务器发数据\nimport socket\n#创建Socket时， SOCK_DGRAM 指定了这个Socket的类型是UDP。\nclient = socket.socket(type=socket.SOCK_DGRAM)\nsend_data  =b'hello sheenstar'\nclient.sendto(send_data,('192.168.1.165',7890))\nre_Data,address = client.recvfrom(1024)\nprint('server>>',re_Data.decode('utf-8'))\nclient.close()\n测试结果\n用两个命令行分别启动服务器和客户端测试开启服务端\n完成一次UDP通信\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "0"}