{"title": "Theano - 循环 - 数据分析 ", "index": "python,python3.x", "content": "Scan\n\n复发(Recurrence)的一种常用形式，可以用于循环(looping)\nReduction和map是scan的特例\n可以根据一些输出序列scan一个函数（function)，每一步都会生成一个输出\n可以查看之前k步的输出\n给定一个初始状态z=0,可以通过scan函数z + x(i)计算一个列表的和sum(a_list)\n通常一个for循环可以用scan()操作符进行实现\n\n使用scan的优点：\n\n迭代次数为符号图的一部分\n最大限度地减少GPU传输（如果用到了GPU）\n通过序列步长计算梯度\n运行速率比python内置的for循环稍微快些\n可以通过检测需要的实际内存量，来降低整体内存使用量\n\n例子：对应元素计算tanh(x(t).dot(W) + b)\nimport theano\nimport theano.tensor as T\nimport numpy as np\n\n# 定义张量变量\nX = T.matrix('X')\nW = T.matrix('W')\nb_sym = T.vector('b_sym')\n\nresults, updates = theano.scan(lambda v: T.tanh(T.dot(v, W) + b_sym), sequences=X)\ncompute_elementwise = theano.function([X, W, b_sym], results)\n\n# 测试\nx = np.eye(2, dtype=theano.config.floatX)\nw = np.ones((2, 2), dtype=theano.config.floatX)\nb = np.ones((2), dtype=theano.config.floatX)\nb[1] = 2\n\ncompute_elementwise(x, w, b)\n# 和numpy相比较\nnp.tanh(x.dot(w) + b)\n例子： 计算序列x(t) = tanh(x(t-1).dot(W) + y(t).dot(U) + p(T-t).dot(V))\nimport theano\nimport theano.tensor as T\nimport numpy as np\n# 定义张量变量\nX = T.vector('X')\nW = T.matrix('W')\nb_sym = T.vector('b_sym')\nU, Y, V, P = T.matrices('U', 'Y', 'V', 'P')\n\nresult, update = theano.scan(lambda y, p, x_tml: T.tanh(T.dot(x_tml, W) + T.dot(y, U) + T.dot(p, V)),\n                             sequences=[Y, P[::-1]], outputs_info=[X])\n\ncompute_seq = theano.function(inputs=[X, W, Y, U, P, V], outputs=result)\n\n# 测试\nx = np.zeros((2), dtype=theano.config.floatX)\nx[1] = 1\nw = np.ones((2, 2), dtype=theano.config.floatX)\ny = np.ones((5, 2), dtype=theano.config.floatX)\ny[0, :] = -3\nu = np.ones((2, 2), dtype=theano.config.floatX)\np = np.ones((5, 2), dtype=theano.config.floatX)\np[0, :] = 3\nv = np.ones((2, 2), dtype=theano.config.floatX)\n\nprint(compute_seq(x, w, y, u, p, v))\n\n# 与Numpy对比\nx_res = np.zeros((5, 2), dtype=theano.config.floatX)\nx_res[0] = np.tanh(x.dot(w) + y[0].dot(u) + p[4].dot(v))\nfor i in range(1, 5):\n    x_res[i] = np.tanh(x_res[i - 1].dot(w) + y[i].dot(u) + p[4-i].dot(v))\nprint(x_res)\n例子： 计算X的行范式\nimport theano\nimport theano.tensor as T\nimport numpy as np\n\n# 定义张量变量\nX = T.matrix('X')\nresults, updates = theano.scan(lambda x_i: T.sqrt((x_i ** 2)).sum(), sequences=[X])\ncompute_norm_lines = theano.function(inputs=[X], outputs=results)\n\n# 测试\nx = np.diag(np.arange(1, 6, dtype=theano.config.floatX), 1)\nprint(compute_norm_lines(x))\n\n# 和Numpy对比\nprint(np.sqrt((x ** 2).sum(1)))\n例子： 计算X的列范式\nimport theano\nimport theano.tensor as T\nimport numpy as np\n\n# 定义张量变量\nX = T.matrix(\"X\")\nresults, updates = theano.scan(lambda x_i: T.sqrt((x_i ** 2).sum()), sequences=[X.T])\ncompute_norm_cols = theano.function(inputs=[X], outputs=results)\n\n# 测试\nx = np.diag(np.arange(1, 6, dtype=theano.config.floatX), 1)\nprint(compute_norm_cols(x))\n\n# 和Numpy对比\nprint(np.sqrt((x ** 2).sum(0)))\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "0"}