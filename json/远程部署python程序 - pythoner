{"title": "远程部署python程序 - pythoner ", "index": "git,mysql,sql,python,ruby-on-rails", "content": "接着上一篇管理python程序的db schema, 本篇介绍远程部署到指定环境(prod or staging).使用的技术是Capistrano.\n环境准备\nClone Template\n使用下面的命名获得模版，里面有准备好的各个config以及基本bin包。\ngit clone https://github.com/flying-bird/python-db-schema\nInstall Package\ncd python-db-schema\nbundle install\nChange Config\nUpdate config/deploy/production.rb\ndefault config in python-db-schema/config/deploy/production.rb：\n➜  python-db-schema git:(master) less config/deploy/production.rb\n# Simple Role Syntax\n# ==================\n# Supports bulk-adding hosts to roles, the primary server in each group\n# is considered to be the first unless any hosts have the primary\n# property set.  Don't declare `role :all`, it's a meta role.\n\nrole :app, %w{your_name@prod_env_ip_or_host}\nrole :web, %w{your_name@prod_env_ip_or_host}\nrole :db,  %w{your_name@prod_env_ip_or_host}\n将上面的config的your_name和prod_env_ip_or_host定制成你需要的参数就好。\nUpdate config/deploy.rb\n➜  python-db-schema git:(master) less config/deploy.rb\nset :application, 'python-db-schema'\nset :repo_url, 'https://github.com/flying-bird/python-db-schema'\n\nset :branch, \"master\"\nset :user, \"your_account\"\nset :deploy_via, :copy\nset :linked_dirs, %w{log}\nset :deploy_to, '/tmp/your_deploy_path'\n将上面的config的your_account，your_deploy_path和repo_url定制成你需要的参数就好。\nDeploy\n你可以在本地使用下面的command，将code部署到production环境。\ncap production deploy\n在上述命令运行成功之后，登录到prouction env上check下目录结构，如下所示：\nyour_account@production_host: ls /tmp/python-db-schema\ncurrent  git-ssh.sh  releases  repo  revisions.log  shared\n\nyour_account@production_host: ls /tmp/python-db-schema/current\nGemfile  Gemfile.lock  README.md  REVISION  Rakefile  bin  config  log src\n\nMigrate DB Schema\n将code部署到production之后，apply db schema到production环境。\n更新config/database.yml\n只要将username/password/database改成特定值就好，笔者的配置如下：\nstaging:\n  adapter: mysql2\n  encoding: utf8\n  pool: 20\n  username: mysql\n  password: 123456\n  socket: /var/lib/mysql/mysql.sock\n  host: 192.168.10.111\n  port: 3306\n  database: dashboard_test\n\nproduction:\n  adapter: mysql2\n  encoding: utf8\n  pool: 20\n  username: mysql\n  password: 123456\n  socket: /var/lib/mysql/mysql.sock\n  host: 192.168.10.222\n  port: 3306\n  database: dashboard_production\nApply Schema in Production Env\nrake db:migrate RAILS_ENV=production\n输出结果如下：\n== 20170405024951 CreatePipelineTable: migrating ==============================\n-- create_table(:d_pipeline)\n   -> 0.0355s\n== 20170405024951 CreatePipelineTable: migrated (0.0356s) =====================\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "3"}