{"title": "python正则表达式简单爬虫入门+案例（爬取猫眼电影TOP榜） - 个人文章 ", "index": "python爬虫,爬虫图片,python,网页爬虫", "content": "用正则表达式实现一个简单的小爬虫\n常用方法介绍\n1、导入工具包\nimport requests\n#导入请求模块\nfrom flask import json\n#导入json模块\nfrom requests.exceptions import RequestException\n#异常捕捉模块\nimport re\n#导入正则模块\nfrom multiprocessing import Pool\n#导入进程模块\n    \n2、获取页面\nresponse =requests.get(url)\nurl:当前需要爬取的链接\nrequests.get()获得页面\n3、if response.status_code ==200:\n#验证状态码\nresponse.status_code：获取状态码\n200：表示正常，连接成功\n4、response.text：得到页面内容\n例如：response =requests.get(url)\n5、except RequestException:捕捉异常\ntry:\n    ...\nexcept RequestException:\n    ...\n6、pat = re.compile():编译正则表达式\n#正则表达式基础知识即可\n7、items =re.findall(pat,html)\npat：编译过的正则表达式\nhtml：用response.text得到的页面内容\nre.findall()：找到所有匹配的内容\n8、打开文件\nwith open('result','a',encoding='utf-8')as f\nwith as :打开自动闭合的文件并设立对象f进行操作\nresult:文件名字\na:打开方式是续写模式\nencoding:编码格式\n9、写入文件\n f.write(json.dumps(conrent,ensure_ascii =False)+'\\n')\n json.dumps:以json方式写入\n10、简单进程\npool = Pool()\n#创建进程池\npool.map(func,[i*10 for i in range(10)])\n[i*10 for i in range(10)]：生成器，生成0到9的数字乘以10的结果，生成一个列表为[0,10,20....]\nfunc:函数\nmap：将函数作用于列表每一个元素\n11、yield:生成器\n案例：用上面的工具完成爬去猫眼电影TOP榜\n#__author:PL.Li\n#导入需要使用的模块\nimport requests\nfrom flask import json\nfrom requests.exceptions import RequestException\nimport re\nfrom multiprocessing import Pool\n#尝试连接获取页面\ndef get_response(url):\n    try:\n        response =requests.get(url)\n        if response.status_code ==200:\n            return response.text\n        return None\n    except RequestException:\n        return None\n#正则匹配需要的内容\ndef re_one_page(html):\n#超级长的正则表达式进行匹配，匹配到的是个集合。  \n    pat =re.compile('<dd>.*?board-index.*?\">(/d+?)</i>.*?src=\"(.*?).*?name\"><a.*?\">(.*?)\"class=.*?class=\"star\">'\n                    '(.*?)</p>.*?releasetime\">(.*?)</p>.*?integer\">(.*?)</i>.*?fraction\">(.*?)</i>.*?</dd>',re.S)\n   #用迭代进行异步操作  \n    items =re.findall(pat,html)\n    for item in items:\n        yield {\n            'index':item[0],\n            'image':item[1],\n            'title':item[2],\n            'actor':item[3].strip()[3:],\n            'time':item[4].strip(),\n            'score':item[5]+item[6]\n\n        }\n#保存写入文件\ndef write_file(conrent):\n    with open('result','a',encoding='utf-8')as f:\n        f.write(json.dumps(conrent,ensure_ascii =False)+'\\n')\n        f.close()\n#配置启动函数\ndef main(offset):\n    url ='http://maoyan.com/board'+str(offset)\n    html=get_response(url)\n    for item in re_one_page(html):\n        write_file(item)\n#使用多进程加速一秒完成\nif __name__ == '__main__':\n        pool = Pool()\n        pool.map(main,[i*10 for i in range(10)])\n\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "6"}