{"title": "Python如何操作MySQL - 学习分享 ", "index": "python", "content": "安装Mysql和Navicat for MySQL\nmysql的安装图解https://jingyan.baidu.com/art...navicat for mysql破解可以看下这个文章https://www.cnblogs.com/da199...\nPython链接Mysql的增删改查\n通过Python提供的pymysql模块实现对mysql数据库的操作，这个地方注意python3.x使用的是pymysql，python2.x的话使用mysqldb模块安装pymysql模块：pip install PyMySQL\nimport pymysql\n  \n# 创建连接\nconn = pymysql.connect(host='127.0.0.1', port=3306, user='root', passwd='123456', db='student')\n# 创建游标\ncursor = conn.cursor()\n\n# 修改----执行SQL，并返回受影响行数\n# effect_row = cursor.execute(\"update user set name=%s,pwd=%s where id=%s\", ('aaa','bb', 1))\n  \n# 添加----执行SQL，并返回受影响行数\n# cursor.execute(\"insert into user (name, pwd) values (%s,%s)\", (\"lidao\",\"aaa\"))\n# 查询----\ncursor.execute(\"select * from user\")\nstus = cursor.fetchall()   \nfor stu in stus:\n        print(\"id:%d; name: %s; pwd: %s; \" %(stu[0], stu[1], stu[2]))\n\n# 删除---执行SQL，并返回受影响行数\ncursor.execute(\"delete from user where id=%s\", (2))\n\n# 提交，不然无法保存新建或者修改的数据\nconn.commit()\n#如果不加这个就手动添加autocommit=True 自动提交\n#db=pymysql.connect(host=\"127.0.0.1\",port=3306,user=\"root\",passwd=\"123456\",db=\"school\",charset=\"utf8\",autocommit=True)\n\n\n  \n# 关闭游标\ncursor.close()\n# 关闭连接\nconn.close()\n自己封装helper类\nimport pymysql  \n\nclass dbhelper():\n    def __init__(self,host,port,user,passwd,db,charset=\"utf8\"):\n        self.host=host\n        self.port=port\n        self.user=user\n        self.passwd=passwd\n        self.db=db\n        self.charset=charset\n    #创建一个链接\n    def connection(self):\n        #1. 创建连接\n        self.conn = pymysql.connect(host=self.host, port=self.port, user=self.user, passwd=self.passwd, db=self.db,charset=self.charset)\n        #2. 创建游标\n        self.cur = self.conn.cursor()\n    #关闭链接\n    def closeconnection(self):\n        self.cur.close()\n        self.conn.close()\n    #查询一条数据\n    def getonedata(self,sql):\n        try:\n            self.connection()\n            self.cur.execute(sql)\n            result=self.cur.fetchone()\n            self.closeconnection()\n        except Exception:\n            print(Exception)    \n        return result\n    #查询多条数据    \n    def getalldata(self,sql):\n        try:\n            self.connection()\n            self.cur.execute(sql)\n            result=self.cur.fetchall()\n            self.closeconnection()\n        except Exception:\n            print(Exception)             \n        return result\n    #添加/修改/删除 \n    def executedata(self,sql):\n        try:\n            self.connection()\n            self.cur.execute(sql)\n            self.conn.commit()\n            self.closeconnection()\n        except Exception:\n            print(Exception)       \n              \n封装好了以后，后续用到mysql的操作的地方都可以直接使用，栗子如下：\nfrom mysqlhelper import *\n\ndb=dbhelper(host='127.0.0.1', port=3306, user='root', passwd='123456', db='school',charset=\"utf8\")\nresult=db.getalldata(\"select * from class\")\nprint(result)\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "0"}