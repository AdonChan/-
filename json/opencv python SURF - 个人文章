{"title": "opencv python SURF - 个人文章 ", "index": "python,opencv,opencv-python", "content": "Introduction to SURF (Speeded-Up Robust Features) \n理论\n在上一章中，我们看到了SIFT的关键点检测和描述,但它相对较慢，人们需要更加快速的版本，所以2006年引入了一种名为SURF的新算法, 顾名思义，它是SIFT的加速版本.\n作为尺度不变特征变换（SIFT）算法的加速版，SURF算法在适中的条件下完成两幅图像中物体的匹配基本实现了实时处理，其快速的基础实际上只有一个——积分图像haar求导.\nSURF算法原理：\n\n构建Hessian矩阵构造高斯金字塔尺度空间\n利用非极大值抑制初步确定特征点\n精确定位极值点\n选取特征点的主方向\n构造surf特征点描述算子\n\nOpenCV中的SURF\nimport numpy as np\nimport cv2\n\nimg = cv2.imread('img.jpg')\n\n# Create SURF object. You can specify params here or later.\n# Here I set Hessian Threshold to 400\nsurf = cv2.xfeatures2d.SURF_create(400)\n# Find keypoints and descriptors directly\nkp, des = surf.detectAndCompute(img,None)\nprint(len(kp))\noutput:3477\n# Check present Hessian threshold\nprint( surf.getHessianThreshold() )\noutput:400.0\n# We set it to some 50000. Remember, it is just for representing in picture.\n# In actual cases, it is better to have a value 300-500\nsurf.setHessianThreshold(50000)\n#Again compute keypoints and check its number.\nkp, des = surf.detectAndCompute(img,None)\nprint( len(kp) )\noutput:2\nimg2 = cv2.drawKeypoints(img,kp,None,(255,0,0),4)\nplt.imshow(img2),plt.show()\n\n# Check upright flag, if it False, set it to True\nprint( surf.getUpright() )\noutput:False\nsurf.setUpright(True)\n# Recompute the feature points and draw it\nkp = surf.detect(img,None)\nimg2 = cv2.drawKeypoints(img,kp,None,(255,0,0),4)\nplt.imshow(img2),plt.show()\n\n比之前更快了\n# Find size of descriptor\nprint( surf.descriptorSize() )\n\noutput: 64\n# That means flag, \"extended\" is False.\nsurf.getExtended()\noutput: False\n# So we make it to True to get 128-dim descriptors.\nsurf.setExtended(True)\nkp, des = surf.detectAndCompute(img,None)\nprint( surf.descriptorSize() )\nprint( des.shape )\noutput:128(2, 128)\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "0"}