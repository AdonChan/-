{"title": "清理ios项目无用的图片资源  - 姜家志 ", "index": "xcode,ios,python", "content": "项目经过需求的变更，产品迭代，再多次的改版之后，有些不再使用的图片不一定能够及时的清理掉，这些无用的图片一方面让项目图片资源的结构更加的复杂，另一方面会导致ipa包的体积变大。 及时的清理掉不用的图片资源很有必要，在Android项目中使用Lint可以轻松的完成这个任务，而在ios上没有找到比较好的清理无用图片的工具。参考网上的例子，写了一个python清除ios项目中无用的图片资源的脚本。首先介绍下ios中使用图像资源的方式。\nImages Assets\nios中使用 Images Assets管理图片，项目的图片资源一般都放在这Image Assets里面，图片会放到*.imageset目录里，对应的有1x,2x和3x的图,还有一个Contents.json的描述文件。 清除图片资源需要把*.imageset清除掉,包括图片文件和json文件。 想要清除掉不用的图片资源，就需要知道图片资源怎么被引用的，再查找到未被引用的图片资源就可以清除掉了。 在ios代码中调用图片的方法一般是:\n[UIImage imageNamed:@\"image\"]\n在xib中调用图片的方法是用xml的方式描述,图片资源作为image的名称:\n <imageView  image=\"image\" id=\"Rb9-sl-eQM\">                \n </imageView>\n因此清理的思路就是搜索项目中的图片文件，如果找到对于的\"name\"在xib或者ios代码中存在，说明该图片被使用了，不然的话该图片即可被清理掉。先看看如何方便的搜索图片文件有没有被使用吧！\n搜索文件\n搜索文件的方式可以使用grep,ack都是不错的工具，但是有一种更快，更好的搜索文件内容的方式:The Silver Searcher，The Silver Searcher使用起来更方便，更快，更简单,项目地址：https://github.com/ggreer/the_silver_searcher。 直接安装The Silver Searcher的命令:\nbrew install the_silver_searcher\n使用ag命令就可以进行文本搜索:\nag \"image\" './'\n这个命令的意思是搜索到该目录下以及其子目录下的所有含有\"image\"的文件。使用这个命令就需要在python中执行bash命令。\nbash命令\n使用bash命令来进行一些搜索文本，删除文件的工作，在python中可以直接运行bash命令。 在python中直接使用bash命令:\nos.popen('echo $PATH')\n在执行bash命令的时候，可以通过os.popen('echo $PATH').read()执行并读取执行的结果。 也可以直接执行bash命令不用关系执行的结果,例如:\nos.system('rm -rf dir')\n需要用到的bash命令有ag \"image\" './'和rm -rf './',前者用来搜索文本有没有被使用，后者用来删除文件夹。下面就看下完整的实现。\n清除无用的imageset资源\n完整的清理无用的图片资源的代码:\npath = 'ios'\nimages = glob.glob('ios/images.xcassets/*/*.imageset')\ndef find_un_used():\n    img_names = [os.path.basename(pic)[:-9] for pic in images]\n    unused_imgs = []\n    for i in range(0, len(images)):\n        pic_name = img_names[i]\n        command = 'ag \"%s\" %s' % (pic_name, path)\n        result = os.popen(command).read()\n        if result == '':\n            unused_imgs.append(images[i])\n            print 'remove %s' % (images[i])\n            os.system('rm -rf %s' % (images[i]))\n\n\n    text_path = 'unused.txt'\n    tex = '\\n'.join(sorted(unused_imgs))\n    os.system('echo \"%s\" > %s' % (tex, text_path))\n    print 'unuse res:%d' % (len(unused_imgs))\n    print 'Done!'\n\n这段代码是从当前文件夹里，遍历所有的.imageset文件，找到图片使用的图片名称，在文件夹中搜索该名称的文件有没有被使用。如果没有被使用的名称就可以清除掉该资源。执行这段之后发现有一些不应该清除图片资源也被清除了，这里有个例外的情况没有考虑到。\nignores\n有时候会给一些资源文件动态的赋值，使用这样的代码：\nfor (int i = 1; i <= 10; ++i) {\n    NSString *imageName = [NSString stringWithFormat:@\"image_%d\", i];\n    UIImage *image = [UIImage imageNamed:imageName];\n    ......\n}\n上面的代码中查找 image1时，发现这个图片并没有使用，该图片资源就会被清除掉，但是该图片在项目中是动态赋值的并不应该被清除。 我采用ignore的方式来解决这个问题，也就是先提前准备好一个ignore的列表，内容采用正则表达式来定义，被匹配到的文件资源就不进行清除处理,例如ignores为：\nignores = {r'image*d+'}\n然后在定义一个检查ignores的方法:\ndef is_ignore(str):\n    for ignore in ignores:\n        if re.match(ignore, str):\n            return True\n    return False\n如果一个文件名在ignores中出现就会忽略该文件的清理检查，这样就不会清理掉一些动态赋值的图片资源了。源码地址：https://github.com/jjz/script/blob/master/un_used.py\n请自行设置好目录，执行命令：\npython un_used.py\n\n                ", "mainLikeNum": ["1 "], "mainBookmarkNum": "8"}