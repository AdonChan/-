{"title": "基于python的百度云网盘资源搜索引擎设计架构 - py江湖 ", "index": "sphinx,百度云资源搜索,baiduyun,python", "content": "大家都知道百度云网盘上有很多分享的资源，包括软件、各类视频自学教程、电子书、甚至各种电影、BT种子应有尽有，但百度云却没有提供相应的搜索功能。个人平时要找一些软件、美剧觉得非常蛋疼。于是就尝试开发一个百度云资源的搜索系统。\n\n资源爬虫思路：搜索引擎么最重要的就是有海量的资源了，有了资源，只要再基于资源实现全文检索功能就是一个简单的搜索引擎了。首先我需要爬取百度云的分享资源，爬取思路，打开任意一个百度云分享者的主页yun.baidu.com/share/home?uk=xxxxxx&view=share#category/type=0,你可以发现分享者有订阅者和粉丝，你可以递归遍历订阅者和粉丝，从而获得大量分享者uk，进而获得大量的分享资源。\n\n系统实现环境：\n\n语言：python\n操作系统：Linux\n其他中间件：nginx、mysql、sphinx\n\n\n\n系统包括几个独立的部分：\n\n基于requests实现的独立资源爬虫\n基于开源全文检索引擎sphinx实现的资源索引程序\n基于Django+bootstrap3开发的简易网站，网站搭建采用nginx1.8+fastCGI(flup)+python。 演示网站http://www.itjujiao.com\n\n\n\n后续优化：\n\n分词处理，目前分词搜索结果不是很理想，有大神可以指点下思路。比如我检索“功夫熊猫之卷轴的秘密”，一个结果都没有。而检索“功夫熊猫“有结果集(功丶夫熊猫⒊英语中英字幕.mp4，功丶夫熊猫2.Kung.Fu.Panda.2.2011.BDrip.720P.国粤英台四语.特效中英字幕.mp4，功丶夫熊猫3(韩版)2016.高清中字.mkv等)或搜索”卷轴的秘密“有结果集([美国]功夫潘达之卷轴的秘密.2016.1080p.mp4, g夫熊猫之卷轴的秘密.HD1280超清中英双字.mp4等)\n数据去重，目前发现抓取的数据很多是共享资源，后续考虑基于MD5去重\n\n\n\nPS:\n\n目前爬虫爬取了4000W左右的数据，sphinx对内存的要求实在太大了，巨坑。百度会对爬虫做ip限制，写了个简单的xicidaili代理采集程序，requests可以配置http代理。\n分词是sphinx自带的实现，支持中文分词，中文基于一元分词，有点过度分词，分词效果不是特别理想，比如我搜关键词“叶问3”出现的结果中会有“叶子的问题第3版”，不符合预期。英文分词有很多可以改善的地方，比如我搜xart不会出现x-art的结果，而实际上x-art却也是我想要的结果集(你们懂的)。\n数据库是mysql，资源表，考虑单表记录上限，分了10个表。第一次爬完sphinx做全量索引，后续做增量索引。\n\n\n爬虫部分实现代码（只是思路代码有点乱）：\n\n    #coding: utf8\n    \n    import re\n    import urllib2\n    import time\n    from Queue import Queue\n    import threading, errno, datetime\n    import json\n    import requests\n    import MySQLdb as mdb\n    \n    DB_HOST = '127.0.0.1'\n    DB_USER = 'root'\n    DB_PASS = ''\n    \n    \n    re_start = re.compile(r'start=(\\d+)')\n    re_uid = re.compile(r'query_uk=(\\d+)')\n    re_pptt = re.compile(r'&pptt=(\\d+)')\n    re_urlid = re.compile(r'&urlid=(\\d+)')\n    \n    ONEPAGE = 20\n    ONESHAREPAGE = 20\n    \n    URL_SHARE = 'http://yun.baidu.com/pcloud/feed/getsharelist?auth_type=1&start={start}&limit=20&query_uk={uk}&urlid={id}'\n    URL_FOLLOW = 'http://yun.baidu.com/pcloud/friend/getfollowlist?query_uk={uk}&limit=20&start={start}&urlid={id}'\n    URL_FANS = 'http://yun.baidu.com/pcloud/friend/getfanslist?query_uk={uk}&limit=20&start={start}&urlid={id}'\n    \n    QNUM = 1000\n    hc_q = Queue(20)\n    hc_r = Queue(QNUM)\n    \n    success = 0\n    failed = 0\n    \n    PROXY_LIST = [[0, 10, \"42.121.33.160\", 809, \"\", \"\", 0],\n                    [5, 0, \"218.97.195.38\", 81, \"\", \"\", 0],\n                    ]\n    \n    def req_worker(inx):\n        s = requests.Session()\n        while True:\n            req_item = hc_q.get()\n            \n            req_type = req_item[0]\n            url = req_item[1]\n            r = s.get(url)\n            hc_r.put((r.text, url))\n            print \"req_worker#\", inx, url\n            \n    def response_worker():\n        dbconn = mdb.connect(DB_HOST, DB_USER, DB_PASS, 'baiduyun', charset='utf8')\n        dbcurr = dbconn.cursor()\n        dbcurr.execute('SET NAMES utf8')\n        dbcurr.execute('set global wait_timeout=60000')\n        while True:\n            \n            metadata, effective_url = hc_r.get()\n            #print \"response_worker:\", effective_url\n            try:\n                tnow = int(time.time())\n                id = re_urlid.findall(effective_url)[0]\n                start = re_start.findall(effective_url)[0]\n                if True:\n                    if 'getfollowlist' in effective_url: #type = 1\n                        follows = json.loads(metadata)\n                        uid = re_uid.findall(effective_url)[0]\n                        if \"total_count\" in follows.keys() and follows[\"total_count\"]>0 and str(start) == \"0\":\n                            for i in range((follows[\"total_count\"]-1)/ONEPAGE):\n                                try:\n                                    dbcurr.execute('INSERT INTO urlids(uk, start, limited, type, status) VALUES(%s, %s, %s, 1, 0)' % (uid, str(ONEPAGE*(i+1)), str(ONEPAGE)))\n                                except Exception as ex:\n                                    print \"E1\", str(ex)\n                                    pass\n                        \n                        if \"follow_list\" in follows.keys():\n                            for item in follows[\"follow_list\"]:\n                                try:\n                                    dbcurr.execute('INSERT INTO user(userid, username, files, status, downloaded, lastaccess) VALUES(%s, \"%s\", 0, 0, 0, %s)' % (item['follow_uk'], item['follow_uname'], str(tnow)))\n                                except Exception as ex:\n                                    print \"E13\", str(ex)\n                                    pass\n                        else:\n                            print \"delete 1\", uid, start\n                            dbcurr.execute('delete from urlids where uk=%s and type=1 and start>%s' % (uid, start))\n                    elif 'getfanslist' in effective_url: #type = 2\n                        fans = json.loads(metadata)\n                        uid = re_uid.findall(effective_url)[0]\n                        if \"total_count\" in fans.keys() and fans[\"total_count\"]>0 and str(start) == \"0\":\n                            for i in range((fans[\"total_count\"]-1)/ONEPAGE):\n                                try:\n                                    dbcurr.execute('INSERT INTO urlids(uk, start, limited, type, status) VALUES(%s, %s, %s, 2, 0)' % (uid, str(ONEPAGE*(i+1)), str(ONEPAGE)))\n                                except Exception as ex:\n                                    print \"E2\", str(ex)\n                                    pass\n                        \n                        if \"fans_list\" in fans.keys():\n                            for item in fans[\"fans_list\"]:\n                                try:\n                                    dbcurr.execute('INSERT INTO user(userid, username, files, status, downloaded, lastaccess) VALUES(%s, \"%s\", 0, 0, 0, %s)' % (item['fans_uk'], item['fans_uname'], str(tnow)))\n                                except Exception as ex:\n                                    print \"E23\", str(ex)\n                                    pass\n                        else:\n                            print \"delete 2\", uid, start\n                            dbcurr.execute('delete from urlids where uk=%s and type=2 and start>%s' % (uid, start))\n                    else:\n                        shares = json.loads(metadata)\n                        uid = re_uid.findall(effective_url)[0]\n                        if \"total_count\" in shares.keys() and shares[\"total_count\"]>0 and str(start) == \"0\":\n                            for i in range((shares[\"total_count\"]-1)/ONESHAREPAGE):\n                                try:\n                                    dbcurr.execute('INSERT INTO urlids(uk, start, limited, type, status) VALUES(%s, %s, %s, 0, 0)' % (uid, str(ONESHAREPAGE*(i+1)), str(ONESHAREPAGE)))\n                                except Exception as ex:\n                                    print \"E3\", str(ex)\n                                    pass\n                        if \"records\" in shares.keys():\n                            for item in shares[\"records\"]:\n                                try:\n                                    dbcurr.execute('INSERT INTO share(userid, filename, shareid, status) VALUES(%s, \"%s\", %s, 0)' % (uid, item['title'], item['shareid']))\n                                except Exception as ex:\n                                    #print \"E33\", str(ex), item\n                                    pass\n                        else:\n                            print \"delete 0\", uid, start\n                            dbcurr.execute('delete from urlids where uk=%s and type=0 and start>%s' % (uid, str(start)))\n                    dbcurr.execute('delete from urlids where id=%s' % (id, ))\n                    dbconn.commit()\n            except Exception as ex:\n                print \"E5\", str(ex), id\n    \n            \n            pid = re_pptt.findall(effective_url)\n            \n            if pid:\n                print \"pid>>>\", pid\n                ppid = int(pid[0])\n                PROXY_LIST[ppid][6] -= 1\n        dbcurr.close()\n        dbconn.close()\n        \n    def worker():\n        global success, failed\n        dbconn = mdb.connect(DB_HOST, DB_USER, DB_PASS, 'baiduyun', charset='utf8')\n        dbcurr = dbconn.cursor()\n        dbcurr.execute('SET NAMES utf8')\n        dbcurr.execute('set global wait_timeout=60000')\n        while True:\n    \n            #dbcurr.execute('select * from urlids where status=0 order by type limit 1')\n            dbcurr.execute('select * from urlids where status=0 and type>0 limit 1')\n            d = dbcurr.fetchall()\n            #print d\n            if d:\n                id = d[0][0]\n                uk = d[0][1]\n                start = d[0][2]\n                limit = d[0][3]\n                type = d[0][4]\n                dbcurr.execute('update urlids set status=1 where id=%s' % (str(id),))\n                url = \"\"\n                if type == 0:\n                    url = URL_SHARE.format(uk=uk, start=start, id=id).encode('utf-8')\n                elif  type == 1:\n                    url = URL_FOLLOW.format(uk=uk, start=start, id=id).encode('utf-8')\n                elif type == 2:\n                    url = URL_FANS.format(uk=uk, start=start, id=id).encode('utf-8')\n                if url:\n                    hc_q.put((type, url))\n                    \n                #print \"processed\", url\n            else:\n                dbcurr.execute('select * from user where status=0 limit 1000')\n                d = dbcurr.fetchall()\n                if d:\n                    for item in d:\n                        try:\n                            dbcurr.execute('insert into urlids(uk, start, limited, type, status) values(\"%s\", 0, %s, 0, 0)' % (item[1], str(ONESHAREPAGE)))\n                            dbcurr.execute('insert into urlids(uk, start, limited, type, status) values(\"%s\", 0, %s, 1, 0)' % (item[1], str(ONEPAGE)))\n                            dbcurr.execute('insert into urlids(uk, start, limited, type, status) values(\"%s\", 0, %s, 2, 0)' % (item[1], str(ONEPAGE)))\n                            dbcurr.execute('update user set status=1 where userid=%s' % (item[1],))\n                        except Exception as ex:\n                            print \"E6\", str(ex)\n                else:\n                    time.sleep(1)\n                    \n            dbconn.commit()\n        dbcurr.close()\n        dbconn.close()\n            \n        \n    for item in range(16):    \n        t = threading.Thread(target = req_worker, args = (item,))\n        t.setDaemon(True)\n        t.start()\n    \n    s = threading.Thread(target = worker, args = ())\n    s.setDaemon(True)\n    s.start()\n    \n    response_worker()\n\n\n                ", "mainLikeNum": ["2 "], "mainBookmarkNum": "12"}