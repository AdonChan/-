{"title": "Python实用技法第12篇：通过公共键对字典列表排序：itemgetter - python3 ：公司内部培训专栏 ", "index": "python", "content": "上一篇文章：Python实用技法第11篇：找出序列中出现次数最多的元素下一篇文章：Python实用技法第13篇：对自定义类对象排序：attrgetter\n\n1、需求🙀\n我们有一个字典列表，想根据一个或多个字典中的值对列表进行排序。\n2、解决方案😸\n利用operator模块中的itemgetter函数对这类结构进行排序是非常简单的。\n实例：\nfrom operator import itemgetter\nrows=[\n{'name':'mark','age':18,'uid':'110'},\n{'name':'miaomiao','age':28,'uid':'150'},\n{'name':'miaomiao','age':8,'uid':'150'},\n{'name':'xiaohei','age':38,'uid':'130'},\n]\n\nrows_by_name=sorted(rows,key=itemgetter('name'))\nrows_by_uid=sorted(rows,key=itemgetter('uid'))\nprint(rows_by_name)\nprint(rows_by_uid)\n\n\n#itemgetter还支持多个键\nrows_by_name_age=sorted(rows,key=itemgetter('name','age'))\nprint(rows_by_name_age)\n\n#itemgetter同样适用min、max\nprint(min(rows,key=itemgetter('uid')))\nprint(max(rows,key=itemgetter('age')))\n\n运行结果：\n[{'name': 'mark', 'age': 18, 'uid': '110'}, {'name': 'miaomiao', 'age': 28, 'uid': '150'}, {'name': 'miaomiao', 'age': 8, 'uid': '150'}, {'name': 'xiaohei', 'age': 38, 'uid': '130'}]\n[{'name': 'mark', 'age': 18, 'uid': '110'}, {'name': 'xiaohei', 'age': 38, 'uid': '130'}, {'name': 'miaomiao', 'age': 28, 'uid': '150'}, {'name': 'miaomiao', 'age': 8, 'uid': '150'}]\n[{'name': 'mark', 'age': 18, 'uid': '110'}, {'name': 'miaomiao', 'age': 8, 'uid': '150'}, {'name': 'miaomiao', 'age': 28, 'uid': '150'}, {'name': 'xiaohei', 'age': 38, 'uid': '130'}]\n{'name': 'mark', 'age': 18, 'uid': '110'}\n{'name': 'xiaohei', 'age': 38, 'uid': '130'}\n讨论\n在这个例子中，rows被传递给内建的sorted()函数，该函数接受一个关键字参数key，这个参数应该代表一个可调用对象(callable)，该对象从rows中接受一个单独的元素作为输入并返回一个用来做排序依据的值。itemgetter()函数创建的就是这样的一个可调用对象。\n函数operator.itemgetter()接受的参数可作为查询的标记，用来从rows的记录中提取出所需要的值。它可以是字典的键名称、用数字表示的列表元素或是任何可以传给对象的__getitem__()方法的值。如果传多个标记给itemgetter()，那么它产生的可调用对象将返回一个包含所有元素在内的元组，然后sorted()将根据对元组的排序结果来排列输出结果。如果想同时针对多个字段做排序，那么这是非常有用的。\n有时候会用lambda表达式取代itemgetter()的功能，例如：\nrows_by_uid=sorted(rows,key=lambda r:r['uid'])\nrows_by_name_age=sorted(rows,key=lambda r:(r['name','age']))\n这种解决方案通常也能正常工作。但是用itemgetter()通常会运行的更快一些。因此如果需要考虑性能问题的话，应该使用itemgetter().\n\n                ", "mainLikeNum": ["1 "], "mainBookmarkNum": "1"}