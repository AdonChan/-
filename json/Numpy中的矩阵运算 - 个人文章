{"title": "Numpy中的矩阵运算 - 个人文章 ", "index": "numpy,python,矩阵", "content": "安装与使用\n大型矩阵运算主要用matlab或者sage等专业的数学工具，但我这里要讲讲python中numpy，用来做一些日常简单的矩阵运算！这是 numpy官方文档，英文不太熟悉的，还有 numpy中文文档\nnumpy 同时支持 python3 和 python2，在 python3 下直接pip install安装即可，python2 的话建议用 .whl 安装，你可以在 这里查询 和你 python2 版本对应的 whl 文件。如果你使用 python2.7，我这里有打包好的 安装文件\n常用函数\nimport numpy as np\n\nnp.array([[1,2,3],[4,5,6]]) # 定义一个二维数组\nnp.mat([[1,2,3],[4,5,6]]) # 定义一个两行三列矩阵\nnp.mat(list) # 列表或者数组转 matrix(矩阵)\nnp.tolist(matrix) # 与上面相反\nnp.shape(array) # 求矩阵或者数组array的维度\narray.reshape(m,n) # 数组或矩阵重塑为m行n列\nnp.eye(m,n) # 创建m行n列单位矩阵\nnp.zeros([m,n],dtype) # 创建初始化为0的矩阵\n# .transpose()转置矩阵 .inv()逆矩阵\n# .T转置矩阵，.I逆矩阵\n举个栗子\n# python3\nimport numpy as np\n\n# 先创建一个长度为12的列表，，再重塑为4行3列的矩阵\nlist1 = [0,1,2,3,4,5,6,7,8,9,0,1]\nlist1_to_mat = np.mat(list1) # 列表先转成矩阵 \nmat1 = list1_to_mat.reshape(4,3) # 重塑\nprint(mat1)\n# 求上面矩阵的转置矩阵和逆矩阵\nmat_transpose = mat1.T\nmat_inv = mat1.I\n# 再定义一个3行4列的数组转成矩阵，和上面矩阵相乘\narray1 = np.array([[1,2,3,4],[4,5,6,7],[3,2,1,0]])\nmat2 = np.mat(array1)\nprint(mat2)\nprint(mat2*mat1) # 或者你可以用 np.dot()以及 np.multiply()\n要注意：numpy 的数组和 python 的列表是有区别的，比如：列表 list 只有一维。然后 numpy 的数组和矩阵也有区别！比如：矩阵有逆矩阵，数组是没有逆的！！\nEND\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "0"}