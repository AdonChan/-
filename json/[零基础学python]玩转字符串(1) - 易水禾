{"title": "[零基础学python]玩转字符串(1) - 易水禾 ", "index": "零基础,python", "content": "如果对自然语言分类，有很多中分法，比如英语、法语、汉语等，这种分法是最常见的。在语言学里面，也有对语言的分类方法，比如什么什么语系之类的。我这里提出一种分法，这种分法尚未得到广大人民群众和研究者的广泛认同，但是，我相信那句“真理是掌握在少数人的手里”，至少在这里可以用来给自己壮壮胆。\n\n我的分法：一种是语言中的两个元素（比如两个字）和在一起，出来一个新的元素（比如新的字）；另外一种是两个元素和在一起，知识两个元素并列。比如“好”和“人”，两个元素和在一起是“好人”，而3和5和在一起是8，如果你认为是35，那就属于第二类和法了。\n\n把我的这种分法抽象一下：\n\n\n一种是：△ +□  = ○\n另外一种是：△ +□  = △ □\n\n我们的语言中，离不开以上两类，不是第一类就是第二类。\n\n太天才了。请鼓掌。\n\n字符串\n\n在我洋洋自得的时候，我google了一下，才发现，自己没那么高明，看维基百科的字符串词条是这么说的：\n\n\n  字符串（String），是由零个或多个字符组成的有限串行。一般记为s=a[1]a[2]...a[n]。\n\n\n看到维基百科的伟大了吧，它已经把我所设想的一种情况取了一个形象的名称，叫做字符串\n\n根据这个定义，在前面两次让一个程序员感到伟大的\"Hello,World\"，就是一个字符串。或者说不管用英文还是中文还是别的某种问，写出来的文字都可以做为字符串对待，当然，里面的特殊符号，也是可以做为字符串的，比如空格等。\n\n操练一下字符串吧。\n\n>>> print \"good good study, day day up\"\ngood good study, day day up\n>>> print \"----good---study---day----up\"\n----good---study---day----up\n\n\n在print后面，打印的都是字符串。注意，是双引号里面的，引号不是字符串的组成部分。它是在告诉计算机，它里面包裹着的是一个字符串。也就是在python中，通常用一对双引号、或者单引号来包裹一个字符串。或者说，要定义一个字符串，就用双引号或者单引号。\n\n爱思考的看官肯定发现上面这句话有问题了。如果我要把下面这句话看做一个字符串，应该怎么做？\n\n小明说\"我没有烧圆明园\"\n\n\n或者这句\n\nWhat's your name?\n\n\n问题非常好，有道理。在python中有一种方法专门解决类似的问题。看下面的例子：\n\n>>> print \"小明说：\\\"我没有少圆明园\\\"\"\n小明说\"我没有少圆明园\"\n\n\n这个例子中，为了打印出那句含有双引号的字符串，也就是双引号是字符串的一部分了，使用了一个符号：\\，在python中，将这个符号叫做转义符。本来双引号表示包括字符串，它不是字符串一部分，但是如果前面有转义符，那么它就失去了原来的含义，转化为字符串的一部分，相当于一个特殊字符了。\n\n下面用转义符在打印第二句话：\n\n>>> print 'what\\'s your name?'\nwhat's your name?\n\n\n另外，双引号和单引号还可以嵌套，比如下面的句子中，单引号在双引号里面，虽然没有在单引号前面加转义符，但是它被认为是字符串一部分，而不是包裹字符串的符号\n\n>>> print \"what's your name?\"   #双引号包裹单引号，单引号是字符\nwhat's your name?\n>>> print 'what \"is your\" name' #单引号包裹双引号，双引号是字符\nwhat \"is your\" name\n\n\n变量连接到字符串\n\n前面讲过变量了，并且有一个钓鱼的比喻。如果忘记了，请看前一章内容。\n\n其实，变量不仅可以跟数字连接，还能够跟字符串连接。\n\n>>> a=5\n>>> a\n5\n>>> print a\n5\n>>> b=\"hello,world\"\n>>> b\n'hello,world'\n>>> print b\nhello,world\n\n\n还记得我们曾经用过一个type命令吗？现在它还有用，就是检验一个变量，到底跟什么类型联系着，是字符串还是数字？\n\n>>> type(a)\n<type 'int'>\n>>> type(b)\n<type 'str'>\n\n\n程序员们经常用一种简单的说法，把a称之为数字型变量，意思就是它能够或者已经跟数字连着呢；把b叫做字符（串）型变量，意思就是它能够或者已经跟字符串连着呢。\n\n对字符串的简单操作\n\n对数字，有一些简单操作，比如四则运算就是，如果3+5，就计算出为8。那么对字符串都能进行什么样的操作呢？试试吧：\n\n>>> \"py\"+\"thon\"\n'python'\n\n\n跟我那个不为大多数人认可的发现是一样的，你还不认可吗？两个字符串相加，就相当于把两个字符串连接起来。(别的运算就别尝试了，没什么意义，肯定报错，不信就试试）\n\n>>> \"py\"-\"thon\"\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  TypeError: unsupported operand type(s) for -: 'str' and 'str'\n\n\n以上就是对字符串的第一种操作。\n\n连接字符串\n\n\n方法1：\n\n在IDLE中按照下面方法操作\n\n>>> a = \"老齐\"\n>>> b= \"教python\"\n>>> c = a+b\n>>> print c\n老齐教python\n>>> c\n'\\xe8\\x80\\x81\\xe9\\xbd\\x90\\xe6\\x95\\x99python'\n\n\n这是一种最简单连接两个字符串的方法。注意上面例子的最后一行，怎么出现乱码了？那不是乱码，是字符编码的问题。这个你权当没看见好了。不过的确是看见了。请看官google字符编码就知道了。这里推荐一篇非常好的文章：字符集和字符编码\n\n\n  \n    老齐提示：看官做为学习者，一定要对所学的对象有一种好奇心，比如上面例子中，如果你满足于print c，发现结果跟自己所预料一样，这还远远不够。如果你向下走了一行，就发现一个怪怪的结果了，这就让你在编程路上又前进一大步。所以，要有对世界好奇的心，不断探索、思考和尝试。反正在计算机上尝试，也没有多大成本。最坏的结果是关掉IDLE罢了。\n  \n\n\n对字符串的简单操作暂且到这里，下一篇文章继续，还没完，请明天再来。\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "1"}