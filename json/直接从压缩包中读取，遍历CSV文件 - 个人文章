{"title": "直接从压缩包中读取，遍历CSV文件 - 个人文章 ", "index": "python", "content": "最近这段时间遇到了一个问题，直接打开压缩包文件后，用csv.reader读后，用for in  进行遍历时，会提示：iterator should return strings not bytes (did you open the file in text mode ?)。出问题的代码是这样的：\nimport io\nimport zipfile\nimport csv\n\nwith zipfile.ZipFile('./12.zip') as zf:\n    name = zf.namelist()[0]\n    csvfile = zf.open(name)\n    for x,y in csv.reader(csvfile):\n        print(x,'的英文缩写是：',y)\n分析原因后，主要是因为 ZipFile 读进来的内容是bytes类型，csv.reader读进去的类型也是bytes，造成无法遍历。想到的第一个办法是用decode()进行转换，但csv.reader的参数应该是一个文件流，而非字符串，需要用io.StringIO()进行封装。  有效的代码如下：\nwith zipfile.ZipFile('./12.zip') as zf:\n    name = zf.namelist()[0]\n    csvfile = io.StringIO(zf.open(name).read().decode('gbk'))\n    for x,y in csv.reader(csvfile):\n        print(x,'的英文缩写是：',y)\n\n这样问题就得以解决。\n打开硬盘中的文件多数是采用流的方式进行的，实际上在本例中，ZipFile实现了从硬盘到内存的流操作，zf.open实现了从压缩文件到csv文件的流操作，io.StringIO封装了对字符串的流。\n\n                ", "mainLikeNum": ["1 "], "mainBookmarkNum": "0"}