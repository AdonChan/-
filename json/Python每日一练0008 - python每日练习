{"title": "Python每日一练0008 - python每日练习 ", "index": "python3.x,python", "content": "问题\n怎样在两个字典中寻寻找相同点（比如相同的键、相同的值等等）？\n解决方案\n直接对keys()或者items()使用集合操作，比如-（差）、|（并）、&（交）\n考虑下面两个字典：\na = {\n    'x': 1,\n    'y': 2,\n    'z': 3,\n}\nb = {\n    'w': 10,\n    'x': 11,\n    'y': 2,\n}\n要找到相同的key，可以对keys做&操作\n>>> print(a.keys() & b.keys())\n{'x', 'y'}\n也可以使用这一特性来对字典过滤，例如去掉集合A中key为x和y两个元素\n>>> print({key: a[key] for key in a.keys() - {'x', 'y'}})\n{'z': 3}\n但values()不支持这样的集合操作，因为values()返回的结果中，可能会有重复元素，也就不能当作一个集合来看了\n讨论\ndict.keys()、dict.values() 和dict.items()返回的是视图对象，也就是说当字典改变后，视图对象也会改变\n>>> d = {'a': 1, 'b': 2}\n>>> v = d.keys()\n>>> print(v)\ndict_keys(['a', 'b'])\n>>> d['c'] = 3\n>>> print(v)\ndict_keys(['a', 'b', 'c'])\n>>> d['d'] = 4\n>>> print(v)\ndict_keys(['a', 'b', 'c', 'd'])\n并且dict.keys()是set-like的，因为key的值是唯一的并且是可hash的，除此之外，当value的值也是可hash的时候，dict.items()也是set-like的\nset-like对象可以像set对象一样执行集合间的操作\n来源\nPython Cookbook\n关注\n欢迎关注我的微信公众号：python每日一练\n\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "1"}