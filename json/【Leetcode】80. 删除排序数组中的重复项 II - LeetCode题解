{"title": " 【Leetcode】80. 删除排序数组中的重复项 II - LeetCode题解 ", "index": "数据结构,python,java,面试,leetcode", "content": "题目\n给定一个排序数组，你需要在原地删除重复出现的元素，使得每个元素最多出现两次，返回移除后数组的新长度。不要使用额外的数组空间，你必须在原地修改输入数组并在使用 O(1) 额外空间的条件下完成。\n示例 1:给定 nums = [1,1,1,2,2,3],函数应返回新长度 length = 5, 并且原数组的前五个元素被修改为 1, 1, 2, 2, 3 。你不需要考虑数组中超出新长度后面的元素。\n示例 2:给定 nums = [0,0,1,1,1,1,2,3,3],函数应返回新长度 length = 7, 并且原数组的前五个元素被修改为 0, 0, 1, 1, 2, 3, 3 。你不需要考虑数组中超出新长度后面的元素。说明:为什么返回数值是整数，但输出的答案是数组呢?请注意，输入数组是以“引用”方式传递的，这意味着在函数里修改输入数组对于调用者是可见的。\n你可以想象内部操作如下:\n// nums 是以“引用”方式传递的。也就是说，不对实参做任何拷贝\nint len = removeDuplicates(nums);\n\n// 在函数里修改输入数组对于调用者是可见的。\n// 根据你的函数返回的长度, 它会打印出数组中该长度范围内的所有元素。\nfor (int i = 0; i < len; i++) {\n    print(nums[i]);\n}\n题解\n这是一类问题，因为有序才能去除重复项，我们需要一个变量cnt去记录出现了多少词重复的元素，如果我们遍历的时候遇到的元素不同，把这个变量设置成1，从头开始急速，如果已经超过了k个，那么久跳过去。所以这里给出了最多重复k个的一个方法。\njava\nclass Solution {\n    public int removeDuplicates(int[] nums) {\n        return removeDuplicates(nums, nums.length, 2);\n    }\n    \n    int removeDuplicates(int A[], int n, int k) {\n\n        if (n <= k) return n;\n\n        int lengthIndex = 1;\n        int cnt = 1;\n        for (int j = 1; j < n; j++) {\n            if (A[j] != A[j - 1]) {\n                cnt = 1;\n                A[lengthIndex++] = A[j];\n            } else {\n                if (cnt < k) {\n                    A[lengthIndex++] = A[j];\n                    cnt++;\n                }\n            }\n        }\n        return lengthIndex;\n    }\n}\nPython\nclass Solution:\n    def removeDuplicates(self, nums):\n        \"\"\"\n        :type nums: List[int]\n        :rtype: int\n        \"\"\"\n        return self.removeDuplicatesHelper(nums, len(nums), 2)\n\n    def removeDuplicatesHelper(self, A, n, k):\n        if n <= k:\n            return n\n        lengthIndex = 1\n        cnt = 1\n        for j in range(1, n):\n            if A[j] != A[j - 1]:\n                cnt = 1\n                A[lengthIndex] = A[j]\n                lengthIndex += 1\n            else:\n                if cnt < k:\n                    A[lengthIndex] = A[j]\n                    cnt += 1\n                    lengthIndex += 1\n        return lengthIndex\n复杂度\n空间复杂度：o(1)时间复杂度：o(n)\n热门阅读\n\n9月技术文章汇总\n【Leetcode】79.单词搜索\n\n\n\n                ", "mainLikeNum": ["4 "], "mainBookmarkNum": "3"}