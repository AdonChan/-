{"title": "基于python3.5+的web框架sanic中文入门教程 - 修仙 ", "index": "python", "content": "简介\nsanic是一款用python3.5+写的web framework，用法和flask类似，sanic的特点是非常快github官网：https://github.com/channelcat...\n速度比较\n\n\n框架\n实现基础\n每秒请求数\n平均时间\n\n\n\nSanic\nPython 3.5 + uvloop\n30,601\n3.23ms\n\n\nWheezy\ngunicorn + meinheld\n20,244\n4.94ms\n\n\nFalcon\ngunicorn + meinheld\n18,972\n5.27ms\n\n\nBottle\ngunicorn + meinheld\n13,596\n7.36ms\n\n\nFlask\ngunicorn + meinheld\n4,988\n20.08ms\n\n\nKyoukai\nPython 3.5 + uvloop\n3,889\n27.44ms\n\n\nAiohttp\nPython 3.5 + uvloop\n2,979\n33.42ms\n\n\n\n安装\n环境：python3.5+python -m pip install sanic\nHello World\n创建文件main.py，写入下面的内容\nfrom sanic import Sanic\nfrom sanic.response import json\n\napp = Sanic(__name__)\n\n@app.route(\"/\")\nasync def test(request):\n    return json({ \"hello\": \"world\" })\n\napp.run(host=\"0.0.0.0\", port=8000)\n运行python3 main.pysanic是不是看起来和flask一样\n　Request\n属性request.files (dictionary of File objects) - 上传文件列表request.json (any) - json数据request.args (dict) - get数据request.form (dict) - post表单数据 \n例子\nfrom sanic import Sanic\nfrom sanic.response import json\n\n@app.route(\"/json\")\ndef post_json(request):\n    return json({ \"received\": True, \"message\": request.json })\n\n@app.route(\"/form\")\ndef post_json(request):\n    return json({ \"received\": True, \"form_data\": request.form, \"test\": request.form.get('test') })\n\n@app.route(\"/files\")\ndef post_json(request):\n    test_file = request.files.get('test')\n\n    file_parameters = {\n        'body': test_file.body,\n        'name': test_file.name,\n        'type': test_file.type,\n    }\n\n    return json({ \"received\": True, \"file_names\": request.files.keys(), \"test_file_parameters\": file_parameters })\n\n@app.route(\"/query_string\")\ndef query_string(request):\n    return json({ \"parsed\": True, \"args\": request.args, \"url\": request.url, \"query_string\": request.query_string })\n　路由\n和flask差不多，一看就懂\nfrom sanic import Sanic\nfrom sanic.response import text\n\n@app.route('/tag/<tag>')\nasync def person_handler(request, tag):\n    return text('Tag - {}'.format(tag))\n\n@app.route('/number/<integer_arg:int>')\nasync def person_handler(request, integer_arg):\n    return text('Integer - {}'.format(integer_arg))\n\n@app.route('/number/<number_arg:number>')\nasync def person_handler(request, number_arg):\n    return text('Number - {}'.format(number))\n\n@app.route('/person/<name:[A-z]>')\nasync def person_handler(request, name):\n    return text('Person - {}'.format(name))\n\n@app.route('/folder/<folder_id:[A-z0-9]{0,4}>')\nasync def folder_handler(request, folder_id):\n    return text('Folder - {}'.format(folder_id))\n注册中间件\napp = Sanic(__name__)\n\n@app.middleware\nasync def halt_request(request):\n    print(\"I am a spy\")\n\n@app.middleware('request')\nasync def halt_request(request):\n    return text('I halted the request')\n\n@app.middleware('response')\nasync def halt_response(request, response):\n    return text('I halted the response')\n\n@app.route('/')\nasync def handler(request):\n    return text('I would like to speak now please')\n\napp.run(host=\"0.0.0.0\", port=8000)\n异常处理\n抛出异常\nfrom sanic import Sanic\nfrom sanic.exceptions import ServerError\n\n@app.route('/killme')\ndef i_am_ready_to_die(request):\n    raise ServerError(\"Something bad happened\")\n处理异常\nfrom sanic import Sanic\nfrom sanic.response import text\nfrom sanic.exceptions import NotFound\n@app.exception(NotFound)\ndef ignore_404s(request, exception):\n    return text(\"Yep, I totally found the page: {}\".format(request.url))\n\n蓝图\n和flask中的蓝图一样，用于组织项目结构创建一个蓝图，相当于创建一个sanic app,上面的用法和上面相同，把app改成蓝图名称bp\nfrom sanic.response import json\nfrom sanic import Blueprint\n\nbp = Blueprint('my_blueprint')\n\n@bp.route('/')\nasync def bp_root():\n    return json({'my': 'blueprint'})\n蓝图注册到主app\nfrom sanic import Sanic\nfrom my_blueprint import bp\n\napp = Sanic(__name__)\napp.register_blueprint(bp)\n\napp.run(host='0.0.0.0', port=8000, debug=True)\n总结\nsanic将是一个非常流行的框架．因为它基于python3.5+，使用了许多新的特性，这些特性让程序速度更快．\n\n                ", "mainLikeNum": ["5 "], "mainBookmarkNum": "29"}