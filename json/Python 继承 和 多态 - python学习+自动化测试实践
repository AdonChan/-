{"title": "Python 继承 和 多态 - python学习+自动化测试实践 ", "index": "python", "content": "\n一、继承\n继承的概念\n在面向对象程序设计中，当我们定义一个类class的时候，可以从某个现有的class继承，新的class称为子类（Subclass），而被继承的class称为基类、父类或超类（Base class、Super class）。\n语法形式：\nclass new_class_name( base_class_1,base_class_2,…. ):\n    pass\n例如：\nclass Animal(object):\n     def run(self):\n         print('animal is running ...')\n\n# Dog继承Animal，子类获得了父类的全部功能\nclass Dog (Animal):\n     pass\nclass Cat(Animal):\n     pass\n继承的好处\n1、通过父类派生出子类，子类获得了父类的全部功能。子类继承父类任何属性，包括数据属性和方法属性。2、除了继承父类的全部功能，还可以覆盖父类的功能，或者定制只属于自己的特定功能。如上例子，Animal实现了run()方法。因此，Dog、Cat作为其子类，自动获得了run()方法。\n尝试运行下代码：\n>>> dog = Dog()\n>>> dog.run()\nanimal is running ...\n>>> cat = Cat()\n>>> cat.run()\nanimal is running ...\n二、多态\n针对上述第2点，通过继承覆盖，可以给子类单独增加或者修改一些方法。\nclass Animal(object):\n     def run(self):\n         print('animal is running ...')\n\n# Dog继承Animal，子类获得了父类的全部功能\nclass Dog (Animal):\n    # 多态，子类的方法覆盖了父类的方法\n     def run(self):\n         print('dog is running...')     \n     def eat(self):\n         print('eating meat')\n    \nclass Cat(Animal):\n     def run(self):\n         print('cat is running ... ')\n在子类中，分别重新修改了run()方法的实现，这种可以成为“多态”。\n类与数据类型\n当我们定义 了一个类，实际上也就定义了一种数据类型，与list、dict、string没有差别。例如：\na = list()    # a是list类型 \nb = Animal() # b是Animal类型 \nc = Dog()   # c是Dog类型\n我们可以通过isinstance()来判断他们的类型：\n>>> isinstance(a, list) \nTrue \n>>> isinstance(b, Animal) \nTrue \n>>> isinstance(c, Animal) \nTrue                        # 此处c不仅仅是Dog类型，还是Animal类型。\n>>> isinstance(b, Dog) \nFalse\n可以发现，c对象不仅仅是Dog类型，还是Animal类型（Dog的父类）。但是反过来，Animal不是Dog类型。即在继承关系中，如果一个实例的数据类型是某个子类，那它的数据类型也可以被看做是父类。但是，如果一个实例的数据类型是父类，不可以被看做是子类。\n尝试如下运行：\ndog = Dog()\ndog.run()\ncat = Cat()\ncat.run()\n结果就是：\ndog is running...\ncat is running...\n在上述中，传入dog和cat都是Animal类型，由于Animal类型有run()方法，因此，只要传入的类型是Animal类或者子类，就会自动调用实际类型的run()方法，无需确切地知道它的子类型。但是具体调用的run()方法是作用在哪个对象上（具体调用哪个类的run()方法），由运行时该对象的确切类型决定。Dog类对run()方法进行了重写，则dog对象调用的是自身类里的run()方法，同理cat对象。\n\n❤ thanks for watching, keep on updating...点个赞再走吧\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "0"}