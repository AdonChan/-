{"title": "Eve——python restful框架初试 - 黑色芝麻 ", "index": "python,restful", "content": "使用之前\n安装 eve 安装 mongodb, 并启动它选择 curl或者postman 用来测试，推荐postman\n第一个demo\n创建两个文件main.py 和 settings.py放在同一目录下，第一次用eve的两个坑，一个是mongodb没启动，一个就是这个setting.py了\nsettting.py是设置文件，包含各种配置，必须存在一个名为DOMAIN的字典，DOMAIN定义了要提供的资源 以字典形式表示 在settings.py写入如下内容\nDOMAIN = {'people': {}}\n\nmain.py就不解释了在main.py中写入如下内容\n    from eve import Eve\n    app = Eve()\n    app.run()\n\nEve是基于Flask的，所以这样的写法对于用过Flask的人应该很熟悉然后运行 main.py 用postman做get请求访问 http://127.0.0.1:5000 可以得到类似下面的结果\n    {\n        \"_links\": {\n            \"child\": [\n                {\n                    \"title\": \"people\",\n                    \"href\": \"people\"\n                }\n            ]\n        }\n    }\n\nEve的api遵循HATEOAS原则,关于HATEOAS，可以看维基和这篇文章\n之后用postman访问 http://127.0.0.1:5000/people 这个资源，得到如下内容\n    {\n        \"_items\": [],\n        \"_links\": {\n            \"self\": {\n                \"title\": \"people\",\n                \"href\": \"people\"\n            },\n            \"parent\": {\n                \"title\": \"home\",\n                \"href\": \"/\"\n            }\n        },\n        \"_meta\": {\n            \"max_results\": 25,\n            \"total\": 0,\n            \"page\": 1\n        }\n    }\n\n可以得到一个items列表，links和meta，items是该资源组中所有资源，links中包含self和parent，是指向自己和所在资源组的连接，meta是元信息，这里不讨论 默认情况下。这些api都是只读的，PUT,POST或者DELETE操作都会返回405\n如果想要允许读写，在setting中写入\n# 启用对资源组的增删查\n# 如果忽略这一行，默认只提供查\nRESOURCE_METHODS = ['GET', 'POST', 'DELETE']\n\n# 启用对单个资源的增删改查\n# 忽略情况下只提供查\nITEM_METHODS = ['GET', 'PATCH', 'PUT', 'DELETE']\n\n这些设置是全局的，会影响到所有资源和资源组的设定，可以在各个资源点独立设定允许的方法可选：\n    MONGO_HOST = 'localhost'\n    MONGO_PORT = 27017\n    \n    MONGO_USERNAME = '<your username>'\n    MONGO_PASSWORD = '<your password>'\n    \n    MONGO_DBNAME = 'apitest'\n\n\n完善第一个demo\n我们给第一个demo补上添加的功能\n数据验证：创建一个字典schema，定义people的结构\n    schema = {\n        'firstname':{\n                'type':'string',\n                'minlength': 1,\n                'maxlength':10,\n            },\n        'lastname':{\n                'type': 'string',\n                'minlength': 1,\n                'maxlength': 115,\n                'required': True\n            },\n        'role':{\n            'type':'list',\n            'allowed':[\"author\",\"contributor\",\"copy\"],\n        },\n        'location':{\n            'type':'dict',\n            'schema':{\n                'address':{'type':'string'},\n                'city':{'type':'string'}\n            }\n        },\n        'born':{\n            'type':'datetime',\n        },\n    }\n这是基于Cerberus语法的模式定义的，具体语法可以看Cerberus官网之后我们设置people属性\n    people= {\n        'item_title': 'person',\n        # 默认情况下查找资源要同过/people/<objectid>才能找到\n        # 这里添加新的只读路径，可以通过lastname来获得资源\n        'additional_lookup': {\n            'url':'regex(\"[\\w]+\")',\n            'field':'lastname',\n        },\n        # 控制缓存\n        'cache_control':'max-age=10,must-revalidate',\n        'cache_expires': 10,\n        # 覆盖全局的读写方法\n        'resource_methods':['GET','POST'],\n        # 设定结构\n        'schema':schema,\n    }\n\n最后更新资源设置\n    DOMAIN={'people':people}\n\n用postman做post添加数据\n[{\"firstname\": \"barack\", \"lastname\": \"obama\"}, {\"firstname\": \"mitt\", \"lastname\": \"romney\"}]\n\n然后查看数据 http://127.0.0.1:5000/people\n    {\n        \"_items\": [\n            {\n                \"_id\": \"5a30e8527111c41e885ff38a\",\n                \"firstname\": \"barack\",\n                \"_etag\": \"adab38db64dea06ebfe1c0e783a28bde88565c3f\",\n                \"_links\": {\n                    \"self\": {\n                        \"href\": \"people/5a30e8527111c41e885ff38a\",\n                        \"title\": \"person\"\n                    }\n                },\n                \"_created\": \"Wed, 13 Dec 2017 08:44:02 GMT\",\n                \"lastname\": \"obama\",\n                \"_updated\": \"Wed, 13 Dec 2017 08:44:02 GMT\"\n            },\n            {\n                \"_id\": \"5a30e8527111c41e885ff38b\",\n                \"firstname\": \"mitt\",\n                \"_etag\": \"39426631ce8050ff7ad6982e02281289cff4919b\",\n                \"_links\": {\n                    \"self\": {\n                        \"href\": \"people/5a30e8527111c41e885ff38b\",\n                        \"title\": \"person\"\n                    }\n                },\n                \"_created\": \"Wed, 13 Dec 2017 08:44:02 GMT\",\n                \"lastname\": \"romney\",\n                \"_updated\": \"Wed, 13 Dec 2017 08:44:02 GMT\"\n            }\n        ],\n        \"_meta\": {\n            \"page\": 1,\n            \"max_results\": 25,\n            \"total\": 2\n        },\n        \"_links\": {\n            \"parent\": {\n                \"href\": \"/\",\n                \"title\": \"home\"\n            },\n            \"self\": {\n                \"href\": \"people\",\n                \"title\": \"people\"\n            }\n        }\n    \n通过新增加的路径查看 http://127.0.0.1:5000/people/obama\n    {\n        \"_created\": \"Wed, 13 Dec 2017 07:24:04 GMT\",\n        \"lastname\": \"obama\",\n        \"_links\": {\n            \"parent\": {\n                \"title\": \"home\",\n                \"href\": \"/\"\n            },\n            \"collection\": {\n                \"title\": \"people\",\n                \"href\": \"people\"\n            },\n            \"self\": {\n                \"title\": \"person\",\n                \"href\": \"people/5a30d5947111c40f80df511e\"\n            }\n        },\n        \"_updated\": \"Wed, 13 Dec 2017 07:24:04 GMT\",\n        \"_etag\": \"94237cbea7a9a93d6db2dfb1c78a6ee84c4f8c89\",\n        \"_id\": \"5a30d5947111c40f80df511e\",\n        \"firstname\": \"barack\"\n    }\n感觉还行\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "0"}