{"title": "Ucloud配置haproxy+keepalived(利用ucloud-API实现外网浮动IP切换) - 个人文章 ", "index": "ubuntu,python", "content": "背景\n先交代下事情发生的背景，公司在使用ucloud的负载均衡产品的过程中由于某种特殊的需求必须要自建外网负载均衡器，由于ucloud的云主机使用nat地址转化技术，外网IP的数据包被转发到了内网IP，而且外网IP是与云主机绑定的，所以就不能用传统的方式实现外网haproxy服务的高可用了，但是ucloud实现了切换公网IP的api，我们让keepalived在另一台机器挂掉的时候调用api来将该机器的外网浮动IP解除绑定，然后绑定到自己身上，api切换的时间极短保证了线上负载均衡器故障能够迅速切换。\n安装keepalived\nsudo apt update \nsudo apt install keepalived -y\n\n准备脚本\n下载ucloud sdk\ngit clone https://github.com/ucloud/ucloud-sdk-python.git /etc/keepalived/script #下载ucloud python sdk 到 /etc/keepalived/script目录\ncd /etc/keepalived/script  # 进入 script 目录 \ncp config.simple.py config.py   # 复制config.simple.py模板文件\n\n编写脚本\n修改 config.py 文件，\n#配置公私钥\"\"\"\npublic_key  = \"\" #你的公钥\nprivate_key = \"\" #你的私钥\nproject_id = \"\" # 项目ID 请在Dashbord 上获取\n\n\"\"\"\n#添加以下内容\nEIPID=\"eip-lb011e\"  #你需要浮动的EIP的ID\nMYUHOSTID=\"uhost-33eitwa\"  #脚本部署在这台机器的ID，可在控制台上查看 注意，你脚本部署在哪台机器这个ID就是哪台机器的ID\nPEERUHOSTID=\"uhost-333xvs\" # 另一台机器的ID \nREGION=\"hk\"  #地区 Region 可在ucloud官网查阅\n\n接下来修改 bind_eip.py 将Parameters段参照以下内容修改\nParameters={\n    \"Action\":\"BindEIP\",\n    \"EIPId\":EIPID,\n    \"ResourceId\":MYUHOSTID,\n    \"ResourceType\":\"uhost\",\n    \"Region\":REGION\n}\n\n修改 unbind_eip.py 将Parameters段参照以下内容修改\nParameters={\n    \"Action\":\"UnBindEIP\",\n    \"EIPId\":EIPID,\n    \"ResourceId\":PEERUHOSTID,\n     \"ResourceType\":\"uhost\",\n    \"Region\":REGION\n}\n\n新建脚本  slave2master.sh\n#!/bin/bash\npython  /etc/keepalived/script/unbind_eip.py  #先把IP从故障的那台机器解绑\npython /etc/keepalived/script/bind_eip.py     # 再绑定到本机上\n\n\n编写一个故障检查脚本 check_haproxy.sh\n#!/bin/bash\nGREP_OPTIONS=\"\"\nCount1=`netstat -antp |grep -v grep |grep haproxy |wc -l`\n\nif [ $Count1 -eq 0  ]; then\nexit 1  #keepalived 调用这个脚本，当退出值不为0就认为本机故障\nfi\nexit 0\n\n\n\n编写 keepalived的配置文件\nslave的配置文件参考\n! Configuration File for keepalived\n\nglobal_defs {\n          router_id xxx-lb-test\n}\n\nvrrp_script chk_haproxy {\n        script \"/etc/keepalived/check_haproxy.sh\" \n        interval 2 \n\n}\n\nvrrp_instance VI_1 {\n\n    unicast_peer {\n        10.8.100.13    !另一台机器(master)的IP                  \n    }\n        state BACKUP   !默认进入backup模式\n        interface eth0\n        virtual_router_id 194\n        priority 10\n        weight 5\n        !    nopreempt\n        advert_int 1\n        authentication {\n            auth_type PASS\n            auth_pass e8qvAwPTWgCEepUKCQ4tN\n        }\n        track_script {\n                   chk_haproxy                   \n        }\n            notify_master /etc/keepalived/script/slave2master.sh   #一旦master出现故障该脚本就会被执行\n\n}\n\n\nmaster的配置文件 参考\n! Configuration File for keepalived\n\nglobal_defs {\n    router_id xxx-lb-test\n}\n\nvrrp_script chk_haproxy {\n    script \"/etc/keepalived/check_haproxy.sh\" \n    interval 2 \n}\n\n\n\nvrrp_instance VI_1 {\n\n    unicast_peer {\n        10.8.126.62  # Slave 的IP            \n    }\n    state MASTER #默认为 MASTER\n    interface eth0\n    virtual_router_id 194\n    priority 100\n    !    nopreempt\n    advert_int 1\n    authentication {\n        auth_type PASS\n        auth_pass e8qvAwPTWgCEepUKCQ4tN\n        }\n    track_script {\n           chk_haproxy\n    }\n    notify_master /etc/keepalived/script/slave2master.sh #一旦slave出现故障该脚本就会被执行\n}\n\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "0"}