{"title": "python大佬养成计划----基于flask_sqlalchemy的网页显示数据库信息 - python太阳花 ", "index": "html5,windows,mysql,python", "content": "网页显示数据库信息\n使用我们刚学习的flask_sqlalchemy，在网页中显示数据库表中的数据。在开始运行程序前，确保数据库中执行过创建表和创建用户的操作，详见链接描述。\n# 模板文件templates/list.html\n{% extends 'base.html' %}\n{% block title %}\n    显示\n{% endblock %}\n{% block newcontent %}\n<table class=\"table table-striped\">\n    <tr>\n        <th>用户编号</th>\n        <th>用户名称</th>\n        <th>用户密码</th>\n        <th>用户创建时间</th>\n        <th>用户会员类型</th>\n    </tr>\n    {% for user  in users %}\n        <tr>\n            <td>{{ user.id }}</td>\n            <td>{{ user.name }}</td>\n            <td>{{ user.passwd }}</td>\n            <td>{{ user.add_time }}</td>\n            <td>{{ user.role.name }}</td>\n        </tr>\n    {% endfor %}\n</table>\n{% endblock %}\n# 数据库操作文件zaj_sql_models.py\nfrom datetime import datetime\nfrom flask_bootstrap import Bootstrap\nfrom flask_wtf import FlaskForm\nfrom flask_sqlalchemy import SQLAlchemy\nfrom flask import Flask\nimport pymysql\nfrom sqlalchemy import desc\n\napp = Flask(__name__)\ndb = SQLAlchemy(app)\napp.config['SQLALCHEMY_DATABASE_URI'] = 'mysql+pymysql://root:sheen@localhost/zaj_sql'\napp.config['SQLALCHEMY_TRACK_MODIFICATIONS'] = True\nbootstrap = Bootstrap(app)\n# class Student(db.Model):\n#     __tablename__ = 'students'\n#     sid = db.Column(db.SMALLINT,primary_key=True)\n#     sname = db.Column(db.String(50))\n#     sage = db.Column(db.Integer)\n\nclass User(db.Model):\n    id = db.Column(db.Integer,autoincrement=True,primary_key=True)\n    name = db.Column(db.String(50),unique=True)\n    passwd = db.Column(db.String(100))\n    add_time = db.Column(db.DATETIME,default=datetime.now())\n    gender = db.Column(db.BOOLEAN,default=True)\n    role_id = db.Column(db.INTEGER,db.ForeignKey('role.id'))\n\n    def __repr__(self):\n        return '<User:%s>' %(self.name)\n\nclass Role(db.Model):\n    id = db.Column(db.INTEGER,autoincrement=True,primary_key=True)\n    name = db.Column(db.String(50),unique=True)\n    users = db.relationship('User',backref='role')\n    # 给Role模型添加users属性\n    # backref 是定义反向引用，可以通过User.role访问User里面的数据\n    def __repr__(self):\n        return '<Role:%s>' % (self.name)\nif __name__ =='__main__':\n\n\n    # 1. 创建数据库表\n    db.drop_all()\n    db.create_all()\n    # 2. 创建role数据库表数据\n    role_1 = Role(name='超级会员')\n    role_2 = Role(name='普通会员')\n\n    db.session.add(role_1)\n    db.session.add(role_2)\n    db.session.commit()\n\n    # # # 3. 添加user表内数据，100个用户，50个为超级会员，50个为普通会员\n    for i in range(1,13):\n        if i%2 == 0:\n            u = User(name='sheen'+str(i),passwd='sheen',role_id=1)\n            db.session.add(u)\n        else:\n            u = User(name='star'+str(i),passwd='star',role_id=2)\n            db.session.add(u)\n    db.session.commit()\n\n#主程序\nfrom flask import Flask,render_template\nfrom zaj_sql_models import app\n\nfrom zaj_sql_models import User\n@app.route('/')\ndef index():\n    return render_template('index.html')\n\n@app.route('/list/')\ndef list():\n    users = User.query.all()\n    return render_template('list.html',users=users)\n\nif __name__ == '__main__':\n    app.run()\n\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "0"}