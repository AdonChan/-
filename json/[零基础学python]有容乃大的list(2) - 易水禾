{"title": "[零基础学python]有容乃大的list(2) - 易水禾 ", "index": "零基础,python", "content": "对list的操作\n\n合并list\n\n《有容乃大的list(1)》中，对list的操作提到了list.append(x)，也就是将某个元素x 追加到已知的一个list后边。\n\n除了将元素追加到list中，还能够将两个list合并，或者说将一个list追加到另外一个list中。按照前文的惯例，还是首先看官方文档中的描述：\n\n\n  list.extend(L)\n\n\n\n  Extend the list by appending all the items in the given list; equivalent to a[len(a):] = L.\n\n\n向所有正在学习本内容的朋友提供一个成为优秀程序员的必备：看官方文档，是必须的。\n\n官方文档的这句话翻译过来：\n\n\n  通过将所有元素追加到已知list来扩充它，相当于a[len(a)]= L\n\n\n英语太烂，翻译太差。直接看例子，更明白\n\n>>> la\n[1, 2, 3]\n>>> lb\n['qiwsir', 'python']\n>>> la.extend(lb)\n>>> la\n[1, 2, 3, 'qiwsir', 'python']\n>>> lb\n['qiwsir', 'python']\n\n\n上面的例子，显示了如何将两个list，一个是la，另外一个lb，将lb追加到la的后面，也就是把lb中的所有元素加入到la中，即让la扩容。\n\n学程序一定要有好奇心，我在交互环境中，经常实验一下自己的想法，有时候是比较愚蠢的想法。\n\n>>> la = [1,2,3]\n>>> b = \"abc\"\n>>> la.extend(b)\n>>> la\n[1, 2, 3, 'a', 'b', 'c']\n>>> c = 5\n>>> la.extend(c)\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\nTypeError: 'int' object is not iterable\n\n\n从上面的实验中，看官能够有什么心得？原来，如果extend(str)的时候，str被以字符为单位拆开，然后追加到la里面。\n\n如果extend的对象是数值型，则报错。\n\n所以，extend的对象是一个list，如果是str，则python会先把它按照字符为单位转化为list再追加到已知list。\n\n不过，别忘记了前面官方文档的后半句话，它的意思是：\n\n>>> la\n[1, 2, 3, 'a', 'b', 'c']\n>>> lb\n['qiwsir', 'python']\n>>> la[len(la):]=lb\n>>> la\n[1, 2, 3, 'a', 'b', 'c', 'qiwsir', 'python']\n\n\nlist.extend(L) 等效于 list[len(list):] = L，L是待并入的list\n\nlist的长度\n\n还记得str的长度怎么获得吗？其长度是什么含呢？那种方法能不能用在list上面呢？效果如何？\n\n做实验：\n\n>>> name = 'qiwsir'\n>>> type(name)\n<type 'str'>\n>>> len(name)\n6\n>>> lname = ['sir','qi']\n>>> type(lname)\n<type 'list'>\n>>> len(lname)\n2\n>>> length = len(lname)\n>>> length\n2\n>>> type(length)\n<type 'int'>\n\n\n实验结论：\n\n\nlen(x)，对于list一样适用\n得到的是list中元素个数\n返回值是int类型\n\nlist中某元素的个数\n\n上面的len(L)，可得到list的长度，也就是list中有多少个元素。python的list还有一个操作，就是数一数某个元素在该list中出现多少次，也就是某个元素有多少个。官方文档是这么说的：\n\n\n  list.count(x)\n\n\n\n  Return the number of times x appears in the list.\n\n\n一定要不断实验，才能理解文档中精炼的表达。\n\n>>> la = [1,2,1,1,3]\n>>> la.count(1)\n3\n>>> la.append('a')\n>>> la.append('a')\n>>> la\n[1, 2, 1, 1, 3, 'a', 'a']\n>>> la.count('a')\n2\n>>> la.count(2)\n1\n>>> la.count(5)     #NOTE:la中没有5,但是如果用这种方法找，不报错，返回的是数字0\n0\n\n\n元素在list中的位置\n\n《有容乃大的list(1)》中已经提到，可以将list中的元素，从左向右依次从0开始编号，建立索引（如果从右向左，就从-1开始依次编号），通过索引能够提取出某个元素，或者某几个元素。就是如这样做：\n\n>>> la\n[1, 2, 3, 'a', 'b', 'c', 'qiwsir', 'python']\n>>> la[2]\n3\n>>> la[2:5]\n[3, 'a', 'b']\n>>> la[:7]\n[1, 2, 3, 'a', 'b', 'c', 'qiwsir']\n\n\n如果考虑反过来的情况，能不能通过某个元素，找到它在list中的编号呢？\n\n看官的需要就是python的方向，你想到，python就做到。\n\n>>> la\n[1, 2, 3, 'a', 'b', 'c', 'qiwsir', 'python']\n>>> la.index(3)\n2\n>>> la.index('a')\n3\n>>> la.index(1)\n0\n>>> la.index('qi')      #如果不存在，就报错\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  ValueError: 'qi' is not in list\n>>> la.index('qiwsir')\n6\n\n\nlist.index(x)，x是list中的一个元素，这样就能够检索到该元素在list中的位置了。这才是真正的索引，注意那个英文单词index。\n\n依然是上一条官方解释：\n\n\n  list.index(x)\n\n\n\n  Return the index in the list of the first item whose value is x. It is an error if there is no such item.\n\n\n是不是说的非常清楚明白了？\n\n先到这里，下讲还继续有容乃大的list.\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "3"}