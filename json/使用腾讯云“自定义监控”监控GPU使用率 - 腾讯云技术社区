{"title": "使用腾讯云“自定义监控”监控GPU使用率 - 腾讯云技术社区 ", "index": "服务器,云服务,python,监控,腾讯云", "content": "欢迎大家前往云+社区，获取更多腾讯海量技术实践干货哦~\n作者：李想\n随着人工智能以及比特币的火热，GPU云服务的使用场景是越来越广，在很多场景下我们也需要获取GPU服务器的性能参数来优化程序的执行。目前腾讯云提供的GPU云服务器并未提供GPU方面的监控数据，本文旨在通过使用腾讯云的“自定义监控”服务来自行实现对GPU服务器的GPU使用率的监控。\n1.GPU云服务创建\n腾讯云GPU云服务器的创建可以参考下面官网的文档，采用云市场提供的GPU服务器专用镜像可以免于自行安装GPU驱动程序。https://cloud.tencent.com/doc...使用云市场的镜像创建的服务器，默认已经包含了NVML 管理库（Nvidia Management Library）和 基于NVML的命令行工具nvidia-smi (NVIDIA System Management Interface)。在服务器上执行nvidia-smi可以获取当前服务器的GPU使用率。\n\n除了nvidia-smi 命令行工具，Nvidia也提供了NVML的Python SDK供开发者使用，本文就基于NVML的python SDK用于读取GPU使用率，并将数据上传到腾讯云自定义监控对应接口进行监控。https://pypi.python.org/pypi/...同时需要执行如下命令安装NVML的Python库：\npip install nvidia-ml-py\n2.自定义监控配置\n首先创建监控配置，命名空间是该监控的名字，维度用于定义每一个监控数据，由于一个服务器可能有多个GPU，所以我们这里定义两个维度，server_name用于记录GPU服务器名字，gpu_id用于记录GPU序列号。如果还需监控GPU其他指标可以在监控指标里进行添加。\n配置创建完毕需要创建指标统计方式，这里配置统计周期为5分钟，并按照平均值进行统计。\n3.数据上报\n数据上报通过一个Python脚本来实现，脚本主要需要完成下面几个任务。\n\n初始化NVML并调用nvmlDeviceGetCount()读取GPU个数。\n计算Signature作为API接口校验和鉴权参数。需要注意数据上报接口跟一般腾讯云API接口不同，并且签名算法也有所不同，具体可参考官方文档\n调用NVML接口nvmlDeviceGetUtilizationRates()读取GPU使用率。\n将读取的数据进行封装并上传。dimensions需要指定每个维度的值，这里server_name指定为‘testserver’，gpu_id为读取的GPU ID号。\n\n核心部分的代码如下：\n       nvmlInit()\n        deviceCount = nvmlDeviceGetCount()\n\n        while True:\n                ts=int(time.time())\n                nonce=random.randint(10000,100000)\n                text=\"GETreceiver.monitor.tencentyun.com/v2/index.php?Action=PutMonitorData&Nonce=%d&Region=%s&SecretId=%s&Timestamp=%d\" % (nonce,region,secretId,ts)\n                data['Timestamp']=ts\n                data['Nonce']=nonce\n                data['Signature']=hmac.new(secretKey,text,hashlib.sha1).digest().encode(\"base64\").rstrip('\\n')\n\n                for i in range(deviceCount):\n\n                        handle = nvmlDeviceGetHandleByIndex(i)\n                        gpu_util = getGpuUtilization(handle)\n                        Data=[\n                             {\n                              \"dimensions\": {\"gpu_id\": str(i) ,\"server_name\": 'testserver'},\n                              \"metricName\": \"gpu_util\",\n                              \"value\": gpu_util,\n                              }\n                              ]\n                        data[\"Data\"]=json.dumps(Data)\n                        xx = urllib.urlencode(data)\n                        sender.send_data(xx)\n\n                time.sleep(20)\n完整代码可以参考如下的Github链接：https://github.com/xianl/GPUM...\n4.监控数据查看\n登录到自定义监控管理界面，可以查看采集到的数据。如果需要配置告警策略，可以在告警管理中进行配置。\n\n另外，如果需要查看详细的数据也可以在报表详情中进行查看。\n\n总结\n本文主要讲述了如何利用腾讯云的自定义监控服务来监控GPU服务器的GPU使用率，为大家在实际应用中监控服务器的非标数据提供了解决思路，如果需要监控GPU的其他参数如GPU内存使用率，GPU功耗等也可以基于此做适当修改来实现。另外，如果大家需要监控GPU之外一些非标数据，也可以参考本文提供的方案自行编写上传模块来实现。\n相关阅读\n【云端架构】腾讯云CDN链接鉴权算法PHP代码模板腾讯云微计算实践：从Serverless说起，谈谈边缘计算的未来如何在Python中从零开始实现随机森林\n\n此文已由作者授权云加社区发布，转载请注明文章出处\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "0"}