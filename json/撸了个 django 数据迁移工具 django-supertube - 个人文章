{"title": "撸了个 django 数据迁移工具 django-supertube - 个人文章 ", "index": "django,数据迁移,postgresql,python", "content": "撸了个 django 数据迁移工具 django-supertube\n支持字段映射和动态字段转化。 欢迎 star，issuehttps://github.com/FingerLiu/...\n起因\n最近参与了公司系统的重构，重构基本完成后，由于数据库表结构变化很大，很多小组都需要数据迁移。如果都写 sql 的话，要做很多重复的工作。于是去搜了下 django 有没有相关的工具，很遗憾没有搜到，于是自己撸了这个数据迁移的轮子。\n主要功能\nA powerful django migration tool to migrate from latency database to new databse using awesome django ORM使用 django 强大的 ORM 系统灵活的进行数据迁移工作。\n目前包含以下功能点：\n\n支持相同字段自动映射\n批量写入\n支持修改字段映射\n支持通过调用函数的方式\n自动修复 postgres sequence\n实时进度提醒\n数据量大时支持并行执行（开发中）\n\ndjango-supertube\nA powerful django migration tool to migrate from latency database to new databse using awesome django ORM\n例子\nsettings.py\nDATABASES = {\n    'default': config('DATABASE_URL', cast=db_url),\n    'latency': config('LATENCY_DATABASE_URL', cast=db_url)\n}\n\nmanagement/commands/mig_01_user.py\nfrom django.utils import timezone\nfrom si.tools.supertube import SuperTube, TubeSet\n\"\"\"\nclass LatencyUser:\n    email\n    password\n    age\n\nclass User:\n    email\n    age\n    username\n    password\n    is_admin\n    create_datetime\n\n例子从 latency 数据库的 LatencyUser 取数据迁移到 default 数据库的 User 中：\n  - 新加 username 字段，数据值从原 email 字段取\n  - 修改 age 字段变为原来的 age+1\n  - 新加 create_datetime 字段\n  - 新加 is_admin 字段，默认值为 False\n\n\"\"\"\nclass Command(BaseCommand):\n    def handle(self, *args, **options):\n        kwargs = {\n            'mapping': {\n                'username': 'email',\n                'age': lambda obj: obj.age + 1, \n                'create_datetime': timezone.now()},\n            'defaults': {'is_admin': False}\n            'source_db': 'whistler'\n        }\n        st = SuperTube(LatencyUser, User, **kwargs)\n        st.run(stop_on_error=True)\n迁移工具 SuperTube 和 TubeSet 更多说明和例子参考这个文档\n一个为 latency 中的旧数据建表的例子：\n\n\nclass Order(models.Model):\n    sn = models.CharField(u'领用单编号', max_length=100)\n    created = models.DateTimeField(u'创建时间', auto_now_add=True)\n    apply_qty = models.IntegerField(u'计划领用数量', blank=True, null=True)\n    # TODO 1 将原 model 中的外键字段名改为 原字段名+_id ，类型改为 IntegerField\n    # batch = models.ForeignKey('stock.Batch', blank=True, null=True)\n    batch_id = models.IntegerField('stock.Batch', blank=True, null=True)\n    purpose = models.PositiveIntegerField(u'领用用途', choices=PURPOSES, blank=True, null=True)\n    # platform = models.ForeignKey('si.Platform', blank=True, null=True, related_name='+')\n    platform_id = models.IntegerField('si.Platform', blank=True, null=True)\n\n    def __unicode__(self):\n        return self.sn\n\n    class Meta:\n        verbose_name = u'Order'\n        # TODO 2 注释掉原表中的 unique_together\n        # unique_together = (\n        #     ('platform', 'request_id'),\n        #     ('platform', 'outer_id'),\n        # )\n\n        # TODO 3 managed 设为 False\n        managed = False\n        # TODO 4 指定 db table\n        db_table = 'cardbox_applyvoucher'\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "0"}