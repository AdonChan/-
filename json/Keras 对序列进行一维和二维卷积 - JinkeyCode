{"title": "Keras 对序列进行一维和二维卷积 - JinkeyCode ", "index": "tensorflow,python", "content": "\n网络结构来自https://github.com/nfmcclure/...\nConv1D\nimport numpy as np\nimport keras\n\n# 固定随机数种子以复现结果\nseed=13\nnp.random.seed(seed)\n\n# 创建 1 维向量，并扩展维度适应 Keras 对输入的要求， data_1d 的大小为 (1, 25, 1)\ndata_1d = np.random.normal(size=25)\ndata_1d = np.expand_dims(data_1d, 0)\ndata_1d = np.expand_dims(data_1d, 2)\n\n# 定义卷积层\nfilters = 1 # 卷积核数量为 1\nkernel_size = 5 # 卷积核大小为 5\nconvolution_1d_layer = keras.layers.convolutional.Conv1D(filters, kernel_size, strides=1, padding='valid', input_shape=(25, 1), activation=\"relu\", name=\"convolution_1d_layer\")\n\n# 定义最大化池化层\nmax_pooling_layer = keras.layers.MaxPool1D(pool_size=5, strides=1, padding=\"valid\", name=\"max_pooling_layer\")\n\n# 平铺层，调整维度适应全链接层\nreshape_layer = keras.layers.core.Flatten(name=\"reshape_layer\")\n\n# 定义全链接层\nfull_connect_layer = keras.layers.Dense(5, kernel_initializer=keras.initializers.RandomNormal(mean=0.0, stddev=0.1, seed=seed), bias_initializer=\"random_normal\", use_bias=True, name=\"full_connect_layer\")\n\n# 编译模型\nmodel = keras.Sequential()\nmodel.add(convolution_1d_layer)\nmodel.add(max_pooling_layer)\nmodel.add(reshape_layer)\nmodel.add(full_connect_layer)\n\n# 打印 full_connect_layer 层的输出\noutput = keras.Model(inputs=model.input, outputs=model.get_layer('full_connect_layer').output).predict(data_1d)\nprint(output)\n\n# 打印网络结构\nprint(model.summary())\n最终输出如下\n======================卷积结果=========================\n[[-0.0131043  -0.11734447  0.13395447 -0.75453871 -0.69782442]]\n======================网络结构=========================\n_________________________________________________________________\nLayer (type)                 Output Shape              Param #   \n=================================================================\nconvolution_1d_layer (Conv1D (None, 21, 1)             6         \n_________________________________________________________________\nmax_pooling_layer (MaxPoolin (None, 17, 1)             0         \n_________________________________________________________________\nreshape_layer (Flatten)      (None, 17)                0         \n_________________________________________________________________\nfull_connect_layer (Dense)   (None, 5)                 90        \n=================================================================\nTotal params: 96\nTrainable params: 96\nNon-trainable params: 0\n_________________________________________________________________\nNone\nConv2D\ndata_size = [10, 10]\ndata_2d = np.random.normal(size=data_size)\ndata_2d = np.expand_dims(data_2d, 0)\ndata_2d = np.expand_dims(data_2d, 3)\nprint data_2d.shape\n\n# 定义卷积层\nconv_size = 2\nconv_stride_size = 2\nconvolution_2d_layer = keras.layers.Conv2D(filters=1, kernel_size=(conv_size, conv_size), strides=(conv_stride_size, conv_stride_size), input_shape=(data_size[0], data_size[0], 1))\n# convolution_2d_layer = keras.layers.Conv2D(filter=1, kernel_size=kernel, strides=[1,1], padding=\"valid\", activation=\"relu\", name=\"convolution_2d_layer\", input_shape=(1, data_size[0], data_size[0]))\n\n\n# 定义最大化池化层\npooling_size = (2, 2)\nmax_pooling_2d_layer = keras.layers.MaxPool2D(pool_size=pooling_size, strides=1, padding=\"valid\", name=\"max_pooling_2d_layer\")\n\n# 平铺层，调整维度适应全链接层\nreshape_layer = keras.layers.core.Flatten(name=\"reshape_layer\")\n\n# 定义全链接层\nfull_connect_layer = keras.layers.Dense(5, kernel_initializer=keras.initializers.RandomNormal(mean=0.0, stddev=0.1, seed=seed), bias_initializer=\"random_normal\", use_bias=True, name=\"full_connect_layer\")\n\nmodel_2d = keras.Sequential()\nmodel_2d.add(convolution_2d_layer)\nmodel_2d.add(max_pooling_2d_layer)\nmodel_2d.add(reshape_layer)\nmodel_2d.add(full_connect_layer)\n\n# 打印 full_connect_layer 层的输出\noutput = keras.Model(inputs=model_2d.input, outputs=model_2d.get_layer('full_connect_layer').output).predict(data_2d)\nprint(\"======================卷积结果=========================\")\nprint(output)\n\n# 打印网络结构\nprint(\"======================网络结构=========================\")\nprint(model_2d.summary())\n输出\n======================卷积结果=========================\n[[ 0.30173036 -0.10435719 -0.03354734  0.24000235 -0.09962128]]\n======================网络结构=========================\n_________________________________________________________________\nLayer (type)                 Output Shape              Param #   \n=================================================================\nconv2d_1 (Conv2D)            (None, 5, 5, 1)           5         \n_________________________________________________________________\nmax_pooling_2d_layer (MaxPoo (None, 4, 4, 1)           0         \n_________________________________________________________________\nreshape_layer (Flatten)      (None, 16)                0         \n_________________________________________________________________\nfull_connect_layer (Dense)   (None, 5)                 85        \n=================================================================\nTotal params: 90\nTrainable params: 90\nNon-trainable params: 0\n_________________________________________________________________\nNone\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "0"}