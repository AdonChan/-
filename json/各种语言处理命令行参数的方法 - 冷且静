{"title": "各种语言处理命令行参数的方法 - 冷且静 ", "index": "python,java,command-line", "content": "Python\nargparse\npython2.7/3.2 引入了一个 argparse 的modulehttps://docs.python.org/2/library/argparse.htmlhttps://docs.python.org/3.5/library/argparse.html\nimport argparse\n# 创建parser\nparser = argparse.ArgumentParser(description='Process some integers.')\n# 创建参数\n# 'integers' -> 没有 - 开头，创建的是 positional argument\n# metavar='N' -> 在usage中显示为 N, 而不是 integers\n# type=int\n# nargs='+' -> 至少一个值\n# help='...' -> 帮助信息\nparser.add_argument('integers', metavar='N', type=int, nargs='+',\n                    help='an integer for the accumulator')\n# '--sum' -> 有 - 开头，创建的是 optional argument\n# dest='accumulate' -> 最终访问的成员名，默认是sum\n# action='store_const' -> 存储const的值\n# const=sum -> 空参数是sum\n# default=max -> 默认参数是max\nparser.add_argument('--sum', dest='accumulate', action='store_const',\n                    const=sum, default=max,\n                    help='sum the integers (default: find the max)')\n# parse参数\nparser.parse_args(['--sum', '7', '-1', '42'])\njava\nCommons CLI\n<dependency>\n  <groupId>commons-cli</groupId>\n  <artifactId>commons-cli</artifactId>\n  <version>1.4-SNAPSHOT</version>\n</dependency>\n// create Options object\nOptions options = new Options();\n\n// add t option\noptions.addOption(\"t\", false, \"display current time\");\n\n// parse options\nCommandLineParser parser = new DefaultParser();\nCommandLine cmd = parser.parse(options, args);\n\nif(cmd.hasOption(\"t\")) {\n    // print the date and time\n}\nelse {\n    // print the date\n}\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "3"}