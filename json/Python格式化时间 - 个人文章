{"title": "Python格式化时间 - 个人文章 ", "index": "python", "content": "datetime简介\ndatetime和time的区别\ntime在 Python 文档里，time是归类在Generic Operating System Services中，换句话说， 它提供的功能是更加接近于操作系统层面的。通读文档可知，time 模块是围绕着 Unix Timestamp 进行的。该模块主要包括一个类 struct_time，另外其他几个函数及相关常量。\ndatetimedatetime 比 time 高级了不少，可以理解为 datetime 基于 time 进行了封装，提供了更多实用的函数。在datetime 模块中包含了几个类，具体关系如下:\n\ntimedelta  # 主要用于计算时间跨度\ntzinfo         # 时区相关\ntime          # 只关注时间\ndate          # 只关注日期\ndatetime  # 同时有时间和日期\n\n格式化时间\n格式化时间主要用到的是datetime.datetime.strftime()方法和datetime.datetime.strptime()方法，这两个方法的一字之差'f'和'p'指的是什么呢？\n个人理解：strftime中的'f'指的是format，即格式化时间；strptime中的'p'指的是parse，即将一个字符串string按照指定的格式解析为时间\n\nstrptime的用法\n官方解释是\nstrptime(...)\n    string, format -> new datetime parsed from a string (like time.strptime()).\n简单来说，strptime的作用就是将一个字符串解析为时间，并返回为datetime对象。\n如我们有字符串 '2018-05-18 11:09:34'， 如何将它转换为datetime对象呢？\nIn [1]: import datetime as dt\n\nIn [2]: strTime = '2018-05-18 11:09:34'\n\nIn [3]: type(strTime)\nOut[3]: str\n\nIn [4]: time = dt.datetime.strptime(strTime, '%Y-%m-%d %H:%M:%S')\n\nIn [5]: time\nOut[5]: datetime.datetime(2018, 5, 18, 11, 9, 34)\n\nIn [6]: type(time)\nOut[6]: datetime.datetime\n\nstrftime的用法\nstrftime(...)\n    format -> strftime() style string.\nstrptime的作用是格式化时间格式，使其按照我们想要的格式来显示。如我们要得到 '11:09:34 2018-05-18' 的格式来输出时间。\n如下例，先将字符串解析为datetime对象，然后在格式化时间输出，将其输出按照'11:09:34 2018-05-18'的格式输出。\nIn [1]: strTime = '2018-05-18 11:09:34'\n\nIn [2]: time = dt.datetime.strptime(strTime, '%Y-%m-%d %H:%M:%S')\n\nIn [3]: time\nOut[3]: datetime.datetime(2018, 5, 18, 11, 9, 34)\n\nIn [4]: type(time)\nOut[4]: datetime.datetime\n\nIn [5]: time.strftime('%H:%M:%S %Y-%m-%d')\nOut[5]: '11:09:34 2018-05-18'\n\nIn [6]: aa = time.strftime('%H:%M:%S %Y-%m-%d')\n\nIn [7]: type(aa)\nOut[7]: str\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "0"}