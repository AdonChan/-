{"title": "djang data migration - python-django-data ", "index": "django,python", "content": "djang data migration\n在使用django框架开发的过程中，我们不可避免的遇到models层的变更，就涉及到数据库表的变动，django给我提供了一个migration的工具来做这些数据库表的变更。\ndjang migration\n如果不加appname，那么就是指所有包含migrations 目录的app\n# 基于当前的model 检测修改，创建迁移策略文件\npython manage.py makemigrations <appname>\n# 执行迁移动作\npython manage.py migrate\nmigrations失败\n有时候如果models改动比较大，migrations会失败，这个时候有两种选择，手工去修改migrations文件，第二种是清除所有migrations，重新migrate\n手工修改migrations文件\n通过报错信息加上SQL语句找到找到问题，然后具体问题具体分析，是修改数据库里面的数据，还是修改migrations生成的脚本。\npython manage.py migrate\n\npython manage.py sqlmigrate <appname> 0001\n当处理模型修改的时候：\n\n如果模型包含一个未曾在数据库里建立的字段，Django会报出错信息。 当你第一次用Django的数据库API请求表中不存在的字段时会导致错误。\nDjango不关心数据库表中是否存在未在模型中定义的列。\nDjango不关心数据库中是否存在未被模型表示的table。\n\n在使用SQLite3数据库时, 因为SQLite3 不支持删除列操作，只有有限地 ALTER TABLE 支持，所以修改数据库列的操作被新建表然后select into newtable 代替，所以会存在更多问题\n参考\nhttp://www.tuicool.com/articles/yM3IVr\nNULL to NOT NULL\npython manage.py makemigrations\nYou are trying to add a non-nullable field 'college' to majorproperty without a default; we can't do that (the database needs something to populate existing rows).\nPlease select a fix:\n 1) Provide a one-off default now (will be set on all existing rows)\n 2) Quit, and let me add a default in models.py\nSelect an option: 1\nPlease enter the default value now, as valid Python\nThe datetime and django.utils.timezone modules are available, so you can do e.g. timezone.now()\n>>> 1\n在migrate的时候提示你需要指定一个默认值，用以处理NULL的情况\n清除migrations\n清除所有app目录/migrations/下除__init__.py 文件之外的py文件\nfind . -path \"*migrations*\" -name \"*.py\" -not -path \"*__init__*\" -exec rm {} \\;\nsquashmigrations\n当migrations越来越多的时候执行 makemigrations 和 migrate 就会越来越慢，可以考虑对其瘦身（减少migrations文件的数量）\npython manage.py squashmigrations schools 0002\n数据导入导出\n数据导出\ndjango 项目提供了一个导出的方法 python manage.py dumpdata, 不指定 appname 时默认为导出所有的app\npython manage.py dumpdata [appname] > appname_data.json\n数据导入\n数据导入,不需要指定 appname\npython manage.py loaddata appname_data.json\n优点：可以兼容各种支持的数据库，也就是说，以前用的是 SQLite3，可以导出后，用这种方法导入到 MySQL, PostgreSQL等数据库，反过来也可以。\n缺点：数据量大的时候，速度相对较慢，表的关系比较复杂的时候可以导入不成功。\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "1"}