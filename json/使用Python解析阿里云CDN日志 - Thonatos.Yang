{"title": "使用Python解析阿里云CDN日志 - Thonatos.Yang ", "index": "python", "content": "某些原因，一开始没有设计网站的统计模块如今需要加上，只能借助于百度统计或者阿里云的cdn日志文件，阿里云cdn的日志文件是web的访问信息\nlog\n[9/Mar/2016:00:00:16 +0800] 222.171.7.89 - 62113 \"http://cloud.insta360.com/post/5e7b029d8ed7e3c4b23006a71bab73c8?e=true&m=true\" \"GET http://cloud.insta360.com/public/media/mp4/5e7b029d8ed7e3c4b23006a71bab73c8_960x480.mp4\" 206 509 20516390 HIT \"Mozilla/5.0 (iPhone; CPU iPhone OS 8_4_1 like Mac OS X) AppleWebKit/600.1.4 (KHTML, like Gecko) Mobile/12H321 NewsApp/5.3.2\" \"video/mp4\"\nfileds\n\n时间\n访问IP\n回源IP\nresponsetime\nreferer\nmethod\n访问URL\nhttpcode\nrequestsize\nresponsesize\ncache命中状态\nUA头\n文件类型\n\nre\n# 将单条记录转换为Dict对象\ndef line2dict(line):\n    # Snippet, thanks to http://www.seehuhn.de/blog/52\n    parts = [\n        r'\\[(?P<time>.+)\\]',        # 时间 %t\n        r'(?P<res_ip>\\S+)',         # 访问IP %h\n        r'(?P<origin_ip>\\S+)',      # 回源IP %h\n        r'(?P<res_time>[0-9]+)',    # 响应时间 %>s\n        r'\"(?P<referer>.*)\"',       # Referer \"%{Referer}i\"\n        r'\"(?P<req_url>.+)\"',       # 请求地址 \"%r\"\n        r'(?P<http_code>[0-9]+)',   # Httpcode %>s\n        r'(?P<req_size>\\S+)',       # 请求大小 %b (careful, can be '-')\n        r'(?P<res_size>[0-9]+)',    # 响应大小 size %>s\n        r'(?P<cache_status>\\S+)',   # 缓存状态 %s\n        r'\"(?P<ua>.*)\"',            # user agent \"%{User-agent}i\"\n        r'\"(?P<content_type>.*)\"',  # content type \"%{Content-type}i\"\n    ]\n    pattern = re.compile(r'\\s+'.join(parts) + r'\\s*\\Z')\n    m = pattern.match(line)\n    res = m.groupdict()\n    return res\nscript\nAliyunLog.py\n# coding=utf-8\n\nimport fileinput\nimport re\nimport os\n\ntry:\n    import simplejson as json\nexcept ImportError:\n    import json\n\n\n# 读取输入文件并返回Dict对象\ndef readfile(file):\n    filecontent = {}\n    index = 0\n    statinfo = os.stat(file)\n\n    # just a guestimate. I believe a single entry contains atleast 150 chars\n    if statinfo.st_size < 150:\n        print \"Not a valid log file. It does not have enough data\"\n    else:\n        for line in fileinput.input(file):\n            index = index + 1\n            if line != \"\\n\":  # don't read newlines\n                filecontent[index] = line2dict(line)\n\n        fileinput.close()\n    return filecontent\n\n\n# 将单条记录转换为Dict对象\ndef line2dict(line):\n    # Snippet, thanks to http://www.seehuhn.de/blog/52\n    parts = [\n        r'\\[(?P<time>.+)\\]',        # 时间 %t\n        r'(?P<res_ip>\\S+)',         # 访问IP %h\n        r'(?P<origin_ip>\\S+)',      # 回源IP %h\n        r'(?P<res_time>[0-9]+)',    # 响应时间 %>s\n        r'\"(?P<referer>.*)\"',       # Referer \"%{Referer}i\"\n        r'\"(?P<req_url>.+)\"',       # 请求地址 \"%r\"\n        r'(?P<http_code>[0-9]+)',   # Httpcode %>s\n        r'(?P<req_size>\\S+)',       # 请求大小 %b (careful, can be '-')\n        r'(?P<res_size>[0-9]+)',    # 响应大小 size %>s\n        r'(?P<cache_status>\\S+)',   # 缓存状态 %s\n        r'\"(?P<ua>.*)\"',            # user agent \"%{User-agent}i\"\n        r'\"(?P<content_type>.*)\"',  # content type \"%{Content-type}i\"\n    ]\n    pattern = re.compile(r'\\s+'.join(parts) + r'\\s*\\Z')\n    m = pattern.match(line)\n    res = m.groupdict()\n    return res\n\n\n# 转换整个记录为Json对象\ndef toJson(file):\n    entries = readfile(file)\n    return json.JSONEncoder(indent=4).encode(entries)\nmain.py\n#!/usr/bin/env python\n# coding=utf-8\n\nimport sys\nfrom AliyunLog import *\n\ndef main():\n    if len(sys.argv) < 3:\n        print \"Incorrect Syntax. Usage: python main.py -f <filename>\"\n        sys.exit(2)\n    elif sys.argv[1] != \"-f\":\n        print \"Invalid switch '\" + sys.argv[1] + \"'\"\n        sys.exit(2)\n    elif os.path.isfile(sys.argv[2]) == False:\n        print \"File does not exist\"\n        sys.exit(2)\n\n    print toJson(sys.argv[2])\n\n\nif __name__ == \"__main__\":\n    main()\nresult\nrun script\npython main.py -f data\nterminal\n\n{\n    \"6432\": {\n        \"res_time\": \"1728\", \n        \"res_ip\": \"118.114.213.118\", \n        \"req_size\": \"768\", \n        \"req_url\": \"GET http://cloud.insta360.com/public/media/mp4/f9e4bf15d452440c2884b234854d089c_audio.mp3\", \n        \"origin_ip\": \"-\", \n        \"referer\": \"http://cloud.insta360.com/post/f9e4bf15d452440c2884b234854d089c?m=true&from=timeline&isappinstalled=0\", \n        \"content_type\": \"audio/mpeg\", \n        \"time\": \"9/Mar/2016:00:59:58 +0800\", \n        \"ua\": \"Mozilla/5.0 (iPhone; CPU iPhone OS 9_2 like Mac OS X) AppleWebKit/601.1.46 (KHTML, like Gecko) Mobile/13C75 MicroMessenger/6.3.13 NetType/WIFI Language/zh_CN\", \n        \"http_code\": \"206\", \n        \"res_size\": \"5290084\", \n        \"cache_status\": \"HIT\"\n    }，\n    ...\n}\nmore\n\n参考了github上apache log的解析方法\n原文地址：parse-aliyun-cdn-log-file-with-python\n\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "2"}