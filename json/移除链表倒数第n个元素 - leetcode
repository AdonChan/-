{"title": "移除链表倒数第n个元素 - leetcode ", "index": "leetcode,python", "content": "移除链表倒数第n个元素\nRemove Nth Node From End of List\n\n给定一个链表，移除倒数第n个元素，返回链表头部。\nGiven a linked list, remove the nth node from the end of list and return its head.\n\nNote:Given n will always be valid.Try to do this in one pass.\nexample 1\nGiven linked list: 1->2->3->4->5, and n = 2.\n\nAfter removing the second node from the end, the linked list becomes 1->2->3->5.\nexample 2\nGiven linked list: 1, and n = 1.\noutput: None\nexample 3\nGiven linked list: 1->2->3, and n = 3.\noutput: 2->3\n思路\n\n两个指针，fast和slow，fast指向slow之后n个位置，同步移动fast和slow，当fast.next为null的时候，slow.next即为要移除的那个元素，只需要slow.next = slow.next.next即可，时间复杂度O(n)\n注意考虑n为链表长度的情况，即移除首个元素\n\n代码\n# Definition for singly-linked list.\nclass ListNode(object):\n    def __init__(self, x):\n        self.val = x\n        self.next = None\n\nclass Solution(object):\n    def removeNthFromEnd(self, head, n):\n        \"\"\"\n        :type head: ListNode\n        :type n: int\n        :rtype: ListNode\n        \"\"\"\n        a = b = head\n        for i in range(n):\n            b = b.next\n        if not b:\n            return head.next\n        while b.next:\n            a = a.next\n            b = b.next\n        a.next = a.next.next\n        return head\n本题以及其它leetcode题目代码github地址: github地址\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "0"}