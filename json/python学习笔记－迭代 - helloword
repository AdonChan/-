{"title": "python学习笔记－迭代 - helloword ", "index": "python", "content": "python中我们可以对list、tuple、dict或者其他可迭代的对象进行迭代从而遍历取出各个元素。\n如何判断一个对象是不是一个可迭代对象\n判断一个对象是不是可迭代对象可以使用isinstance判断是否是collections模块的Iterable类型。例如：\nfrom collections import Iterable\n\nisinstance('hello world',Iterable) # True\nisinstance([1,2,3,4],Iterable) #True\nisinstance(231,Iterable) #False\nList tuple string 循环\nfruits = ['apple','banana','peal','water melon']\nfor fruit in fruits:\n    print fruit\n迭代的时候，在获取的值的同时，又想获取到下标，该怎么做？我们可以利用python中内置函数enumerate()函数将list、tuple、string等组装成一个带索引的enumerate object。\nfor index,fruit in enumerate(fruits):\n    print index,fruit\nDict 迭代\nDict字典本身带有key和value。\n利用for...in...迭代的时候，默认是key迭代。\nd = {'banana':20,'apple':30,'peal':40}\nfor key in d:\n    print key\n输出结果将是：\nbanana\napple\npeal\n那么该如果让它是value迭代呢？\n我们可以使用字典自身的itervalues函数。\nfor value in d.itervalues():\n    print value\n在迭代的时候我们既想要key又想要value，该怎么办？\nfor key,value in d.iteritems():\n    print key,value\n 说明在python3.x版本中，itervalues(),iterkeys(),iteritems()函数都被新的函数取代。需要了解的可以阅读http://www.jb51.net/article/6...了解。\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "1"}