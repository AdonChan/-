{"title": "用 Python 鉴别色色的图片 - 伪君子的梦呓 ", "index": "python", "content": "0  前言\n实话实说啊，这个标题起得就有点标题党，识别是识别，准确率就有点玄学了。\n1  环境说明\nWin10 系统下 Python3，编译器是 Pycharm，需要安装 nonude 这个库。\nPycharm 安装第三方库的方法。\n\n2  代码\n2.1 识别少量图片\n先导入 nonude 这个库（我也很奇怪为什么 import 的是 nude）\nimport nude\n再写出代码\nprint(nude.is_nude(\"godfather.jpg\"))\nprint(nude.is_nude(\"leisheng.jpg\"))\nprint(nude.is_nude(\"qiaoba.png\"))\n代码运行的结果居然是 False、True、True让我们来看一下图片。\n\n对了，我这里是直接把图片放在了项目的路径里的如果不喜欢这样，可以换一个写法\nimport nude\nprint(nude.is_nude(\"E:/Images/OOXX/00mitai.jpg\"))\nprint(nude.is_nude(\"E:\\Images\\OOXX/00zkted.jpg\"))\nprint(nude.is_nude(\"E:/Images\\OOXX/011idk8.jpg\"))\n代码运行的结果是 False、True、False\n\n\n说一下，路径里面的斜杠 / 可以是反斜杠 ，如果后面有数字的话，请使用斜杠 /，不要用反斜杠 。\n2.2 识别文件夹中的图片\n先导入要用的库\nimport glob\nimport itertools\nfrom nude import Nude\n这里用 glob 返回匹配指定模式的文件名\nimages_format = ['jpg', 'png', 'gif']  # 图片格式\nimages_jpg = glob.glob(\"E:/Images/OOXX/*.jpg\")  # 返回匹配指定模式的文件名\nimages_png = glob.glob(\"E:/Images/OOXX/*.png\")\nimages_gif = glob.glob(\"E:/Images/OOXX/*.gif\")\nitertools.chain 把迭代对象串联起来，形成一个更大的迭代器，说白了就是把 images_jpg、images_png、images_gif 弄在一起，变成了images_list。\n然后进行循环，在 images_list 里面一个一个对图片进行识别。\nimages_list = itertools.chain(images_jpg, images_png, images_gif)\n\nfor i in images_list:\n    print(i)  # 输出照片的路径\n    n = Nude(i)  # 对图片进行识别\n    n.parse()\n    print(n.result)  # 输出结果\n    print(n.message)  # 输出判断信息\n    print(n.inspect())  # 输出更加详细的判断信息\n运行结果如下图\n\n我们来看一下下图片，准确率嘛，有点玄学。\n\n3  说明\n识别是不是色色的图片的有依据的，根据给出的信息来看，是皮肤暴露的百分比来判断的，暴露的比例大于 15% 就判断为色色的图片。这里只是很粗浅的说明，还有一些我没有看懂。\nnonude 的 GitHub 链接：https://github.com/gearsystems/nonude/\nnonude 的最近一次更新是两年前了，感觉有点可惜，希望作者能继续维护。\n文章首发于本人公众号，欢迎关注~\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "1"}