{"title": "python大佬养成计划----flask的Session设置 - python太阳花 ", "index": "python", "content": "什么是Session?\ncookie: 客户端浏览器的缓存；\nsession: 服务端服务器的缓存;\n\nSession 和 Cookie类似，都是通过字典管理 key-value对。Session 对象存储特定用户会话所需的属性及配置信息。这样，当用户在应用程序的 Web 页之间跳转时，存储在 Session 对象中的变量将不会丢失，而是在整个用户会话中一直存在下去。当用户请求来自应用程序的Web 页时，如果该用户还没有会话，则 Web 服务器将自动创建一个 Session 对象。当会话过期或被放弃后，服务器将终止该会话。Session 对象最常见的一个用法就是存储用户的首选项。\n读写Session可以通过操作字典的方式。\nimport random\n\nfrom flask import Flask, session\n\napp = Flask(__name__)\n# 因为flask的session是通过加密之后放到了cookie中。所以有加密就有密钥用于解密，所以，\n# 只要用到了flask的session模块就一定要配置“SECRET_KEY”这个全局宏。一般设置为24位的字符\napp.config['SECRET_KEY'] =  random._urandom(24)\n\n# 设置session值；\n@app.route('/')\ndef index():\n    # 如何设置session的key-value值\n    session['name']='sheen'\n    return 'hello,sheen'\n\n@app.route('/get/')\ndef get():\n    # 获取Session的key-vlaue值\n    print(len(session))\n    return session.get('name')\n\n@app.route('/delete/')\ndef delete():\n    # 删除Session的key-vlaue值\n    session.pop('name')\n    print(session.get('name'))\n    return 'session was deleted'\n\napp.run()\n\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "0"}