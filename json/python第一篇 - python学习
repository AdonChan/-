{"title": "python第一篇 - python学习 ", "index": "python", "content": "python介绍\npython的用途\n我们为什么学习python，python学会了可以做什么，从一个例子告诉我们学习一门编程语言的好处。如：公鸡5文钱一只，母鸡3文钱一只，小鸡3只一文钱，用100文钱买100只鸡,其中公鸡，母鸡，小鸡都必须要有，问公鸡，母鸡，小鸡要买多少只刚好凑足100文钱？可以想象如果要算这道题的话，很麻烦，如果用python解决这个问题呢？代码如下：\n#!/usr/bin/env python\n#! -*- coding:utf-8 -*-\n\"\"\"\n思考：里边有两个条件，首先要买一百只鸡，还要整整一百文钱\n根据题目可以得出：公鸡5文，5*公鸡 < 100:\n               母鸡3文，3*母鸡 < 100:\n               小鸡3只1文，1*小鸡 < 100x3\n               公鸡+母鸡+小鸡=100\n\"\"\"\nfor x in range(1,21):\n    for y in range(1,34):\n        for z in range(1,301):\n            sum_money= x * 5 + y * 3 + z /3\n            if sum_money == 100 and x +y + z ==100:\n                print('公鸡%s只，母鸡%s只，小鸡%s只'%(x,y,z))\n公鸡4只，母鸡18只，小鸡78只公鸡8只，母鸡11只，小鸡81只公鸡12只，母鸡4只，小鸡84只根据上边的一个例子，这是我们用python计算出的答案，可以看到python的用处多多。\npython解释器的种类\n\ncpythonPython的官方版本，使用C语言实现，使用最为广泛，CPython实现会将源文件（py文件）转换成字节码文件（pyc文件），然后运行在Python虚拟机上。\nJyhtonPython的Java实现，Jython会将Python代码动态编译成Java字节码，然后在JVM上运行。\nIronPythonPython的C#实现，IronPython将Python代码编译成C#字节码，然后在CLR上运行。（与Jython类似）\nPyPy（特殊）Python实现的Python，将Python的字节码字节码再编译成机器码。\n\npython环境：\nwindows\n1.下载安装包\nhttps://www.python.org/downloads/\n2.安装：\n默认安装到c盘，可以安装到D:\\python\n3.配置环境变量：\npython:【右键计算机】--》【属性】--》【高级系统设置】--》【高级】--》【环境变量】--》【在第二个内容框中找到变量名为Path 的一行，双击】 --> 【Python安装目录D:\\python追加到变量值中，用;分割】\npip3:【右键计算机】--》【属性】--》【高级系统设置】--》【高级】--》【环境变量】--》【在第二个内容框中找到变量名为Path 的一行，双击】 --> 【Python安装目录D:\\python\\Scripts追加到变量值中，用;分割】\n如：pip3 install paramiko\n\n编写python程序\n第一个python程序\nprint (\"hello world\")\npython内部执行过程如下：\n\n字符编码\n1.ASCII（American Standard Code for Information Interchange，美国标准信息交换代码）是基于拉丁字母的一套电脑编码系统，主要用于显示现代英语和其他西欧语言，其最多只能用 8 位来表示（一个字节），即：2**8 = 256，所以，ASCII码最多只能表示 256 个符号。显然ASCII码无法将世界上的各种文字和符号全部表示，所以，就需要新出一种可以代表所有字符和符号的编码，即：Unicode2.Unicode（统一码、万国码、单一码）是一种在计算机上使用的字符编码。Unicode 是为了解决传统的字符编码方案的局限而产生的，它为每种语言中的每个字符设定了统一并且唯一的二进制编码，规定虽有的字符和符号最少由 16 位来表示（2个字节），即：2 **16 = 65536，注：此处说的的是最少2个字节，可能更多3.UTF-8，是对Unicode编码的压缩和优化，他不再使用最少使用2个字节，而是将所有的字符和符号进行分类：ascii码中的内容用1个字节保存、欧洲的字符用2个字节保存，东亚的字符用3个字节保存。4.gbk只针对亚洲国家做的文字做的对应关系，中文两个字节。注：python2：解释器编码默认编码：ascii；python3：解释器编码默认编码：utf-8\nIDE的使用\n1.使用方法:   1.1新建个newproject　 1.2新建new 文件夹　 1.3在创建个new文件2.设置字符编码：file--->settings----搜索coding---->改成utf-83.设置文件模板：file--->setting-----搜索templates---->python Script---->#!/usr/bin/python #-- coding:utf-8 --4.设置改变大小：file--->setting----搜索mouse\n输入输出\n\n输入：user = input(\"请输入用户名：\")\n\n输出：print(user)\n\n\n密码加密：\nimport getpass\npwd = getpass.getpass(\"请输入密码：\")\n变量\n格式\n格式：变量名 = 值\n#!/usr/bin/env python\n# -*- coding: utf-8 -*-\nname = \"\"\n规范\n1.变量名只能是 字母、数字或下划线的任意组合2.变量名的第一个字符不能是数字3.以下关键字不能声明为变量名['and', 'as', 'assert', 'break', 'class', 'continue', 'def', 'del', 'elif', 'else', 'except', 'exec', 'finally', 'for', 'from', 'global', 'if', 'import', 'in', 'is', 'lambda', 'not', 'or', 'pass', 'print', 'raise', 'return', 'try', 'while', 'with', 'yield']4.见名知意\n条件语句\n1.格式1：示例如下\n#!/usr/bin/env python\n#! -*- coding:utf-8 -*-\nif 1 == 1:\n    print(True)\n2.格式2：示例如下\n#!/usr/bin/env python\n#! -*- coding:utf-8 -*-\nif 1 == 1:\n    print(True)\nelse:\n    print(False)\n3.格式3：示例如下\n#!/usr/bin/env python\n#! -*- coding:utf-8 -*-\nuser = input(\"请输入用户名：\")\nif user == \"tian\":\n    print(\"1\")\nelif user == \"jian\":\n    print(\"2\")\nelif user == \"yu\":\n    print(\"3\")\nelse:\n    print(\"no\")\n循环语句\n1.while 条件:\n条件成立执行：\n格式1：\nwhile True：\n    print(\"123\")\n格式2：\nwhile 1==1 and 2==2：\n        print(\"123\")\n格式3：\ncount = 1\nwhile count < 3:\n    print(\"123\")\n2.break用于退出所有循环。\nwhile True:\n    print(\"123\")\n    break\n    print(\"456\")\n3.continue用于跳出当前循环，继续下一次循环。\nwhile True:\n    print(\"123\")\n    continue\n    print(\"456\")\n常用字符串类型\n1.整数：(int)\nage = 19\nprint(age,type(age))\n2.字符串(str)\nname = \"tian\"\nprint(name,type(name))\n3.列表(list)\nuser_list = [\"tian\",\"jian\",\"yu\"]\nprint(user_list,type(user_list))\n4.字典(dict)\nuser_dict = {\n    \"name\":\"tianjianyu\",\n    \"age\":24\n}\nprint(user_dict,type(user_dict))\n5.数据类型嵌套5.1列表嵌套列表\nuser_list = [\"tian\",\"jian\",\"yu\",[11,22,33]]\nprint(user_list)\nuser_list[0]    #取tian\nuser_list[3][1] #取22\n5.2列表嵌套字典\nuser_list = [\"tian\",\"jian\",\"yu\",{\"name\":\"qudi\"}]\nprint(user_list)\nuser_list[3][\"name\"] #取值qudi\n基本运算符\n运算符\n计算机可以进行的运算有很多种，可不只加减乘除这么简单，运算按种类可分为算数运算、比较运算、逻辑运算、赋值运算、成员运算、身份运算、位运算，今天我们暂只学习算数运算、比较运算、逻辑运算、赋值运算\n算数运算\n\n比较运算\n以下假设变量：a=10,b=20\n\n赋值运算\n以下假设变量：a=10,b=20\n\n逻辑运算\n1.在没有()的情况下not 优先级高于 and，and优先级高于or，即优先级关系为( )>not>and>or，同一优先级从左往右计算。2.x or y , x为真，值就是x，x为假，值是y; x and y, x为真，值是y,x为假，值是x。\n\n                ", "mainLikeNum": ["2 "], "mainBookmarkNum": "0"}