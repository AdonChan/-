{"title": "Python基础知识之集合 - python研究室 ", "index": "python", "content": "集合的描述\n集合是无序的、不重复的数据集合，它本身是可变的，但里面的元素是不可变类型（这里要注意，即使是含有列表的元组也不可以，必须是完全不可变类型)\n创建集合\n创建集合可以使用大括号{}来创建，元素间用逗号分隔，但是不能用它来创建空集合，因为{}创建的是空字典。\n如 set1 = {1,2,3}\n也可以使用set()函数来创建集合，其中的参数为可迭代对象即可（比如字符串、列表、元组、迭代器等），前提是元素中必须是不可变类型。\ni = 'abcdefg'\na =set(i)\nprint(type(a))\nprint(a)\n----------\n<class 'set'>\n{'b', 'a', 'f', 'd', 'g', 'e', 'c'}\n增 add update\nadd(elem)可以向集合中添加新元素，如果该元素已存在则不做任何改变\ns1 = {1,2,3}\ns1.add('qwe')\nprint(s1)\n----------\n{1, 2, 3, 'qwe'}\nupdate(*others)可将其他可迭代对象（比如字符串、列表、元组）添加到集合中，自动删除重复元素\ns1 = {1,2,3}\nit = [3,4,5]\ns1.update(it)\nprint(s1)\n----------\n{1, 2, 3, 4, 5}\n删 remove(elem) discard(elem) pop() clear()\nremove(elem)将元素从集合中删除，如果该元素不存在则会报错。\ns1 = {1,2,3}\ns1.remove(2)\nprint(s1)\n----------\n{1, 3}\ndiscard(elem)和remove一样可以将元素从集合中删除，区别是如果元素不存在则不会报错。\ns1 = {1,2,3}\ns1.discard(6)\nprint(s1)\n----------\n{1, 2, 3}\npop()从集合中随机删除一个元素，并且返回该元素，如果集合为空则会报错\ns1 = {1,2,3}\na = s1.pop()\nprint(s1)\nprint(a)\n----------\n{2, 3}\n1\nclear()用于清空集合。\n几种运算方法\n对于集合来讲有几种运算方法：交集、并集、差集、反交集、子集、超集下面用代码来详细说明每种方法的用法\ns1 = {1,2,3,4,5}\ns2 = {3,4,5,6,7}\nprint('交集：',s1 & s2) #可用&或者intersection，输出一个新的集合，包含共同拥有的元素\nprint('交集：',s1.intersection(s2))\nprint('并集：',s1 | s2) #可用|或者union，输出一个新的集合，包含两个集合中所有的元素（去重）\nprint('并集：',s1.union(s2))\nprint('差集：',s1 - s2) #可用 - 或者difference,输出一个新的集合，包含前一个集合中除去共有的元素\nprint('差集：',s1.difference(s2))\nprint('反交集：',s1 ^ s2) #可用^或者 symmetric_difference,输出一个新的集合，包含两个集合中除去共有的元素后剩余的所有元素\nprint('反交集：',s1.symmetric_difference(s2))\n\n    交集： {3, 4, 5}\n    交集： {3, 4, 5}\n    并集： {1, 2, 3, 4, 5, 6, 7}\n    并集： {1, 2, 3, 4, 5, 6, 7}\n    差集： {1, 2}\n    差集： {1, 2}\n    反交集： {1, 2, 6, 7}\n    反交集： {1, 2, 6, 7}\n    \n子集与超集，简单来讲就是一个集合中的元素包含另一个集合中所有的元素，则“大的”集合叫超集，“小的”叫子集\ns1 = {1,2,3}\ns2 = {1,2,3,4,5}\nprint(s1.issubset(s2)) #输出为True，s1是s2的子集\nprint(s2.issuperset(s1))#输出为True，s2是s1的超集\n----------\n    True\n    True\n另外，使用frozenset('集合名'),可以把集合变成不可变集合\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "0"}