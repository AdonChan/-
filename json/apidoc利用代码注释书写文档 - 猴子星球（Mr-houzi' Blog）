{"title": "apidoc利用代码注释书写文档 - 猴子星球（Mr-houzi' Blog） ", "index": "c++,node.js,python,java,php", "content": "个人博客同步文章 https://mr-houzi.com/2018/07/...\n\napidoc是一款利用源代码中注释来创建RESTful Web API文档的工具。apidoc可用于C＃，Go，Dart，Java，JavaScript，PHP，TypeScript和所有其他支持Javadoc的语言。\n安装\nnpm install apidoc -g\n运行\napidoc -i myapp/ -o apidoc/ -t mytemplate/\nmyapp/ 根据myapp文件夹下文件的注释进行创建文档\napidoc/ 文档的输出位置\nmytemplate/ 使用的模板\n命令行界面\n查看帮助，用于显示命令行参数：\napidoc -h\n配置（apidoc.json）\n在apidoc.json配置项目的基本信息\n{\n  \"name\": \"example\",\n  \"version\": \"0.1.0\",\n  \"description\": \"apiDoc basic example\",\n  \"title\": \"Custom apiDoc browser title\",\n  \"url\" : \"https://api.github.com/v1\"\n}\napidoc也支持通过package.json进行设置，只需在\"apidoc\":{}下添加参数即可。\n{\n  \"name\": \"example\",\n  \"version\": \"0.1.0\",\n  \"description\": \"apiDoc basic example\",\n  \"apidoc\": {\n    \"title\": \"Custom apiDoc browser title\",\n    \"url\" : \"https://api.github.com/v1\"\n  }\n}\n如果你想设置header和footer，把下面信息加入到apidoc.json中（别忘记创建markdown文件）。\n{\n  \"header\": {\n    \"title\": \"My own header title\",\n    \"filename\": \"header.md\"\n  },\n  \"footer\": {\n    \"title\": \"My own footer title\",\n    \"filename\": \"footer.md\"\n  }\n}\n使用\n接下来给大家介绍一下常用的参数，完整介绍大家可以自己看一下官方文档，正常情况来说下面这些就够用。\n@api\n@api {method} path [title]\n声明一下请求方法、请求路径等。\n\n\n名称\n描述\n\n\n\nmethod\n请求方法：DELETE，GET，POST，PUT，...\n\n\npath\n请求路径\n\n\ntitle\n一个简短的标题。（用于导航和文章标题）\n\n\n\neg:\n/**\n * @api {get} /user/:id\n */\n@apiDeprecated\n@apiDeprecated [text]\n将API方法标记为已弃用\n\n\n名称\n描述\n\n\ntext\n文字描述\n\n\napiDescription\n@apiDescription text\nAPI方法的详细描述。\n\n\n名称\n描述\n\n\ntext\n文字描述\n\n\n@apiName\n@apiName name\n定义方法文档块的名称。名称将用于生成的输出中的子导航。结构定义不需要@apiName。\n\n\n名称\n描述\n\n\nname\n方法的唯一名称。 <br/> 格式：方法 + 路径（例如Get + User），建议以这种方式命名\n\n\neg:\n/**\n * @api {get} /user/:id\n * @apiName GetUser\n */\n@apiGroup\n@apiGroup name\n定义方法文档块属于哪个组。组将用于生成的输出中的主导航。例如：login和register接口都可以划分到User组。\n\n\n名称\n描述\n\n\nname\n组的名称。也用作导航标题。\n\n\neg:\n/**\n * @api {get} /user/:id\n * @apiGroup User\n */\n@apiHeader\n@apiHeader [(group)] [{type}] [field=defaultValue] [description]\n描述API-Header传递的参数，例如用于授权。\n\n\n名称\n描述\n\n\n\ngroup\n参数组别\n\n\ntype\n参数类型\n\n\nfield\n参数名\n\n\ndescription\n描述\n\n\n\neg:\n/**\n * @api {get} /user/:id\n * @apiHeader {String} access-key Users unique access-key.\n */\n@apiParam\n@apiParam [(group)] [{type}] [field=defaultValue] [description]\n用来描述API传参值\n\n\n名称\n描述\n\n\n\ngroup\n参数组别\n\n\ntype\n参数类型\n\n\nfield\n参数名\n\n\ndescription\n描述\n\n\n\neg:\n /** @apiParam (params) {int} time 时间戳(用于判断请求是否超时)\n   * @apiParam (params) {String} token 确认来访者身份\n   * @apiParam (params) {String} user_name 手机号或者邮箱\n   * @apiParam (params) {String} user_pwd MD5加密的用户密码\n   */\n@apiSuccess\n@apiSuccess [(group)] [{type}] field [description]\n成功返回参数。用法和@apiParam类似。个人认为@apiSuccess有点多余，使用@apiSuccessExample就足够了。\n@apiSuccessExample\n@apiSuccessExample [{type}] [title] example\n成功返回消息的示例，作为预格式化代码输出。\neg:\n/**\n * @api {get} /user/:id\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"firstname\": \"John\",\n *       \"lastname\": \"Doe\"\n *     }\n */\n@apiError\n错误返回参数。用法和@apiSuccess类似\n@apiErrorExample\n错误返回消息的示例，作为预格式化代码输出。用法和@apiSuccessExample类似。\n@apiVersion\n@apiVersion version\n设置文档块的版本。版本也可用于@apiDefine。\neg:\n/**\n * @api {get} /user/:id\n * @apiVersion 1.6.2\n */\n@apiIgnore\n@apiIgnore [hint]\n将它放在一个块的顶部。@apiIgnore将无法解析块。如果您在源代码中留下过时或未完成的方法并且您不希望将其发布到文档中，那么它很有用。\n\n\n名称\n描述\n\n\nhint\n用于提示为什么忽略这个块。\n\n\neg:\n/**\n * @apiIgnore Not finished Method\n * @api {get} /user/:id\n */\n举个栗子\n来一个完整的例子\n/**\n * @api {post} /user/login 用户登录\n * @apiName login\n * @apiGroup User\n * @apiParam (params) {int} time 时间戳(用于判断请求是否超时)\n * @apiParam (params) {String} token 确认来访者身份\n * @apiParam (params) {String} user_name 手机号或者邮箱\n * @apiParam (params) {String} user_pwd MD5加密的用户密码\n * @apiSuccessExample Success-Response:\n *  {\n *      \"code\": 200,\n *      \"msg\": \"登录成功！\",\n *      \"data\": {\n *           'uid': 1, //用户ID\n *           'user_phone': '13011111111', //用户手机号\n *           'user_nickname': '小明', //用户昵称\n *           'user_email': '123456789@163.com', //用户邮箱\n *           'user_rtime': 1501414343 //用户注册时间\n *  }\n *\n */\n效果：\n\n\n                ", "mainLikeNum": ["1 "], "mainBookmarkNum": "1"}