{"title": "python学习笔记 - zengdamo ", "index": "python", "content": "18. random()的用法\n#随机整数：\n>>> import random\n>>> random.randint(0,99)\n21\n\n#随机选取0到100间的偶数：\n>>> import random\n>>> random.randrange(0, 101, 2)\n42\n\n#随机浮点数：\n>>> import random\n>>> random.random() \n0.85415370477785668\n>>> random.uniform(1, 10)\n5.4221167969800881\n\n#随机字符：\n>>> import random\n>>> random.choice('abcdefg&#%^*f')\n'd'\n\n#洗牌：\n>>> import random\n>>> items = [1, 2, 3, 4, 5, 6]\n>>> random.shuffle(items)\n>>> items\n[3, 2, 5, 6, 4, 1]\n\n17.lambda函数\ndef add(a,b):\n    x = a+b\n    print(x)\nadd(1,3)\n\ng = lambda a,b :a+b\nprint(g(1,2))\n\n\n16.两个变量值互换\na,b = b,a\n15. insert()函数的使用\nlist.insert('索引位置','要插入的内容’) \n#要注意索引位置是指在对应的位置之后，而不是插入以后充当的位置。\n14. 在循环外使用else\n今天在练习一个题目：求100之内的素数。，我写的代码如下：\nfor i in range(1,100):\n    for k in range(2,i):\n        if i % k == 0:\n            pass\n        else:\n            print(i)\n输出的结果和我的期待大相径庭，分析之后发现在if那里，每出现一次能整除i的情况，函数都会把i输出一遍，从而导致了错误。后来查看了答案，发现是这么写的：\nfor i in range(1,100):\n    for k in range(2,i):\n        if i % k == 0:\n            break\n    else:\n        print(i)\n区别在于答案使用了break，奇怪的是else语句出现在了if之外，查询资料得知：这种写法表示如果if循环中出现了符合条件的情况，则直接跳出终止循环，如果走完但还没有符合条件的出现，则执行else的语句。参考 Python——在循环外使用else\n13. 如何反向一个列表中的元素？有三种思路：\na = [1,2,3]\na.reverse() #第一种方法，列表直接反向\na.sort(reverse = True) #第二种方法，使用sort方法\na[::-1] #第三种方法，也是最高级的一种写法，使用切片。表示“从倒数第一个开始往前数” 如果是a[:]的话则表示从正数第一个到最后一个。\n12.如何将一个字符串全部统一为大写或者小写？\nweek = input('请输入星期几：').upper()  #这样可以将输入的星期几全部统一为大写，方便后面做比较\n11.如何将一个元素都是整数的列表做全部加和处理？\n直接用sum(列表名)即可：\n[100.0, 50.0, 25.0, 12.5, 6.25, 3.125, 1.5625, 0.78125, 0.390625]\nprint(sum(s))\n判断一个字符串是否是字母、数字、空格\n用isalpha()/isdigit()/isspace这些函数来实现。\ntest = input('输入一个字符串:')\nletter =0\ndigit =0\nspace = 0\ni = 0\nfor i in range(0,len(test)):\n    if test[i].isalpha():\n        letter += 1\n    elif test[i].isdigit():\n        digit += 1\n    elif test[i].isspace():\n        space += 1\n    i += 1\nprint(letter,digit,space)\n9.int形式的数字，可以通过用str()的方式处理成字符串，从而用索引获取到指定位置的数字。\nx = 234\nprint(x[0]) #会报错--TypeError: 'int' object is not subscriptable\ns = str(x)\nprint(s[0])\n这个点出现在「打印出所有的\"水仙花数\"，所谓\"水仙花数\"是指一个三位数，其各位数字立方和等于该数本身。例如：153是一个\"水仙花数\"，因为153=1的三次方＋5的三次方＋3的三次方。」这道题中。\n8.列表的截取\n对于列表a，a[:]表示的意思是从a的第一个到最后一个元素的合集，类似的，a[1:]则表示从第二个开始到最后的元素形成的列表。\n# 如果要把列表a中的元素全部复制到b,代码如下\na = [1,2,3,4]\nb = []\nb = a[:]\nprint(b)\n7.python中 sort()函数的使用\nsort()函数是用来比较一个元组中元素大小的，需要注意的是，在实践中发现不能直接print(a.sort())，而只能先进行a.sort()，然后再print(a)另外sort()有一个参数reverse=True,可以将数组实现从大到小的排了。\na = [int(input('请输入整数1:')),int(input('请输入整数2:')),int(input('请输入整数3:'))]\n\nprint(a)\na.sort()\nprint(a)\n6.函数的闭包类似于if的嵌套，可以理解为函数的嵌套：当内部的函数引用了外部函数的参数的时候，我们认为就形成了闭包。同时，闭包要求外部函数的返回值是内部函数的函数名。好处是需要调用的参数变少，适用于有参数不变、有参数变化的情况。（比如ax+b = y 假设a/b不变，而只有x需要变化）\n\ndef func1(a):\n    def func2(b):\n        return  a+b\n    return func2\n\nx = func1(5)\nprint(x(4))\n5.函数作用域\n如果函数外和函数内都各自有一个重名的变量，那么函数内的变量复制只能影响到函数内部，而在函数外部还是由函数外部的变量主导。但如果确实想让函数内部的变量赋值影响全局的话，那么可以在内部的变量赋值前增加global var的写法。比如：\nvar1 = 123\n\ndef func():\n    global var1\n    var1 = 456\n    print(var1)\n\nfunc()\n4. 函数的可变长参数\n定义一个函数，默认参数都是必须的，但如果还希望增加非必须（没有写也不会报错）的参数的话，可以在参数前面加「*」，比如：\ndef func(lenght,* height):\n    \n    return \n其中lenght是必须的，而height则是非必须的。\n3.两个函数之间的参数传递\n如下。假设要把func2的结果传递给func1作为参数，那么关键是在func2的最后面加上func1()函数，这样就可以把func2的结果直接传递给func1继续运行了。\n当然，在这种情况下，func1产生的结果也可以再回来被func2直接调用。\ndef func1():\n\n    return\n\ndef func2():\n\n    return name\n    func1(name)\n\n————————————————————————————————\n# 代码实例\nimport re\ndef find_item(hero):\n    with open('sanguo.text') as f:\n        data = f.read().strip().replace('\\n','')\n        name_num = len(re.findall(hero,data))\n\n    return name_num\n\n\nwith open('name.text') as f:\n    names = f.read().split('|')\n    for name in names:\n        name_num = find_item(name)\n        print(' %s 出现的次数是 %s 次' %(name,name_num))    \n\n1.用变量替换字符串的内容：\nChinese_zodiac = '鼠牛虎兔龙蛇马羊猴鸡狗猪'\n\nfor year in range(2000,2018):\n    print('%s 年是 %s 年' %(year,Chinese_zodiac[year % 12]))\n学习要点：a. 用变量替换字符串内容需要用%s来实现，最后跟上 %()来作为变量的来源；b. 字符串也可以像数组那样，用索引值来指定某一部分；c. year % 12表示的是年份除以12得到的余数；\n2.Python--read()和readline()以及readlines()用法区别\n# 试验材料\n諸葛亮|關羽|劉備|曹操|孫權|關羽|張飛|呂布|周瑜|趙雲|龐統|司馬懿|黃忠|馬超\n.read() 每次读取整个文件，它通常用于将文件内容放到一个字符串变量中\n.readlines() 一次读取整个文件（类似于 .read() \n.readlines() 自动将文件内容分析成一个行的列表，该列表可以由 Python 的 for ... in ... 结构进行处理.\n.readline() 每次只读取一行，通常比 .readlines() 慢得多。仅当没有足够内存可以一次读取整个文件时，才应该使用 .readline()。\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "0"}