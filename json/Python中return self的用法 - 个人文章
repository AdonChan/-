{"title": "Python中return self的用法 - 个人文章 ", "index": "python", "content": "  在Python中，有些开源项目中的方法返回结果为self. 对于不熟悉这种用法的读者来说，这无疑使人困扰，本文的目的就是给出这种语法的一个解释，并且给出几个例子。\n  在Python中，return self的作用为：（英语原文，笔者水平有限，暂不翻译） \nReturning self from a method simply means that your method returns a reference to the instance object on which it was called. This can sometimes be seen in use with object oriented APIs that are designed as a fluent interface that encourages method cascading. \n通俗的说法是， allow chaining(这个是笔者自己的翻译： 链式调用).\n  例子：\nclass Foo(object):\n\n  def __init__(self):\n    self.myattr = 0\n\n  def bar(self):\n    self.myattr += 1\n    return self\n\nf = Foo()\nf.bar().bar().bar()\nprint(f.myattr)\n输出结果为4.\n把bar()方法改为返回return None， 则上述代码会出错。\nclass Foo(object):\n\n  def __init__(self):\n    self.myattr = 0\n\n  def bar(self):\n    self.myattr += 1\n    return None\n\nf = Foo()\nf.bar().bar().bar()\nprint(f.myattr)\n输出结果如下：\nAttributeError: 'NoneType' object has no attribute 'bar'\n  那么return self返回的结果是什么呢？\nclass Foo(object):\n\n  def __init__(self):\n    self.myattr = 0\n\n  def bar(self):\n    self.myattr += 1\n    #return None\n    return self\n\nf = Foo()\nprint(type(f.bar()))\n输出结果为：\n<class '__main__.Foo'>\n可以发现，return self返回的是类的实例。\n  一个真实的例子：\nsklearn模块中很多方法的返回结果为self, 比如大多数模型的fit()方法，例子如下：\nfrom sklearn.linear_model import LogisticRegression\n\nX = [[0,0], [0,1], [1,0], [1,1]]\ny = [0, 1, 1, 0]\n\nclf = LogisticRegression()\n# fit函数返回的结果就是self, 允许链式调用\nt = clf.fit(X,y).predict([[0,2]])\nprint(t)\n输出：\n[0]\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "0"}