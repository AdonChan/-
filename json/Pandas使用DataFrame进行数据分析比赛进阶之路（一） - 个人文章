{"title": "Pandas使用DataFrame进行数据分析比赛进阶之路（一） - 个人文章 ", "index": "python,pandas,node.js", "content": "这篇文章中使用的数据集是一个足球球员各项技能及其身价的csv表，包含了60多个字段。数据集下载链接：数据集\n1、DataFrame.info()\n这个函数可以输出读入表格的一些具体信息。这对于加快数据预处理非常有帮助。\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\ndata = pd.read_csv('dataset/soccer/train.csv')\nprint(data.info())\n<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 10441 entries, 0 to 10440\nData columns (total 65 columns):\nid                          10441 non-null int64\nclub                        10441 non-null int64\nleague                      10441 non-null int64\nbirth_date                  10441 non-null object\nheight_cm                   10441 non-null int64\nweight_kg                   10441 non-null int64\nnationality                 10441 non-null int64\npotential                   10441 non-null int64\n                   ...\ndtypes: float64(12), int64(50), object(3)\nmemory usage: 5.2+ MB\nNone\n2、DataFrame.query()\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\ndata = pd.read_csv('dataset/soccer/train.csv')\nprint(data.query('lw>cf'))      # 这两个方法是等价的\nprint(data[data.lw > data.cf])  # 这两个方法是等价的\n3、DataFrame.value_counts()\n这个函数可以统计某一列中不同值出现的频率。\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\ndata = pd.read_csv('dataset/soccer/train.csv')\nprint(data.work_rate_att.value_counts())\n\nMedium    7155\nHigh      2762\nLow        524\nName: work_rate_att, dtype: int64\n4、DataFrame.sort_values()\n按照某一列的数值进行排序后输出。\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\ndata = pd.read_csv('dataset/soccer/train.csv')\nprint(data.sort_values(['sho']).head(5))\n5、DataFrame.groupby()\n根据国籍（nationality）这一列的属性进行分组，然后分别计算相同国籍的潜力（potential）的平均值。\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\ndata = pd.read_csv('dataset/soccer/train.csv')\npotential_mean = data['potential'].groupby(data['nationality']).mean().head(5)\nprint(potential_mean)\nnationality\n1    74.945338\n2    72.914286\n3    67.892857\n4    69.000000\n5    70.024242\nName: potential, dtype: float64\n根据国籍（nationality），俱乐部（club）这两列的属性进行分组，然后分别计算球员潜力（potential）的平均值。\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\ndata = pd.read_csv('dataset/soccer/train.csv')\npotential_mean = data['potential'].head(20).groupby([data['nationality'], data['club']]).mean()\nprint(potential_mean)\nnationality  club\n1            148     76\n             461     72\n5            83      64\n29           593     68\n43           213     67\n51           258     62\n52           112     68\n54           604     81\n63           415     70\n64           359     74\n78           293     73\n90           221     70\n96           80      72\n101          458     67\n111          365     64\n             379     83\n             584     65\n138          9       72\n155          543     72\n163          188     71\nName: potential, dtype: int64\n值得注意的是，在分组函数后面使用一个size（）函数可以返回带有分组大小的结果。\npotential_mean = data['potential'].head(200).groupby([data['nationality'], data['club']]).size()\nnationality  club\n1            148     1\n43           213     1\n51           258     1\n52           112     1\n54           604     1\n78           293     1\n96           80      1\n101          458     1\n155          543     1\n163          188     1\nName: potential, dtype: int64\n\n6、DataFrame.agg()\n这个函数一般在groupby函数之后使用。\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\ndata = pd.read_csv('dataset/soccer/train.csv')\npotential_mean = data['potential'].head(10).groupby(data['nationality']).agg(['max', 'min'])\nprint(potential_mean)\n            max  min\nnationality          \n1             76   76\n43            67   67\n51            62   62\n52            68   68\n54            81   81\n78            73   73\n96            72   72\n101           67   67\n155           72   72\n163           71   71\n7、DataFrame.apply()\n将某一个函数应用到某一列或者某一行上，可以极大加快处理速度。\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\n\n#  返回球员出生日期中的年份\ndef birth_date_deal(birth_date):\n    year = birth_date.split('/')[2]\n    return year\n\ndata = pd.read_csv('dataset/soccer/train.csv')\nresult = data['birth_date'].apply(birth_date_deal).head() \nprint(result)\n0    96\n1    84\n2    99\n3    88\n4    80\nName: birth_date, dtype: object\n当然如果使用lambda函数的话，代码会更加简洁：\ndata = pd.read_csv('dataset/soccer/train.csv')\nresult = data['birth_date'].apply(lambda x: x.split('/')[2]).head()\nprint(result)\n\n                ", "mainLikeNum": ["1 "], "mainBookmarkNum": "1"}