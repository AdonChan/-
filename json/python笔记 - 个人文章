{"title": "python笔记 - 个人文章 ", "index": "python", "content": "类的声明\n`class ClassName:   '类的帮助信息'   #类文档字符串，可以使用ClassName.__doc__引用这段描述   class_suite  #类体`\n可以使用下面的方法来访问对象的属性\ngetattr(obj, name[, default]) : 访问对象的属性。\nhasattr(obj,name) : 检查是否存在一个属性。\nsetattr(obj,name,value) : 设置一个属性。如果属性不存在，会创建一个新属性。\ndelattr(obj, name) : 删除属性。\n\nPython的内置类属性\n__dict__ : 类的属性（包含一个字典，由类的数据属性组成）\n__doc__ :  类的文档字符串\n__name__:  类名\n__module__: 类定义所在的模块（类的全名是'__main__.className'，如果类位于一个导入模块mymod中，那么className.__module__ 等于 mymod）\n__bases__ : 类的所有父类构成元素（包含了一个由所有父类组成的元组）\n\n类的继承\n派生类的声明\nclass SubClassName (ParentClass1[, ParentClass2, ...]):\n   'Optional class documentation string'\n   class_suite\nPython继承的一些特点\n1：在继承中基类的构造（__init__()方法）不会被自动调用，它需要在其派生类的构造中亲自专门调用。\n2：在调用基类的方法时，需要加上基类的类名前缀，且需要带上self参数变量。区别于在类中调用普通函数时并不需要带上self参数\n3：Python总是首先查找对应类型的方法，如果它不能在派生类中找到对应的方法，它才开始到基类中逐个查找。（先在本类中查找调用的方法，找不到才去基类中找）。\n\n检测类的继承关系\nissubclass() - 布尔函数判断一个类是另一个类的子类或者子孙类，语法：issubclass(sub,sup)\nisinstance(obj, Class) 布尔函数如果obj是Class类的实例对象或者是一个Class子类的实例对象则返回true。\n\n方法重写\n\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nclass Parent:        # 定义父类\n   def myMethod(self):\n      print '调用父类方法'\n \nclass Child(Parent): # 定义子类\n   def myMethod(self):\n      print '调用子类方法'\n \nc = Child()          # 子类实例\nc.myMethod()         # 子类调用重写方法\n\n重载基础方法\n__init__(self)__del__(self)__repr__(self)__str__(self)__cmp__(self, x)\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "0"}