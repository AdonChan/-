{"title": "python中yaml配置文件模块的使用 - python技术的魅力 ", "index": "python", "content": "简述\n和GNU一样，YAML是一个递归着说“不”的名字。不同的是，GNU对UNIX说不，YAML说不的对象是XML。YAML不是XML。为什么不是XML呢？因为：\n\nYAML的可读性好。\nYAML和脚本语言的交互性好。\nYAML使用实现语言的数据类型。\nYAML有一个一致的信息模型。\nYAML易于实现。\n\n上面5条也就是XML不足的地方。同时，YAML也有XML的下列优点：YAML可以基于流来处理；YAML表达能力强，扩展性好。\n总之，YAML试图用一种比XML更敏捷的方式，来完成XML所完成的任务。更多的内容及规范参见http://www.yaml.org。YAML语法规则：  http://www.ibm.com/developerworks/cn/xml/x-cn-yamlintro/  http://www.yaml.org/语法结构通过空格缩进来展示。列表里的项用\"-\"来代表，字典里的键值对用\":\"分隔.这几乎就是所有的语法了.比如……一般YAML文件扩展名为.yaml。比如：yaml_example.yaml\n将yaml写成配置脚本test.yaml ,以下介绍如何读写yaml配置。\n开始使用\n1.首先安装yaml模块\npip3 install pyyaml\n2.编写yaml配置文件 yaml_example.yaml\nname: junxi\nage: 18\nspouse:\n    name: Rui\n    age: 18\nchildren:\n    - name: Chen You\n      age: 3\n    - name: Ruo Xi\n      age: 2\n3.编写解析yaml文件的python程序 yaml_example.py\n#!/usr/bin/env python\n# _*_ coding:utf-8 _*_\n__author__ = 'junxi'\n\nimport sys\n\n# sys.path.insert(0, 'D:/program/python-腾讯课程/0-01-python其他模块学习/')\n\nimport yaml\n\nf = open('yaml_example.yaml')\ncontent = yaml.load(f)\n\nprint type(content)\nprint '修改前: ', content   # 可以看出整个Yaml配置文件是一个字典, 里面可以包含字典和列表\ncontent['age'] = 17     # 根据Key修改对应的值\ncontent['children'][1]['age'] = 1\nprint '修改后: ', content\n程序输出的结果为:\n<type 'dict'>\n修改前:  {'age': 18, 'spouse': {'age': 18, 'name': 'Rui'}, 'name': 'junxi', 'children': [{'age': 3, 'name': 'Chen You'}, {'age': 2, 'name': 'Ruo Xi'}]}\n修改后:  {'age': 17, 'spouse': {'age': 18, 'name': 'Rui'}, 'name': 'junxi', 'children': [{'age': 3, 'name': 'Chen You'}, {'age': 1, 'name': 'Ruo Xi'}]}\nThe End......\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "1"}