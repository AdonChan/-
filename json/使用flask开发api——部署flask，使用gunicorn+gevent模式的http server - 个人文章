{"title": "使用flask开发api——部署flask，使用gunicorn+gevent模式的http server - 个人文章 ", "index": "部署,gevent,gunicorn,flask,python", "content": "使用flask开发api——部署flask，使用gunicorn+gevent模式的http server\n用flask开发了服务端的api，记录部署上服务器的过程，以供后续使用。\n安装python3.5\n本身服务器已经安装了python3，并且版本为3.5，这里不重新安装，如果服务器中没有安装python3，则进行安装\n$ sudo apt-get install python3.5\n安装pip3\n我们需要用pip来使用第3方模块，先安装pip\n# 下载安装脚本\n$ curl -O https://bootstrap.pypa.io/get-pip.py\n\n# 安装\nsudo python3 get-pip.py \n安装成功后，查看安装版本，确定与你目前的python3版本一致\n$ pip3 -V\n\n//显示的版本信息\npip 9.0.1 from /usr/local/lib/python3.5/dist-packages (python 3.5)\n安装virtualenv\n每个项目可能需要用到的环境不一样，为了避免影响整个服务器的环境，我们给每个项目一个独立的运行环境，需要用到virtualenv\n$ sudo pip3 install virtualenv \n\n//如果安装成功，会显示\nSuccessfully installed virtualenv-15.1.0\n创建虚拟环境\n$ cd /var/www/your_project_name\n\n# 创建虚拟环境，其中py35env为你自定义的环境名称\n$ virtualenv -p python3 py35env\n\n# 创建成功会有如下说明\nAlready using interpreter /usr/bin/python3\nUsing base prefix '/usr'\nNew python executable in /var/www/your_project_name/py35env/bin/python3\nAlso creating executable in /var/www/your_project_name/py35env/bin/python\nInstalling setuptools, pip, wheel...done.\n\n# 激活虚拟环境\n$ source py35env/bin/activate\n\n# 这时命令行路径前面会出现你的虚拟环境名，例如：\n(py35env) ubuntu@ip-10-0-0-119:/var/www/your_project_name$\n\n# 查看你目前的插件，有些可能之前系统python环境已经安装了，你可以不用重复安装\n$ sudo pip3 list\n\n安装项目中需要的python 模块\n1.安装Flask\n$ pip3 install Flask \n\n# 安装成功会提示如下：\nSuccessfully installed Flask-0.12.2 Werkzeug-0.12.2 click-6.7 itsdangerous-0.24\n# 也可以用sudo pip3 list来查看\n2. 安装Flask-RESTful\n$ pip3 install Flask-RESTful\n\n# 安装成功会提示如下：\nSuccessfully installed Flask-RESTful-0.3.6 aniso8601-1.3.0 python-dateutil-2.6.1 pytz-2017.2\n# 也可以用sudo pip3 list来查看\n3. 安装pyMySQL\n$ pip3 install pyMySQL\n\n# 安装成功会提示如下：\nSuccessfully installed pyMySQL-0.7.11\n# 也可以用sudo pip3 list来查看\n4. 安装gunicorn\n$ pip3 install gunicorn\n\n# 安装成功会提示如下：\nSuccessfully installed gunicorn-19.7.1\n# 也可以用sudo pip3 list来查看\n\n# 创建gunicorn存放日志文件夹\n$ sudo mkdir /var/log/gunicorn\n# 更改权限\n$ sudo chmod -R 777 /var/log/gunicorn\n5.安装gevent\n$ pip3 install gevent\n\n# 安装成功会提示如下：\nSuccessfully installed gevent-1.2.2 greenlet-0.4.12\n# 也可以用sudo pip3 list来查看\n安装项目\n将项目克隆下来\n$ git clone git@xxx.xxx.xxx/your_project_name.git\n\n进入到项目下，测试gunicorn是否正确运行\n$ cd your_project_name\n\n# 更新项目日志文件夹的权限\n$ sudo chmod -R 777 logs\n\n$ gunicorn -b 0.0.0.0:5000 manager:app\n# 如果提示如下：\n[2017-10-20 09:44:48 +0000] [21856] [INFO] Starting gunicorn 19.7.1\n[2017-10-20 09:44:48 +0000] [21856] [INFO] Listening at: http://0.0.0.0:5000 (21856)\n[2017-10-20 09:44:48 +0000] [21856] [INFO] Using worker: sync\n[2017-10-20 09:44:49 +0000] [21859] [INFO] Booting worker with pid: 21859\n\n# 开启后，可以在客户端中测试访问\n# crtl+c关闭\n\n安装supervisor做守护进程\n由于gunicorn在控制面板关闭后，进程也会退出，需要使用supervisor做后台守护。\n退出虚拟环境\n$ deactivate\n如果服务器中没有安装supervisor，先进行安装\n$ sudo apt-get install supervisor\n增加supervisor 配置文件\n$  cd /etc/supervisor/conf.d\n# 创建配置文件\n$ sudo touch your_project_name.conf\n# 编辑\n$ sudo vi your_project_name.conf\n\n# 内容如下\n[program:your_project_name]\ncommand=/var/www/your_project_name/py35env/bin/gunicorn manager:app -c /var/www/your_project_name/your_project_name/gun.py\ndirectory=/var/www/your_project_name/your_project_name\nautostart=true\nautorestart=true\nstdout_logfile=/var/log/gunicorn/gunicorn_supervisor.log\nstderr_logfile=/var/log/gunicorn/gunicorn_supervisor_err.log\n\n更新supervisor\n$ sudo supervisorctl update\n# 会提示相关的进程已经被加入\nyour_project_name: added process group\n\n# 要关闭相关的进程可以用\n$ sudo supervisorctl stop your_project_name\n# 开启可以用\n$ sudo supervisorctl start your_project_name\n\n\n                ", "mainLikeNum": ["1 "], "mainBookmarkNum": "2"}