{"title": "django rest framework个人学习笔记（二）————Quickstart - 个人文章 ", "index": "django-rest-framework,python", "content": "Quickstart\n我们将会创建一个简单的API，来让管理员能够查看和编辑Users和Groups。\n项目开始\n创建一个新的项目叫 tutorial,然后创建一个app叫quickstart.\n# 创建项目目录\nmkdir tutorial\ncd tutorial\n\n# 创建虚拟环境，并进入虚拟环境中\nvirtualenv env\nsource env/bin/activate\n\n# 安装django 和 REST framework\npip install django\npip install djangorestframework\n\n# 创建项目和app\ndjango-admin.py startproject tutorial\ncd tutorial\ndjango-admin.py startapp quickstart\ncd ..\n创建数据库:\npython manage.py migrate\n创建一个超级用户admin，密码是password123。我们将会在接下来的例子中使用这个账户。\npython manage.py createsuperuser\n\nSerializers\n首先，我们将去定义一些serializer。创建一个新的模块叫 tutorual/quickstart/serializers.py。\nfrom django.contrib.auth.models import User, Group\nfrom rest_framework import serializers\n\nclass UserSerializer(serializers.HyperlinkedModelSerializer):\n    class Meta:\n        model = User\n        fields = ('url','username','email','groups')\n     \n\nclass GroupSerializer(serializers.HyperlinkModelSerializer):\n    class Meta:\n        model = Group\n        fields = ('url','name')\n注意 这里我们使用 hyperlinked（HyperlinkedModelSerializer）。你也可以使用primary key和各式各样其他的关系。但是 hyperlinking是一个好的RESTful设计。\nViews\n马上，我们将写一些views.打开 tutorial/quickstart/views.py\nfrom django.contrib.auth.models import User, Group\nfrom rest_framework import viewsets\nfrom tutorial.quickstart.serializers import UserSerializer, GroupSerializer\n\nclass UserViewSet(Viewsets.ModelViewSet):\n    \"\"\"\n    API允许查看和编辑 用户\n    \"\"\"\n    queryset = User.object.all().order_by('-data_joined')\n    serializer_class = UserSerializer\n    \n    \nclass GroupViewSet(Viewsets.ModelViewSet):\n    \"\"\"\n    API允许查看和编辑 组\n    \"\"\"\n    queryset = Group.objects.all()\n    serializer_class = GroupSerializer\n将有共同行为的各式各样的View归为一类并称之为 ViewSets如果我们需要，我们可以轻易的拆分这些View,但是使用 viewsets将会使View逻辑看起来更加整洁和有组织性。\nURLs\n现在，我们来写我们的API URLs.在 tutorual/urls.py\nfrom django.conf.urls import url, include\nfrom rest_framework import routers\nfrom tutorial.quickstart import views\n\nrouter = routers.DefaultRouter()\nrouter.register(r'users', views.UserViewSet)\nrouter.register(r'groups', views.GroupViewSet)\n\nurlpatterns = [\n    url(r'^', include(router.urls)),\n    url(r'^api-auth/', include('rest_framework.urls', namespace='rest_framework'))\n]\n因为我们使用了viewsets来替代views,我们能够自动产生我们API的URL，只要在router中简单的注册一下我们的viewsets。同样，如果我们需要更多的控制我们的API URLs,我们能够在简单的在下面使用常规的 class-based views,并写入url  conf中。最后，我们使用 browsable API来导入默认的登录登出Views.这是可选的。\nSettings\n我们还需要设置一些全局变量。我们想启用分页和API只有Admin用户能够调用。这些设置都在 tutorial/settings.py中：\nINSTALLED_APPS = (\n    ...\n    'rest_framework',\n)\n\nREST_FRAMEWORK = {\n    'DEFAULT_PERMISSION_CLASSES': [\n        'rest_framework.permissions.IsAdminUser',\n    ],\n    'PAGE_SIZE': 10\n}\n\n                ", "mainLikeNum": ["1 "], "mainBookmarkNum": "3"}