{"title": "Java之调用Python代码 - 个人文章 ", "index": "java,python", "content": "  对于一个数据分析方面的工作者来说，最熟悉的语言无疑就是Python了。对于软件开发者而言，Java又是极其重要的工具。那么，一个很自然的问题就是，我们能够在Java中调用Python代码吗？  想要在Java中调用Python代码，有以下两个办法：\n\n直接通过Runtime进行调用\n调用Jython\n\n在Java中如果需要调用第三方程序，可以直接通过Runtime实现，这也是最直接最粗暴的做法，粒度更加粗糙，效率较高，需要安装Python软件。而Jython是Python语言在Java平台的实现，可以理解为一个由 Java 语言编写的 Python 解释器，因此，不需要安装Python软件。它不仅提供了Python的库，同时也提供了所有的Java类，这就使得其有一个巨大的资源库。Jython可以直接调用Python程序中的指定函数或者对象方法，粒度更加精细。但遗憾的是，Jython运行速度并不理想。  接下来，我们将分别介绍以上两种调用方法。  首先是直接通过Runtime调用Python代码。先写个Python代码文件test_argv.py，它位于D盘中，其完整代码如下：\nimport sys\n\na = sys.argv[1]\n\nb = sys.argv[2]\n\nprint(\"%s * %s = %s\"%(a,b,int(a)*int(b)))\n该Python代码接受两个命令行参数，然后输出一个乘法算式。调用的Java代码如下：\npackage javaCode;\n\nimport java.io.BufferedInputStream;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.util.Scanner;\n\npublic class TestPython {\n\n    public static void main(String[] args) throws Exception {\n    \n        Scanner input = new Scanner(System.in);\n        \n        // 在同一行输入两个数字，用空格分开，作为传入Python代码的命令行参数\n        System.out.println(\"Enter two integers(e.g. 12 34): \");\n        String integers = input.nextLine();\n        String[] numbers = integers.split(\" \");\n        \n        // 定义传入Python脚本的命令行参数，将参数放入字符串数组里\n        String cmds = String.format(\"python D://test_argv.py %s %s\", \n                                    numbers[0], numbers[1]);\n\n        // 执行CMD命令\n        System.out.println(\"\\nExecuting python script file now.\");\n        Process pcs = Runtime.getRuntime().exec(cmds);\n        pcs.waitFor();\n\n        // 定义Python脚本的返回值\n        String result = null;\n        // 获取CMD的返回流\n        BufferedInputStream in = new BufferedInputStream(pcs.getInputStream());\n        // 字符流转换字节流\n        BufferedReader br = new BufferedReader(new InputStreamReader(in));\n        // 这里也可以输出文本日志\n\n        String lineStr = null;\n        while ((lineStr = br.readLine()) != null) {\n            result = lineStr;\n        }\n        // 关闭输入流\n        br.close();\n        in.close();\n\n        System.out.println(result);\n\n    }\n}\n从以上代码中，可以发现，我们往Python代码中传入了两个命令行参数（两个整数），通过Java提供的Runtime环境让Python执行程序，最后用Java得到在CMD或shell中的输出流并在Java程序输出，本质上还是Python在处理计算结果。其输出如下图所示：\n\n  然后我们将演示如何使用Jython来实现类似上述程序的功能。  Jython的MVN仓库地址为http://mvnrepository.com/arti...， API官方网址为： http://www.jython.org/javadoc/， jar的下载地址为： http://www.jython.org/downloa... . 下载jython-standalone-2.7.0.jar包，并将其加入到Eclipse的Java Build Path中，如下图：\n\nJava代码如下：\npackage javaCode;\n\nimport org.python.util.PythonInterpreter;\n\npublic class TestPython {\n    public static void main(String args[]) {\n        PythonInterpreter interpreter = new PythonInterpreter();\n        interpreter.exec(\"import sys \");\n        interpreter.exec(\"a = input('Enter a:')\");\n        interpreter.exec(\"b = input('Enter b:')\");\n        interpreter.exec(\"print('%s * %s = %s' %(a, b, a*b))\");\n    }\n}\n运行以上程序，结果如下图：\n\n  至此，我们成功地用以上两种方法在Java中调用了Python代码。  本次分享到此结束，欢迎大家交流~~\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "0"}