{"title": "AI人脸识别+图像识别demo - 个人文章 ", "index": "python", "content": "AI的发展在最近几年如火如荼，工资待遇也是水涨船高，应用的前景也是非常广阔，去年火起来的人脸识别，今年全国遍地开花。看了下百度的AI，还免费了，效果也是越来越好，活体检测这个算法更是做的吊炸天（只需要传一张图片就能判断图片中的人是翻拍的照片非活体），牛逼的一塌糊涂，我反正是跪了。百度AI在未来的国内AI市场中，不是第一就是第二，而且会持续保持至少十年。\n\n1:可识别身份证正面信息+背面信息\n2:可识别银行卡信息\n3:可识别驾驶证+行驶证信息\n4:可进行人脸识别,人脸比对,活体检测\n5:可设置请求地址+用户密钥+应用密钥\n6:直接传入图片即可,信号返回,毫秒级极速响应\n7:通用Qt4-Qt5,windows linux 嵌入式linux下面看一下演示效果 \n\n\n当然下面这个是识别不了的\n\n  1QByteArray FaceBaiDu::getImageData(const QImage &img)\n  2{\n  3    QImage image = img;\n  4    QByteArray imageData;\n  5    QBuffer buffer(&imageData);\n  6    image.save(&buffer, \"jpg\");\n  7    return imageData.toBase64();\n  8}\n  9\n 10QString FaceBaiDu::getImageData2(const QImage &img)\n 11{\n 12    return QString(getImageData(img));\n 13}\n 14\n 15QHttpPart FaceBaiDu::dataToHttpPart(const QByteArray &body, const QString &name)\n 16{\n 17    QHttpPart httpPart;\n 18    httpPart.setHeader(QNetworkRequest::ContentDispositionHeader, QVariant(QString(\"form-data;name=\\\"%1\\\"\").arg(name)));\n 19    httpPart.setBody(body);\n 20    return httpPart;\n 21}\n 22\n 23void FaceBaiDu::sendData(const QString &url, const QList<QHttpPart> &httpParts)\n 24{\n 25    //初始化消息体\n 26    QHttpMultiPart *httpMultiPart = new QHttpMultiPart(QHttpMultiPart::FormDataType);\n 27\n 28    //逐个添加消息内容\n 29    foreach (QHttpPart httpPart, httpParts) {\n 30        httpMultiPart->append(httpPart);\n 31    }\n 32\n 33    //初始化请求对象\n 34    QNetworkRequest request;\n 35    request.setUrl(QUrl(url));\n 36\n 37#ifdef ssl\n 38    //设置openssl签名配置,否则在ARM上会报错\n 39    QSslConfiguration conf = request.sslConfiguration();\n 40    conf.setPeerVerifyMode(QSslSocket::VerifyNone);\n 41#if (QT_VERSION > QT_VERSION_CHECK(5,0,0))\n 42    conf.setProtocol(QSsl::TlsV1_0);\n 43#else\n 44    conf.setProtocol(QSsl::TlsV1);\n 45#endif\n 46    request.setSslConfiguration(conf);\n 47#endif\n 48\n 49    //发送请求\n 50    QNetworkReply *reply = manager->post(request, httpMultiPart);\n 51    httpMultiPart->setParent(reply);\n 52}\n 53\n 54void FaceBaiDu::finished(QNetworkReply *reply)\n 55{\n 56    QString error = reply->errorString();\n 57    if (!error.isEmpty() && error != \"Unknown error\") {\n 58        emit receiveError(error);\n 59    }\n 60\n 61    if (reply->bytesAvailable() > 0 && reply->error() == QNetworkReply::NoError) {\n 62        QString data = reply->readAll();\n 63        reply->deleteLater();\n 64\n 65        //发送接收数据信号\n 66        emit receiveData(data);\n 67\n 68        //初始化脚本引擎\n 69        QScriptEngine engine;\n 70        //构建解析对象\n 71        QScriptValue script = engine.evaluate(\"value=\" + data);\n 72\n 73        //获取鉴权标识符\n 74        QString token = script.property(\"access_token\").toString();\n 75        if (!token.isEmpty()) {\n 76            tokenFace = token;\n 77            tokenOcr = token;\n 78        }\n 79\n 80        //通用返回结果字段\n 81        int code = script.property(\"error_code\").toInt32();\n 82        QString msg = script.property(\"error_msg\").toString();\n 83        emit receiveResult(code, msg);\n 84\n 85        //人脸识别部分\n 86        QScriptValue result = script.property(\"result\");\n 87        if (!result.isNull()) {\n 88            //人脸识别\n 89            QScriptValue face_list = result.property(\"face_list\");\n 90            if (face_list.isObject()) {\n 91                checkFaceList(face_list);\n 92            }\n 93\n 94            //人脸比对\n 95            QScriptValue score = result.property(\"score\");\n 96            if (!score.isNull()) {\n 97                double value = score.toString().toDouble();\n 98                if (value > 0) {\n 99                    emit receiveFaceCompare(QRect(), QRect(), value);\n100                } else {\n101                    emit receiveFaceCompareFail();\n102                }\n103            }\n104\n105            //活体检测\n106            QScriptValue face_liveness = result.property(\"face_liveness\");\n107            if (!face_liveness.isNull()) {\n108                double liveness = face_liveness.toString().toDouble();\n109                if (liveness > 0) {\n110                    emit receiveLive(liveness);\n111                }\n112            }\n113\n114            //银行卡\n115            QScriptValue bank_card_number = result.property(\"bank_card_number\");\n116            if (!bank_card_number.isNull()) {\n117                QString card_number = bank_card_number.toString();\n118                QString bank_name = result.property(\"bank_name\").toString();\n119                if (!card_number.isEmpty()) {\n120                    emit receiveBankCardInfo(card_number, bank_name);\n121                }\n122            }\n123        }\n124\n125        //文字识别部分\n126        QScriptValue words_result = script.property(\"words_result\");\n127        if (!words_result.isNull()) {\n128            //身份证正面\n129            QScriptValue nation = words_result.property(\"民族\");\n130            if (nation.isObject()) {\n131                checkCardFront(words_result);\n132            }\n133\n134            //身份证反面\n135            QScriptValue issuedby = words_result.property(\"签发机关\");\n136            if (issuedby.isObject()) {\n137                checkCardBack(words_result);\n138            }\n139\n140            //驾驶证\n141            QScriptValue license_number = words_result.property(\"证号\");\n142            if (license_number.isObject()) {\n143                checkDriverLicense(words_result);\n144            }\n145\n146            //行驶证\n147            QScriptValue model = words_result.property(\"品牌型号\");\n148            if (model.isObject()) {\n149                checkRVehicleLicense(words_result);\n150            }\n151        }\n152    }\n153}\n154\n155void FaceBaiDu::checkFaceList(const QScriptValue &face_list)\n156{\n157    QRect face_rectangle;\n158\n159    //创建迭代器逐个解析具体值\n160    QScriptValueIterator it(face_list);\n161    while (it.hasNext()) {\n162        it.next();\n163\n164        QString face_token = it.value().property(\"face_token\").toString();\n165        if (!face_token.isEmpty()) {\n166            QScriptValue location = it.value().property(\"location\");\n167            if (location.isObject()) {\n168                face_rectangle.setX(location.property(\"left\").toInt32());\n169                face_rectangle.setY(location.property(\"top\").toInt32());\n170                face_rectangle.setWidth(location.property(\"width\").toInt32());\n171                face_rectangle.setHeight(location.property(\"height\").toInt32());\n172            }\n173        }\n174\n175        it.next();\n176        if (face_rectangle.width() > 0) {\n177            emit receiveFaceRect(face_rectangle);\n178        } else {\n179            break;\n180        }\n181    }\n182}\n183\n184void FaceBaiDu::checkCardFront(const QScriptValue &scriptValue)\n185{\n186    QScriptValue name = scriptValue.property(\"姓名\");\n187    QScriptValue address = scriptValue.property(\"住址\");\n188    QScriptValue birthday = scriptValue.property(\"出生\");\n189    QScriptValue number = scriptValue.property(\"公民身份号码\");\n190    QScriptValue sex = scriptValue.property(\"性别\");\n191    QScriptValue nation = scriptValue.property(\"民族\");\n192\n193    QString strName = name.property(\"words\").toString();\n194    QString strAddress = address.property(\"words\").toString();\n195    QString strBirthday = birthday.property(\"words\").toString();\n196    QString strNumber = number.property(\"words\").toString();\n197    QString strSex = sex.property(\"words\").toString();\n198    QString strNation = nation.property(\"words\").toString();\n199\n200    emit receiveIDCardInfoFront(strName, strSex, strNumber, strBirthday, strNation, strAddress);\n201}\n202\n203void FaceBaiDu::checkCardBack(const QScriptValue &scriptValue)\n204{\n205    QScriptValue issuedby = scriptValue.property(\"签发机关\");\n206    QScriptValue dateStart = scriptValue.property(\"签发日期\");\n207    QScriptValue dateEnd = scriptValue.property(\"失效日期\");\n208\n209    QString strIssuedby = issuedby.property(\"words\").toString();\n210    QString strDataStart = dateStart.property(\"words\").toString();\n211    QString strDateEnd = dateEnd.property(\"words\").toString();\n212\n213    QString strDate = QString(\"%1.%2.%3-%4.%5.%6\")\n214                      .arg(strDataStart.mid(0, 4)).arg(strDataStart.mid(4, 2)).arg(strDataStart.mid(6, 2))\n215                      .arg(strDateEnd.mid(0, 4)).arg(strDateEnd.mid(4, 2)).arg(strDateEnd.mid(6, 2));\n216    emit receiveIDCardInfoBack(strDate, strIssuedby);\n217}\n218\n219void FaceBaiDu::checkDriverLicense(const QScriptValue &scriptValue)\n220{\n221    QScriptValue licenseNumber = scriptValue.property(\"证号\");\n222    QScriptValue name = scriptValue.property(\"姓名\");\n223    QScriptValue gender = scriptValue.property(\"性别\");\n224    QScriptValue nationality = scriptValue.property(\"国籍\");\n225    QScriptValue address = scriptValue.property(\"住址\");\n226    QScriptValue birthday = scriptValue.property(\"出生日期\");\n227    QScriptValue issueDate = scriptValue.property(\"初次领证日期\");\n228    QScriptValue classType = scriptValue.property(\"准驾车型\");\n229    QScriptValue validFrom = scriptValue.property(\"有效起始日期\");\n230    QScriptValue validFor = scriptValue.property(\"有效期限\");\n231\n232    QString strLicenseNumber = licenseNumber.property(\"words\").toString();\n233    QString strName = name.property(\"words\").toString();\n234    QString strGender = gender.property(\"words\").toString();\n235    QString strNationality = nationality.property(\"words\").toString();\n236    QString strAddress = address.property(\"words\").toString();\n237    QString strBirthday = birthday.property(\"words\").toString();\n238    QString strIssueDate = issueDate.property(\"words\").toString();\n239    QString strClassType = classType.property(\"words\").toString();\n240    QString strValidFrom = validFrom.property(\"words\").toString();\n241    QString strValidFor = validFor.property(\"words\").toString();\n242\n243    emit receiveDriverInfo(strValidFrom, strGender, \"\", strIssueDate, strClassType, strLicenseNumber,\n244                           strValidFor, strBirthday, \"1\", strAddress, strNationality, strName);\n245}\n246\n247void FaceBaiDu::checkRVehicleLicense(const QScriptValue &scriptValue)\n248{\n249    QScriptValue plateNo = scriptValue.property(\"号牌号码\");\n250    QScriptValue vehicleType = scriptValue.property(\"车辆类型\");\n251    QScriptValue owner = scriptValue.property(\"所有人\");\n252    QScriptValue address = scriptValue.property(\"住址\");\n253    QScriptValue useCharacter = scriptValue.property(\"使用性质\");\n254    QScriptValue model = scriptValue.property(\"品牌型号\");\n255    QScriptValue vin = scriptValue.property(\"车辆识别代号\");\n256    QScriptValue engineNo = scriptValue.property(\"发动机号码\");\n257    QScriptValue registerDate = scriptValue.property(\"注册日期\");\n258    QScriptValue issueDate = scriptValue.property(\"发证日期\");\n259\n260    QString strPlateNo = plateNo.property(\"words\").toString();\n261    QString strCehicleType = vehicleType.property(\"words\").toString();\n262    QString strOwner = owner.property(\"words\").toString();\n263    QString strAddress = address.property(\"words\").toString();\n264    QString strUseCharacter = useCharacter.property(\"words\").toString();\n265    QString strModel = model.property(\"words\").toString();\n266    QString strVin = vin.property(\"words\").toString();\n267    QString strEngineNo = engineNo.property(\"words\").toString();\n268    QString strRegisterDate = registerDate.property(\"words\").toString();\n269    QString strIssueDate = issueDate.property(\"words\").toString();\n270\n271    emit receiveRvehicleInfo(strIssueDate, strCehicleType, \"\", strVin, strPlateNo, strUseCharacter,\n272                             strAddress, strOwner, strModel, strRegisterDate, strEngineNo);\n273}\n274\n275void FaceBaiDu::sendData(const QString &url, const QString &data, const QString &header)\n276{\n277    QNetworkRequest request;\n278    request.setHeader(QNetworkRequest::ContentTypeHeader, header);\n279    request.setUrl(QUrl(url));\n280\n281#ifdef ssl\n282    //设置openssl签名配置,否则在ARM上会报错\n283    QSslConfiguration conf = request.sslConfiguration();\n284    conf.setPeerVerifyMode(QSslSocket::VerifyNone);\n285#if (QT_VERSION > QT_VERSION_CHECK(5,0,0))\n286    conf.setProtocol(QSsl::TlsV1_0);\n287#else\n288    conf.setProtocol(QSsl::TlsV1);\n289#endif\n290    request.setSslConfiguration(conf);\n291#endif\n292\n293    manager->post(request, data.toUtf8());\n294}\n295\n296void FaceBaiDu::getToken(const QString &client_id, const QString &client_secret)\n297{\n298    QStringList list;\n299    list.append(QString(\"grant_type=%1\").arg(\"client_credentials\"));\n300    list.append(QString(\"client_id=%1\").arg(client_id));\n301    list.append(QString(\"client_secret=%1\").arg(client_secret));\n302    QString data = list.join(\"&\");\n303\n304    QString url = \"https://aip.baidubce.com/oauth/2.0/token\";\n305    sendData(url, data);\n306}\n307\n308void FaceBaiDu::detect(const QImage &img)\n309{\n310    QStringList list;\n311    list.append(QString(\"{\\\"image\\\":\\\"%1\\\",\\\"image_type\\\":\\\"BASE64\\\"}\").arg(getImageData2(img)));\n312    QString data = list.join(\"\");\n313\n314    QString url = QString(\"https://aip.baidubce.com/rest/2.0/face/v3/detect?access_token=%1\").arg(tokenFace);\n315    sendData(url, data);\n316}\n317\n318void FaceBaiDu::compare(const QImage &img1, const QImage &img2)\n319{\n320    QString imgData1 = getImageData2(img1);\n321    QString imgData2 = getImageData2(img2);\n322\n323    //如果需要活体检测则NONE改为LOW NORMAL HIGH\n324    QStringList list;\n325    list.append(\"[\");\n326    list.append(QString(\"{\\\"image\\\":\\\"%1\\\",\\\"image_type\\\":\\\"BASE64\\\",\\\"liveness_control\\\":\\\"NONE\\\"}\").arg(imgData1));\n327    list.append(\",\");\n328    list.append(QString(\"{\\\"image\\\":\\\"%1\\\",\\\"image_type\\\":\\\"BASE64\\\",\\\"liveness_control\\\":\\\"NONE\\\"}\").arg(imgData2));\n329    list.append(\"]\");\n330    QString data = list.join(\"\");\n331\n332    QString url = QString(\"https://aip.baidubce.com/rest/2.0/face/v3/match?access_token=%1\").arg(tokenFace);\n333    sendData(url, data);\n334}\n335\n336void FaceBaiDu::live(const QImage &img)\n337{\n338    QList<QImage> imgs;\n339    if (!img.isNull()) {\n340        imgs << img;\n341    }\n342\n343    live(imgs);\n344}\n345\n346void FaceBaiDu::live(const QList<QImage> &imgs)\n347{\n348    //记住最后一次处理的时间,限制频繁的调用\n349    QDateTime now = QDateTime::currentDateTime();\n350    if (lastTime.msecsTo(now) < 500) {\n351        return;\n352    }\n353\n354    lastTime = now;\n355\n356    QStringList list;\n357    list.append(\"[\");\n358\n359    int count = imgs.count();\n360    for (int i = 0; i < count; i++) {\n361        QString imgData = getImageData2(imgs.at(i));\n362        list.append(QString(\"{\\\"image\\\":\\\"%1\\\",\\\"image_type\\\":\\\"BASE64\\\"}\").arg(imgData));\n363        if (i < count - 1) {\n364            list.append(\",\");\n365        }\n366    }\n367\n368    list.append(\"]\");\n369    QString data = list.join(\"\");\n370\n371    QString url = QString(\"https://aip.baidubce.com/rest/2.0/face/v3/faceverify?access_token=%1\").arg(tokenFace);\n372    sendData(url, data);\n373}\n374\n375void FaceBaiDu::idmatch(const QString &idcard, const QString &name)\n376{\n377    QStringList list;\n378    list.append(QString(\"{\\\"id_card_num\\\":\\\"%1\\\",\\\"name\\\":\\\"%2\\\"}\").arg(idcard).arg(name));\n379    QString data = list.join(\"\");\n380\n381    QString url = QString(\"https://aip.baidubce.com/rest/2.0/face/v3/person/idmatch?access_token=%1\").arg(tokenFace);\n382    sendData(url, data);\n383}\n384\n385void FaceBaiDu::idcard(const QImage &img, bool front)\n386{\n387    QList<QHttpPart> httpParts;\n388    httpParts << dataToHttpPart(front ? \"front\" : \"back\", \"id_card_side\");\n389    httpParts << dataToHttpPart(getImageData(img), \"image\");\n390\n391    QString url = QString(\"https://aip.baidubce.com/rest/2.0/ocr/v1/idcard?access_token=%1\").arg(tokenOcr);\n392    sendData(url, httpParts);\n393}\n394\n395void FaceBaiDu::bankcard(const QImage &img)\n396{\n397    QList<QHttpPart> httpParts;\n398    httpParts << dataToHttpPart(getImageData(img), \"image\");\n399\n400    QString url = QString(\"https://aip.baidubce.com/rest/2.0/ocr/v1/bankcard?access_token=%1\").arg(tokenOcr);\n401    sendData(url, httpParts);\n402}\n403\n404void FaceBaiDu::driverLicense(const QImage &img)\n405{\n406    QList<QHttpPart> httpParts;\n407    httpParts << dataToHttpPart(getImageData(img), \"image\");\n408\n409    QString url = QString(\"https://aip.baidubce.com/rest/2.0/ocr/v1/driving_license?access_token=%1\").arg(tokenOcr);\n410    sendData(url, httpParts);\n411}\n412\n413void FaceBaiDu::vehicleLicense(const QImage &img)\n414{\n415    QList<QHttpPart> httpParts;\n416    httpParts << dataToHttpPart(getImageData(img), \"image\");\n417\n418    QString url = QString(\"https://aip.baidubce.com/rest/2.0/ocr/v1/vehicle_license?access_token=%1\").arg(tokenOcr);\n419    sendData(url, httpParts);\n420}\n\n\n                ", "mainLikeNum": ["2 "], "mainBookmarkNum": "2"}