{"title": "Python读取PDF内容 - 一起学习python网络爬虫 ", "index": "网页爬虫,编程,python", "content": "\n1，引言\n晚上翻看《Python网络数据采集》这本书，看到读取PDF内容的代码，想起来前几天集搜客刚刚发布了一个抓取网页pdf内容的抓取规则，这个规则能够把pdf内容当成html来做网页抓取。神奇之处要归功于Firefox解析PDF的能力，能够把pdf格式转换成html标签，比如，div之类的标签，从而用GooSeeker网页抓取软件像抓普通网页一样抓取结构化内容。\n从而产生了一个问题：用Python爬虫的话，能做到什么程度。下面将讲述一个实验过程和源代码。\n2，把pdf转换成文本的Python源代码\n下面的python源代码，读取pdf文件内容(互联网上的或是本地的)，转换成文本，打印出来。这段代码主要用了一个第三方库PDFMiner3K把PDF读成字符串，然后用StringIO转换成文件对象。（源代码下载地址参看文章末尾的GitHub源）\nfrom urllib.request import urlopen\nfrom pdfminer.pdfinterp import PDFResourceManager, process_pdf\nfrom pdfminer.converter import TextConverter\nfrom pdfminer.layout import LAParams\nfrom io import StringIO\nfrom io import open\n\ndef readPDF(pdfFile):\n    rsrcmgr = PDFResourceManager()\n    retstr = StringIO()\n    laparams = LAParams()\n    device = TextConverter(rsrcmgr, retstr, laparams=laparams)\n\n    process_pdf(rsrcmgr, device, pdfFile)\n    device.close()\n\n    content = retstr.getvalue()\n    retstr.close()\n    return content\n\npdfFile = urlopen(\"http://pythonscraping.com/pages/warandpeace/chapter1.pdf\")\noutputString = readPDF(pdfFile)\nprint(outputString)\npdfFile.close()\n\n如果PDF文件在你的电脑里，那就把urlopen返回的对象pdfFile替换成普通的open()文件对象。\n3，展望\n这个实验只是把pdf转换成了文本，但是没有像开头所说的转换成html标签，那么在Python编程环境下是否有这个能力，留待今后探索。\n4，集搜客GooSeeker开源代码下载源\n1.GooSeeker开源Python网络爬虫GitHub源\n5，文档修改历史\n2016-05-26：V2.0，增补文字说明2016-05-29：V2.1，增加第六章：源代码下载源，并更换github源的网址\n\n                ", "mainLikeNum": ["1 "], "mainBookmarkNum": "9"}