{"title": "使用 Flask-Docs 自动生成 Api 文档 - 个人文章 ", "index": "文档,api,flask,python", "content": "影响我写文档的原因可能是代码和文档分离，有时候写完代码会忘记补文档，而且不能及时查看，使用 Flask-Docs 可以解决我的问题，这个插件可以根据代码注释生成文档页面，代码注释改动文档可以及时更新，而且支持离线文档下载。\nFlask-Docs\nFlask Api 文档自动生成插件\n特性\n\n根据代码注释自动生成文档\n支持 Flask-RESTful\n支持离线 markdown 文档下载\n\n安装\npip install Flask-Docs\n使用\nfrom flask import Flask\nfrom flask_docs import ApiDoc\n\napp = Flask(__name__)\n\n# 本地加载\n# app.config['API_DOC_CDN'] = False\n\n# 禁用文档页面\n# app.config['API_DOC_ENABLE'] = False\n\n# 需要显示文档的 Api\napp.config['API_DOC_MEMBER'] = ['api', 'platform']\n\n# 需要排除的 RESTful Api 文档\napp.config['RESTFUL_API_DOC_EXCLUDE'] = []\n\nApiDoc(app)\n如何书写 markdown 格式文档\n@@@在注释结尾用 \"@@@\" 包含 markdown 格式文档@@@\n查看文档页面\nhttp://127.0.0.1/docs/api\nApi demo\n@api.route('/add_data', methods=['POST'])\ndef add_data():\n    \"\"\"Add some data\n\n    Add some data in this routing\n\n    Args:\n        pass\n\n    Returns:\n        pass\n    \"\"\"\n    return jsonify({'api': 'add data'})\n\n@api.route('/del_data', methods=['POST'])\ndef del_data():\n    \"\"\"Del some data\n\n    @@@\n    #### args\n\n    | args | nullable | type | remark |\n    |--------|--------|--------|--------|\n    |    title    |    false    |    string   |    blog title    |\n    |    name    |    true    |    string   |    person's name    |\n\n    #### return\n    - ##### json\n    > {\"msg\": \"success\", \"code\": 200}\n    @@@\n    \"\"\"\n    return jsonify({'api': 'del data'})\n\n@platform.route('/get_something', methods=['GET'])\ndef get_something():\n    \"\"\"\n    @@@\n    #### example\n        import requests\n        url='http://127.0.0.1:5000/api/get_something'\n        try:\n            print requests.get(url).text\n        except:\n            pass\n    @@@\n    \"\"\"\n    return jsonify({'platform': 'get something'})\n\n完整代码\n#!/usr/bin/env python\n# -*- coding:utf-8 -*-\n\nfrom flask import Flask, render_template, jsonify, Blueprint\nfrom flask_docs import ApiDoc\n\napp = Flask(__name__)\n\n# Local loading\n# app.config['API_DOC_CDN'] = False\n\n# Disable document pages\n# app.config['API_DOC_ENABLE'] = False\n\n# Api Document needs to be displayed\napp.config['API_DOC_MEMBER'] = ['api', 'platform']\n\nApiDoc(app)\n\napi = Blueprint('api', __name__)\nplatform = Blueprint('platform', __name__)\n\n\n@api.route('/add_data', methods=['POST'])\ndef add_data():\n    \"\"\"Add some data\n\n    Add some data in this routing\n\n    Args:\n        pass\n \n    Returns:\n        pass\n    \"\"\"\n    return jsonify({'api': 'add data'})\n\n\n@api.route('/del_data', methods=['POST'])\ndef del_data():\n    \"\"\"Del some data\n\n    @@@\n    #### args\n\n    | args | nullable | type | remark |\n    |--------|--------|--------|--------|\n    |    title    |    false    |    string   |    blog title    |\n    |    name    |    true    |    string   |    person's name    |\n\n    #### return\n    - ##### json\n    > {\"msg\": \"success\", \"code\": 200}\n    @@@\n    \"\"\"\n    return jsonify({'api': 'del data'})\n\n\n@platform.route('/get_something', methods=['GET'])\ndef get_something():\n    \"\"\"\n    @@@\n    #### example\n        import requests\n        url='http://127.0.0.1:5000/api/get_something'\n        try:\n            print requests.get(url).text\n        except:\n            pass\n    @@@\n    \"\"\"\n    return jsonify({'platform': 'get something'})\n\n\napp.register_blueprint(api, url_prefix='/api')\napp.register_blueprint(platform, url_prefix='/platform')\n\nif __name__ == '__main__':\n    app.run(host='0.0.0.0', port=5000, debug=True)\nFlask-RESTful Api demo\nfrom flask_restful import Resource, Api\n\nclass TodoList(Resource):\n    \"\"\"Manage todolist\"\"\"\n\n    def post(self):\n        \"\"\"Submission of data\n\n        Args:\n            pass\n\n        Returns:\n            pass\n\n        \"\"\"\n        return {'todos': 'post todolist'}\n\n    def get(self):\n        \"\"\"\n        @@@\n        #### args\n\n        | args | nullable | type | remark |\n        |--------|--------|--------|--------|\n        |    id    |    false    |    int   |    todo id    |\n\n        #### return\n        - ##### json\n        > {...}\n        @@@\n        \"\"\"\n        return {'todos': 'get todolist'}\n\n\nrestful_api.add_resource(TodoList, '/todolist')\n\n完整代码\n#!/usr/bin/env python\n# -*- coding:utf-8 -*-\n\nfrom flask import Flask\nfrom flask_restful import Resource, Api\nfrom flask_docs import ApiDoc\n\napp = Flask(__name__)\n\n# Local loading\n# app.config['API_DOC_CDN'] = False\n\n# Disable document pages\n# app.config['API_DOC_ENABLE'] = False\n\n# RESTful Api documents to be excluded\napp.config['RESTFUL_API_DOC_EXCLUDE'] = []\n\nrestful_api = Api(app)\nApiDoc(app)\n\n\nclass TodoList(Resource):\n    \"\"\"Manage todolist\"\"\"\n\n    def post(self):\n        \"\"\"Submission of data\n\n        Args:\n            pass\n    \n        Returns:\n            pass\n\n        \"\"\"\n        return {'todos': 'post todolist'}\n\n    def get(self):\n        \"\"\"\n        @@@\n        #### args\n\n        | args | nullable | type | remark |\n        |--------|--------|--------|--------|\n        |    id    |    false    |    int   |    todo id    |\n\n        #### return\n        - ##### json\n        > {...}\n        @@@\n        \"\"\"\n        return {'todos': 'get todolist'}\n\n\nrestful_api.add_resource(TodoList, '/todolist')\n\nif __name__ == '__main__':\n    app.run(host='0.0.0.0', port=5000, debug=True)\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "0"}