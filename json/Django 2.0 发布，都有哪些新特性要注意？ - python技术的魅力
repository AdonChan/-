{"title": "Django 2.0 发布，都有哪些新特性要注意？ - python技术的魅力 ", "index": "python,django", "content": "Django 是 Python Web 开发最常用的框架之一，跟进它的最新变化绝对是必须的。\n2017年12月2日，Django官方发布了2.0版本，成为多年来的第一次大版本提升，那么2.0对广大Django使用者有哪些变化和需要注意的地方呢？\n一、Python兼容性\nDjango 2.0支持Python3.4、3.5和3.6。Django官方强烈推荐每个系列的最新版本。\n最重要的是Django 2.0不再支持Python2！\nDjango 1.11.x是支持Python2.7的最后版本。\n二、2.0新特性\n1.简化了URL路由语法\ndjango.urls.path()方法的语法更简单了。\n例如以前的：url(r'^articles/(?P<year>[0-9]{4})/$', views.year_archive),\n可以写作：path('articles/<int:year>/', views.year_archive),\n新语法支持强制定义参数类型。例子中只接收整数型年份参数，不再接收字符串类型，同时'10000'年也是合法的（虽然是5位数字），而不像先前正则里只能接收4位数字。\n以前版本的 django.conf.urls.url()方法变成了 django.urls.re_path()，但为了向后兼容，旧的依然保留，而不是立刻废弃。 django.conf.urls.include()方法现在可以从 django.urls导入，也就是你可以使用 from django.urls import include, path, re_path。\n2.admin后台对移动端更加友好\nDjango最受大家欢迎的admin后台，具有响应式特性，支持主流的移动设备。\n3.Window 表达式\n新的Window表达式允许为查询集添加一个OVER从句。\n4.小特性\ndjango.contrib.admin后台\n新的 ModelAdmin.autocomplete_fields属性和 ModelAdmin.get_autocomplete_fields()方法现在可以在外键和多对多字段上使用Select2搜索框。\ndjango.contrib.auth用户认证\nPBKDF2密码哈希默认的迭代次数从36000增加到100000。\ndjango.contrib.gis地理框架\n\n为AsGeoJSON、GeoHash和GeoHash方法，isvalid和distance查询增加MySQL支持；\n添加Azimuth和LineLocatePoint方法，支持PostGIS和SpatiaLite；\n所有从GeoJSON导入的GEOSGeometry拥有SRID集合；\n添加 OSMWidget.default_zoom属性，用于自定义地图的默认缩放级别；\nmetadata现在是可读可编辑的；\n允许在GDAL的内部虚拟文件系统中创建GDALRaster对象；\n新的 GDALBand.color_interp()方法返回波段的颜色说明。\n\ndjango.contrib.postgres数据库\n\nArrayAgg新增distinct参数；\n新的RandomUUID函数；\n\ndjango.contrib.postgres.indexes.GinIndex现在支持 fastupdate和 gin_pending_list_limit参数；\n新的GistIndex类允许在数据库中创建GiST索引；\ninspectdb现在可以内省JSONField和RangeFields。\n\ndjango.contrib.sitemaps站点地图\n为GenericSitemap构造器增加protocol参数；\nCache缓存\ncache.set_many()现在返回一个列表，包含了插入失败的键值；\nFile Storage文件存储\n\nFile.open()现在可以用于上下文管理器，例如 with file.open() as f:；\nForms表单\n\n\nSplitDateTimeWidget和 SplitHiddenDateTimeWidget增加 date_attrs与 time_attrs参数，用于为 DateInput与 TimeInput指定HTML属性；\n新的 Form.errors.get_json_data()方法返回字典类型的表单错误,以适应JSON类型x响应；\n\nGeneric Views通用视图\n新的 ContextMixin.extra_context属性允许在 View.as_view()中添加上下文；\nManagement Commands管理命令\n\ninspectdb现在将MySQL的无符号整数视作 PositiveIntegerField或者 PositiveSmallIntegerField;\n新增 makemessages --add-location选项；\nloaddata现在可以从标准输入读入；\n新增 diffsettings --output选项；\n\nMigrations迁移\n新增 squashmigrations --squashed-name选项；\nModels模型\n\n新增StrIndex数据库函数；\n对于Oracle数据库，AutoField和BigAutoField现在会生成identity列；\n\nQuerySet.iterator()新增 chunk_size参数；\n\nQuerySet.earliest()、 QuerySet.latest()和 Meta.get_latest_by现在可以根据一些字段进行排序；\n增加ExtractQuarter方法，用于DateField和DateTimeField；\n新增TruncQuarter方法用于截取DateField和DateTimeField到季度的第一天；\n为基于类的索引添加 db_tablespace参数；\n为 QuerySet.select_for_update()增加of参数，但只支持PostgreSQL和Oracle数据库；\n\nQuerySet.in_bulk()新增 field_name参数；\n\nCursorWrapper.callproc()现在接收可选的字典类型关键字参数；\n\nQuerySet.values_list()新增named参数，用于获取命名的元组结果；\n新的FilteredRelation类允许为查询集增加一个ON从句；\n增加 Paginator.get_page()，可以处理各种非法页面参数，防止异常;\n\nRequests and Responses请求和相应\n现在，runserver服务器支持HTTP 1.1；\nTemplates模版\n\n为了提高 Engine.get_default()在第三方模块的用途，现在它将返回配置在TEMPLATES中的多个DjangoTemplates引擎中的第一个，而不是弹出ImproperlyConfigured错误；\n自定义模版标签现在接收强制关键字参数；\n\nTests测试\n为LiveServerTestCase添加多线程支持；\nValidators验证器\n新的ProhibitNullCharactersValidator不允许CharField及其子类的表单输入为空；\n三、重要的向后不兼容\n1. 某些地方删除对bytestrings的支持\n例如，对于reverse()，现在使用str()代替force_text()。\n2. AbstractUser.last_name的最大长度增加到150\n如果你有一个自定义的用户模型继承了AbstractUser，你需要生成并应用一个数据库迁移，使得 last_name的最大长度变为150。\n如果你需要为 last_name保持30个字符的限制，可以如下使用自定义表单：\n\nfrom django.contrib.auth.forms import UserChangeForm\nclass MyUserChangeForm(UserChangeForm):\n   last_name = forms.CharField(max_length=30, required=False)\n\n如果你需要在admin中也保持这个约束，那么可以如下使用UserAdmin.form：\n\nfrom django.contrib.auth.admin import UserAdmin\nfrom django.contrib.auth.models import User\nclass MyUserAdmin(UserAdmin):\n   form = MyUserChangeForm\nadmin.site.unregister(User)\nadmin.site.register(User, MyUserAdmin)\n\n3. QuerySet.reverse()和last()不能用于切片后的查询集\n对切片后的查询集使用反转和获取最近对象的操作将弹出异常，如下所示：\n\n>>> Model.objects.all()[:2].reverse()\nTraceback (most recent call last):\n...\nTypeError: Cannot reverse a query once a slice has been taken.\n\n4. 表单的字段不再接收可选参数作为位置参数\n为了防止运行时错误，提高可靠性。以前类似下面的参数传递方法，现在是错误的了：forms.IntegerField(25, 10)\n要这么传递：forms.IntegerField(max_value=25, min_value=10)\n5. Index不再接收位置参数\n例如下面的用法将导致异常：models.Index(['headline', '-pub_date'], 'index_name')\n要提供参数关键字，改写为：models.Index(fields=['headline', '-pub_date'], name='index_name')\n6. call_command()将验证它接收的选项\n对于使用选项而不是使用 parser.add_argument()进行自定义的管理命令，需要添加一个 stealth_options属性，如下所示：\n\nclass MyCommand(BaseCommand):\n   stealth_options = ('option_name', ...)\n\n7. SQLite现在支持外键约束\n另外，Django2.0还废弃和移除了一些方法和属性。\n\n                ", "mainLikeNum": ["2 "], "mainBookmarkNum": "2"}