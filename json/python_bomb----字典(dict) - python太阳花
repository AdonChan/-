{"title": "python_bomb----字典(dict) - python太阳花 ", "index": "python", "content": "定义\n字典存放 key - value（键值对），且value值可以是任意的数据类型\nm ={\"sheen\":[100,99,100],'star':[97,100,100]}\nprint(m,type(m))\n\n{'sheen': [100, 99, 100], 'star': [97, 100, 100]} <class 'dict'>\n集合常用方法fromkeys：第一个参数可以是列表/元组/字符串/集合，将参数中每一个值作为key值并且所有value值都相同\n#生成8个银行卡号，默认密码为'000000'\ncards = []\nfor i in range(8):\n    card = '6217 0042 %.3d' % (i)\n    cards.append(card)\nprint(cards)\nprint({}.fromkeys(cards, '000000'))\n\n{'6217 0042 000': '000000', '6217 0042 001': '000000', '6217 0042 002': '000000', '6217 0042 003': '000000', '6217 0042 004': '000000', '6217 0042 005': '000000', '6217 0042 006': '000000', '6217 0042 007': '000000'}\n特性\n字典不支持index索引，切片，重复，连接。索引必须使用关键字成员操作符只对关键字可用\nm=dict(a=3,b=5,c=7)\nprint('a' in  m)\nprint(3 in m)\n\nTrue\nFalse\nfor遍历\nfor循环: 默认遍历字典的key值;\nd=dict(a=3,b=5,c=7)\nfor i in d:\n    print(i)\nfor i,v in enumerate(d):\n    print(i, '-----', v)\n    \na\nb\nc\n0 ----- a\n1 ----- b\n2 ----- c\n\n增加\n直接添加\nd=dict(a=3,b=5,c=7)\nd['m']=0\nprint(d)\n\n{'a': 3, 'b': 5, 'c': 7, 'm': 0}\nupdate()\n如果key值存在，则更新value值如果key值不存在，则添加key-value对\nd=dict(a=3,b=5,c=7)\nd.update(a=0)\nd.update(d=9)\nprint(d)\n\n{'a': 0, 'b': 5, 'c': 7, 'd': 9}\nsetdefault\n如果key值已经存在， 不做修改; 如果key值不存在， 添加key-value值;默认情况下value值为None\nd.setdefault('n',4)\nd.setdefault('b',100)\nprint(d)\n\n{'a': 0, 'b': 5, 'c': 7, 'm': 0, 'd': 9, 'n': 4}\n\n删除\npop()\n弹出指定的key-value对\nd=dict(a=3,b=5,c=7)\nd.pop('a')\nprint(d)\n\n{'b': 5, 'c': 7}\npopitem()\n随机删除key-value对\nd={'b': 5, 'c': 7}\nd.popitem()\nprint(d)\n{'b': 5}\ndel\n随机删除key-value对\nd=dict(a=3,b=5,c=7,m=11,n=12)\ndel d['b']\nprint(d)\n{'a': 3, 'c': 7, 'm': 11, 'n': 12}\nclear\n清空字典\nd={'a': 3, 'c': 7, 'm': 11, 'n': 12}\nd.clear()\nprint(d)\n\n{}\n\n查看与修改\nservices={'http':80,'ssh':22,'ftp':21}\n查看字典里面所有的key值\nprint(services.keys())\n\ndict_keys(['http', 'ssh', 'ftp'])\n查看字典里面所有的value值\n\nprint(services.values())\n\ndict_values([80, 22, 21])\n查看字典里面所有的key-value值\nprint(services.items())\n\ndict_items([('http', 80), ('ssh', 22), ('ftp', 21)])\n遍历\nfor k,v in services.items(): # k,v = ('http', 80)\n    print(k , '--->', v)\n\nfor k in services:\n    print(k, '--->', services[k])\n    \n    \nhttp ---> 80\nssh ---> 22\nftp ---> 21\nhttp ---> 80\nssh ---> 22\nftp ---> 21    \n查看指定key对应的value值, 注意: key不存在， 就会报错\nusers={'root':'redhat','studnet':'studnet','sheen':'star'}\nprint(users['root'])\n#print(users['alex'])#报错，KeyError: 'alex'\n\nredhat\nget方法获取指定key值对应的value值\n如果key值存在， 返回对应的value值;  如果key值不存在， 默认返回None, 如果需要指定返回的值， 传值即可;\nusers={'root':'redhat','studnet':'studnet','sheen':'star'}\nprint(users.get('studnet'))\nprint(users.get('alex'))\n\nstudnet\nNone\n\n实现switch\n针对不同的case,语句执行内容不同\ngrade = 'C'\nd = {\n    'A':'优秀',\n    'B':'良好',\n    'C':'合格'\n}\n# if grade in d:\n#     print(d[grade])\n# else:\n#     print('error')\n\nprint(d.get(grade,'error'))\n\n\n合格\n\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "0"}