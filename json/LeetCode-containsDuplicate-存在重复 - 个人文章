{"title": "LeetCode-containsDuplicate-存在重复 - 个人文章 ", "index": "python,算法,leetcode", "content": "描述\n给定一个整数数组，判断是否存在重复元素。如果任何值在数组中出现至少两次，函数应该返回 true。如果每个元素都不相同，则返回 false。\n实现\n1.自己的方法，双循环，但是题目提示超过时间限制了\nclass Solution(object):\n    def containsDuplicate(self, nums):\n        \"\"\"\n        :type nums: List[int]\n        :rtype: bool\n        \"\"\"\n        if len(nums)==0:\n            return False\n        else:\n            for i in range(len(nums)):\n                for j in range(len(nums)):\n\n                    if nums[i]==nums[j] and i!=j:\n                        return True\n            return False\n2.后面又想到一种方法，先排序，对比前后两个元素的值，如果存在相当就返回True。len(nums)-1因为取值i到倒数第二位就可以对比完，因为if 使用的是nums[i+1]\nclass Solution(object):\n    def containsDuplicate(self, nums):\n        \"\"\"\n        :type nums: List[int]\n        :rtype: bool\n        \"\"\"\n        nums.sort()\n        if len(nums) == (1 or 0):\n            return False\n        else:\n            \n                \n            for i in range(len(nums)-1) :\n                if nums[i] == nums[i+1]:\n                    return True\n            return False\n   \n3.楼下有大神回复了，看到一种比较简答的优秀解法：对数据去重，如果长度变化，说明存在重复元素。\nclass Solution:\n    def containsDuplicate(self, nums):\n        \"\"\"\n        :type nums: List[int]\n        :rtype: bool\n        \"\"\"\n        return True if len(nums) != len(set(nums)) else False\n4.楼下大神的字典解法：也很优秀，如果字典不存在数组的值，就dict[i] =i\nclass Solution(object):\n    def containsDuplicate(self, nums):\n        if len(nums) == 0:\n                return False;\n        else:\n            dict = {}\n            for i in nums:\n               \n                if dict.get(i) is not None:\n                    return True\n                else:\n                    dict[i] = i\n        return False\n\n                ", "mainLikeNum": ["1 "], "mainBookmarkNum": "0"}