{"title": "Django-Nginx-uwsgi - python技术的魅力 ", "index": "django,python", "content": "在开发环境下调试好python项目之后，把项目迁移到nginx上面\n首先把django admin的静态文件目录复制一份到你设置的static文件目录下：\npython manage.py collectstatic\n关闭settings.py中的debug，关闭debug之后staticfiles就不生效了，需要在nginx配置静态文件的访问。\n安装uwsgi\npip install uwsgi\n创建wsgi文件：\nroot@server1 testweb]# pwd\n\n/Django/testweb\n\n[root@server1 testweb]# cat wsgi.py\n\nimport os\n\nos.environ.setdefault(\"DJANGO_SETTINGS_MODULE\", \"testweb.settings\")\n\nfrom django.core.wsgi import get_wsgi_application\n\napplication = get_wsgi_application()\n创建ini配置文件：\n[root@server1 testweb]# pwd\n\n/Django/testweb\n\n[root@server1 testweb]# cat app.ini\n\n[uwsgi]\n\nchdir = /Django/testweb/\n\n;wsgi-file = /Django/testweb/wsgi.py\n\nmodule = testweb.wsgi\n\nsocket = 127.0.0.1:3400\n\n;socket = /var/log/%(project).sock\n\nchmod-socket = 664\n\n;http = 0.0.0.0:8001\n\n;stats = 0.0.0.0:8001\n\nmaster = true\n\nprocesses = 4\n\nthreads = 2\n\nmax-requests = 6000\n\nvacuum = true\n\npidfile = /var/log/uwsgi.pid;\n\ndaemonize = /var/log/uwsgi.log\n启动uwsgi：\n[root@server1 testweb]# uwsgi --ini app.ini \n也可编写uwsgi启动脚本：\n[root@server1 ~]# cat /etc/init.d/uwsgi \n\nuwsgi_path=/usr/bin/uwsgi\n\nuwsgi_ini=/Django/testweb/app.ini\n\nuwsgi_pid=/var/log/uwsgi.pid\n\nif [ ! -n $1 ]\n\nthen\n\n echo \"Usages: [start|stop|restart]\"\n\n exit 0\n\nfi\n\nif [ $1 = start ]\n\nthen\n\n psid=`ps aux | grep \"zh\" | grep -v \"grep\" | wc -l`\n\n if [ $psid -gt 4 ]\n\n then\n\n echo \"uwsgi is running!\"\n\n exit 0\n\n else\n\n uwsgi --ini $uwsgi_ini\n\n echo \"Start uwsgi service [OK]\"\n\n fi\n\nelif [ $1 = stop ];then\n\n killall -s INT uwsgi\n\n echo \"Stop uwsgi service [OK]\"\n\nelif [ $1 = restart ];then\n\n #killall -s INT uwsgi\n\n #uwsgi --ini uwsgi_ini\n\n kill -HUP $uwsgi_pid\n\n echo \"Restart uwsgi service [OK]\"\n\nelse\n\n echo \"Usages: [start|stop|restart]\"\n\nfi\n\n[root@server1 ~]# cat /etc/init.d/uwsgi \n\nuwsgi_path=/usr/bin/uwsgi\n\nuwsgi_ini=/Django/testweb/app.ini\n\nuwsgi_pid=/var/log/uwsgi.pid\n\nif [ ! -n $1 ]\n\nthen\n\n echo \"Usages: [start|stop|restart]\"\n\n exit 0\n\nfi\n\nif [ $1 = start ]\n\nthen\n\n psid=`ps aux | grep \"zh\" | grep -v \"grep\" | wc -l`\n\n if [ $psid -gt 4 ]\n\n then\n\n echo \"uwsgi is running!\"\n\n exit 0\n\n else\n\n uwsgi --ini $uwsgi_ini\n\n echo \"Start uwsgi service [OK]\"\n\n fi\n\nelif [ $1 = stop ];then\n\n killall -s INT $uwsgi_path\n\n echo \"Stop uwsgi service [OK]\"\n\nelif [ $1 = restart ];then\n\n #killall -s INT uwsgi\n\n #uwsgi --ini uwsgi_ini\n\n kill -HUP $uwsgi_pid\n\n echo \"Restart uwsgi service [OK]\"\n\nelse\n\n echo \"Usages: [start|stop|restart]\"\n\nfi\n配置nginx.conf文件，添加下面一行内容：\n include /usr/local/nginx/conf/conf.d/*;\n在conf.d新建app.conf文件：\n[root@server1 conf.d]# cat app01.conf \n\nserver {\n\nlisten 80;\n\nserver_name localhost; \n\ncharset utf-8;\n\naccess_log logs/testweb/app01/access_log;\n\nerror_log logs/testweb/app01/error_log;\n\nclient_max_body_size 75M; # adjust to taste\n\n#location /admin {\n\n#alias /Django/testweb/static/admin\n\n# }\n\nlocation /static {\n\nalias /Django/testweb/static; # your Django project's static files - amend as required\n\n}\n\n# Finally, send all non-media requests to the Django server.\n\nlocation / {\n\n uwsgi_pass 127.0.0.1:3400;\n\n include uwsgi_params; # the uwsgi_params file you installed\n\n}\n\n}\n重新启动Nginx：\n[root@server1 conf.d]# /etc/init.d/nginx stop\n\n[root@server1 conf.d]# /etc/init.d/nginx start\n访问页面测试：\n\n调试过程中，报错多多查看日志排错。\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "0"}