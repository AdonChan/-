{"title": "fast-family框架 fast-family-datasource多数据源以及整合xa分布式事务使用案例 - 个人文章 ", "index": "github,spring,python,java", "content": "介绍\nfast-family-datasource是fast-family框架中多数据源处理模块，提供XA分布式事务处理，注解指定数据源，简单的配置文件指向即可完成多数据源及事务管理。\n注意：暂时只支持druid数据源\n使用案例\n引入模块：\n<dependency>\n   <groupId>com.github.fast-family</groupId>\n   <artifactId>fast-family-datasource</artifactId>\n   <version>0.1.0</version>\n</dependency>\n注意：暂时未发布到中央仓库，需下载代码\n不带XA事务配置：\nfast:\n  family:\n    type: com.alibaba.druid.pool.DruidDataSource\n    datasource:\n      master:\n        druid:\n          username: root\n          password: root\n          url: jdbc:mysql://localhost:3306/master-db?useUnicode=true&characterEncoding=utf8\n          driverClassName: com.mysql.jdbc.Driver\n        atomikos:\n          uniqueResourceName: master-db\n      slave_0:\n        druid:\n          username: root\n          password: root\n          url: jdbc:mysql://localhost:3306/slave-db?useUnicode=true&characterEncoding=utf8\n          driverClassName: com.mysql.jdbc.Driver\n        atomikos:\n          uniqueResourceName: slave-db\n携带XA事务配置：\nfast:\n  family:\n    type: com.alibaba.druid.pool.xa.DruidXADataSource\n    datasource:\n      master:\n        druid:\n          username: root\n          password: root\n          url: jdbc:mysql://localhost:3306/master-db?useUnicode=true&characterEncoding=utf8\n          driverClassName: com.mysql.jdbc.Driver\n        atomikos:\n          uniqueResourceName: master-db\n      slave_0:\n        druid:\n          username: root\n          password: root\n          url: jdbc:mysql://localhost:3306/slave-db?useUnicode=true&characterEncoding=utf8\n          driverClassName: com.mysql.jdbc.Driver\n        atomikos:\n          uniqueResourceName: slave-db\n示例代码：\n通过使用DataSourceAnnotation注解来指定对应的数据源名称\n@Service\npublic class UserServiceImpl implements UserService {\n\n    @Autowired\n    private UserDao userDao;\n\n\n    @DataSourceAnnotation(name = \"slave_0\")\n    @Override\n    public List<User> selectAlldb1() {\n        return userDao.selectAll();\n    }\n\n    @DataSourceAnnotation(name = \"master\")\n    @Override\n    public List<User> selectAlldb2() {\n        return userDao.selectAll();\n    }\n\n    @DataSourceAnnotation(name = \"slave_0\")\n    @Override\n    public void savedb1() {\n        if (true){\n            throw new RuntimeException(\"异常了\");\n        }\n    }\n\n    @DataSourceAnnotation(name = \"master\")\n    @Override\n    public void savedb2() {\n        User user = new User();\n        user.setPassword(\"1231\");\n        user.setUsername(\"1231232\");\n        userDao.insert(user);\n    }\n}\n测试代码：\n@RunWith(SpringRunner.class)\n@SpringBootTest\npublic class FastFamilyDatasourceExampleApplicationTests {\n    \n\n    @Autowired\n    private UserService userService;\n\n    @Test\n    public void contextLoads() {****\n        System.out.println(\"查询数据大小：\"+userService.selectAlldb1().size());\n        System.out.println(\"查询数据大小：\"+userService.selectAlldb2().size());\n    }\n\n\n    @Transactional\n    @Test\n    public void saveTest(){\n        userService.savedb2();\n        userService.savedb1();\n    }\n\n}\n测试效果：\n不带事务：\n\n带XA事务：\n\n\n最后：\n如果您对此框架感兴趣或者想获取最新进度信息可以加qq群：390295286github地址：https://github.com/fast-famil... 欢迎star forkgithub example地址: https://github.com/fast-famil...\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "0"}