{"title": "python cx_Oracle基础使用方法 - 一点知识 ", "index": "python,oracle", "content": "问题\n使用python操作oracle数据库，获取表的某几个字段作为变量值使用。\n使用Popen+sqlplus的方法需要对格式进行控制，通过流获取这几个字段值不简洁（个人观点……）。（优点是能够使用sqlplus的方法直接访问sql文件，不需要考虑打开/关闭连接，并且通过流向文件中写入还挺好用的。不过优点不是这次所关注的）\n使用cx-Oracle将查询结果返回为tuple格式，对返回结果的操作简洁，满足需求。（要注意数据库连接创建与关闭、sql的编写、预处理与提交等等，看起来也不简洁（同样个人观点……））\n基础方法\n数据库连接\n1、使用tns串连接\noracle_tns = cx_Oracle.makedsn('XXX.XXX.XXX.XXX', 1521,'oracleName')\nconnectObj = cx_Oracle.connect('oracleUserName', 'password', oracle_tns)\n2、其他简洁方式\ndb = cx_Oracle.connect('hr', 'hrpwd', 'localhost:1521/XE')db1 = cx_Oracle.connect('hr/hrpwd@localhost:1521/XE')\n数据库断开连接\nconnectObj.close()\n建立游标\ncursorObj = connectObj.cursor()\n关闭游标\ncursorObj.close()\n增\n1、单条插入：\nsql = \"INSERT INTO T_AUTOMONITOR_TMP(point_id) VALUES(:pointId)\"\ncursorObj.prepare(sql)\nrown = cursorObj.execute(None, {'pointId' : pointId})\nconnectObj.commit()\n\n2、多条插入：\nsql = \"INSERT INTO T_AUTOMONITOR_TMP(point_id) VALUES(:pointId)\"\ncursorObj.prepare(sql)\nrown = cursorObj.executemany(None, recordList)\nconnectObj.commit()\n\n删\nsql = \"DELETE FROM T_AUTOMONITOR_TMP t WHERE t.point_id = :pointId \"\ncursorObj.prepare(sql)\nrown = cursorObj.execute(None, {'pointId' : pointId})\nconnectObj.commit()\n\n改\nsql = \"UPDATE t_automonitor_other t\\\n      SET t.active = '2'\\\n      WHERE t.active = '1'\\\n      AND t.point_id = :pointId\\\n      \"\ncursorObj.prepare(sql)\ncursorObj.execute(None, {'pointId' : pointId})\nconnectObj.commit()\n\n查\nsql = \"SELECT t.describ FROM t_automonitor_tmp t WHERE t.point_id = :pointId\"\ncursorObj.prepare(sql)\ncursorObj.execute(None, {'pointId' : pointId})\n\nTips\n\n增、删、改操作都需要当前连接进行commit()\n若使用一个游标cursor进行N次查询，注意若再使用前N-1次查询结果可能会存在异常。要进行多个查询，个人建议使用完cursor后将结果保留再关闭cursor，多次查询重复该操作。\n如果不使用prepare，可以直接使用execute，以下查询等价：\n\nr1 = cursor.execute('SELECT * FROM locations WHERE country_id=:1 AND city=:2', ('US', 'Seattle'))r2 = cursor.execute('SELECT * FROM locations WHERE country_id=:9 AND city=:4', ('US', 'Seattle'))r3 = cursor.execute('SELECT * FROM locations WHERE country_id=:m AND city=:0', ('US', 'Seattle'))\nsql语句的语法与数据库有关，不想使用绑定变量，可以拼接sql字符串 (´•༝•`)\n简单工具\nclass baseUtilsX():\n    \"\"\"baseUtils\"\"\"\n    def __init__(self):\n        self.connectObj = \"\"\n        self.connCnt = 0\n        self.cursorCnt = 0\n\n    def initOracleConnect(self):\n        oracle_tns = cx_Oracle.makedsn('XXX.XXX.XXX.XXX', 1521,'XX')\n        if self.connCnt == 0:\n            self.connectObj = cx_Oracle.connect('oracleUserName', 'password', oracle_tns)\n            self.connCnt += 1\n\n    def getOracleConnect(self):\n        self.initOracleConnect()\n        return self.connectObj\n    \n    def closeOracleConnect(self, connectObj):\n        connectObj.close()\n        self.connCnt -= 1\n\n    def getOracleCursor(self):\n        self.initOracleConnect()\n        self.cursorCnt += 1\n        return self.connectObj.cursor()\n\n    def closeOracleCursor(self, cursorObj):\n        cursorObj.close()\n        self.cursorCnt -= 1\n        if self.cursorCnt == 0:\n            print \"will close conn\"\n            self.closeOracleConnect(self.connectObj)\n\n    def selectFromDbTable(self, sql, argsDict):\n        # 将查询结果由tuple转为list\n        queryAnsList = []\n        selectCursor = self.getOracleCursor()\n        selectCursor.prepare(sql)\n        queryAns = selectCursor.execute(None, argsDict)\n        for ansItem in queryAns:\n            queryAnsList.append(list(ansItem))\n\n        self.closeOracleCursor(selectCursor)\n        return queryAnsList\n\n参考文章\n精通 Oracle+Python，第 1 部分：查询最佳应践\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "1"}