{"title": "Python每日一练0002 - python每日练习 ", "index": "python", "content": "问题\n如何序列化输出元素包含字符串元组的字符串元组（好绕）\n举个例子\n>>> zoo1 = ('monkey', 'elephant')\n>>> zoo2 = ('python', zoo1)\n将zoo2输出为python, monkey, elephant\n解决方案\n容易想到使用join()函数，但join()函数要求元素必须都是字符串类型，否则会抛出TypeError错误\n>>> zoo1 = ('monkey', 'elephant')\n>>> zoo2 = ('python', zoo1)\n>>> print(', '.join(zoo2))\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\nTypeError: sequence item 1: expected str instance, tuple found\n一个比较简单的方法是将zoo1给unpack进zoo2中，然后再将zoo2给unpack进print函数，最后指定print函数的sep参数来输出\n>>> zoo1 = ('monkey', 'elephant')\n>>> zoo2 = ('python', *zoo1)\n>>> print(*zoo2, sep=', ')\npython, monkey, elephant\n如果想要将结果存储起来，那么使用join就可以了\n>>> zoo1 = ('monkey', 'elephant')\n>>> zoo2 = ('python', *zoo1)\n>>> s = ', '.join(zoo2)\n>>> print(s)\npython, monkey, elephant\n讨论\n上面的方法仅仅是针对于特定的情况，那么对于一个多重嵌套的元组该如何处理呢\n容易想到使用递归来实现，判断当前元素的类型来决定是否结束递归即可\n下面是一个简单的实现方法\nzoo = (\n    'monkey',\n    'elephant',\n    ('penguin', 'camel'),\n    ('zebra', 'giraffe'),\n    'python',\n)\ndef my_join(tpl, sep):\n    return sep.join(x if isinstance(x, str) else my_join(x, sep) for x in tpl)\nprint(my_join(zoo, ', '))\n来源\nStack Overflow\n关注/投稿\n欢迎关注我们的微信公众号：python每日一练\n想要投稿的朋友可以给我们的公众号留言，备注好【问题】【解决方案】【讨论】【来源】即可\n\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "2"}