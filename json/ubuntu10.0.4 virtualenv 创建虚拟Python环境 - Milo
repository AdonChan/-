{"title": "ubuntu10.0.4 virtualenv 创建虚拟Python环境 - Milo ", "index": "python", "content": "一、virtualenv\n\n1.简介\n\nvirtualenv可以使多个Python相互独立，互不影响，它能够：\n\n1. 在没有权限的情况下安装新套件\n2. 不同应用可以使用不同的套件版本\n3. 套件升级不影响其他应用\n\n\n2. 安装\n\nsudo apt-get install python-virtualenv\n\n\n3. 创建虚拟环境，并进入虚拟环境\n\nmkdir py/django_pro -p\ncd py/django_pro/\nvirtualenv web01\ncd web01\nsource bin/activate\n\n\n4. 退出虚拟环境：\n\ndeactivate\n\n\n此时我们会发现shell提示符前面多了一个（web01)，这说明我们已经在Python虚拟环境了，在这个里面我们可以安装任意的Python库，而不用担心会把系统的Python库搞乱。\n【注：默认情况下，虚拟环境会依赖系统环境中的site packages，就是说系统中已经安装好的第三方package也会安装在虚拟环境中，如果不想依赖这些package，那么可以加上--no-site-packeages参数。即 virtualenv --no-site-packages web02，也可以创建virtualenv的别名，即vim ~/.bashrc 然后添加virtualenv='virtualenv --no-site-packages'】\n\n二、virtaulenvwrapper\n\n1. 简介\n\nvirtaulenvwrapper是virtualenv的扩展包，用于更方便管理虚拟环境，它可以做：\n【不需要使用source [路径] 来创建】\n\n1. 将所有虚拟环境整合在一个目录下\n2. 管理（新增，删除，复制）虚拟环境\n3. 切换虚拟环境\n\n\n2. 安装\n\nsudo pip install virtualenvwrapper\n\n\n3. 配置\n\n安装完毕，但是此时还不能使用virutalenvwrapper，默认virutalenvwrapper是安装在/usr/local/bin下的，实际我们需要运行 virtualenvwrapper.sh文件才行。我们可以先查看该文件，里面有配置步骤。\n\n1. 创建目录用来存放虚拟环境\n    mkdir ~/.virtualenvs  # 我的安装完virtualenvwrapper，默认就已经创建该目录了\n2. 在~/.bashrc文件中添加：\n    export WORKON_HOME=/home/milo/.virtualenvs\n3. 在~/.bashrc中添加：\n    source /usr/local/bin/virtualenvwrapper.sh\n4. 运行\n    source ~/.bashrc\n\n\n4. 使用\n\n此时virtualenvwrapper就可以使用了。\n列出虚拟环境列表：workon、lsvirtualenv\n新建虚拟环境：mkvirtualenv web03\n启动/切换虚拟环境：workon web02\n删除虚拟环境：rmvirtualenv web01\n离开虚拟环境：deactivate\n\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "1"}