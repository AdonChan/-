{"title": "Python学习之路2-列表介绍 - VPointer ", "index": "数组,python", "content": "《Python编程：从入门到实践》笔记。本章主要介绍列表的基础与简单操作。\n1. 列表(List)是什么\n列表由一系列按特定顺序排列的元素组成。类似于C/C++, Java中的数组，但和他们不同的是，Python列表中的元素可以是不同类型。Python中用中括号[]来表示列表，并用逗号分隔其中的元素。\n# 代码：\nbicycles = ['trek', 'cannondale', 'redline', 'specialized']\nprint(bicycles)\n\n# 结果：\n# python打印了该列表的内部表示\n['trek', 'cannondale', 'redline', 'specialized']\n1.1 访问与使用列表中的元素\n大多数编程语言中，索引都是从0开始的，而不是从1开始的。以下代码是输出上述列表中的第1个元素：\n# 代码：\nprint(bicycles[0])\nprint(bicycles[0].title())\n\nmessage = \"My first bicycle was a \" + bicycles[0].title() + \".\"\nprint(message)\n\n# 结果：\ntrek\nTrek\nMy first bicycle was a Trek.\nPython还支持索引为负数，表示从后往前数，“-1”表示倒数第1个元素，例如：\n# 代码：\nprint(bicycles[-1])\n\n# 结果：\nspecialized\n但是，不管索引是正数还是负数，都要注意索引越界问题！\n2. 修改、添加和删除元素\n2.1修改列表元素\n# 代码：\n# 修改第一个元素\nmotorcycles = ['honda', 'yamaha', 'suzuki']\nprint(motorcycles)\n\nmotorcycles[0] = \"ducati\"\nprint(motorcycles)\n\n# 结果：\n['honda', 'yamaha', 'suzuki']\n['ducati', 'yamaha', 'suzuki']\n2.2 添加元素\n在列表末尾添加元素：\n# 代码：\nmotorcycles = ['honda', 'yamaha', 'suzuki']\nprint(motorcycles)\n\nmotorcycles.append(\"ducati\")\nprint(motorcycles)\n\n# 结果：\n['honda', 'yamaha', 'suzuki']\n['honda', 'yamaha', 'suzuki', 'ducati']\n也可以动态建立motorcycles列表：\n# 代码：\nmotorcycles = []  # 此句很重要！表示声明一个列表！\nmotorcycles.append('honda')\nmotorcycles.append('yamaha')\nmotorcycles.append('suzuki')\nprint(motorcycles)\n\n# 结果：\n['honda', 'yamaha', 'suzuki']\n在列表中插入元素：\n# 代码：\nmotorcycles = ['honda', 'yamaha', 'suzuki']\nmotorcycles.insert(0, 'ducati')\nprint(motorcycles)\n\nmotorcycles.insert(4, 'dongfeng') # 在最后插入一个元素，相当于motorcycles.append('dongfeng')\nprint(motorcycles)\n\n# 结果：\n['ducati', 'honda', 'yamaha', 'suzuki']\n['ducati', 'honda', 'yamaha', 'suzuki', 'dongfeng']\n2.3删除元素\n使用 del 语句删除元素：知道元素在列表中的位置\n# 代码：\nmotorcycles = ['honda', 'yamaha', 'suzuki']\nprint(motorcycles)\n\ndel motorcycles[0]\nprint(motorcycles)\n\n# 结果：\n['honda', 'yamaha', 'suzuki']\n['yamaha', 'suzuki']\ndel 可删除任意位置的列表元素，前提是知道其索引\n使用 pop() 方法删除元素：会返回被删除的元素，当对被删除的元素还有后续操作时使用此方法。默认删除列表最后一个元素，当传入参数（作为索引）时，删除指定位置的元素（但请注意越界问题）：\n# 代码：\nmotorcycles = ['honda', 'yamaha', 'suzuki']\nprint(motorcycles)\n\nlast_owned = motorcycles.pop()  # 默认\nprint(\"The last motorcycle I owned was a \" + last_owned.title() + \".\")\nprint(motorcycles)\n\nmotorcycles.pop(1)  # 传入参数\nprint(motorcycles)\n\n# 结果：\n['honda', 'yamaha', 'suzuki']\nThe last motorcycle I owned was a Suzuki.\n['honda', 'yamaha']\n['honda']\n所以，pop() 方法也可以删除任意位置的元素\n根据值删除元素的 remove()方法：当不知道元素索引，但知道元素值时\n# 代码：\nmotorcycles = ['honda', 'yamaha', 'suzuki', 'ducati']\nprint(motorcycles)\n\nmotorcycles.remove('ducati')\nprint(motorcycles)\n\n# 结果：\n['honda', 'yamaha', 'suzuki', 'ducati']\n['honda', 'yamaha', 'suzuki']\n注意，如果列表中有多个相同的值，romve() 方法只删除第一个\n3. 组织列表\n3.1 排序\nsort() 方法对列表永久排序（原地操作）：\n# 代码：\ncars = ['bmw', 'audi', 'toyota', 'subaru']\ncars.sort()\nprint(cars)\n\n# 结果：\n['audi', 'bmw', 'subaru', 'toyota']\n如果不想修改原列表，则应使用以下方法。使用 sorted() 函数对列表进行临时排序：\n# 代码：\ncars = ['bmw', 'audi', 'toyota', 'subaru']\n\nprint(\"Here is the original list:\")\nprint(cars)\n\nprint(\"\\nHere is ths sorted list:\")\nprint(sorted(cars))\n\nprint(\"\\nHere is the original list again:\")\nprint(cars)\n\n# 结果：\nHere is the original list:\n['bmw', 'audi', 'toyota', 'subaru']\n\nHere is ths sorted list:\n['audi', 'bmw', 'subaru', 'toyota']\n\nHere is the original list again:\n['bmw', 'audi', 'toyota', 'subaru']\n不管是sort() 方法还是 sorted() 函数，如果想反向排序，只需要传入关键字参数reverse=True:\ncars.sort(reverse=True)\nsorted(cars, reverse=True)\n以上两种排序是按ASCII码进行的排序，如果想自定义排序，需要传入自定义比较函数。\n反向打印列表：reverse() 方法，也是原地操作！并且这只是反向打印列表的实现方法之一\n# 代码：\ncars = ['bmw', 'audi', 'toyota', 'subaru']\nprint(cars)\n\ncars.reverse()  # 注意！并没有排序后再反向！\nprint(cars)\n\n# 结果：\n['bmw', 'audi', 'toyota', 'subaru']\n['subaru', 'toyota', 'audi', 'bmw']\n3.2 确定列表长度\n使用 len() 函数获得列表长度：\n# 代码:\ncars = ['bmw', 'audi', 'toyota', 'subaru']\nprint(len(cars))\n\n# 结果：\n4\n\n迎大家关注我的微信公众号\"代码港\" & 个人网站 www.vpointer.net ~\n\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "1"}