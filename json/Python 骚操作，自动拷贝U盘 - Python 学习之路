{"title": "Python 骚操作，自动拷贝U盘 - Python 学习之路 ", "index": "python", "content": "\n阅读文本大概需要 6 分钟。\nPython 这门语言有非常多有趣的内容，比如给微信好友自动发消息、查看微信好友撤回的消息、通过微信控制电脑等等。在我公众号上也分享过很多有趣的程序，近期我会去搜集一些骚操作的 Python 程序分享给大家，并命名「Python 骚操作」专栏，持续更新！文中一些程序可能来自别人的文章，但如果我觉得程序还有所改进的地方，我会继续添加一些代码，并且我会在文末标注原程序出处。\n今天的「Python 骚操作」，分享的是一个自动拷贝电脑 U 盘内容的程序。当别人的 U 盘插入到你的电脑上时，Python 脚本会自动把 U 盘所有的内容，全部拷贝到你的电脑上。脚本每隔 5 秒扫描当前电脑是否有 U 盘插入，如果是已拷贝过的内容，则不会重复拷贝，每个相应的操作都会记录到日志文件中。\n\n如果恰好这个 U 盘里有某些室友的「学习视频」，比如下的图片。\n\n那骚气指数 10 颗星！\n注意此程序只是用来学习交流，切勿违法使用。\nPython 骚思路\n在 windows 系统中，当有 U 盘插入到你的电脑上时，会给它分配一个磁盘名称，比如在我的电脑上分配的是「J」。所以我会先定义一个「USB_FILE」变量，表示 U 盘所在的目录。\n我们利用 os 库来判断当前系统是否有「USB_FILE」，如果扫描到当前系统有这个目录，说明有 U 盘插入到当前电脑上。随后我们通过 shutil 库，把 U 盘里的内容全部拷贝到自己的电脑上。在每个操作之间我添加了 input_log() 方法，用来把当前相应的操作记录到日志文件中。 \nPython 骚源码\n程序主要是由三个函数组成，get_dirs_size()、main()、input_log()。\nget_dirs_size()\nget_dirs_size() 主要是返回要拷贝 U 盘的长度，用来判断当前要拷贝的内容是否已经重复，如果重复则无需重新拷贝。\ndef get_dirs_size(dir):\n    size = 0\n    for root, dirs, files in os.walk(dir):\n        size += sum([getsize(join(root, name)) for name in files])\n    print(size)\n    return size\nmain()\nmain() 用来执行主逻辑代码，即每隔 5 秒检查当前电脑是否有 U 盘插入。如果检查到，则记录当前 U 盘的长度。在下一次检测的时候，如果当前的长度没有发生变化，则无需重新拷贝。每个操作都会记录到日志中，以便日后查看相应的拷贝信息。\ndef main():\n    old_size = 0\n    new_dirsize = 0\n    while(1):\n        if os.path.exists(USB_PATH):\n            print(\"检测到 U 盘\")\n            input_log(\"检测到 U 盘\")\n            new_dirsize = get_dirs_size(USB_PATH)\n            if old_size != new_dirsize:\n                for filename in os.listdir(USB_PATH):\n                    print(\"拷贝了：\" + filename)\n                    input_log(\"拷贝了：\" + filename)\n                shutil.copytree(USB_PATH, SAVE_PATH)\n                old_size = new_dirsize\n            else:\n                print(\"U 盘没有变化\")\n                input_log(\"U 盘没有变化\")\n        else:\n            print(\"暂时没有 U 判断\")\n        print(\"开始休眠\")\n        input_log(\"开始休眠\")\n        sleep(5)\n\n        print(\"休眠结束，重新检测\")\n        input_log(\"休眠结束，重新检测\")\ninput_log() 利用 logging 库，来把相应的操作信息保存到一个日志文件中。\ndef input_log(message):\n    handler = logging.handlers.RotatingFileHandler(LOG_FILE, maxBytes=1024 * 1024, backupCount=5,\n                                                   encoding='utf-8')  # 实例化handler\n    fmt = '%(asctime)s - %(levelname)s - %(message)s'\n\n    formatter = logging.Formatter(fmt)  # 实例化formatter\n    handler.setFormatter(formatter)  # 为handler添加formatter\n\n    logger = logging.getLogger('tst')  # 获取名为tst的logger\n    logger.addHandler(handler)  # 为logger添加handler\n    logger.setLevel(logging.DEBUG)\n\n    logger.info(message)\nPython 骚教程\n此次的程序使用非常简单，首先下载源码，后台回复「拷贝」即可获取源码。然后修改下 USB_PATH 和 SAVE_PATH，这两个参数表示的是你 U 盘所属的位置和你想要保存的目录。\nLOG_FILE = \"test.log\"\nUSB_PATH = \"J:\\\\\"\nSAVE_PATH = \"D:\\\\disk_copy\"\n原程序参考来源：\nhttp://uuzdaisuki.com/2018/03...\n本文首发于公众号「痴海」，后台回复「1024」即可获取最新编程资源。\n比如这样的：史上最全 Python 学习资料，PDF 电子书大合集\n\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "0"}