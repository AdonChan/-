{"title": "Centos7大管家systemctl  - 达龙 ", "index": "linux,ubuntu,python,java,php", "content": "博文参考\nhttp://www.178linux.com/48343\nhttp://www.178linux.com/48674\nhttp://www.178linux.com/48563\nhttp://www.jinbuguo.com/systemd/index.html\nsystemd简介\nSystemd是由红帽公司的一名叫做Lennart Poettering的员工开发，systemd是Linux系统中最新的初始化系统（init）,它主要的设计目的是克服Sys V 固有的缺点，提高系统的启动速度，systemd和upstart是竞争对手，ubantu上使用的是upstart的启动方式，centos7上使用systemd替换了Sys V，Systemd目录是要取代Unix时代依赖一直在使用的init系统，兼容SysV和LSB的启动脚本，而且能够在进程启动中更有效地引导加载服务。\nsystem：系统启动和服务器守护进程管理器，负责在系统启动或运行时，激活系统资源，服务器进程和其他进程，根据管理，字母d是守护进程（daemon）的缩写，systemd这个名字的含义就是它要守护整个系统。\nsystemd新特性\n系统引导时实现服务并行启动\n\n按需启动守护进程\n\n自动化的服务依赖关系管理\n\n同时采用socket式与D-Bus总线式激活服务\n\n系统状态快照和恢复\n\n利用Linux的cgroups监视进程\n\n维护挂载点和自动挂载点\n\n各服务间基于依赖关系进行精密控制\nsystemd核心概念\nunit表示不同类型的sytemd对象，通过配置文件进行标识和配置，文件中主要包含了系统服务，监听socket、保存的系统快照以及其他与init相关的信息\n配置文件:\n/usr/lib/systemd/system：每个服务最主要的启动脚本设置，类似于之前的/etc/initd.d\n/run/system/system:系统执行过程中所产生的服务脚本，比上面的目录优先运行\n/etc/system/system：管理员建立的执行脚本，类似于/etc/rc.d/rcN.d/Sxx类的功能，比上面目录优先运行，在三者之中，此目录优先级最高\nUnit类型\nsystemctl -t help 查看unit类型\n\nservice unit：文件扩展名为.service，用于定义系统服务\n\ntarget unit：文件扩展名为.target，用于模拟实现“运行级别”\n\ndevice unit:.device,,用于定义内核识别的设备\n\nmount unit .mount，定义文件系统挂载点\n\nsocket unit .socket,用于标识进程间通信用的socket文件，也可以在系统启动时，延迟启动服务，实现按需启动\n\nsnapshot unit：.snapshot，关系系统快照\n\nswap unit：.swap，用于表示swap设备\n\nautomount unit：.automount，文件系统的自动挂载点如：/misc目录\n\npath unit：.path，用于定义文件系统中的一个文件或目录使用，常用于当文件系统变化时，延迟激活服务，如spool目录\n\ntime  ：.timer由systemd管理的计时器\n\n使用systemctl控制单元时，通常需要使用单元文件的全名，包括扩展名，但是有些单元可以在systemctl中使用简写方式\n\n如果无扩展名，systemctl默认把扩展名当做.service。例如netcfg和netcfg.service是等同的\n\n挂载点会自动转化为相应的.mount单元，例如/home等价于home.mount\n\n设备会自动转化为相应的.device单元，所以/dev/sd2等价于dev-sda2.device\n关键特性\n基于socket的激活机制：socket与服务进程分离\n\n基于D-Bus的激活机制\n\n基于device的激活机制\n\n基于path的激活机制\n\n系统快照：保存各unit的当前状态信息于持久存储设备中想后兼容sysv init脚本\n不兼容\nsystemctl命令固定不变，不可扩展\n\n非由systemd启动的服务，systemctl无语与之通信和控制，如：使用之前sys v风格管理的进程就无法收\nsystemd控制\nsystemd基本工具\n监视和控制systemd的主要命令是systemctl。该命令可用于查看系统状态和管理系统及服务。\n管理服务\n命令：systemctl  command name.service\n\n启动：service name start –>systemctl start name.service\n\n停止：service name stop –>systemctl stop name.service\n\n重启：service name restart–>systemctl restart name.service\n\n状态：service name status–>systemctl status name.service\n条件式重启\n已启动才重启，否则不做任何操作\n\nsystemctl try-restart name.service\n重载或重启服务\n先加载，然后再启动\n\nsystemctl reload-or-try-restart name.service\n禁止自动和手动启动\nsystemctl mask name.service\n\n执行此条命令实则创建了一个链接ln -s '/dev/null' '/etc/systemd/system/sshd.service'\n取消禁止\nsystemctl unmask name.service\n\n删除此前创建的链接\n服务查看\n查看某服务当前激活与否的状态\n\nsystemctl is-active name.service\n\n如果启动会显示active，否则会显示unknown\n查看所有已经激活的服务\nsystemctl list-units –t|–type service\n\n\n查看所有服务\n\n设定某服务开机启动\nchkconfig name on–>systemctl enable name.service\n设定某服务开机禁止启动\nchkconfig name off –>systemctl disable name.service\n查看所有服务的开机自启状态\nchkconfig  –list–>systemctl list-unit-files  -t service\n\n用来列出该服务在那些运行级别下启用或禁用\nchkconfig sshd –list –>ls /etc/system/system/*.wants/sshd.service[root@www ~]# ls /etc/systemd/system/*.wants/sshd.service/etc/systemd/system/multi-user.target.wants/sshd.service\n查看服务是否开机自启\nsystemctl is-enabled name.servcice\n查看服务的依赖关系\nsystemctl list-dependencies\n\n查看启动失败的服务\nsystemctl -failed  -t service\n查看服务单元的启用和禁用状态\nsystemctl list-unit-files –t=service\n杀死进程\nsystemctl kill 进程名\n服务状态\nsystemctl list-units  -t service -a 显示状态\nloaded：unit配置文件已处理\nactive（running）：一次或多次持续处理的运行\nactive（exited）：成功完成一次性的配置\nactive（waiting）:运行中，等待一个事件\ninactive：不运行\nenabled：开机启动\ndisabled：开机不启动\nstatic：开机不启动，但可以被另一个启用的服务激活\n\n运行级别\ntarget units：\nunit配置文件：.target 以target结尾的文件\nls /usr/lib/system/system/*.target\nsystemctl list-unit-files -type target -all\n0–>runlevel0.target, poweroff.target\n1–>runlevel1.target, rescue.target\n2–>runlevel2.target, muti-user.target\n3–>runlevel3.target, mutil-user.target\n4–>runlevel4.target, multi-user.target\n5–>runlevel5.target, graphical.target\n6–>runlevel6.target, reboot.target\n\n查看依赖性\nsystemctl list-dependencies graphical.target\n查看默认运行级别\nsystemctl get-default  在Sys V风格的系统上是查看/etc/inittab文件其中有一条id:5:initdefault:\n级别切换\nsystemctl isolate muti-user.target\n\n注意：只有当/lib/system/system/*.target文件中AllowIsolate=yes时才能奇幻（修改文件需执行systemctl daemon-reload生效）\n设定默认运行级别\nsystemctl set-default muti-user.target   实则将multi-user.target链接至default.target\n\nls –l /etc/system/system/default.target  \n进入紧急救援模式\nsystemctl rescue\n切换至emergency模式\nsystemctl emergency\n在systemd风格的系统上还能使用sysv风格系统上的关机，重启等命令，指示将该命令链接到systemctl的一个软链接\n关机：systemctl halt  systemctl poweroff\n\n重启：systemctl reboot\n\n挂起：systemctl suspend\n\n休眠：systemctl hibernate\n\n休眠并挂起：systemctl hybrid-sleep\nCentOS7引导顺序\n1、 CentOS启动流程：POST –> Boot Sequence –> Bootloader –> kernel + initramfs(initrd) –> rootfs–> /sbin/init\nUEFi或BIOS初始化，运行POST开机自检\n选择启动设备\n引导装载程序, centos7是grub2\n加载装载程序的配置文件：/etc/grub.d/ /etc/default/grub /boot/grub2/grub.cfg（注：一般上修改grub.cfg配置文件，是直接修改/etc/default/grub，然后使用命令#grub2-mkconfig /boot/grub2/grub.cfg来生成修改 ）\n\n使用systemctl控制单元时，通常需要使用单元文件的全名，包括扩展名，但是有些单元可以在systemctl中使用简写方式\n如果无扩展名，systemctl默认把扩展名当做.service。例如netcfg和netcfg.service是等同的\n挂载点会自动转化为相应的.mount单元，例如/home等价于home.mount\n设备会自动转化为相应的.device单元，所以/dev/sd2等价于dev-sda2.device加载initramfs驱动模块\n加载内核选项\n内核初始化，centos7使用systemd代替init\n执行initrd.target所有单元，包括挂载/etc/fstab\n从initramfs根文件系统切换到磁盘根目录\nsystemd执行默认target配置，配置文件/etc/systemd/default.target /etc/systemd/system/\nsystemd执行sysinit.target初始化系统及basic.target准备操作系统\nsystemd启动multi-user.target下的本机与服务器服务\nsystemd执行multi-user.target下的/etc/rc.d/rc.local\nsystemd执行multi-user.target下的getty.target及登入服务\nsystemd执行graphical需要的服务（此为图形界面所有）\nunit文件格式\n以#开头的行后面的内容会被认为是注释\n\n相关布尔值，1、yes、on、ture都是开启，0、no、off、false都是关闭\n\n时间单位默认是秒\nUnit文件组成\n [Unit]：定义与Unit类型无关的通用选项，用于提供unit的扫描信息，unit行为及依赖关系等\n\n [Service]：与特定类型相关的专用选项；此处为Service类型\n\n [Install]：定义由“systemctl enable及systemctl disable”命令在实现服务启用或禁用时用到的一些选项\nunit段常用选项\nDescription：描述信息\n\n    After：定义unit的启动次序，表示当前unit应该晚育那些unit启动，其功能与before相反\n\n    Requires：依赖到的其他units，强依赖，被一来的units无法激活时，当前unit即无法激活\n\n    Wants：依赖到的其他units，弱依赖\n\n    Conflicts：定义units间的冲突关系\nService段常用选项\n  Type：定义硬性ExecStart及相关参数的功能的unit进程启动类型\n\n    simple：默认值；这个daemon主要有ExecStart接的指令串来启动，启动后常驻于内存中\n\n    forking：由ExecStart启动的程序透过spawns延伸出其他子程序来作为此daemon的主要服务。原生父程序在启动结束后就会终止\n\n    onshot：用于执行一项任务，随后立即退出的服务，不会常驻于内存中\n\n    notify：与simple相同，但约定服务会在就绪后想systemd发送一个信号，需要配合NotifyAccess来让Systemd接收消息\n\n    idle：与simple类似，要执行这个daemon必须要所有的工作都顺利执行完毕后才会执行。这类的daemon通常是开机到最后才只能即可的服务\n\n    EnvironmentFile：环境配置文件\n\n    ExeStart：指明启动unit要运行命令或脚本的绝对路径\n\n    ExeStartPre：ExecStart前运行\n\n    ExeStartPost：ExecStart后运行\n\n    ExecStop：指明停止unit要运行的命令或脚本\n\n    Restart：当设定Restart=1时，则当次daemon服务意外终止后，会在此自动启动此服务\n\nInstall段常用选项\nAlias：别名，可使用systemctl command Alial.service\n\n    RequiredBy:被那些units所依赖，强依赖\n\n    WantedBy：被那些units所依赖，弱依赖\n\n    Also：安装本服务的时候还要安装别的相关服务\n\n注意：对于新创建的unit文件，或者修改了的unit文件，要通知systemd重载次配置文件，而后可以选择重启\n\n    systemctl  daemon-reload\n案例\nvim /etc/systemd/system/bak.service\n\n    [Unit]\n\n    Description=backup my etc\n\n    Requires=atd.service\n\n    [Service]\n\n    Type=simple\n\n    ExecStart=/bin/bash -c \"echo /testdir/bak.sh|at now\"\n\n    [Install]\n\n    WantedBy=multi-user.target\n\n    systemctl daemon-reload\n\n    systemctl start bak\n设置内核参数\n在系统启动时，进入内核参数修改，修改只影响当次启动，在启动时在linux16行后添加systemd.unit=desired.target\n\n    systemd.unit=emergency.target进入救援模式\n\nsystem.unit=recure.target  进入紧急救援模式，功能比emergency多\n\n修改完成后使用ctrl+x启动进入相应的模式\n启动排错\n文件系统损坏\n\n先尝试自动修复，如果失败则需要进入emergency 模式，提示用户修复\n\n在/etc/fstab 不存在对应的设备和UUID，等待一段时间，如果不可用，进入emergecy shell 注释哪行即可\n\n在/etc/fstab不存在对应挂载点\n\nsystemd尝试创建挂载点，否则提示进入emergecy shell\n\n在/etc/fstab不正确的挂载选项\n\n提示进入emergecy shell\n破解root口令\n启动时任意键暂停启动\n\n按e键进入编辑模式\n\n将光标移动linux16开始的行，添加内核参数rd.break\n\n按ctrl-x启动\n\nmount -o remount,rw /sysroot\n\nchroot /sysroot\n\npasswd root\n\ntouch /.autorelabel\n\nexit\n\nreboot\n\n等待系统重新打标签后即可进入系统，这时候root的密码已经更改\n\n修复grub2\nGRUB“the Grand Unified Bootloader”\n\n引导提示时可以使用命令行界面\n\n可从文件系统引导\n\n主要配置文件/boot/grub2/grub.cfg\n\n修复配置文件\n\ngrub2-mkconfig > /boot/grub2/grub.cfg\n\n修复grub\n\ngrub2-install /dev/sda BIOS环境\n\ngrub2-install UEFI环境\n\ngrub2-mkconfig -o grub.cfg\n\n重启\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "7"}