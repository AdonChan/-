{"title": "发布一个基于 mprpc_config 二次封装的 pip 包 - 个人文章 ", "index": "rpc,python", "content": "mprpc 是一个超快速的Python RPC 库，最近一直在看 RPC 的东西，考虑如何应用到公司的项目中，模仿 Celery 的方式二次封装了一下。\n项目地址： mprpc_config\n安装\npip install mprpc_config\n用法\n构建一个如下的目录结构\n\n\nconfig.py 包含RPC配置属性（任意命名）\nINSTALLED_APP 必填参数，list 类型，将每一个包含 RPC 接口的模块名放进去\n\n\napp_module_name RPC 接口模块（任意命名，可有多个）\nimplement.py 接口模块（任意命名，可有多个），里面包含 rpc 方法装饰的接口函数\n\n\nserver.py RPC 服务器\n\n初始化 mprpc_config 的 Configration 类，将 config.py 的模块名 config 作为字符串传入\n导入 mprpc_config.rpc_server 的 RPCServer 和 StreamServer，启动 RPC 服务器\n使用 bind_class 方法将初始化后的所有 RPC 接口绑定给 RPCServer\n\n使用 StreamServer 启动 RPC 服务器\n\n\nclient.py RPC 客户端（测试用，实际可分离）客户端启动方式可参考 mprpc 。\n\n\n示例\n示例代码在 example 目录\nserver.py\nfrom mprpc_config.rpc_server import RPCServer, StreamServer\nfrom mprpc_config import rpc_config\n\n\nif __name__ == '__main__':\n    print('-------start server--------')\n    config = rpc_config.Configuration(\"config\")\n    config.bind_class(RPCServer)\n    server = StreamServer(('127.0.0.1', 6000), RPCServer)\n    server.serve_forever(stop_timeout=10)\n\nclient.py\nfrom mprpc_config.rpc_client import RPCClient, RPCPoolClient\nfrom mprpc_config.rpc_client import RPCPool\n\nprint('---------- client ----------')\nclient = RPCClient('127.0.0.1', 6000)\nprint('2 add 4: ', client.call('add', 2, 4))\nprint('2 plus 4: ', client.call('plus', 2, 4))\nprint('2 minus 4: ', client.call('minus', 2, 4))\nprint('---------- done ----------')\n\nprint('---------- client pool ----------')\nclient_pool = RPCPool(RPCPoolClient, dict(host='127.0.0.1', port=6000))\nwith client_pool.connection() as client:\n    print('2 add 4: ', client.call('add', 2, 4))\n    print('2 plus 4: ', client.call('plus', 2, 4))\n    print('2 minus 4: ', client.call('minus', 2, 4))\nprint('---------- done ----------')\n\n启动 server 和 client\n$ python server.py\n\n---------- server ----------\n\n$ python client.py\n\n---------- client ----------\n2 add 4:  6\n2 plus 4:  8\n2 minus 4:  -2\n---------- done ----------\n---------- client pool ----------\n2 add 4:  6\n2 plus 4:  8\n2 minus 4:  -2\n---------- done ----------\n原文：发布一个基于 mprpc_config 二次封装的 pip 包博客：时空路由器\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "0"}