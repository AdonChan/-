{"title": "基于Redis作为发号器生成短网址Python实践 - hooyes 的专栏 ", "index": "python,redis", "content": "\n描述\n如何将长地址URL转换为短地址URL，一个比较理想的解决方案就是使用发号器生成一个唯一的整数ID，然后转换为62进制，作为短地址URL。\n实现\n发号器使用 Redis 的 incr 函数\n\nincr('SID') \n// 62个字符作为62进制符号\n0123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNOPQRSTUVWXYZ-_\n12345678 转成 62 进制为 RPGS\n代码\n# python \nimport redis\nclass ShortenURL:\n    _alphabet = '0123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNOPQRSTUVWXYZ-_'\n    _base = len(_alphabet)\n    def encode(self, number):\n        string = ''\n        while(number > 0):\n            string = self._alphabet[number % self._base] + string\n            number //= self._base\n        return string\n    def decode(self, string):\n        number = 0\n        for char in string:\n            number = number * self._base + self._alphabet.index(char)\n        return number\nt = ShortenURL()\n# Redis 作为ID发号器 \nr = redis.StrictRedis(host='127.0.0.1', port=6379, db=0,password='hooyes')\nif r.exists('SID') != 1:\n    r.set('SID',12345677)\nr.incr('SID')\nsid = int(r.get('SID'))\n\n# 生成短网址，假如域名为 85.si\nsn = t.encode(sid)\nshorturl = 'https://85.si/' + sn\nprint(shorturl)\n\n# 通过 ShortURL SN 解码到原SID\nprint(t.decode(sn))\n本文为hooyes原创首发于 hooyes.net\n继续阅读全文\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "1"}