{"title": "Strategy for Python Challenge(01) - 编程练习 ", "index": "python挑战,python,python3.x", "content": "\n最近学习Python，对语言方面已经很熟悉了，想做些练习，奈何生活中的问题以我现在的能力还不能好好的解决，故而转向Python的一些编程挑战练习，于是就有了下面这篇文章。文章在一定程度上（是大量）参考了听雨轩这个人的博客点击前往\n\n挑战关卡地址：http://www.pythonchallenge.com/pc/def/map.html 点击前往\n这一光主要是根据字母加密，在这里就是字母换成它后面的一位字母（循环）。还是很容易实现的。\n\n以下是我的版本，请注意我的环境是Python3（毕竟Python3代表未来嘛）：\n\ndef tranString(myString):\n    out = []\n    alp = 'abcdefghijklmnopqrstuvwxyzab'\n    for letter in myString:\n        out.append(alp[alp.index(letter) + 2])\n    return ''.join(out)\n\nsrc = input(\"Please input the string:\")\nprint('             The result:', end='')\nprint(tranString(src))\n\n\n再一次强调以上代码是在Python3中运行的。\n按照这种写法确实是可以解决问题了，但是毫无疑问，我的解法还是停留在C语言的思维。要知道，选择Python的一个很重要原因是：\n\n\n  \"Life is short, you need Python\"        -------Bruce Eckel\n\n\n来看看，Python更加优雅的实现方法：\n\nimport string\n\n\ndef tranString(myString):\n    table = str.maketrans(string.ascii_lowercase, \\\n                          string.ascii_lowercase[2:] + string.ascii_lowercase[-2:])\n    return myString.translate(table)\n\n\nsrc = input(\"Please input the string:\")\nprint('             The result:', end='')\nprint(tranString(src))\n\n\n以上代码，使用到的str.maketrans是str类（内置类来的，跟string有些不同，下面会说）中的一个函数，主要是建立一个映射表，用法是maketrans(x, y=None, z=None, /)。这个跟Python2中有点不一样，好像Python2中maketrans是属于string类的。\n\n在Python3中的string类已经没有方法的实现了，只是定义了一下字母的集合，如string.ascii_lowercase，string.ascii_letters。所以要是在Python3中找不到Python2中string类的函数，可以去str类中去找或者内置函数。\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "2"}