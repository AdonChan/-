{"title": "从互联网获取股票数据（历史数据，Python + MySQL） - 个人文章 ", "index": "python,mysql,股票接口", "content": "目标\n从互联网（网易数据接口）获取股票历史数据，包括开盘价、最高价、最低价、收盘价等等\n环境\nPython 3.6MySQL 5.6.34\ntable: stock_list\n\n记录数：3592 条，以该表为基础，制作 mission 清单。\ntable: stock_list_20190209（ mission list ）\n\n从这个表里，每次读取一定数量的记录，依次从互联网上获取。\ncode: getStockData.py\n'''\n《获取股票历史市值》\nCreated on 2018年2月12日\n@author: Livon\n\n# 读取 股票列表，含代码及 上市日期、终止上市日期\n\n（1）列表\n        每次执行前，手工新建一个当前日期的表，如果存在就删除重建（可能是执行一个存储过程）\n        表名：stock_list_20180212 // 股票列表\n        表字段：id, 股票代码， 是否顺利完成，获取记录数量\n        每次取一条记录，依次执行，中断了，下次可以从中断处继续。\n        \n（2）\n每条记录，按指定日期范围进行获取\n\n再建\n\n# 从网易数据接口拉取市值数据\n\n# 存入表 stock_his_marketCap 中\n\n'''\n\nimport util\nimport urllib\nimport csv\nimport time\nimport datetimeUtil\n\nfrom urllib import request\n\njobListTable = 'stock_list_20180209'\n\ndef p( msg ):\n    print( '%s - %s' % ( datetimeUtil.getDatetime(), msg ))\n\ndef startJob():\n\n    # 从数据池中读取 n 记录\n    missionList = util.getMissionList( jobListTable )\n    \n    # 循环处理上述的 n 条记录\n    for mission in missionList:\n#         for value in row:\n#             print( value )\n        # 根据记录生成一条 url，一个 url 可以获取几千条日记录\n        url = util.genUrl( mission )\n    #     url = 'http://quotes.money.163.com/service/chddata.html?code=1000001&start=19910401&end=19910409'\n    #     url += '&fields=LCLOSE;TOPEN;HIGH;LOW;TCLOSE;CHG;PCHG;TURNOVER;VOTURNOVER;VATURNOVER;TCAP;MCAP'  \n                \n#         print( dt(), ' - ', url )\n        p( 'url: %s' % url )\n        \n        # 从互联网上获取股票数据\n        dataList = util.getStockDataList( url )\n        \n        if( dataList != None ):\n            # 将数据保存在目标表：股票历史数据表中\n            insertedRows = util.insertTable( dataList )        \n            # 更新 mission List 状态标志列\n            util.updateJobList( jobListTable, mission, insertedRows )    \n        else :\n            p( 'csv 文件无数据。' )\n        \n        p('standby a moment for next mission（ you can terminal the program at this time）.')\n        time.sleep(3)\n        \n# main\nfor i in range( 0, 2 ):\n    p( 'startJob: %s' % str(i)  )\n    startJob()\n    \n# done\nprint( '= = = = = = = = = = = = = = = = = = = = = = ' )\np( 'all done !')\nprint( '= = = = = = = = = = = = = = = = = = = = = = ' )\n\ncode: util.py\n'''\nCreated on 2018年2月11日\n\n@author: Livon\n'''\n   \nimport urllib.request\n\nimport re\nimport pymysql\n\nfrom urllib import request\n\n# from stock.获取股票历史市值 import datetimeUtil\nimport datetimeUtil\n\n\n\ndef p( msg ):\n    print( '%s - %s' % ( datetimeUtil.getDatetime(), msg ))\n\n\n\n# 任务清单，每一次任务会领一份任务清单，清单中的第一项，是一个股票\n# 任务：job - 大循环\n# 目标：mission - 小目标\n# missionList - 目标清单\n# getMissionList\n# 参数：tableName 表名\ndef getMissionList( tableName ):\n    \n    rowsCount = '5' ;    \n    \n    conn = pymysql.connect(host='127.0.0.1', port=3306, user='root', passwd='root', db='stock', charset='utf8')\n    # 创建游标\n#     cursor = conn.cursor()\n\n    cursor = conn.cursor()\n    \n#     sql='select * from '+ tableName +' where doneTime is NULL limit ' + rowsCount\n    sql = 'select * from %s where doneTime is NULL limit %s' % ( tableName, rowsCount )\n    cout = cursor.execute(sql)\n#     print(\"数量： \"+str(cout))\n    rows = cursor.fetchall();\n    \n#     rows = conn.cursor().execute( sql ).fetchall()\n    \n#     for row in rows:\n#         print(\"stockCode: \"+str(row[0])+'  stockName： '+row[1]+\"  startDate： \"+ str(row[2]))\n        \n    cursor.close()\n#     \n#     try:\n#         #获取一个游标\n#         with conn.cursor() as cursor:\n#             sql='select * from '+ tableName +' where doneTime is NULL limit 1'\n#             cout=cursor.execute(sql)\n#             print(\"数量： \"+str(cout))\n# \n#             for row in cursor.fetchall():\n#                 #print('%s\\t%s\\t%s' %row)\n#                 #注意int类型需要使用str函数转义\n#                 print(\"stockCode: \"+str(row[0])+'  stockName： '+row[1]+\"  startDate： \"+ str(row[2]))\n# #         conn.commit()\n# \n#     finally:\n#         print( 'done' )\n        \n    \n    cursor.close()\n    conn.close()\n    \n#     print( datetimeUtil.getDatetime(), ' - 任务清单装载完毕！任务数量：', str( len( rows ))  )\n#     print( '%s - %s missons loaded.' % ( datetimeUtil.getDatetime(), str( len( rows )) ) )\n    p( '%s missons loaded.' % str( len( rows ) ))\n    \n    return rows\n\n\n\n\n# 生成网址\ndef genUrl( row ):    \n    \n    stockCode = row[0]\n    startDate = str( row[2] ).replace('-','')\n#     endDate = ( row[3] == 'None' )? '': row[3]\n#     endDate = ( row[3] == None ) and '' or row[3]\n    endDate = ( row[3] == None ) and row[3] or ''\n    dataSource = row[4]\n#     True and \"Fire\" or \"Water\"  \n#     print( row[3] is 'None')\n#     print( row[3] is None )\n#     print( row[3] is '' )\n#     print( type( row[3] ) )\n#     print( type( row[3] ) is None )\n#     print( type( row[3] ) is 'NoneType' )\n    \n    url = 'http://quotes.money.163.com/service/chddata.html?code=%s%s&start=%s&end=%s'\n    url = url % ( dataSource, stockCode, startDate, endDate )\n    url += '&fields=LCLOSE;TOPEN;LOW;HIGH;TCLOSE;CHG;PCHG;TURNOVER;VOTURNOVER;VATURNOVER;TCAP;MCAP'    \n    \n    return url\n\n\n\n\n\ndef getCsv( url ):    \n    \n#     csv = csv.decode('gbk')\n#     \n#     csv_str = str(csv)\n#     lines = csv_str.split(\"\\\\n\")\n#     \n#     print( len( lines))\n    \n    return ''\n\n# 从互联网上获取数据\ndef getStockDataList( url ):\n    \n    print( datetimeUtil.getDatetime(), ' - ', '准备从互联网获取数据 ...' )\n    \n#     http = urllib3.PoolManager()\n#     r = http.request('GET', url )\n#     url=\"http://www.example.com/\"\n#     headers={\"User-Agent\":\"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1\"}\n\n#     try:\n#         req = urllib3.request(url, headers )\n# #         req=urllib2.Request(url,headers=headers)\n#         response = urllib3.request2.urlopen(req)\n#     except urllib3.exceptions,e:\n#         print e.reason\n    dataList = None \n    try:\n        response = request.urlopen( url )\n        \n        csv = response.read()     \n        csv = csv.decode('gbk')  \n    #     csv = csv.decode('iso-8859-1')        \n        csv_str = str(csv)\n        \n#         print( type( csv ))\n        \n        if( len( csv_str ) < 1 ):\n            print( '获取失败' )\n        \n#         print( csv_str )\n    #     lines = csv_str.split(\"\\\\n\")    \n        lines = csv_str.splitlines()\n#         print( '行数：' + str( len( lines )))   \n        \n        dataList = [] \n        \n        for line in lines:\n#             print( line )\n            dataRow = line.split(',')\n#             print( dataRow[0] )\n            dataObj = {}\n            dataObj['日期']       = dataRow[0]\n            dataObj['股票代码']   = dataRow[1]\n            dataObj['名称']       = dataRow[2]\n            dataObj['前收盘']     = dataRow[3]\n            dataObj['开盘价']     = dataRow[4]\n            dataObj['最高价']     = dataRow[5]\n            dataObj['最低价']     = dataRow[6]\n            dataObj['收盘价']     = dataRow[7]\n            dataObj['涨跌额']     = dataRow[8]\n            dataObj['涨跌幅']     = dataRow[9]\n            dataObj['换手率']     = dataRow[10]\n            dataObj['成交量']     = dataRow[11]\n            dataObj['成交金额']   = dataRow[12]\n            dataObj['总市值']     = dataRow[13]\n            dataObj['流通市值']   = dataRow[14]\n            dataList.append(dataObj)\n        \n    except Exception as e:\n        print( e )\n        \n    \n    return dataList\n\n\ndef netEaseUrl( stockCode, startDate, endDate ):\n    \n    url = 'http://quotes.money.163.com/service/chddata.html?code=%s&start=%s&end=%s&fields='\n    url = url % ( stockCode, startDate, endDate )\n    \n    print( url )\n    \n    return url\n\ndef receiveCsv( url ):\n    \n    # http://www.cnblogs.com/sysu-blackbear/p/3629420.html\n    stockDataResponse = urllib.request.urlopen( url )\n    stockData = stockDataResponse.read()\n    # stockData = stockDataResponse.decode('utf8')\n    stockData = stockData.decode('gb2312')\n    # stockData = stockData.decode('gb2312')\n\n#     print( stockData )\n    \n    return stockData\n\n\n'''\n\n'''\ndef getStockList():\n    \n    \n    conn = pymysql.connect(host='127.0.0.1', port=3306, user='root', passwd='root', db='stock', charset='utf8')\n    # 创建游标\n#     cursor = conn.cursor()\n    \n    try:\n        #获取一个游标\n        with conn.cursor() as cursor:\n            sql='select * from stock_list'\n            cout=cursor.execute(sql)\n            print(\"数量： \"+str(cout))\n\n            for row in cursor.fetchall():\n                #print('%s\\t%s\\t%s' %row)\n                #注意int类型需要使用str函数转义\n                print(\"stockCode: \"+str(row[0])+'  stockName： '+row[1]+\"  startDate： \"+ str(row[2]))\n#         conn.commit()\n\n    finally:\n        cursor.close()\n        conn.close()\n\n\n  \ndef dbStore( str_stocks ):\n    \n    \n    print( type( str_stocks ))\n        \n    stocks = re.findall(\"\\[(.*?)\\]\",str_stocks )\n    stocks = re.findall(\"{(.*?)}\",stocks[0])    \n    \n    # 创建连接\n    conn = pymysql.connect(host='127.0.0.1', port=3306, user='root', passwd='root', db='stock', charset='utf8')\n    # 创建游标\n    cursor = conn.cursor()\n        \n    for i in range( 0, len( stocks ) ):\n        print( 'No.' + str(i))\n        properties = stocks[i].split(',')            \n#         print( properties )         \n#         print( type( properties ))\n#         effect_rows = insertDb( properties, cursor )\n#         time.sleep(1)\n        \n    # 提交，不然无法保存新建或者修改的数据\n    conn.commit()\n  \n    # 关闭游标\n    cursor.close()\n    # 关闭连接\n    conn.close()    \n    \n    return ''\n\n\ndef updateJobList( jobListTable, row, insertedRows ):\n    \n    \n    # 创建连接\n    conn = pymysql.connect(host='127.0.0.1', port=3306, user='root', passwd='root', db='stock', charset='utf8')\n    # 创建游标\n    cursor = conn.cursor()\n#     otherStyletime == \"2013-10-10 23:40:00\"\n    \n#     sql ='update ' + jobListTable + ' set doneTime = \"' + otherStyleTime + '\" where stockCode = \"' + row[0] + '\"'\n    \n    sql = 'update %s set doneTime = \"%s\" , receivedRows = %s where stockCode = \"%s\"' % ( jobListTable, datetimeUtil.getDatetime(), insertedRows, row[0] )\n    \n    print( datetimeUtil.getDatetime(), ' - 更新任务清单：', sql )\n    \n    effect_row = cursor.execute( sql )\n    \n    conn.commit()  \n    # 关闭游标\n    cursor.close()\n    # 关闭连接\n    conn.close()    \n    \n    \n    \ndef insertTable( dataList ):\n    \n    # 创建连接\n    conn = pymysql.connect(host='127.0.0.1', port=3306, user='root', passwd='root', db='stock', charset='utf8')\n    # 创建游标\n    cursor = conn.cursor()\n        \n    insertedRows = 0\n    \n    for i in range( 1, len( dataList )):\n        \n        for (k,v) in  dataList[i].items(): \n#             print( \"dataList[i][%s]=\" % k,v )\n#             print( v )\n            if( v == 'None' ):\n#                 print('Change to NULL')\n                dataList[i][k] = 'NULL'\n        \n#         for data in dataList[i]:\n#             print( data. )\n#             data = ( data == None ) and data or 'NULL'        \n        \n        sql = 'INSERT INTO stock_his_data ( '\n        sql += '日期,'\n        sql += '股票代码,'\n        sql += '名称,'\n        sql += '前收盘,'\n        sql += '开盘价,'\n        sql += '最低价,'\n        sql += '最高价,'\n        sql += '收盘价,'\n        sql += '涨跌额,'\n        sql += '涨跌幅,'\n        sql += '换手率,'\n        sql += '成交量,'\n        sql += '成交金额,'\n        sql += '总市值,'\n        sql += '流通市值'   \n        sql += ' ) '    \n        sql += 'VALUES'  \n        sql += ' ( '  \n        \n        sql += '\"' + dataList[i]['日期']    +  '\",'\n        sql += '\"' + dataList[i]['股票代码']+  '\",'\n        sql += '\"' + dataList[i]['名称']    +  '\",'\n        sql +=       dataList[i]['前收盘']  +  ' ,'\n        sql +=       dataList[i]['开盘价']  +  ' ,'\n        sql +=       dataList[i]['最低价']  +  ' ,'\n        sql +=       dataList[i]['最高价']  +  ' ,'\n        sql +=       dataList[i]['收盘价']  +  ' ,'\n        sql +=       dataList[i]['涨跌额']  +  ' ,'\n        sql +=       dataList[i]['涨跌幅']  +  ' ,'\n        sql +=       dataList[i]['换手率']  +  ' ,'\n        sql +=       dataList[i]['成交量']  +  ' ,'\n        sql +=       dataList[i]['成交金额']+  ' ,'\n        sql +=       dataList[i]['总市值']  +  ' ,'\n        sql +=       dataList[i]['流通市值']\n        sql += ' ) '\n        \n#         print( sql )\n        \n        effect_row = cursor.execute( sql )\n        \n        if( effect_row > 0 ):\n            insertedRows += 1\n            \n    print( datetimeUtil.getDatetime(), ' - 数据数量：', insertedRows )\n#     \n    # 提交，不然无法保存新建或者修改的数据\n    conn.commit()  \n    # 关闭游标\n    cursor.close()\n    # 关闭连接\n    conn.close()    \n    \n    \n    \n#     arr_values = []\n#     arr_columns = []\n#     \n#     for j in range( 0, len( properties) ):\n#         \n# #         print( 'propertie['+ str(j)+']: ' + properties[j] )\n# #         key_value = properties[j].split(':')\n# #         print( key_value[0] + ' -> ' + key_value[1] )\n#         key = properties[j][:properties[j].find(':')]\n#         value = properties[j][properties[j].find(':')+1:]\n#         value = value.replace('\"', '')\n# #         print( key + ' -> ' + value )\n# #         sql += '\"' + value + '\"'\n#         arr_columns.append( '`' + key + '`' )\n# #         arr_columns.append( key )\n#         arr_values.append( '\"' + value + '\"' )\n#         \n#     sql = 'insert into stock_sina '\n#     sql = sql + ' ( ' + ','.join( arr_columns ) + ' ) VALUES ( ' + ','.join( arr_values ) + ' ) '\n    \n#     print( sql )\n       \n#     effect_row = cursor.execute( sql )\n    \n    return insertedRows\n\n        \ncode: datetimeUtil.py\n'''\nCreated on 2018年2月14日\n\n@author: Livon\n'''\n\nimport time\n\ndef getDatetime():\n    \n    timeArray = time.localtime( time.time() )\n    otherStyleTime = time.strftime(\"%Y-%m-%d %H:%M:%S\", timeArray)\n    \n    return otherStyleTime\n最终得到的数据：table: stock_his_data\n\n记录总数：9045612（九百万）\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "5"}