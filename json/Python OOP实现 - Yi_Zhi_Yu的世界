{"title": "Python OOP实现 - Yi_Zhi_Yu的世界 ", "index": "oop,python", "content": "OOP(面向对象编程)的思想在很多语言中都已经很成熟了， 在Python里， 也支持这种编程方式面向编程里面的几个概念: 类， 对象， 属性， 方法，下面就用例子看一下如何实现\n类， 对象(实例)\nclass Classname(object):\n关键字class, 括号中的object表是Classname类继承的类， 默认都至少要继承一个叫object的类\n比如要定义一个学生类：\nclass Student():\n    pass\n这里我们仅仅是定义了一个类， 并未做任何实际的工作\n那如何使用一个类呢， 当然要实例化这个类了\ns = Sutdent()\nprint s #<__main__.Student object at 0x7fb60ad6c450>\n那这个s 其实就是这个类的一个对象(实例)，\n属性\n这个其实就是类中的一些变量， 可以外部赋值， 也可内部定义， 假设我们外部定义某个Student实例的名字\ns.name = \"Yi_Zhi_Yu\"\nprint s.name #Yi_Zhi_Yu\n在类内部定义\nclass Student():\n    name = \"Yi_Zhi_Yu\"\n \ns = Sutdent()\nprint s.name #Yi_Zhi_Yu\n方法\n类的方法， 表示类的对象可以进行的操作\nclass Student():\n    name = \"Yi_Zhi_Yu\"\n    \n    def set_name(self, name):\n        self.name = name\n   \n    def get_name(self)\n        return self.name\n #实例化\n s = Sutdent()\n s.set_name(\"Tony\")\n print s.get_name() #Tony\n注意， 类中的每个方法定义的时候都至少要带一个参数 self, 他代表的是绑定的实例， 即方法中要操作的对象， 这个和PHP很不一样， 假如不带这个self 参数\ndef get_name()\n        return \"Tony\" \nprint s.get_name()    \n#TypeError: get_name() takes no arguments (1 given)    \n会报错， 还说已经传递了一个给get_name, 实际上这个1 given 就是对象， get_name中需要有个参数接收， 就是self, 所以实际上这个self也可以用其他名称代替， 因为他仅仅是个参数名\ndef get_name(m):\n    return m.name      \nprint s.get_name() # Tony  \n这个self也仅仅是在定义方法时带， 实际调用的时候要省略， 为什么的原因就是上面说的， 会自动传递进去 \n另外在说一个特殊的方法， 在实例化类的时候， 往往需要在实例的时候就执行某些操作， 在PHP中叫构造函数， 那python中呢: __init__  \n这里顺便把完成的类代码写下来\nclass Student():\n    name = \"\"\n\n    def __init__(self, name): #自然要带self\n        self.name = name\n\n    def set_name(self, name):\n        self.name = name\n\n    def get_name(m):\n        return m.name\n \n s = Student(\"Yi_Zhi_Yu\")\n print s.get_name() #Yi_Zhi_Yu\n模块与类\n我们写好了上面的类, 文件名称叫student.py， 如何被其他模块引入呢第一种方式\nimport student\ns = student.Student(\"Yi_Zhi_Yu\")\nprint s.get_name() #Yi_Zhi_Yu\n另一种方式\nfrom student import Student\ns = Student(\"Yi_Zhi_yu\")\nprint s.get_name()\n其实， 第二种方式是用于引入某个模块的某些函数或类或变量， 而不是完全引入，比如， 我们在上面的student模块文件的Student类外层添加一个函数\ndef f_i_test():\n      print \"Hello World\"\n当我们需要这个模块中的这个函数，而不需要Student类的时候， 就可以使用\nfrom student import f_i_test\nf_i_test() #Hello World\n\n                ", "mainLikeNum": ["3 "], "mainBookmarkNum": "18"}