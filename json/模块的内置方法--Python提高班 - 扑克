{"title": "模块的内置方法--Python提高班 - 扑克 ", "index": "python", "content": "这期的话题有点简单, 整理下常见的模块内置方法\n\n刚开始学Python的时候, 看到if __name__ == '__main__': main()就不明觉厉了, 一直好奇__name__这货到底是个什么东东\n\n实际上, __name__是Python中模块的内置属性, 除此之外, 经常用到的还有__file__, __doc__, __all__, __package__等等\n\n__name__\n\n__name__是模块内置的一个属性, 一般如果模块是被引用的时候, 它的值是模块名, 如果这个python文件被直接运行, 那么它的值是'__main__'\n\n>>> __name__\n'__main__'\n>>> import os\n>>> os.__name__\n'os'\n\n\n所以我们写一个脚本的时候,通过判断__name__来确定脚本是被引用, 还是被直接运行\n\nif __name__ == `__main__`:\n    main()\n\n\n__file__\n\n被引用模块文件的路径\n\n>>> import os\n>>> os.__file__\n'/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'\n\n\n__doc__\n\n模块的注释文档\n\nclass MyClass:\n    \"\"\"这是MyClass的注释, \n    调用下面myClass.__doc__的时候会返回这段内容\"\"\"\n\n    def funcA(self):\n        \"\"\"这是funcA的注释文档\"\"\"\n        return \"hello\"\n\nmyClass = MyClass()\n\n\n调用myClass.__doc__会返回MyClass的注释文档, myClass.funcA.__doc__会返回funcA的注释文档\n\n如果执行help(MyClass), 所看到的文档实际就是DocStrings收集该类下所有的注释生成的文档\n\n__all__\n\n当你写一个Python的模块的时候, 一般在__init__.py中指定__all__来表示当这个模块被import * from xxx的时候, 有哪些模块会被import进来,\n\n当然, 我们推荐尽量不使用import *\n\n__package__\n\n__package__主要是为了相对引用而设置的一个属性, 如果所在的文件是一个package的话, 它和__name__的值是一样的, 如果是子模块的话, 它的值就跟父模块一致\n\n比如 modA/modB/aa.py中__name__的值是modA.modB.aa __package__是modA.modBmodA/modB/__init__.py中__name__和__package__的值都是modA.modB\n\n参考: The import system\n\n                ", "mainLikeNum": ["3 "], "mainBookmarkNum": "16"}