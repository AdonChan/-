{"title": "4. Python3源码—字符串（bytes）对象 - 个人文章 ", "index": "源码,python", "content": "4.1. 字符串对象\n字符串对象是“变长对象”。\n4.1.1. Python中的创建\nPython中字符串（bytes）对象创建最重要的方法为PyBytes_FromStringAndSize，如下Python语句最终会调用到PyBytes_FromStringAndSize：\n\n4.1.2. PyBytes_FromStringAndSize的C调用栈\n词法解析，最终调到PyBytes_FromStringAndSize，调用顺序如下：\n\n4.1.3. PyBytes_FromStringAndSize源码\n\n可以看到：\n字符串对象的C数据结构：\n\n\n空串缓存：空串（nullstring）为同一个地址，第二次需要空串时，只是将计数加1，在_PyBytes_FromSize中实现空串缓存；\n字符缓冲池：字符（characters）为同一个地址，第二次需要该字符时，只是将计数加1，在PyBytes_FromStringAndSize中实现字符缓存；\n\n4.2. 字符串对象的特性\n支持tp_as_number、tp_as_sequence、tp_as_mapping这三种操作。\n4.2.1. 数值操作\n\n4.2.2. 序列操作\n\n因为没有实现PySequenceMethods中的设置方法，所以字符串不可变。\n其中：\nbytes_length\n\nbytes_concat\n\n多个字符串相加效率低于join，join只分配一次内存；\nbytes_repeat\n\n效率要高于同个字符串相加；\n\nbytes_item：暂时没有找到相应Python语句；\nbytes_contains\n\n\n4.2.3. 关联操作\n\n其中：\nbytes_subscript\n\ntest[1]会走bytes_subscript方法的index分支，test[0:5]会走slice分支；\n4.2.4. to string\n\n4.2.5. hash\n\n4.2.6. 比较\n\n4.2.7. 内置方法\n\n4.3 参考\nPython源码剖析\n本文作者：whj0709阅读原文本文为云栖社区原创内容，未经允许不得转载。\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "0"}