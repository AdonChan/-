{"title": "基于tornado的web ssh项目 - 开源项目 ", "index": "tornado,python", "content": "引言\n上次有幸观看梁胜大牛的技术分享，其中一个演示是浏览器中显示了一个linux终端并登录管理server，于是决定自己实现一个  github中有一个项目gateone实现了此功能，本来想学习一下，但是考虑到代码实在过多就放弃了，下面说下自己的实现。\n项目地址：[webssh]: https://github.com/xsank/webssh欢迎大家拍砖\n介绍\n\n终端展示使用了github开源项目 term.js，这是个很赞的项目，因为在刚开始写的时候你会发现linux返回的很多内容带有特殊字符，需要穷举处理，而这里正好有一个框架帮你做了这些复杂的操作例如，linux 本身返回的字符是这样子的：  所以你需要对于特殊字符格式化处理，才能正确显示成linux终端的文本行\n\n长连接这里使用了websocket，因为类似top这样的监控命令需要服务器定时推送在这里，为了提高server端性能及效率，使用了epoll的ET模式，主要代码如下：\ndef run(self):\n    while True:\n        epoll_list = self.select.poll()\n        for fd, events in epoll_list:\n            if select.EPOLLIN & events:\n                while True:\n                    try:\n                        data = self.bridges[fd].shell.recv(1024)\n                    except socket.error, e:\n                        if e.errno == errno.EAGAIN:\n                            self.select.modify(fd, select.EPOLLET)\n                        elif isinstance(e, socket.timeout):\n                            break\n                        else:\n                            self.close(fd)\n                    try:\n                        self.futures[fd].send(data)\n                    except StopIteration:\n                        break\n            elif select.EPOLLHUP & events:\n                self.close(fd)\n            else:\n                continue\n由epoll来管理所有websocket连接即事件处理\n\nssh登录使用第三方paramiko库来支持server的加密登录总结来说，webssh相当于一个ssh代理服务器，只要她可以访问的服务器，你都可以通过浏览器连接登录而不用任何客户端\n\n演示\n下面是几张演示图稿：\n\n\n\n最后\n如果使用上有任何问题，欢迎提给我：Email:xsank#foxmail.com\n\n                ", "mainLikeNum": ["1 "], "mainBookmarkNum": "8"}