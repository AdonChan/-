{"title": "Python代码片段收藏 - michael翔的IT私房菜 ", "index": "python", "content": "Python删除文件夹\ndef onerror(func, path, exc_info):\n    \"\"\"\n    Error handler for ``shutil.rmtree``.\n\n    If the error is due to an access error (read only file)\n    it attempts to add write permission and then retries.\n\n    If the error is for another reason it re-raises the error.\n\n    Usage : ``shutil.rmtree(path, onerror=onerror)``\n    \"\"\"\n    import stat\n    if not os.access(path, os.W_OK):\n        # Is the error an access error ?\n        os.chmod(path, stat.S_IWUSR)\n        func(path)\n    else:\n        raise\n参考：\nshutil.rmtree fails on Windows with 'Access is denied'\nPython Requests 编码问题\nrequests github issue\nPython json 读取json文件\nimport json\nwith open('build_info.json','r') as f:\n    array = json.load(f)\nprint(array)\n\nReading JSON file with Python 3\nWhat is the difference between json.load() and json.loads() functions in Python?\njson — JSON encoder and decoder\n\nPython 切换目录\n执行完，返回之前目录\nimport contextlib\n@contextlib.contextmanager\ndef cdir(path):\n    prev_cwd = os.getcwd()\n    os.chdir(path)\n    try:\n        yield\n    finally:\n        os.chdir(prev_cwd)\n用法：\nwith cdir(path):\n    func()\nPython下载文件\nurlretrieve\nPython Pandas处理Excel数据\n逐行处理数据 iterrows\nfor idx, row in data.iterrows():\n    project_name=row['projectName']\n    tag_name=row['tagName']\nPandas追加模式写入csv文件\ndata = pd.DataFrame([[1,2,3]])\ncsv_headers=['A','B','C']\ndata.to_csv('./Marvel3_yingpping.csv', header=csv_headers, index=False, mode='a+', encoding='utf-8')\ndata = pd.DataFrame([[4,5,6]])\ndata.to_csv('./Marvel3_yingpping.csv', header=False, index=False, mode='a+', encoding='utf-8')\ndata = pd.DataFrame([[7,8,9]])\ndata.to_csv('./Marvel3_yingpping.csv', header=False, index=False, mode='a+', encoding='utf-8')\n只列出文件夹下的文件夹\n[ name for name in os.listdir(thedir) if os.path.isdir(os.path.join(thedir, name)) ]\n\nfilter(os.path.isdir, os.listdir(os.getcwd()))\n[How to list only top level directories in Python?\n](https://stackoverflow.com/que...\nPython Path相关问题\nos.path.split(r\"C:\\foo\\bar\\file_name.txt\")\n格式化文件路径\nitero\n看题目：\n\npython数据处理，字典生成的一个问题答案中有位前辈用这个用的炉火纯青啊！\nPython运行shell命令的函数：\ndef run(cmd_str, fatal=True):\n    # this is not a good implement\n    log.command(log.term.cmd(cmd_str))\n    ret = os.system(cmd_str)\n    if ret is not 0:\n        if fatal:\n            log.error('[ERROR] run cmd: %s failed', cmd_str)\n            os._exit(1)\n        else:\n            log.info('[INFO] %s is not fatal' % cmd_str)\nPython对字符串的处理\n索引\ntag='hx/mitaka_compute/12.0.0'\n[m.start() for m in re.finditer('/',tag)]\n参考：\n在Python中查找所有出现的子字符串\n将百分号的百分比字符串转为数字\np=\"75%\"\nfloat(p.strip('%'))/100\n参考：\nConvert to numeric Python\n判断某个module是否是built-in module？\nIn [48]: import sys\n\nIn [49]: sys.path=[]\n\nIn [50]: import codecs\n\nIn [51]: import lxml\n\nIn [52]: import pandas\n-------------------------------------------------------------------------\n\nModuleNotFoundError                     Traceback (most recent call last)\n\n<ipython-input-52-38d4b0363d82> in <module>()\n----> 1 import pandas\n\nModuleNotFoundError: No module named 'pandas'\n参考：\nHow to check if a module/library/package is part of the python standard library?\nPython起一个简单的文件服务器\n你如果想快速且简单地共享一个目录中的文件，你只需在终端执行下面对应版本的指令：\n# Python2\npython -m SimpleHTTPServer\n\n# Python 3\npython3 -m http.server\nPython 技巧\nPython根据url下载目录或者文件\n    def download_package(self, package_url):\n        print(\"start download_build_result\")\n        if not package_url.endswith(\"/\"):\n            package_url += '/'\n        cmd = \"wget -c -r -nd -np -P %s %s\" % (\"output\", package_url)\n        print(cmd)\n        os.system(cmd)\n        print(os.getcwd())\n        print(\"finish download_build_result\")\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "0"}