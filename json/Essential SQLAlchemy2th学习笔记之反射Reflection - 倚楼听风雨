{"title": "Essential SQLAlchemy2th学习笔记之反射Reflection - 倚楼听风雨 ", "index": "sqlalchemy,python", "content": "示例数据库下载:http://chinookdatabase.codepl...在SQLALchemy中，我们使用反射技术来获取相关database schema信息,如tables,views,indexes等等\nCore模块反射\n反射单表\nfrom sqlalchemy import MetaData, create_engine\nmetadata = MetaData()\nengine = create_engine('sqlite:///Chinook_Sqlite.sqlite')\nfrom sqlalchemy import Table\n#这里我们并没有使用Column来定义列，而是使用autoload,autoload_with参数来从已有数据表中反射出相关列定义。\nartist = Table('Artist', metadata, autoload=True, autoload_with=engine)\n#接下来使用反射出来的表对象进行相关查询\nartist.columns.keys() #列出所有的列名\nfrom sqlalchemy import select\ns = select([artist]).limit(10)\nengine.execute(s).fetchall()\n#metadata.tables['Artist']\n#artist.foreign_keys\n#from sqlalchemy import ForeignKeyConstraint\n#album.append_constraint(ForeignKeyConstraint(['ArtistId'], ['artist.ArtistId']))\n#str(artist.join(album))\n反射整个数据库\n#使用reflect()方法，它不会返回任何值\nmetadata.reflect(bind=engine)\n#但是我们仍然可以进行相关检索\nmetadata.tables.keys() #获取所有的表名\n注意：从SQLAlchemy1.0版本开始，我们不能通过反射获取CheckConstraints, comments, or triggers.You also can’t reflect client-side defaults or an association between a sequence and a column.(这意味着我们会失去注释，或者表关联关系)但是我们可以通过相关方法或函数手动添加它们。\n基于反射对象进行查询\nplaylist = metadata.tables['Playlist']\nfrom sqlalchemy import select\ns = select([playlist]).limit(10)\nengine.execute(s).fetchall()\nORM模块反射\nReflecting a Database with Automap\n这里我们不再使用declarative_base而是使用扩展模块的automap_base\nfrom sqlalchemy.ext.automap import automap_base\nBase = automap_base()\nfrom sqlalchemy import create_engine\nengine = create_engine('sqlite:///Chinook_Sqlite.sqlite')\nBase.prepare(engine, reflect=True)\nBase.classes.keys() #获取所有的对象名\n#获取表对象\nArtist = Base.classes.Artist\nAlbum = Base.classes.Album\n\n#进行操作\nfrom sqlalchemy.orm import Session\nsession = Session(engine)\nfor artist in session.query(Artist).limit(10):\n    print(artist.ArtistId, artist.Name)\nReflected Relationships反射关联关系\nAutomap可以反射并建立表之间的many-to-one, one-to-many, and many-to-many relationships.但是建立关联列的命名为< related_object>_collection例如：\nartist = session.query(Artist).first()\nfor album in artist.album_collection:\n    print('{} - {}'.format(artist.Name, album.Title))\n关于Automap更多信息请详细参看官方文档\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "2"}