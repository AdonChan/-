{"title": "模拟32位机器左移和加法 - 暂无 ", "index": "python,32位左移", "content": "首先，明确要实现什么功能。\n\n因为，想实现即有在32位平台上的c++程序功能，有一个原来的hash算法需要实现，算法中涉及左移及加法，及溢出…Orz。\n\n\n问题描述：用python实现原hash算法，需考虑32位环境。\n解决思路：\n首先敲几行，看一下实际运行情况：\n32位机器上，c++程序：\n\n1 << 31 == 2147483648\n1 << 32 == 1\n2304051616 + 94351853 == 94351636\n...\n\n\n于是边测边改，扣下如下代码：\n\ndef leftMoveNum(i, num):\n    s = bin(i)\n    num %= 32\n    #print 'len(s),', len(s)\n    s = s[2:]\n    #print 'orgin s, %34s' % s\n    if len(s) < 32:\n        c = 32 - len(s)\n        s = c * '0' + s\n    #print 'dest  s, %34s' % s\n\n    s = ''.join(['0b', s[num:], num * '0'])\n    #print 'end   s, %34s' % s\n    return int(s, 2)\n\ndef add(a, b):\n    num = a + b\n    s = bin(num)\n    s = s[2:]\n    s = ''.join(['0b', s[-32:]])\n    return int(s, 2)\n\n\n程序主要利用函数bin和int，python操作数字的二进制字符串很过瘾，但对边界极值没有检查，还存有bug。\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "1"}