{"title": "leetcode-90. Subsets II - 个人文章 ", "index": "python", "content": "题目描述\nGiven a collection of integers that might contain duplicates, nums, return all possible subsets (the power set).\n注意\nNote: The solution set must not contain duplicate subsets.\nExample:\nInput: [1,2,2]\nOutput:\n[[2],[1],[1,2,2],[2,2],[1,2],[]]\n题目解读：   找出所有的子集。思路：\n确定子集的来源， 遍历原始列表，每一个元素都往已有的子集列表里边添加，同时添加到已有的子集中去，产生新的子集。\n类似于动态规划思想，依赖于之前的东西产生现在的东西。\n\n\nclass Solution:\n    # @param num, a list of integer\n    # @return a list of lists of integer\n    def subsetsWithDup(self, S):\n        res = [[]]\n        S.sort()\n        for i in range(len(S)):\n            if i==0 or S[i]!=S[i-1]:\n                l=len(res)\n            for j in range(len(res)-l,len(res)):\n                res.append(res[j]+[S[i]])\n        return res\n\n\nif __name__=='__main__':\n    st=Solution()\n    S=[1,2,2]\n    S=[0]\n    result=st.subsetsWithDup(S)\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "0"}