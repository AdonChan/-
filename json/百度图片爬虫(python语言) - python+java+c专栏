{"title": "百度图片爬虫(python语言) - python+java+c专栏 ", "index": "网页爬虫,百度爬虫,程序,python", "content": "上一篇我写了如何爬取百度网盘的爬虫，在这里还是重温一下，把链接附上：\nhttp://www.cnblogs.com/huangx...\n这一篇我想写写如何爬取百度图片的爬虫，这个爬虫也是：搜搜gif（在线制作功能点我） 的爬虫代码，其实爬虫整体框架还是差不多的，但就是会涉及到图片的的一些处理，还是花费了我不少时间的，所以我请阅读的本爬虫的孩子还是认真一些，毕竟程序猿都不容易啊。好的，我也不想多说，爬虫的代码我会分享到去转盘网，想下载本爬虫代码的孩子请点我下载，如果没有下载到，请点击这个链接。\n附代码：\nPS:不会python的孩子赶快去补补吧，先把基础搞清楚再说\n#coding:utf-8\n \n\"\"\"\n \nCreated on 2015-9-17\n \n  \n \n@author: huangxie\n \n\"\"\"\n \nimport time,math,os,re,urllib,urllib2,cookielib\n \nfrom bs4 import BeautifulSoup\n \nimport time \n \nimport re\n \nimport uuid\n \nimport json\n \nfrom threading import Thread\n \nfrom Queue import Queue\n \nimport MySQLdb as mdb\n \nimport sys\n \nimport threading\n \nimport utils\n \nimport imitate_browser\n \nfrom MySQLdb.constants.REFRESH import STATUS\n \nreload(sys)\n \nsys.setdefaultencoding('utf-8')\n \n  \n \nDB_HOST = '127.0.0.1'\n \nDB_USER = 'root'\n \nDB_PASS = 'root'\n \nproxy = {u'http':u'222.39.64.13:8118'}\n \nTOP_URL=\"http://image.baidu.com/i?tn=resultjsonavatarnew&ie=utf-8&word={word}&pn={pn}&rn={rn}\"\n \nKEYWORD_URL=\"https://www.baidu.com/s?ie=utf-8&f=8&tn=baidu&wd={wd}\"\n \n  \n \n\"\"\"\n \ni_headers = {'User-Agent':'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.11 (KHTML, like Gecko) Chrome/23.0.1271.64 Safari/537.11',\n \n              'Accept':'json;q=0.9,*/*;q=0.8',\n \n              'Accept-Charset':'utf-8;q=0.7,*;q=0.3',\n \n              'Accept-Encoding':'gzip',\n \n              'Connection':'close',\n \n              'Referer':None #注意如果依然不能抓取的话，这里可以设置抓取网站的host\n \n            }\n \n\"\"\"\n \ni_headers = {'User-Agent':'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/31.0.1650.48'}\n \n  \n \ndef GetDateString():\n \n    x = time.localtime(time.time())\n \n    foldername = str(x.__getattribute__(\"tm_year\"))+\"-\"+str(x.__getattribute__(\"tm_mon\"))+\"-\"+str(x.__getattribute__(\"tm_mday\"))\n \n    return foldername\n \n  \n \nclass BaiduImage(threading.Thread):    \n \n  \n \n    def __init__(self):\n \n        Thread.__init__(self)\n \n        self.browser=imitate_browser.BrowserBase()\n \n        self.chance=0\n \n        self.chance1=0\n \n        self.request_queue=Queue()\n \n        self.wait_ana_queue=Queue()\n \n        #self.key_word_queue.put(((\"动态图\", 0, 24)))\n \n        self.count=0\n \n        self.mutex = threading.RLock() #可重入锁，使单线程可以再次获得已经获得的锁\n \n        self.commit_count=0\n \n        self.ID=500\n \n        self.next_proxy_set = set()\n \n        self.dbconn = mdb.connect(DB_HOST, DB_USER, DB_PASS, 'sosogif', charset='utf8')\n \n        self.dbconn.autocommit(False)\n \n        self.dbcurr = self.dbconn.cursor()\n \n        self.dbcurr.execute('SET NAMES utf8')\n \n         \n \n    \"\"\"\n \n    def run(self):\n \n        while True:\n \n            self.get_pic()\n \n    \"\"\"\n \n     \n \n    def work(self,item):\n \n        print \"start thread\",item\n \n        while True: #MAX_REQUEST条以上则等待\n \n            self.get_pic()\n \n            self.prepare_request()\n \n     \n \n    def format_keyword_url(self,keyword):\n \n   \n \n        return KEYWORD_URL.format(wd=keyword).encode('utf-8')\n \n            \n \n    def generateSeed(self,url):\n \n         \n \n        html = self.browser.openurl(url).read()\n \n        if html:\n \n            try:\n \n                soup = BeautifulSoup(html)\n \n                trs = soup.find('div', id='rs').find('table').find_all('tr') #获得所有行\n \n                for tr in trs:\n \n                    ths=tr.find_all('th')\n \n                    for th in ths:\n \n                        a=th.find_all('a')[0]\n \n                        keyword=a.text.strip()\n \n                        if \"动态图\" in keyword or \"gif\" in keyword:\n \n                            print \"keyword\",keyword\n \n                            self.dbcurr.execute('select id from info where word=%s',(keyword))\n \n                            y = self.dbcurr.fetchone()\n \n                            if not y:\n \n                                self.dbcurr.execute('INSERT INTO info(word,status,page_num,left_num,how_many) VALUES(%s,0,0,0,0)',(keyword))\n \n                    self.dbconn.commit()\n \n            except:\n \n                pass\n \n                 \n \n                \n \n    def prepare_request(self):\n \n        self.lock()\n \n        self.dbcurr.execute('select * from info where status=0')\n \n        result = self.dbcurr.fetchone()\n \n        if result:\n \n            id,word,status,page_num,left_num,how_many=result\n \n            self.request_queue.put((id,word,page_num))\n \n            if page_num==0 and left_num==0 and how_many==0:\n \n                url=self.format_keyword_url(word)\n \n                self.generateSeed(url)\n \n                html=\"\"\n \n                try:\n \n                    url=self.format_top_url(word, page_num, 24)\n \n                    html = self.browser.openurl(url).read()\n \n                except Exception as err:\n \n                    print \"err\",err\n \n                    #pass\n \n                if html!=\"\":\n \n                    how_many=self.how_many(html)\n \n                    print \"how_many\",how_many\n \n                    if how_many==None:\n \n                        how_many=0\n \n                    t=math.ceil(how_many/24*100) #只要前1/100即可\n \n                    num = int(t)\n \n                    for i  in xrange(0,num-1):\n \n                        self.dbcurr.execute('INSERT INTO info(word,status,page_num,left_num,how_many) VALUES(%s,%s,%s,%s,%s)',(word,0,i*24,num-i,how_many))\n \n                    self.dbcurr.execute('update info SET status=1 WHERE id=%s',(id)) #置为已经访问\n \n                    self.dbconn.commit()\n \n        self.unlock()\n \n                 \n \n             \n \n    def start_work(self,req_max):\n \n        for item in xrange(req_max):\n \n            t = threading.Thread(target=self.work, args=(item,))\n \n            t.setDaemon(True)\n \n            t.start()\n \n             \n \n    def lock(self): #加锁\n \n        self.mutex.acquire()\n \n  \n \n    def unlock(self): #解锁\n \n        self.mutex.release()\n \n  \n \n    def get_para(self,url,key):\n \n        values = url.split('?')[-1]\n \n        for key_value in values.split('&'):\n \n            value=key_value.split('=')\n \n            if value[0]==key:\n \n                return value[1]\n \n        return None \n \n     \n \n    def makeDateFolder( self,par,child):\n \n        #self.lock()\n \n        if os.path.isdir( par ):\n \n            path=par + '//' + GetDateString()\n \n            newFolderName = path+'//'+child\n \n            if not os.path.isdir(path):\n \n                os.mkdir(path)\n \n            if not os.path.isdir( newFolderName ):\n \n                os.mkdir( newFolderName )\n \n            return newFolderName\n \n        else:\n \n            return par\n \n        #self.unlock()\n \n         \n \n    def parse_json(self,data):\n \n         \n \n        ipdata = json.loads(data)\n \n        try:\n \n            if ipdata['imgs']: \n \n                for n in ipdata['imgs']: #data子项\n \n                    if n['objURL']: \n \n                        try:\n \n                            proxy_support = urllib2.ProxyHandler(proxy)\n \n                            opener = urllib2.build_opener(proxy_support)\n \n                            urllib2.install_opener(opener)\n \n                            #print \"proxy\",proxy\n \n                            self.lock()\n \n                            self.dbcurr.execute('select ID from pic_info where objURL=%s', (n['objURL']))\n \n                            y = self.dbcurr.fetchone()\n \n                            #print \"y=\",y\n \n                            if y:\n \n                                print \"database exist\"\n \n                                self.unlock() #continue 前解锁\n \n                                continue\n \n                            else:\n \n                                real_extension=utils.get_extension(n['objURL'])\n \n                                req = urllib2.Request(n['objURL'],headers=i_headers)\n \n                                resp = urllib2.urlopen(req,None,5)\n \n                                dataimg=resp.read()\n \n                                name=str(uuid.uuid1())\n \n                                filename=\"\"\n \n                                if len(real_extension)>4:\n \n                                    real_extension=\".gif\"\n \n                                real_extension=real_extension.lower()\n \n                                if real_extension==\".gif\":\n \n                                    filename  =self.makeDateFolder(\"E://sosogif\", \"d\"+str(self.count % 60))+\"//\"+name+\"-www.sosogif.com-搜搜gif贡献\"+real_extension\n \n                                    self.count+=1\n \n                                else:\n \n                                    filename  =self.makeDateFolder(\"E://sosogif\", \"o\"+str(self.count % 20))+\"//\"+name+\"-www.sosogif.com-搜搜gif贡献\"+real_extension\n \n                                    self.count+=1\n \n                                \"\"\"\n \n                                name=str(uuid.uuid1())\n \n                                filename=\"\"\n \n                                if len(real_extension)>4:\n \n                                    real_extension=\".gif\"\n \n                                filename  =self.makeDateFolder(\"E://sosogif\", \"d\"+str(self.count % 60))+\"//\"+name+\"-www.sosogif.com-搜搜gif贡献\"+real_extension\n \n                                self.count+=1\n \n                                \"\"\"\n \n                                try:\n \n                                    if not os.path.exists(filename):\n \n                                        file_object = open(filename,'w+b') \n \n                                        file_object.write(dataimg) \n \n                                        file_object.close()\n \n                                        self.anaylis_info(n,filename,real_extension) #入库操作\n \n                                    else:\n \n                                        print \"file exist\"\n \n                                except IOError,e1: \n \n                                    print \"e1=\",e1\n \n                                    pass\n \n                            self.unlock()\n \n                        except IOError,e2: \n \n                            #print \"e2=\",e2\n \n                            pass \n \n                            self.chance1+=1\n \n        except Exception as parse_error:\n \n            print \"parse_error\",parse_error\n \n            pass\n \n     \n \n    def title_dealwith(self,title):\n \n         \n \n        #print \"title\",title\n \n        a=title.find(\"<strong>\")\n \n        temp1=title[0:a]\n \n        b=title.find(\"</strong>\")\n \n        temp2=title[a+8:b]\n \n        temp3=title[b+9:len(title)]\n \n        return (temp1+temp2+temp3).strip()\n \n         \n \n    def anaylis_info(self,n,filename,real_extension):\n \n        print \"success.\"\n \n         \n \n        #if self.wait_ana_queue.qsize()!=0:\n \n            #n,filename,real_extension=self.wait.ana_queue.get()\n \n        #self.lock()\n \n        objURL=n['objURL'] #图片地址\n \n        fromURLHost=n['fromURLHost'] #来源网站\n \n        width=n['width']  #宽度\n \n        height=n['height'] #高度\n \n        di=n['di'] #用来唯一标识\n \n        type=n['type'] #格式\n \n        fromPageTitle=n['fromPageTitle'] #来自网站\n \n        keyword=self.title_dealwith(fromPageTitle)\n \n        cs=n['cs'] #未知\n \n        os=n['os'] #未知\n \n        temp = time.time()\n \n        x = time.localtime(float(temp))\n \n        acTime = time.strftime(\"%Y-%m-%d %H:%M:%S\",x) #爬取时间\n \n        self.dbcurr.execute('select ID from pic_info where cs=%s', (cs))\n \n        y = self.dbcurr.fetchone()\n \n        if not y:\n \n            print 'add pic',filename\n \n            self.commit_count+=1\n \n            self.dbcurr.execute('INSERT INTO pic_info(objURL,fromURLHost,width,height,di,type,keyword,cs,os,acTime,filename,real_extension) VALUES(%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s)',(objURL,fromURLHost,width,height,di,type,keyword,cs,os,acTime,filename,real_extension))\n \n            if self.commit_count==10:\n \n                self.dbconn.commit()\n \n                self.commit_count=0\n \n        #self.unlock()\n \n            \n \n  \n \n    def format_top_url(self,word,pn,rn):\n \n  \n \n        url = TOP_URL.format(word=word, pn=pn,rn=rn).encode('utf-8')\n \n        return url\n \n  \n \n    def how_many(self,data):\n \n        try:\n \n            ipdata = json.loads(data)\n \n            if ipdata['displayNum']>0:\n \n                how_many=ipdata['displayNum']\n \n                return int(how_many)\n \n            else:\n \n                return 0\n \n        except Exception as e:\n \n            pass\n \n         \n \n    def get_pic(self):\n \n        \"\"\"\n \n        word=\"gif\"\n \n        pn=0\n \n        rn=24\n \n        if self.key_word_queue.qsize()!=0:\n \n            word,pn,rn=self.key_word_queue.get()\n \n        url=self.format_top_url(word,pn,rn)\n \n        global proxy\n \n        if url:\n \n            try:\n \n                html=\"\"\n \n                try:\n \n                    req = urllib2.Request(url,headers=i_headers)\n \n                    response = urllib2.urlopen(req, None,5)\n \n                    #print \"url\",url\n \n                    html = self.browser.openurl(url).read()\n \n                except Exception as err:\n \n                    print \"err\",err\n \n                    #pass\n \n                if html:\n \n                    how_many=self.how_many(html)\n \n                    #how_many=10000\n \n                    print \"how_many\",how_many\n \n                    word=self.get_para(url,\"word\")\n \n                    rn=int(self.get_para(url,\"rn\"))\n \n                    t=math.ceil(how_many/rn)\n \n                    num = int(t)\n \n                    for item  in xrange(0,num-1):\n \n        \"\"\"\n \n        try:\n \n            global proxy\n \n            print \"size of queue\",self.request_queue.qsize()\n \n            if self.request_queue.qsize()!=0:\n \n                id,word,page_num = self.request_queue.get()           \n \n                u=self.format_top_url(word,page_num,24)\n \n                self.lock()\n \n                self.dbcurr.execute('update info SET status=1 WHERE id=%s',(id))\n \n                self.dbconn.commit()\n \n                if self.chance >0 or self.chance1>1: #任何一个出问题都给换代理\n \n                    if self.ID % 100==0:\n \n                        self.dbcurr.execute(\"select count(*) from proxy\")\n \n                        for r in self.dbcurr:\n \n                            count=r[0]\n \n                        if self.ID>count:\n \n                            self.ID=50\n \n                    self.dbcurr.execute(\"select * from proxy where ID=%s\",(self.ID))\n \n                    results = self.dbcurr.fetchall()\n \n                    for r in results:\n \n                        protocol=r[1]\n \n                        ip=r[2]\n \n                        port=r[3]\n \n                        pro=(protocol,ip+\":\"+port)\n \n                        if pro not in self.next_proxy_set:\n \n                            self.next_proxy_set.add(pro)\n \n                    self.chance=0\n \n                    self.chance1=0\n \n                    self.ID+=1\n \n                self.unlock()\n \n                proxy_support = urllib2.ProxyHandler(proxy)\n \n                opener = urllib2.build_opener(proxy_support)\n \n                urllib2.install_opener(opener)\n \n                html=\"\"\n \n                try:\n \n                    req = urllib2.Request(u,headers=i_headers)\n \n                    #print \"u=\",u\n \n                    response = urllib2.urlopen(req, None,5)\n \n                    html = response.read()\n \n                    if html:\n \n                        #print \"html\",type(html)\n \n                        self.parse_json(html)\n \n                except Exception as ex1:\n \n                    #print \"error=\",ex1\n \n                    pass\n \n                    self.chance+=1\n \n                    if self.chance>0 or self.chance1>1:\n \n                        if len(self.next_proxy_set)>0:\n \n                            protocol,socket=self.next_proxy_set.pop()\n \n                            proxy= {protocol:socket}\n \n                            print \"change proxy finished<<\",proxy,self.ID\n \n        except Exception as e:\n \n            print \"error1\",e\n \n            pass\n \n             \n \nif __name__ == '__main__':\n \n  \n \n    app = BaiduImage()\n \n    app.start_work(80)\n \n    #app.generateSeed()\n \n    while 1:\n \n        pass\n　本人建个qq群，欢迎大家一起交流技术， 群号：512245829 喜欢微博的朋友关注：转盘娱乐即可\n\n                ", "mainLikeNum": ["1 "], "mainBookmarkNum": "6"}