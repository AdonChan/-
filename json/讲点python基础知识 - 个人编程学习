{"title": "讲点python基础知识 - 个人编程学习 ", "index": "python", "content": "运算符\n\n类型\n\n程序结构\n1.分支结构例：代码设计：\n# -*- coding:utf-8 -*-\nx=int(raw_input(\"输入x值：\"))\nif x<=0:\n    f=x**2\n    print f\nelse:\n    f=x**3\n    print f\n三段以上条件则：if,elif,else\n2.循环结构range(起始值，终止值，步长)\nrange(0,20)#0到19的数\n例：打印19个“我要吃饭”\n#用for遍历19个循环\nfor x in range(1,20):\n    print x,\"I want to eat\"\ncontinue：结束当次循环break:结束整个循环\nfor x in range(1,20):\n    if x==2:\n        print x,\"I don't want to eat\"\n        continue #x=2时，执行\"我不想吃\"，其他不变\n    if x==4:\n        print x,\"233333\"\n        break   #x=4时，执行23333，x=[5-19]都不能执行\n    \n    print x,\"I want to eat\"\n正则表达式\n作用：字符串(str)匹配模式(re)\n代码实例：\nimport re\nstr='abc,afc,amc,aic,^abc'\nres=r'a[bf]c'#结果：['abc', 'afc']\nprint re.findall(res,str)\n\nres=r'a[^bf]c'#取反：['amc', 'aic']\nres=r'\\^abc'#\\取消所有元字符,匹配['^abc']\nres=r'ab+'#匹配ab,abbbbbb之类\nres=r'ab*'#匹配a,ab,abbbbbb之类\nstr='010-123456789'\nres=r'010-?\\d{8}'#匹配电话号码\n贪婪模式：尽可能大的匹配。非贪婪模式：.? 是一个固定的搭配，.和代表可以匹配任意无限多个字符，加上？表示使用非贪婪模式进行匹配，也就是我们会尽可能短地做匹配，以后我们还会大量用到 .*? 的搭配。\n函数：re.compile(pattrn,flags):编译成对象，加快程序flags:1.re.I: 忽略大小写2.re.S: 不包括换行符内的所有字符3.re.L：做本地化识别4.re.M：匹配多行字符串5.re.X：正则表达式为多行\nre.findall(pattern, string):搜索字符串，以列表形式返回。re.match()：尝试从字符串的开始匹配一个模式re.search()：在字符串内查找模式匹配,只到找到第一个匹配然后返回，如果字符串没有匹配，则返回None。re.sub()：替换。re.split():切割。\n例：re.S的用法（匹配\\n,\\t之类的换行符）\nimport re\nstr=\"abc\\noooass\"\nres=\"\\w{3}.\\w{6}\"\na=re.compile(res,re.S)\nprint a.findall(str)\nre.M的用法（字符串多行）\nimport re\nstr=\"\"\"\nabc oo\nabc ooo\nooo abc\nsia abc\n\"\"\"\nres='^abc'\na=re.compile(res,re.M)\nprint a.findall(str)\nre.X用法（正则写多行）\nimport re\nstr=\"010-12345678\"\nres=\"\"\"\n\\d{3,4}\n-?\n\\d{8}\n\"\"\"\na=re.compile(res,re.X)\nprint a.findall(str)\n\nre.search():一般是用来查询文件中是否有我们想要的字符串，group()输出\nimport re\nstr = \"Daming is a handsome boy, he is cool \"\nm = re.search(r\"(\\w+)\\s\", str)\nif m:\n    print m.group(0), '\\n', m.group(1)\nelse:\n    print 'not match'\nre.sub():\nimport re\nr=r'c..t'\nprint re.sub(r,'python','csvt csst csft')\nre.split():\nimport re\nstr='101+123-123*12233/123'\nres=r'[-+\\*\\/]'\nprint re.split(res,str)\n写一个简单的下载贴吧图片小爬虫\nimport re\nimport urllib\n\ndef getHtml(url):\n    page = urllib.urlopen(url)\n    html = page.read()\n    return html\n\ndef getImg(html):\n    reg = r'src=\"(.+?\\.jpg)\" pic_ext'\n    imgre = re.compile(reg)\n    imglist = imgre.findall(html)\n    x = 0\n    for imgurl in imglist:\n        urllib.urlretrieve(imgurl,'%s.jpg' % x)\n        x = x + 1        \n   \nhtml = getHtml(\"http://tieba.baidu.com/p/2460150866\")\ngetImg(html)\n\n                ", "mainLikeNum": ["1 "], "mainBookmarkNum": "40"}