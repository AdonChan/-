{"title": "Flask Web开发：第六章的电子邮件配置 - 工作学习总结 ", "index": "python", "content": "弄了好久终于OK，踩了很多坑，感觉自己好菜，提供我的参考\n# -*- coding: utf-8 -*-\nimport os\nfrom flask import Flask, render_template, session, redirect, url_for\nfrom flask_script import Manager, Shell\nfrom flask_bootstrap import Bootstrap\nfrom flask_moment import Moment\nfrom flask_wtf import FlaskForm\nfrom wtforms import StringField, SubmitField\nfrom wtforms.validators import Required\nfrom flask_sqlalchemy import SQLAlchemy\nfrom flask_migrate import Migrate, MigrateCommand\nfrom flask_mail import Mail, Message\n\nbasedir = os.path.abspath(os.path.dirname(__file__))\n\napp = Flask(__name__)\napp.config['SECRET_KEY'] = 'hard to guess string'\napp.config['SQLALCHEMY_DATABASE_URI'] =\\\n    'sqlite:///' + os.path.join(basedir, 'data.sqlite')\napp.config['SQLALCHEMY_COMMIT_ON_TEARDOWN'] = True\napp.config['SQLALCHEMY_TRACK_MODIFICATIONS'] = False\n\napp.config['MAIL_SERVER'] = 'smtp.qq.com'\napp.config['MAIL_PORT'] = 25\napp.config['MAIL_USE_TLS'] = True\n# 在外面设置，如：set MAIL_USERNAME=123456@qq.com ，注意没有引号和空格！\napp.config['MAIL_USERNAME'] = os.environ.get('MAIL_USERNAME')\n# 123456@qq.com邮箱-->设置-->账号,获取授权码，在外部传递安全,如：set MAIL_PASSWORD=xfnftzjycypzjica，注意没有引号和空格\napp.config['MAIL_PASSWORD'] = os.environ.get('MAIL_PASSWORD')\napp.config['FLASKY_MAIL_SUBJECT_PREFIX'] = '[Flasky]'\n# 发送者邮箱\napp.config['FLASKY_MAIL_SENDER'] = '123456@qq.com'\n# 接收者邮箱，set FLASKY_ADMIN = 987654@qq.com，注意没有引号\napp.config['FLASKY_ADMIN'] = os.environ.get('FLASKY_ADMIN')\n\n\nmanager = Manager(app)\nbootstrap = Bootstrap(app)\nmoment = Moment(app)\ndb = SQLAlchemy(app)\nmigrate = Migrate(app, db)\nmail = Mail(app)\n\n\nclass Role(db.Model):\n    __tablename__ = 'roles'\n    id = db.Column(db.Integer, primary_key=True)\n    name = db.Column(db.String(64), unique=True)\n    users = db.relationship('User', backref='role', lazy='dynamic')\n\n    def __repr__(self):\n        return '<Role %r>' % self.name\n\n\nclass User(db.Model):\n    __tablename__ = 'users'\n    id = db.Column(db.Integer, primary_key=True)\n    username = db.Column(db.String(64), unique=True, index=True)\n    role_id = db.Column(db.Integer, db.ForeignKey('roles.id'))\n\n    def __repr__(self):\n        return '<User %r>' % self.username\n\n\ndef send_email(to, subject, template, **kwargs):\n    msg = Message(app.config['FLASKY_MAIL_SUBJECT_PREFIX'] + ' ' + subject,\n                  sender=app.config['FLASKY_MAIL_SENDER'], recipients=[to])\n    msg.body = render_template(template + '.txt', **kwargs)\n    msg.html = render_template(template + '.html', **kwargs)\n    mail.send(msg)\n\n\nclass NameForm(FlaskForm):\n    name = StringField('What is your name?', validators=[Required()])\n    submit = SubmitField('Submit')\n\n\ndef make_shell_context():\n    return dict(app=app, db=db, User=User, Role=Role)\nmanager.add_command(\"shell\", Shell(make_context=make_shell_context))\nmanager.add_command('db', MigrateCommand)\n\n\n@app.errorhandler(404)\ndef page_not_found(e):\n    return render_template('404.html'), 404\n\n\n@app.errorhandler(500)\ndef internal_server_error(e):\n    return render_template('500.html'), 500\n\n\n@app.route('/', methods=['GET', 'POST'])\ndef index():\n    form = NameForm()\n    if form.validate_on_submit():\n        user = User.query.filter_by(username=form.name.data).first()\n        if user is None:\n            user = User(username=form.name.data)\n            db.session.add(user)\n            session['known'] = False\n            if app.config['FLASKY_ADMIN']:\n                send_email(app.config['FLASKY_ADMIN'], 'New User',\n                           'mail/new_user', user=user)\n        else:\n            session['known'] = True\n        session['name'] = form.name.data\n        return redirect(url_for('index'))\n    return render_template('index.html', form=form, name=session.get('name'),\n                           known=session.get('known', False))\n\n\nif __name__ == '__main__':\n    manager.run()\n\n参考的一个作者：funhacks的文章Flask 插件系列 - Flask-Mail，还有廖雪峰的python教程\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "0"}