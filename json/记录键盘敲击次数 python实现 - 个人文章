{"title": "记录键盘敲击次数 python实现 - 个人文章 ", "index": "python", "content": "作为一个程序员，突然好奇自己每天敲击多少次键盘，于是研究了一下，写了一个python程序来记录。这里分享给大家。其实实现很简单，给python安装一个package pynput。用其中自带的keyboard listener. 在输出统计数据的时候，有两种选择，一种是实时输出，一种是给用某一个特殊的键做为信号告诉代码输出统计数据。我选择的是后者。我用了page_down这个我从来不用的键做输出。这个script跑起来后，就不要管它，在用完电脑后按下特殊键，就可以输出统计数据了。 同时我也附上了我的某一天的统计图。 这一天我总共敲击键盘7836次。一个典型的英文单词长度是6个字母，相当于我敲了1300个单词。单纯的打字速度是100次每分钟，所以我一天只敲了13分钟的键盘。。。\n\n#!/usr/bin/env python\n  \nfrom pynput import keyboard\n\ndef get_key_name(key):\n    if isinstance(key, keyboard.KeyCode):\n        return key.char\n    else:\n        return str(key)\n\ndef on_press(key):\n    key_name = get_key_name(key)\n\ndef on_release(key):\n    key_name = get_key_name(key)\n    if key_name in keys:\n        key_stat[key_name] = key_stat[key_name] + 1\n\n    if key_name == 'Key.page_down':\n        fp=open('key_stat.xyz','w')\n        for key in keys:\n            fp.write('%s: %i\\n' %(key, key_stat[key]))\n        return False\n\nkey_stat = {}\nkeys = ['a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z','1','2','3','4','5','6','7','8','9','0','`','Key.esc','Key.tab','Key.caps_lock','Key.shift','Key.ctrl','Key.alt','Key.cmd','Key.space','Key.alt_r','Key.cmd_r','Key.enter','Key.shift_r','Key.backspace','Key.up','Key.down','Key.left','Key.right','Key.ctrl_r',',','.','/',';','\\'','\\\\',']','[','=','-']\nfor key in keys:\n    key_stat[key] = 0\nwith keyboard.Listener(\n    on_press = on_press,\n    on_release = on_release) as listener:\n    listener.join()\n画图的代码如下\n#!/usr/bin/python\n  \nimport numpy as np\nimport matplotlib.pyplot as plt\nfp = open('key_stat.xyz')\nkeys = []\nstats = []\ntotal = 0\nfor line in fp:\n    x, y = line.split()\n    x = x.replace('Key.','').replace(':','')\n    keys.append(x)\n    stats.append(int(y))\n    total += int(y)\nprint(total)\n\nplt.bar(keys,stats)\nplt.xticks(keys,rotation='45')\nplt.show()        \n\n                ", "mainLikeNum": ["1 "], "mainBookmarkNum": "0"}