{"title": "Essential SQLAlchemy2th学习笔记之Alembic数据库迁移 - 倚楼听风雨 ", "index": "python,sqlalchemy", "content": "SQLAlchemy默认的create_all()可以增量式创建数据库缺失的表，但是无法做到修改已有的表结构，或删除代码中已经移除的表。这个时候我们就需要用到Alembic这个SQLAlchemy migrations库。安装：pip install alembic官方文档：http://alembic.zzzcomputing.c...\nCreating the Migration Environment\n创建一个目录，然后在这个目录下执行\nalembic init migrations\n这便创建了migrations目录，该目录结构如下：├── │ ├── README│ ├── env.py│ ├── script.py.mako│ └── versions└── alembic.inienv.py配置：\nsqlalchemy.url = sqlite:///alembictest.db\nfrom app.db import Base\ntarget_metadata = Base.metadata\nBuilding Migrations\n自动生成一个Base Empty Migration\nalembic revision -m \"Empty Init\"\n升级数据库到最新版本\nalembic upgrade head\n自动生成新版本：\nalembic revision --autogenerate -m \"Added Cookie model\"\n当然你也可以手动修改它。一些常见的Alembic操作函数如下：\n\n\n函数\n说明\n\n\n\nadd_column\nAdds a new column\n\n\nalter_column\nChanges a column type, server default, or name\n\n\ncreate_check_constraint\nAdds a new CheckConstraint\n\n\ncreate_foreign_key\nAdds a new ForeignKey\n\n\ncreate_index\nAdds a new Index\n\n\ncreate_primary_key\nAdds a new PrimaryKey\n\n\ncreate_table\nAdds a new table\n\n\ncreate_unique_constraint\nAdds a new UniqueConstraint\n\n\ndrop_column\nRemoves a column\n\n\ndrop_constraint\nRemoves a constraint\n\n\ndrop_index\nDrops an index\n\n\ndrop_table\nDrops a table\n\n\nexecute\nRun a raw SQL statement\n\n\nrename_table\nRenames a table\n\n\n\n注意：并不是所有的backend database都支持这些函数，比如SQLite不支持alter_column,drop_column\nControlling Alembic\n查看现有数据库的迁移版本：\nalembic current\n显示历史\nalembic history\n版本降级\nalembic downgrade 34044511331\n手动修改数据库的迁移版本：\nalembic stamp 2e6a6cc63e9\n生成SQL\n#Upgrading from 34044511331 to 2e6a6cc63e9  sql\nalembic upgrade 34044511331:2e6a6cc63e9 --sql\nalembic upgrade 34044511331:2e6a6cc63e9 --sql > migration.sql\n更多参考这里\n\n                ", "mainLikeNum": ["1 "], "mainBookmarkNum": "0"}