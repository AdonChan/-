{"title": "为什么我不喜欢赋值表达式 - weakish ", "index": "coffeescript,python,编程语言", "content": "今晚看到v2ex上有人感叹Python没有赋值表达式不方便：\n\n\n  本来可以写成：\n\nif result=func1(...):\n    print func2(result)\n\n  \n  因为没有赋值表达式，所以必须写成：\n\nresult=func1(...)\nif result:\n    print func2(result)\n\n\n\n我跟帖说了自己的想法：\n\n\n  Scheme/Lua也没有。\n\n\n\n  赋值语句的返回值为所赋的值，这个我理解起来感觉蛮困难的——我觉得赋值语句应该是没有返回值，或者返回值为nil之类的东西（Haskell里类似赋值的操作返回值的类型是 ()，纯副作用的返回值）。\n\n\n\n  别的语言里，if a == 1，粗心少打一个=号，变成if a = 1就出问题了，但是Python就没这个问题。这一点上比较方便。\n\n\n真是无巧不成书。前几天刚好看到spine.js有这样一句代码：\n\nlisteningToOnce = @listeningToOnce or= []\n\n\n于是我就手贱给改成了\n\n@listeningToOnce or= []\nlisteningToOnce = @listeningToOnce\n\n\nPR 里给的理由是编译出来的js就是赋值表达式：\n\nlisteningToOnce = this.listeningToOnce || (this.listeningToOnce = []);\n\n\nSo, (this.listeningToOnce = []) returns the assigned value.\n\nIn Scheme/Python/Lua, assignment does not return a value.\nThis design feels more nature to me.\n\nIn some languages assignment returning a value may cause problem in conditions, eg. if a == 1 and if a = 1 (mistype).\nFortunately, in CoffeeScript, we can use is (if a is 1) to avoid this pitfall.\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "1"}