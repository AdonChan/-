{"title": "OCR识别验证码 - 代码与远方 ", "index": "网页爬虫,python,ocr", "content": "最近在爬某网站，老是蹦出来验证码，就想着找个OCR破了这个验证码，然后就开始了OCR探索之旅。\n首先简单说一下什么是OCR\nOCR是（Optical Character Recognition，光学字符识别）的简称，主要用途：\n\n办公用途，用来识别图片里面的文字，可以高效率的录入图片类型文件。\n识别网站验证码\n详见维基百科或者百度百科\n\nOCR识别的验证码原理\n\n采集一批验证码，根据图片特点进行初步处理（二值化/灰度化/滤波/降噪等处理）\n然后分割图片，旋转图片，模板选取，训练算法，让它更准确。\n有兴趣的可以看一个Python实现的OCR识别验证码详细demo,实际操作过程挺有意思的，大家有兴趣了可以试试\n\nOCR识别验证码的具体操作\n首先我测试了一个百度开源的Node.js实现的OCR包   gitHub地址 https://github.com/netpi/baidu-ocr-api\n安装也很简单直接按照官方的文档安装即可   发现百度的这个OCR包识别效果不太理想\n![node_ocr.png][1]  \n\n然后经过一番Google和小伙伴们的推荐  选择一个Google开源的tesseract这个是C++写的，直接融合到爬虫里不太方便，__有外国朋友基于tesseract封装了一个Python的包pytesseract__,直接开箱即用，融入爬虫程序中。\n\n百闻不如一run\n**ps(这里使用的操作系统是Ubuntu16.04；Python版本是2.7)**  \n直接 `pip install pytesseract` 然后Python图片处理要用到PIL(Python Imaging Library) `pip install PIL`\n原图片   \n\n\n\n写个简单的测试demo\n![code.png][3]\n\n看下识别结果   \n![error.png][4] \n\n报错了， 根据报错信息来看，是确实了什么文件，或者依赖lib\n我跟踪了pytesseract的代码，发现是少了C++提供的OCR服务，因为pytesseract是调用的tesseract(C++写的)\n然后安装tesseract ```sudo apt install tesseract```\n再run一下代码\n\n整体结果还可以（倒数第四位识别错了），再训练一下准确率就更高了。预知后事如何，且听下回分解\n\n                ", "mainLikeNum": ["2 "], "mainBookmarkNum": "9"}