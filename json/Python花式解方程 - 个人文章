{"title": "Python花式解方程 - 个人文章 ", "index": "python,方程式,numpy", "content": "numpy\nnumpy 用来解方程的话有点复杂，需要用到矩阵的思维！我矩阵没学好再加上 numpy 不能解非线性方程组，所以...我也不会这玩意儿！\nsympy\n逊色于 sage 和 z3，但解方程也是非常不错的！\nfrom sympy import *\nx = symbols('x')\ny = symbols('y')\nres = solve([x+y-3,x-y-1],[x,y])[0]\nprint(res)\nsage\nsage 既能解线性方程组，又能解非线性方程组，堪称解方程界的神器，但是表达式不支持位运算，比如：与或非，取余以及异或。出现位运算的方程就只能用 z3 创建约束求解！sage 的优点也很明显：表达式简单易写，运算速度快！在线sage求解\nvar('x y')\nsolve([x**3+y**2+666==142335262,x**2-y==269086,x+y==1834],[x,y])\nz3\nz3 也叫约束求解器，用来解任何方程都没有问题！但是 windows 不太好装，所以我基本上是在linux上跑，python2 和 python3 都支持！使用的思路非常简单：\n\n先创建你所需类型的符号变量\n再初始化一个约束器，\n添加约束\n最后判断约束是否有解以及求解变量\n\n下面列举常用的函数，顺便给个 z3-solver文档\n# 符号变量类型\nInt('x')\nReal('x')\nBool('x')\nBitVec('x',N) # N bit的符号变量，用于位操作\nBitVecVal(num,N) # N bit的数据 num\n# 初始化约束器\nsolver = Solver()\n# 添加约束\nsolver.add(x+y==10,x-y==0)\n# 求解约束\nsolver.check()\nans = solver.mode()\n\n# 初始化多个符号变量\nx = [Int('x%d' % i) for i in range(n)]\n# 取结果中某个变量的值\nvalue = ans[x].as_long()\nEND\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "0"}