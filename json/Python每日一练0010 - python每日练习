{"title": "Python每日一练0010 - python每日练习 ", "index": "python3.x,python", "content": "问题\n你有一个字典或者实例的序列，然后你想根据某个特定的字段来分组迭代访问。\n解决方案\n使用itertools.groupby() 函数\n假设有下列的字典列表：\nrows = [\n    {'address': '5412 N CLARK', 'date': '07/01/2012'},\n    {'address': '5148 N CLARK', 'date': '07/04/2012'},\n    {'address': '5800 E 58TH', 'date': '07/02/2012'},\n    {'address': '2122 N CLARK', 'date': '07/03/2012'},\n    {'address': '5645 N RAVENSWOOD', 'date': '07/02/2012'},\n    {'address': '1060 W ADDISON', 'date': '07/02/2012'},\n    {'address': '4801 N BROADWAY', 'date': '07/01/2012'},\n    {'address': '1039 W GRANVILLE', 'date': '07/04/2012'},\n]\n现在按照date字段来分组访问，就可以使用itertools.groupby()了\nfrom itertools import groupby\nfrom operator import itemgetter\nrows.sort(key=itemgetter('date'))\nfor key, group in groupby(rows, key=itemgetter('date')):\n    print(key)\n    for item in group:\n        print(4 * ' ', item)\n输出\n07/01/2012\n     {'address': '5412 N CLARK', 'date': '07/01/2012'}\n     {'address': '4801 N BROADWAY', 'date': '07/01/2012'}\n07/02/2012\n     {'address': '5800 E 58TH', 'date': '07/02/2012'}\n     {'address': '5645 N RAVENSWOOD', 'date': '07/02/2012'}\n     {'address': '1060 W ADDISON', 'date': '07/02/2012'}\n07/03/2012\n     {'address': '2122 N CLARK', 'date': '07/03/2012'}\n07/04/2012\n     {'address': '5148 N CLARK', 'date': '07/04/2012'}\n     {'address': '1039 W GRANVILLE', 'date': '07/04/2012'}\n讨论\nitertools.groupby迭代器和一个可选的key参数，按key来分组的，如果key是None的话，则按元素分组\nitertools.groupby返回每个不同的key和一个迭代器对象，这个迭代器对象就是key对应的一组元素\n并且itertools.groupby要求分组之前，迭代器的所有元素必须是有序的，原因跟itertools.groupby的实现有关\nitertools.groupby()大致实现：\nclass groupby:\n    # [k for k, g in groupby('AAAABBBCCDAABBB')] --> A B C D A B\n    # [list(g) for k, g in groupby('AAAABBBCCD')] --> AAAA BBB CC D\n    def __init__(self, iterable, key=None):\n        if key is None:\n            key = lambda x: x\n        self.keyfunc = key\n        self.it = iter(iterable)\n        self.tgtkey = self.currkey = self.currvalue = object()\n    def __iter__(self):\n        return self\n    def __next__(self):\n        while self.currkey == self.tgtkey:\n            self.currvalue = next(self.it)    # Exit on StopIteration\n            self.currkey = self.keyfunc(self.currvalue)\n        self.tgtkey = self.currkey\n        return (self.currkey, self._grouper(self.tgtkey))\n    def _grouper(self, tgtkey):\n        while self.currkey == tgtkey:\n            yield self.currvalue\n            try:\n                self.currvalue = next(self.it)\n            except StopIteration:\n                return\n            self.currkey = self.keyfunc(self.currvalue)\n来源\nPython Cookbook\n关注\n欢迎关注我的微信公众号：python每日一练\n\n\n                ", "mainLikeNum": ["1 "], "mainBookmarkNum": "1"}