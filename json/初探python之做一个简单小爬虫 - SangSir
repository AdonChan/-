{"title": "初探python之做一个简单小爬虫 - SangSir ", "index": "python", "content": "准备工作\n初探python，这个文章属于自己的一个总结。所以教程面向新手，无技术含量。python环境Linux基本都有，Windows下官网也提供了便利的安装包，怎么安装配置网上有很多教程在此就不一一说明。我使用的python版本为Python 3.6.4，后面的代码也是基于python3的。\n分析需求\n做一个小爬虫离不开获取网页内容和匹配存储内容，那么我们先装上python爬虫的老朋友requests：pip install requests再装上pymysql扩展，方便将匹配到的内容插入到mysql数据库中：pip install pymysql\n第一步：获取网页内容\n在python中有意思的是你需要什么，就去import什么，不像php一样获取网页内容直接来个file_get_contents完事儿废话不多说，贴出代码来看一下：\n# -*- coding:utf-8 -*-\n\n# 加载 requests 模块\nimport requests\n# GET方式获取 Response 对象\nresponse = requests.get('https://www.xxx.com/')\nif response:\n    # 输出html代码到控制台\n    print(response.text)\nelse:\n    # 输出错误信息\n    print('requests error')\n在python中缩进一定要严格，初学者（4个空格为语句块缩进）经常犯的错误是tab键和空间键混用，造成的缩进不一致。凡是报错信息看到：IndentationError: unexpected indent ，就是表示缩进不一致。如果本身没有编码基础，那么我推荐你看一下python的基本概念：http://www.kuqin.com/abyteofp...如果已经有了编码基础但对缩进这方面没有深究，可以看python的缩进规范：http://www.kuqin.com/abyteofp...\n好，写完代码之后我们拿到控制台试一下，完美输出html代码\n第二步：正则匹配内容\n既然能够获取html代码，那我们就要找出需要的部分，这就用上了正则。Python 自1.5版本起增加了 re 模块，它提供 Perl 风格的正则表达式模式。具体细节可以在菜鸟教程中查看：http://www.runoob.com/python/...，话不多说再贴代码：\n# -*- coding:utf-8 -*-\n# 加载 requests 模块\nimport requests\n# 加载 re 模块\nimport re\n\nresponse = requests.get('https://www.xxx.com/')\n# 正则匹配文本\nmatch = re.findall(r'<p><!--markdown-->([\\s\\S]*?)</p>', response.text)\nif match:\n    # 输出匹配的内容到控制台\n    print(match[0])\nelse:\n    # 输出html代码到控制台\n    print(response.text)\n\n注：原网址为随机一句文字显示，每刷新一次就会变化一次。\n第三步：循环匹配并加入数据库中\n首先我们把数据库和表做好，可以用sql语句创建：\nCREATE DATABASE IF NOT EXISTS `sentence`;\nUSE `sentence`;\n\nCREATE TABLE IF NOT EXISTS `sexy` (\n  `id` int(11) NOT NULL AUTO_INCREMENT,\n  `content` varchar(50) NOT NULL,\n  `datetime` timestamp NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  PRIMARY KEY (`id`),\n  UNIQUE KEY `content` (`content`)\n) ENGINE=MyISAM DEFAULT CHARSET=utf8;\n这里将content设置为了UNIQUE KEY，是为了保证抓取到的内容不重复，如果有已存在的值便直接跳过\n# -*- coding:utf-8 -*-\n# 加载 requests 模块\nimport requests\n# 加载 re 模块\nimport re\n# 加载 pymysql 模块\nimport pymysql\n\n# 打开数据库连接\ndb = pymysql.connect('127.0.0.1', 'root', 'root', 'sentence', charset='utf8')\n# 使用cursor()方法获取操作游标\ncursor = db.cursor()\n\n#死循环到天长地久\nwhile(True):\n    response = requests.get('https://www.xxx.com/')\n    # 正则匹配文本\n    match = re.findall(r'<p><!--markdown-->([\\s\\S]*?)</p>', response.text)\n    if match:\n        sql = \"INSERT INTO `sexy` (`content`) VALUES ('%s')\" % (match[0])\n        try:\n           # 执行sql语句\n           cursor.execute(sql)\n           # 提交到数据库执行\n           db.commit()\n        except:\n           # 如果发生错误则回滚\n           db.rollback()\n        # 输出sql语句到控制台\n        print(sql)\n    else:\n        # 输出html代码到控制台\n        print(response.text)\n运行演示：数据库内容：\n总结\npython是个好东西，万物based on python。感觉教程贴比较难写，每个地方都有细节，但如果讲细了文章又太繁琐，若简单些不好取舍初学者又看不懂什么意思，向那些写易懂的入门教程文章的作者致敬。注：由于原网址不方便公布，代码中的网址全部替换为了xxx.com。源码在Github中：https://github.com/st1ven/Pyt...，欢迎Star\n\n                ", "mainLikeNum": ["2 "], "mainBookmarkNum": "4"}