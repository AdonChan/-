{"title": "Python_文件操作 - MAY ", "index": "python3.x,python", "content": "opening and closeing\n'buffer', 'close', 'closed', 'detach', 'encoding', 'errors', 'fileno', 'flush', 'isatty', 'line_buffering', 'mode', 'name', 'newlines', 'read', 'readable', 'readline', 'readlines', 'seek', 'seekable', 'tell', 'truncate', 'writable', 'write', 'writelines'\n打开\nopen('file', 'modes') # file: 支持相对路径或绝对路径\nopen('a.txt', 'r')\n\n# modes:\n'r'       # 打开只读 (默认) (文件必须存在, 否则会抛出错误)\n'w'       # 写入，如果文件存在，将其覆盖，文件不存在，创建新文件\n'x'       # 创建一个新文件并打开它以便编写\n'a'       # 追加，如果文件存在，内容会被写入到已有内容的后边，文件不存在，则创建新文件\n'b'       # 二进制模式\n't'       # 文本模式(默认)\n'+'       # 打开磁盘文件以进行更新(读写)\n\n# combination:\n'rb'      # 以二进制格式打开一个文件，文件指针将会放在文件开头 (默认)\n'wb'      # 二进制格式打开写入文件，如果文件存在，将其覆盖，文件不存在，创建新文件\n'ab'\n# 视频文件, 图片文件, pdf文件, 音频文件 需要带modes中的b\n'r+'      # 打开一个文件用于读写\n'w+'\n'a+'\n'rb+'     # 以二进制格式打开一个文件用于读写，文件指针将会放在文件的开头\n'wb+'\n'ab+'\n关闭\nf = open()\n\nf.close() # 关闭\nreading and writing\n读\nf = open()\n\nf.read()\nf.read(2) # 参数: 文件读取的字符数\n写\nf = open()\n\nf.write('write in char') # 参数：写入的字符串\n\n'\\n' # 回车换行\n'\\t' # 横向跳到下一制表符位置\n'\\r' # 回车\ncopy\nf1 = open()\n\ncontent = f1.read()\nname = f1.name\nf2 = open(name[:name.rfind('.')] + '.bak')\nf2.write(content)\n\nf1.close()\nf2.close()\n大文件处理方式\n读取大文件的时候，禁止使用read(), readline(), readlines()方法读取.\n读取小部分内容，多次读取\nf1 = open()\n\nwhile True:\n    content = f1.read(1024)\n    if not content:\n        break\nwith open()\n# 如果文件是基于行的\nwith open(...) as f:\n    for line in f:\n        process(line)\nfileinput处理\nimport fileinput\nfor line in fileinput.input(['xxx.log']):\n    print line\n定位读写\nseek()：指针偏移量tell(): 指针所在位置\nseek(offset, from)\n\noffset # 偏移量 (指针移动)\nfrom # 方向[0: 文件开头, 1: 当前位置, 2: 文件末尾]\n\nf = open()\n\nf.seek(2, 0)\nf.readline()\nf.close()\n文件夹和文件操作\n依靠os内置模块, 完成系统相关操作\n文件重命名\nimport os\n\nos.rename('old_name', 'new_name')\n删除文件\nimport os\nos.remove('file_name') # file_name 待删除的文件\n创建文件夹\nimport os\n\nos.mkdir('folder') # folder 文件夹名字\n获取当前目录\nimport os\n\nos.getcdw() # 返回当前文件所在的绝对路径\n获取目录列表\nimport os\n\nos.listdir('url') # url 列表路径\nos.listdir('./')\n删除文件夹\nimport os\n\nos.rmdir('folder') # folder 待删除的文件夹\n改变默认目录\nimport os\n\nos.chdir('../')\n\n# open() 创建在当前目录下，可以改变默认目录，使创建到其它目录下\n批量重命名\n方法1：注意重命名的路径问题\nimport os\n\nfolder_name = input('input name:')\n\nfile_names = os.listdir(folder_name)\n\nos.chdir(folder_name) # 跳转至指定目录\n\nfor name in file_names:\n    _name = name[:name.rfind('.')] + '-tt-' + name[name.rfind('.'):]\n    os.rename(name, _name)\n方法2：\nimport os\n\nfolder_name = input('input name:')\n\nfile_names = os.listdir(folder_name)\n\nfor name in file_names:\n    old_file_name = folder_name + '/' + name\n    new_file_name = folder_name + '/' + 'haha'\n    os.rename(old_file_name, new_file_name)\n\n                ", "mainLikeNum": ["1 "], "mainBookmarkNum": "2"}