{"title": "[译] Flask教程--会话 - Ethan Sun的技术博客 ", "index": "翻译,python,flask", "content": "跟Cookie不同, 会话(Session)数据存储于服务器上. 会话是指一个客户在一个web服务上从登录到注销之间的时间段. 会话中需要存储的会话数据, 储存在服务器上的一个临时目录中.\n每个会话都被分配了一个会话ID, 会话数据以Cookie的形式存储, 并且服务器会把会话数据进行加密. 为了进行这样的加密, Flask应用需要定义一个配置: SECRET_KEY.\n会话对象同样是一个字典, 对应的键值分别是Session的各个键和对应的值.\n例如, 如果设置一个会话变量username:\nsession[‘username’] = ’admin’\n如果要释放这个变量, 使用pop()方法:\nsession.pop('username', None)\n下面的代码简单演示了会话在Flask中如何使用. 访问URL '/' 时, 如果会话变量username没有被设置, 则提示用户需要登录.\n@app.route('/')\ndef index():\n   if 'username' in session:\n      username = session['username']\n         return 'Logged in as ' + username + '<br>' + \\\n         \"<b><a href = '/logout'>click here to log out</a></b>\"\n   return \"You are not logged in <br><a href = '/login'></b>\" + \\\n      \"click here to log in</b></a>\"\n如果用户浏览到URL '/login' 上, 对应着login()函数, 因为此时请求使用的GET方法, 所以浏览器展示出一个登录表单. 当表单提交时, 会POST到 '/login' 上, 此时我们设置会话变量, 并重定向到 '/' 上, 这时, 'username'这个会话变量就可以找到了.\n@app.route('/login', methods = ['GET', 'POST'])\ndef login():\n   if request.method == 'POST':\n      session['username'] = request.form['username']\n      return redirect(url_for('index'))\n   return '''    \n   <form action = \"\" method = \"post\">\n      <p><input type = text name = username/></p>\n      <p<<input type = submit value = Login/></p>\n   </form>    \n   '''\n这个应用同样有个logout()注销方法, 这个方法清除会话变量'usernmae', 这样之后, 访问URL '/'就会展示提示用户登录的字样.\n@app.route('/logout')\ndef logout():\n   # remove the username from the session if it is there\n   session.pop('username', None)\n   return redirect(url_for('index'))\n按如下的方式配置密钥:\nfrom flask import Flask, session, redirect, url_for, escape, request\napp = Flask(__name__)\napp.secret_key = 'any random string’\n然后我们就可以启动应用, 观察各个url的输出了.\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "0"}