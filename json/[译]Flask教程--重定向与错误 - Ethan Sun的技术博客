{"title": "[译]Flask教程--重定向与错误 - Ethan Sun的技术博客 ", "index": "翻译,python,flask", "content": "Flask类有一个redirect()方法. 当我们调用它时, 它会返回一个响应对象并且按指定的状态码将用户重定向到另一个位置.\nredirect()方法的原型如下:\nFlask.redirect(location, statuscode, response)\n在上面的函数中,\n\n\nlocation 我们要重定向的URL位置\n\nstatuscode 状态码会在http头中发送给浏览器, 默认为302\n\nresponse 用这个参数来初始化响应对象\n\n下面是一些标准的状态码:\n\nHTTP_300_MULTIPLE_CHOICES\nHTTP_301_MOVED_PERMANENTLY\nHTTP_302_FOUND\nHTTP_303_SEE_OTHER\nHTTP_304_NOT_MODIFIED\nHTTP_305_USE_PROXY\nHTTP_306_RESERVED\nHTTP_307_TEMPORARY_REDIRECT\n\n重定向的状态码默认是302, 也就是已找到(found).在下面的例子中, redirect()方法用于当登录失败的时候再次展示登录页面.\nfrom flask import Flask, redirect, url_for, render_template, request\n# Initialize the Flask application\napp = Flask(__name__)\n\n@app.route('/')\ndef index():\n   return render_template('log_in.html')\n\n@app.route('/login',methods = ['POST', 'GET'])\ndef login():\n   if request.method == 'POST' and\n   request.form['username'] == 'admin' :\n   return redirect(url_for('success'))\n   return redirect(url_for('index'))\n\n@app.route('/success')\ndef success():\n   return 'logged in successfully'\n    \nif __name__ == '__main__':\n   app.run(debug = True)\nFlask类有个abort()方法, 参数包括一个错误状态码.\nFlask.abort(code)\n\n400 错误请求\n401 未授权请求\n403 禁止\n404 找不到资源\n406 不可接受\n415 未知媒体类型\n429 太多请求\n\n我们来对上面代码中的login()函数做一点修改. 如果我们在登录失败时不重新展示登录页, 而是展示\"未授权\"页面, 那么我们需要把重定向那行代码替换为abort(401).\nfrom flask import Flask, redirect, url_for, render_template, request, abort\napp = Flask(__name__)\n\n@app.route('/')\ndef index():\n   return render_template('log_in.html')\n\n@app.route('/login',methods = ['POST', 'GET'])\ndef login():\n   if request.method == 'POST':\n      if request.form['username'] == 'admin' :\n         return redirect(url_for('success'))\n      else:\n         abort(401)\n   else:\n      return redirect(url_for('index'))\n\n@app.route('/success')\ndef success():\n   return 'logged in successfully'\n\nif __name__ == '__main__':\n   app.run(debug = True)\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "0"}