{"title": "leetcode-95-Unique Binary Search Trees II - 个人文章 ", "index": "python", "content": "题目解读： 穷举列出所有二叉树的结构类型。重点： 动态规划，关注临近root，left，right之间的关系应用：穷举组合，动态规划穷举组合，适用于相邻元素有规律。bug处：注意边界值的情况。不能有重复，遗漏。\nclass TreeNode:\n    def __init__(self, x):\n        self.val = x\n        self.left = None\n        self.right = None\nclass Solution:\n    def generateTrees(self, n):\n        def dfs(left,right):\n            nodes=list()\n            for root in range(left,right+1):\n                print('root=>',root)\n                # node=TreeNode(root)\n                for node_left in dfs(left,root-1):\n                    # node_left=TreeNode(val_left)\n                    for node_right in dfs(root+1,right):\n                        node_root=TreeNode(root)\n                        node_root.left=node_left\n                        # node_right=TreeNode(val_right)\n                        node_root.right=node_right\n                        # nodes.append(node_root)\n                        nodes.append(node_root)\n            return nodes or [None,]\n        if n<1:\n            return []\n        return dfs(1,n)\n\nif __name__=='__main__':\n    n=0\n    st=Solution()\n    out=st.generateTrees(n)\n    # out_vals=[(elem.left.val if hasattr(elem.left,'val') else None,elem.right.val if hasattr(elem.right,'val') else None) for elem in out]\n    print(out)\n    print(len(out))\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "0"}