{"title": "开发拾遗 - 技术分享 ", "index": "linux,mysql,python,javascript,php", "content": "python unicode字符串转成中文\ns = 'u6d4bu8bd5u957fu5ea6' \ns = s.replace('u', '\\u') \nprint s.decode('unicode-escape')\nphp 二进制直接量\n$bin = bindec('110011');  \n$bin = 0b110011;\nphp foreach list\n$arr = [\n    [1, 2],\n    [3, 4],\n];\nforeach ($arr as list($a, $b)) {\n    echo $a.$b\\n\";\n}\nPHP ==和隐式转换\nvar_dump(md5('240610708') == md5('QNKCDZO'));// true  两个字符串恰好以0e 的科学记数法开头，字符串被隐式转换为浮点数，也就等效于0×10^0\nvar_dump(sha1('aaroZmOk') == sha1('aaK1STfY'));// true\nvar_dump('0x1234Ab' == '1193131');// true 0x1234Ab转为16进制，php7无此bug\nvar_dump( 0 == \"a\" );// true\nvar_dump( \"0\" == \"a\" );// true\n== 、switch、in_array 的松比较\n// 如果 $name 值为 0，那么它会满足任何一条 case\nswitch ($name) {// 使用switch (strval($name)) {\n    case \"danny\":\n        break;\n    case \"eve\":\n        break;\n}\n$needle = '1abc'; \n$haystack = array(1,2,3); \nvar_dump(in_array($needle, $haystack);// true\njavascript Date对象的浏览器兼容性问题\n// chrome同时支持'-'和'/'分割日期的时间字符串；safari不支持'-'分割日期的时间字符串\nvar arr = \"2010-03-15 10:30:00\".split(/[- / :]/),\n    date = new Date(arr[0], arr[1]-1, arr[2], arr[3], arr[4], arr[5]);\njavascript 模拟Object.keys()\nfunction keys(obj){\n  var a = [];\n  for(a[a.length] in obj);\n  return a;\n}\njavascript数组去重\nfunction dedupe(array){\n    return Array.from(new Set(array));\n}\n\ndedupe([1,1,2,3]) //[1,2,3]\n工具\n// 命令行提示tldr npm install -g tldr\noctotree 是一款可为 GitHub 和 GitLab 添加侧边栏文件导航的 Chrome 和 Opera 插件python下载视频工具\nSublime Text3 汉化\n// Package Control：Install Package，输入Chinese，选择ChineseLocalization\njavascript reduce\narr = [1,2,3,4,5] \narr.reduce(function(a,b){ \nreturn a*10+b; \n});//12345\nvar result = [1, 2, 3, 4, 5].reduce(function(prev, curr, index, array){\ndebugger;\n    prev.push(curr * 2);\n    return prev;\n}, []);\nconsole.log(result);//[2, 4, 6, 8, 10]\n//求最大值\nvar max = arr.reduce(function(pre,cur,inde,arr){return pre>cur?pre:cur;});\nvar arr = [ {name: 'brick1'}, {name: 'brick2'}, {name: 'brick3'} ]\nfunction carryBricks(arr){\n  return arr.reduce(function(prev, current, index, array){\n    if (index === 0){\n      return current.name;\n    }\n    else if (index === array.length - 1){\n      return prev + ' & ' + current.name;\n    }\n    else {\n      return prev + ', ' + current.name;\n    }\n  }, '');\n }//brick11, brick12 & brick13\n//去重\nvar arr = [1, 3, 1, 'x', 'zz', 'x', false, false];\nvar result = arr.reduce(function(prev, curr, i, array) {\n    var flag = prev.every(function(value) {\n        return value !== curr;\n    });\n    flag && prev.push(curr);\n    return prev;\n}, []);\nconsole.log(result);\njquery插件\n输入提示自动完成插件tokeninputtablesorter 表格排序Date.js执行日期/时间的计算图片裁剪日期选择插件pickadate.jsjavascript刻度条插件\n0.1+0.2\nMath.round( (.1+.2)*100)/100; //0.3\nmysql分解联合查询\nselect * from teacher \njoin school on teacher.id = school.id\njoin course on teacher.id = course.id\nwhere course.name= 'english'  \n\n分解后 \nselect * from course where name = 'english'\nselect * from  school where course_id = 1\nselect * from teacher where school_id in (1,2,3) \n字符串中每个字母重复出现的次数\n var temp = {};\n   'abcdaabc'.replace(/(\\w{1})/g,function($1){\n        temp[$1] ? temp[$1]+=1 : temp[$1] = 1;\n    })\n    console.log(temp) // {a: 3, b: 2, c: 2, d: 1}\ncomposer\nPHP HTTP请求套件实现 Laravel 模型的无限极分类\nphp一维数组 转 多维数组\n$arr = ['a', 'b', 'c', 'd'];\n$child = array();\n$res = [];\nwhile($v = array_pop($arr)) {\n    $res = [$v => $child];\n    $child = $res;\n}\npython中字符串的按位或\na = \"1000111000\"\nb = \"1000000001\"\n\nc = int(a, 2) | int(b, 2)\n\nprint('{0:b}'.format(c))#1000111001\npython生成斐波拉契数列\ndef fib(max):\n    n, a, b = 0, 0, 1\n    while n < max:\n        print(b)\n        a, b = b, a + b\n        n = n + 1\n    return 'done'\nphp正则匹配\n$str=\"{a:1,b:2,c:3}\"; \npreg_match_all('/(\\w+):(\\d+)/', $str, $matches); \n$arr = array_combine($matches[1], $matches[2]);#['a'=>1,'b'=>2,'c'=>3]\nphp max/min\nmax(ceil(-0.5), 0) # -0.0\nmax(0, ceil(-0.5)) # 0\nNaN\n_.isNaN = function(obj){\n    return _.isNumber(obj) && obj !==+obj;\n};\nMysql 用 一张表中的数据更新另一张表的数据\nupdate tableA as ca inner join tableB as cb set ca.thumbs=cb.thumbs where cb.courseid=1;24.php后期静态绑定\nclass A {   \npublic static function get_self() {     \nreturn new self();   \n}      \npublic static function get_static() {     \nreturn new static();   \n} \n}   \n class B extends A {} \nget_class(B::get_self());//A \nget_class(B::get_static()) //B \nget_class(A::get_static());//A\njson_encode输出动态javascript\n$images = array(  'myself.png' , 'friends.png' , 'colleagues.png' ); \n$js_code = 'var images = ' . json_encode($images);  \necho $js_code; // var images = [\"myself.png\",\"friends.png\",\"colleagues.png\"]\nString.fromCharCode\nvar regex_num_set = /&#(\\d+);/g;\nvar str = \"Here is some text: &#27599;&#26085;&#19968;&#33394;|&#34013;&#30333;~\"\n\nstr2 = str.replace(regex_num_set, function(_, $1) {\n  return String.fromCharCode($1);\n});//\"Here is some text: 每日一色|蓝白~\"\n日期格式补0\n\"2015-5-2\".replace(/(?=\\b\\d\\b)/g, '0')#\"2015-05-02\"\n\"2015-5-2\".replace(/-(\\d)(?=-|$)/g, '-0$1')#\"2015-05-02\"\narray_merge如果传的参数中有一个不是数组；则返回null\n$arr = [1,2,3];\n$new = '';\narray_merge($arr, $new);//null\narray_merge($arr, (array)$new);\nphp switch使用的是==比较；而不是===\nswitch (0) {//switch (strval(0))\n    case 'test1':\n        echo 1;\n    case 'test2':\n        echo 2;\n    case 'test3':\n        echo 3;\n        break;\n}\njavascript数组的map方法对一个数组中的空位置(没有设置过值或值被删除)不会调用提供的callback回调函数\nvar arr=[1,,3];//第2个位置为空位置\n \nvar result=arr.map(function(x){\n     console.log(x);\n     return x + 1;//2,undefined,4\n});\narr[1]=undefined;//第2个位置为非空位置，有值undefined\nresult=arr.map(function(x){\n     console.log(x);\n     return x + 1;//2,NaN,4\n});\nsetTimeout传入参数\nfor(var i = 0; i<data.length; i++){\n    (function(i){\n    setTimeout(function (){\n        console.log(data[i])\n    },2000);\n    })(i)\n}\n//es6\nfor(let i = 0; i<data.length; i++){\n    setTimeout(function (){\n        console.log(data[i])\n    },2000);\n}\n循环中promise\nvar userIds = ['aaa', 'bbb', 'ccc'];\n\n//这里getUserById返回的是Promise\nvar promises = arr.map(userIds => getUserById(userId));\n\nPromise\n    .all(promises)\n    .then(function(users) {\n        console.log(users); //这里就是users的列表了\n    });\nhasClass\nfunction hasClass(element, cName) {\n  return (' ' + element.className + ' ').indexOf(' ' + cName + ' ') > -1;\n}\n补零\n\"2016-1-9 12：12:20\".replace(/-(\\d)(?=-|\\s)/g, '-0$1')\nvar str = '2016-1-9 12:12:20';\nvar ss = str.replace(/-([0-9]+)/g, function(match, p) {\n    return p.length !== 1 ? match : '-0' + p;\n});\ngetUrlParameter\nvar getUrlParameter = function getUrlParameter(sParam) {\n    var sPageURL = decodeURIComponent(window.location.search.substring(1)),\n        sURLVariables = sPageURL.split('&'),\n        sParameterName,\n        i;\n\n    for (i = 0; i < sURLVariables.length; i++) {\n        sParameterName = sURLVariables[i].split('=');\n\n        if (sParameterName[0] === sParam) {\n            return sParameterName[1] === undefined ? true : sParameterName[1];\n        }\n    }\n};\n随机数\nMath.round(Math.random() * 1000)//生成0~1000之间的随机整数\n((Math.random() * 10 + 5).toFixed(1) - 0)//产生一个5到15之间，包含一位小数的随机数Math.floor((Math.random() * 10 + 5) * 10) / 10\n显示隐藏元素\nwindow.onload=function(){  \n    var li=document.getElementsByTagName(\"li\");    \n      for(var j=0;j<li.length;j++){ \n       li[j].onclick=function (){        \n        for(var i=0;i<li.length;i++){     \n           li[i].className='';       \n        }         \n        this.className='a';       \n      }\n   }\n};\n判断一个json对象中是否含有某个key\nfunction find (obj, key) {\n    if (! typeof obj === 'object') return false;\n    if (key in obj) return true;\n    for (var k in obj) if find(obj[k], key) return true;\n    return false;\n}\n数组合并\narray = [[1,2,3],[4,5,6],[7,8,9]];\narray=array.reduce(function(a,b){return a.concat(b)})//[1,2,3,4,5,6,7,8,9]\narray.concat.apply([], array);\n区间索引\nfunction getRangeIndex(scrollTop) {\n    var i=0;\n    ranges = [2,3,6,22,88];\n    for (;i<ranges.length;i++) \n        if (scrollTop<ranges[i]) break;\n    return i-1;\n}\n快速生成一个数组，数组的元素是前N个自然数\nlet f = length => Array.from({length}).map((v,k) => k);\nlet f = length => [...Array.from({length}).keys()]\nlet fn = len => Object.keys(new Array(len + 1).join(','))\n每取10行放到一个新的文件中\nwith open('file.txt') as reader, open('newfile.txt', 'w') as writer:\n    for index, line in enumerate(reader):\n        if index % 10 == 0:\n            writer.write(line)\n按首字母排序\nvar arr = [9,8,7,6,5,1,'在', '我', '里', '阿','z','a','h','m'];\narr.sort(function(a,b){return a.toString().localeCompare(b)}) //[1, 5, 6, 7, 8, 9, \"阿\", \"里\", \"我\", \"在\", \"a\", \"h\", \"m\", \"z\"]\n删除字符串的空格\n$str='                            Controllable Eu valence for photoluminescence tuning in apatite-typed';\n//pC:所有的unicode“other” pZ:所有的unicode“separator” ,所有空格和不可见字符\necho $str = preg_replace('/^[\\pZ\\pC]+|[\\pZ\\pC]+$/u','',$str);//Controllable Eu valence for photoluminescence tuning in apatite-typed\nPHP解析JSON得到科学计数法后的int\n$json = '{\"number\": 12345678901234567890}';\nvar_dump(json_decode($json,1));//[ \"number\" => 1.2345678901235e+19]\nvar_dump(json_decode($json,1, 512, JSON_BIGINT_AS_STRING));//[\"number\" => \"12345678901234567890\"]\n//http://cn2.php.net/manual/zh/function.json-decode.php\nMySQL中所有数据库的数据大小\nSELECT table_schema, (\n(\nSUM( DATA_LENGTH ) + SUM( INDEX_LENGTH )\n) /1024 /1024\n) AS datasize\nFROM  `TABLES`\nGROUP BY table_schema\nLIMIT 0 , 30\n\n合并数组\n//一般会用Array.prototype.concat()函数，但不适合来合并两个大型数组，会消耗大量内存来存储新创建的数组。可用Array.prototype.push来替代创建一个新数组，可减少内存的使用。\nvar array1 = [1,2,3];\nvar array2 = [4,5,6];\nconsole.log(array1.push.apply(array1, array2)); // [1,2,3,4,5,6];\nconsole.log(array1.push.call(array1, array2)); // [1,2,3,[4,5,6]];\nphp上传文件\n$tmp_name='test.jpg';\n    if(version_compare(phpversion(),'5.5.0') >= 0 && class_exists('CURLFile')){\n        $fields['file'] = new CURLFile(realpath($tmp_name));\n    }else{\n        $fields['file'] = '@'.$tmp_name;//加@符号curl就会把它当成是文件上传处理\n    }\nphp stdclass\n$tanteng = new stdClass();\n$tanteng->name = 'tanteng';\n$tanteng->email = 'xxx@qq.com';\n //把定义的对象『转换』成数组\n$info = get_object_vars($tanteng);\n$user = new stdClass();\n$user->name = 'gouki';\n$user->hehe = 'hehe';\n$myUser = $user;\n$myUser->name = 'flypig';\n //$myUser的属性确实改变了$user声明的stdClass属性。而如果$user是一个数组，赋值给$myUser，那就拷贝了一个副本给$myUser，这样增大系统开销\nprint_r($user);\n \nprint_r($myUser);\n \nprint_r($user);\nPHP浮点数运算精度\n$a = 69.1;\n \n$b = $a*100;\n \n$c = $b-6910;//-9.0949470177293E-13\n\n$c = round($b)-6910;\n$x = 8 - 6.4;  // which is equal to 1.6\n$y = 1.6;\nvar_dump($x == $y); // is not true\nvar_dump(round($x, 2) == round($y, 2)); // this is true\n$a = intval( 0.58*100 );//57\n \n$b = 0.58*100;\n$a = intval( (0.58*1000)/10 );//58\nintval( round(0.58*100 ));//58\n防止浏览器屏蔽window.open\n<button onclick=“test()”>点击</button>\n<script>\n    function test(){\n        var frame=window.open(“about:blank”,“_blank”);\n        $.get(“/”,function(){\n            frame.location=“http://www.baidu.com”;\n        });\n    }\n</script>\n修改session_id的保存位置\nsession_set_cookie_params(0,‘/’,‘testdomain’);\nsession_start();//开启session\necho ‘Old Session id:’.session_id().‘<br>’;\nsession_regenerate_id(true);//重置session_id，并使原session无效\necho ‘New Session id:’.session_id().‘<br>’;\n//echo session_id()失效\nsetcookie(session_name(),session_id(),0,‘/’,‘testdomain’);//手动更新session_id\nCRUL命令简单分析请求细节所占用的时间\ncurl -o /dev/null -s -w %{http_code}:%{time_namelookup}:%{time_redirect}:%{time_pretransfer}:%{time_connect}:%{time_starttransfer}:%{time_total}:%{speed_download} www.baidu.com\n//这个例子是分析一次百度的请求各个参数：http状态码、DNS解析时间、重定向时间、从开始到准备传输的时间、TCP连接时间、开始传输时间、总时间、下载速度CURL文档：https://curl.haxx.se/docs/manpage.html\nphp上周时间\necho '<br>上周起始时间:<br>';\necho date(\"Y-m-d H:i:s\",mktime(0, 0 , 0,date(\"m\"),date(\"d\")-date(\"w\")+1-7,date(\"Y\"))),\"\\n\";\necho date(\"Y-m-d H:i:s\",mktime(23,59,59,date(\"m\"),date(\"d\")-date(\"w\")+7-7,date(\"Y\"))),\"\\n\";\n\necho date(\"Y-m-d\",strtotime('-1 week last monday')).\" 00:00:00\";\necho date(\"Y-m-d\",strtotime('last sunday')).\" 23:59:59\";\n//当前时间的上一周时间  每周时间固定为7天\ndate('Y-m-d', strtotime('-1 week'))\n//如果当前日期为2016-5-31, 用date('Y-m-d', strtotime('-1 month'))会产生错误。因为这里把 -1 month按照-30 days来算\ndate('Y-m-d', strtotime('2016-05-31 -1 month')) = 2016-05-01\ndate('Y-m-d', strtotime('2016-01-31 +1 month')) = 2016-03-02\n//如果需要取当前月的前后月份的话，需要小心，正确做法可以改为\ndate('m', strtotime(date('Y-m-1').' -1 month'))\ndate('m', strtotime(date('Y-m-1').' +1 month'))\n{ \"a\":\"1\",\"b\":\"2\"} 变成 \"a:1;b:2\"\nvar obj = {\"a\":\"1\",\"b\":\"2\",\"c\":\"3\"};\nvar str = $.map(obj,function(n,index){return ''+index+':'+n;}).join(';');//\"a:1;b:2;c:3\"\nvar str = JSON.stringify(obj).replace(/\"|{|}/g, \"\").replace(/,/g, \";\")\nObject.keys({\"a\":\"1\",\"b\":\"2\"}).map(function(key){return key+':'+info[key]}).join(';');\npython格式化\nips = (\n    (1, '10.121.1.1:4730'),\n    (2, '127.0.0.1:4730'),\n    (3, '127.0.0.1:4730')\n)\n\ndic = {}\nfor v, k in ips:\n    dic.setdefault(k, []).append((v, k))\n\nprint dic\n{\n    '10.121.1.1:4730':\n        [(1, '10.121.1.1:4730')], \n    '127.0.0.1:4730':\n        [(2, '127.0.0.1:4730'), (3, '127.0.0.1:4730')]\n}\nPHP生成连续数据\n$numbers = array(0, 1, 3, 5, 6, 8, 10);\nsort($numbers);\n$new = range(array_shift($numbers),end($numbers));//[0 1 2 3 4 5 6 7 8 9 10]\n$a = [0,1,3,5,6,8,10];//原始数据\nsort($a);\nrange(array_shift($a),array_pop($a));\njavascript对象复制\nfunction clone(e) {\n    var t = {};\n    for (var n in e) e.hasOwnProperty(n) && (t[n] = e[n]);\n    return t;\n}\n过滤掉emoji表情\nfunction filterEmoji($str)\n{\n    $str = preg_replace_callback(\n            '/./u',\n            function (array $match) {\n                return strlen($match[0]) >= 4 ? '' : $match[0];\n            },\n            $str);\n\n     return $str;\n }\njavascript选择器\nfunction $(selector, context) {\n        context = context || document;\n        var elements = context.querySelectorAll(selector);\n        return Array.prototype.slice.call(elements);\n    };\njquery对象对比,开发中要尽量先保存创建的jQuery对象，然后多次使用\nvar elem1 = $(\"#navList li\");\nvar elem2 = $(\"#navList li\");\nelem1 ==elem2;//false\n//应该比较dom本身不是 jQuery对象\n$('div') === $('div') //false\n$('div')[0] === $('div')[0]//true\nfor 循环和异步调用的问题\nfor (var i = 0; i < 6; i++) {\n    // do 同步执行，里面的 i 是 0 \n    do(i).then(function() {\n       // another 异步执行，此时 i 已经是循环后的6\n        another(i)\n    })\n}\n//使用闭包保存变量的方式来解决\nfor (var i = 0; i < 6; i++) {\n    // 立即执行函数作闭包，保存变量i为index\n    (function(index) {\n        do(index).then(function() {\n            another(index);\n        })\n    })(i)\n}\n按照字母和数字的顺序进行排序\nvar arr = ['A1','A2','A100','A7','B2','A10','A14','B12','C1','C10','C5']\narr.sort(function(a, b) {\n  var ret = a.charCodeAt(0) - b.charCodeAt(0); // 首字母处理\n  if (ret == 0) {\n    ret = +a.slice(1) - +b.slice(1); // 数字处理\n  }\n  return ret;//[\"A1\", \"A2\", \"A7\", \"A10\", \"A14\", \"A100\", \"B2\", \"B12\", \"C1\", \"C5\", \"C10\"]\n});\nJSON.parse转换报错\nvar getValue = function (objStr) {\n    return new Function(\"return \" + objStr)()\n}\n// 调用\nvar res1 = getValue('{\"foo\" : 1, }')//Object {foo: 1}\nJSON.parse(res1);\njavascript正则替换\nvar str = 'abc{xdf}efg{dfg}ijk{232}';\nvar arr = ['d', 'h', 'l'];\nvar result = str.match(/\\{.*?\\}/g);\nfor (var i = 0; i < result.length; i++) {\n    str = str.replace(result[i], arr[i])\n}\nconsole.log(str);\n//abcdefghijkl\njavascript闭包\nfunction Score(){\n    this.scores = [];\n}\nScore.prototype.add = function(score){\n    this.scores.push(score);\n};\nScore.prototype.showAverage = function(){\n    let sum = this.scores.reduce(function(pre,cur){\n        return pre+cur;\n    });\n    console.log(sum*1.0/this.scores.length);\n};\nlet scores = [90,80,70];\nlet score1 = new Score();\nscores.forEach(score1.add);//scores.forEach(score1.add.bind(score1));\nscores.forEach(function(score) {\n    score1.add(score);\n});\nscore1.showAverage();\njavascript array reduce()\narr.reduce(function (pre, cur, index) {\n    if (index >= 3) {\n        return pre;\n    }\n    return pre + cur;\n}, initVal);\n\njavascript 汉字占2字节\nfunction getLength(str) {\n    return str.replace(/[^ -~]/g, 'AA').length;\n}\n\nfunction limitMaxLength(str, maxLength) {\n    var result = [];\n    for (var i = 0; i < maxLength; i++) {\n        var char = str[i]\n        if (/[^ -~]/.test(char))\n            maxLength--;\n        result.push(char);\n    }\n    return result.join('');\n}\n隐藏手机号\necho substr_replace ('13412343312','****',3,4) ;//134**3312\njavascript数组降维\nvar flatten = function(array) {\n    return array.reduce(function(previous, i) {\n        if (Object.prototype.toString.call(i) !== '[object Array]') {\n            return (previous.push(i), previous);\n        }\n        return (Array.prototype.push.apply(previous, flatten(i)), previous);\n    }, []);\n};\nundefined\nflatten([[1, 2],[3, 4, 5], [6, 7, 8, 9,[11,12,[12,13,[14]]]],10]);\n//[1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 12, 13, 14, 10]\n[[0, 1], [2, 3], [4, 5]].reduce(function(a, b) {\n    return a.concat(b);\n});\n获取content-type\n//获取content-type\nfunction getContentType($url)\n{\n    $ch = curl_init();\n    curl_setopt($ch, CURLOPT_URL, $url);\n    curl_setopt($ch, CURLOPT_HEADER, 1);\n    curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);\n    curl_setopt($ch, CURLOPT_FOLLOWLOCATION, 1);\n    curl_setopt($ch, CURLOPT_NOBODY, 1);\n    curl_exec($ch);\n    $contentType = curl_getinfo($ch, CURLINFO_CONTENT_TYPE);\n    return $contentType;\n}\n \n//获取url后缀\nfunction getUrlExtension($url)\n{\n    $parseurl = parse_url($url);\n    $extension = pathinfo($parseurl['path'], PATHINFO_EXTENSION);\n    return $extension;\n}\nPHP随机合并数组并保持原排序\n//随机合并两个数组元素，保持原有数据的排序不变（即各个数组的元素在合并后的数组中排序与自身原来一致）\nfunction shuffleMergeArray() {\n    $mergeArray = array();\n    $sum = count($array1) + count($array2);\n    for ($k = $sum; $k > 0; $k--) {\n        $number = mt_rand(1, 2);\n        if ($number == 1) {\n            $mergeArray[] = $array2 ? array_shift($array2) : array_shift($array1);\n        } else {\n            $mergeArray[] = $array1 ? array_shift($array1) : array_shift($array2);\n        }\n    }\n\n\n    return $mergeArray;\n//合并前的数组：\n$array1 = array(1, 2, 3, 4);\n$array2 = array('a', 'b', 'c', 'd', 'e');\n\n//合并后的数据：\n$mergeArray = array (\n  0 => 'a',\n  1 => 1,\n  2 => 'b',\n  3 => 2,\n  4 => 'c',\n  5 => 'd',\n  6 => 3,\n  7 => 4,\n  8 => 'e',\n)\n仿知乎复制文本自带版权声明\ndocument.body.addEventListener('copy', function (e) {\n    if (window.getSelection().toString() && window.getSelection().toString().length > 42) {\n        setClipboardText(e);\n        alert('商业转载请联系作者获得授权，非商业转载请注明出处，谢谢合作。');\n    }\n});\n \nfunction setClipboardText(event) {\n    var clipboardData = event.clipboardData || window.clipboardData;\n    if (clipboardData) {\n        event.preventDefault();\n \n        var htmlData = ''\n            + '著作权归作者所有。<br>'\n            + '商业转载请联系作者获得授权，非商业转载请注明出处。<br>'\n            + '作者：DIYgod<br>'\n            + '链接：' + window.location.href + '<br>'\n            + '来源：Anotherhome<br><br>'\n            + window.getSelection().toString();\n        var textData = ''\n            + '著作权归作者所有。\\n'\n            + '商业转载请联系作者获得授权，非商业转载请注明出处。\\n'\n            + '作者：DIYgod\\n'\n            + '链接：' + window.location.href + '\\n'\n            + '来源：Anotherhome\\n\\n'\n            + window.getSelection().toString();\n \n        clipboardData.setData('text/html', htmlData);\n        clipboardData.setData('text/plain',textData);\n    }\n}\n根据用户积分判断等级\n//lv1:1~50\n//lv2:51~110\n//lv3:111~180\n//lv4:181~260\nfunction getLevel($point) {\n    $level = 0;\n    while($point >= 0) {\n        $point -= 50 + $level++ * 10;\n    }\n    return $level;\n}\n0000000序列递增\nfor ($i = 0; $i < 100; $i++) { \n    $zero = '';\n    $k = 7-strlen($i);\n    for ($j = $k; $j >0; $j--) { \n        $zero .= 0;\n    }\n    echo $zero.$i.'<br>';\n}\nfor (var i = 0 ; i <= 100; i ++){\n  var zero = \"\";\n  for (var j = 7-i.toString().length; j > 0; j--) {\n    zero += \"0\";\n  }\n  console.log(zero + i);\n}\nfor ($i=0;$i<=9999999;$i++) echo str_pad($i,7,\"0\",STR_PAD_LEFT);\n//Array.from(Array(1000000).keys()).map(function(x){ return \"0\".repeat(8 - (\"\" + (x + 1)).length) + (x+1)})\n判断远程图片是否存在\nfunction exist_file($url){ \n$opts=array( \n'http'=>array( \n'method'=>'HEAD', \n'timeout'=>2 \n)); \n@file_get_contents($url,false,stream_context_create($opts)); \nif ($http_response_header[0] == 'HTTP/1.1 200 OK') { \nreturn true; \n} else { \nreturn false; \n} \n}\n检测函数类型\n\nfunction getType(value){  //基本上可以返回所有的类型，不论你是自定义还是原生\n    return Object.prototype.toString.call(value).match(/\\s{1}(\\w+)/)[1];\n}\nlet obj = new Object();\nconsole.log(getType(obj)); //\"Object\"\nmoment.js时间处理\nvar a = moment([2016, 0, 15]);\nvar b = moment([2016, 7, 31]);\nvar diff = b.diff(a, 'months');\n\nvar diffMonths = Array\n        .apply([], new Array(diff + 1))\n        .map(function(item, index) {\n            return a.clone().add(index, 'month').format('YYYY-MM');\n        });\n\nconsole.log(diffMonths);//[\"2016-01\", \"2016-02\", \"2016-03\", \"2016-04\", \"2016-05\", \"2016-06\", \"2016-07\"]\n\nphp中文正则匹配\nphp中文正则匹配$str = \"one中国你好two\";\n$preg = \"/\\P{Han}+/u\";\n$result = preg_replace($preg, '', $str);\nvar_dump($result); //string(12) \"中国你好\" p小写是匹配汉字，P大写是匹配非汉字\n生成6位的数字验证码\nconsole.log(('000000' + Math.floor(Math.random() * 999999)).slice(-6));\nconsole.log(Math.random().toString().slice(-6));\nconsole.log(/\\d{6}/.exec(Math.random())[0])\nconsole.log('' + Math.floor(Math.random() * 999999));\n16进制颜色代码生成\n\n(function(){\nreturn '#'+('00000'+(Math.random()*0x1000000<<0).toString(16)).slice(-6);\n})()\nphp 模拟 tail -f\n$handle = popen(\"tail -f /var/log/nginx/access.log 2>&1\", 'r');\n     while(!feof($handle)) {\n     $buffer = fgets($handle);\n     echo \"$buffer\\n\";\n     flush();\n}\npclose($handle);\n\nmysql distinct\ntest表的结构\nid test1 test2\n1 a 1\n2 a 2\n3 a 3\n4 a 1\n5 b 1\n6 b 2\n7 b 3\n8 b 2\nselect distinct test1 from test\ntest1\na\nb\nselect distinct test1, id from test\ntest1 id\na 1\na 2\na 3\na 4\nb 5\nb 6\nb 7\nb 8\nSELECT id, group_concat( DISTINCT test1 ) t FROM test GROUP BY test1\nid t\n1 a\n5 b\nphp下载文件\ntry {\n    $client = new \\GuzzleHttp\\Client($url,[\n    'curl.options' => [\n        CURLOPT_SSL_VERIFYPEER=>2,\n        CURLOPT_SSL_VERIFYHOST=true,\n    ]\n]);\n    $data = $client->request('get','http://xxxx')->getBody()->getContents();\n    Storage::disk('local')->put('filename', $data);\n} catch (\\GuzzleHttp\\RequestException $e) {\n    echo 'fetch fail';\n}\n\njavascript sort 排序\nvar  arr=[3,4,6,21,2,3,4,1,2,9,6,3,4,5,6,7,2,3];\narr.sort(function(a,b){\n        return  a>b;\n});\nconsole.log(arr);//[9, 3, 2, 3, 2, 3, 2, 1, 3, 4, 4, 4, 5, 6, 6, 6, 7, 21]\n\nvar  arr=[3,4,6,21,2,3,4,1,2,9,6,3,4,5,6,7,2,3];\narr.sort(function(a,b){\n        return  a-b;\n});\nconsole.log(arr);//[1, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 5, 6, 6, 6, 7, 9, 21]\nvar  arr=[\n        {name:\"one\",age:10},\n        {name:\"two\",age:40},\n        {name:\"three\",age:30},\n        {name:\"four\",age:90},\n        {name:\"five\",age:60}\n];\narr.sort(function(a,b)  {\n        return  a.age-b.age;\n});\nconsole.log(arr);\n\njavascript date\nnew Date(2016,1,31) > new Date(2016, 2, 1)//true\n//month 从 0 开始算 new Date(2016,1,31) == 2016 年 2 月 31 日 然而 2 月只有 29 天 so \nnew Date(2016,1,31) == 2016 年 3 月 2 日\nnew Date(2016,1,30) > new Date(2016, 2, 1)//false\njavascript lastIndex\nfunction filtrate() { \nvar newArr = [], reg = /^\\s*$/g, \nstr = \"baidu,google, , ,baidu,google,bg\"; \narr = str.split(','); \nfor (var i = 0; i < arr.length; i++) { \n//var reg = /^\\s*$/g; \nif (!reg.test(arr[i])) { \nnewArr.push(arr[i]); \n} \n} \nreturn newArr;//[\"baidu\", \"google\", \" \", \"baidu\", \"google\", \"bg\"] \n} \n\nfunction filtrate2() { \nvar newArr = [], reg = /^\\s*$/g, \nstr = \"baidu,google, , ,baidu,google,bg\"; \narr = str.split(','); \nfor (var i = 0; i < arr.length; i++) { \nvar reg = /^\\s*$/g; \nif (!reg.test(arr[i])) { \nnewArr.push(arr[i]); \n} \n} \nreturn newArr; //[\"baidu\", \"google\", \"baidu\", \"google\", \"bg\"]\n}\n微信浏览器禁止页面下拉查看网址\nvar overscroll = function(el) {\n  el.addEventListener('touchstart', function() {\n    var top = el.scrollTop\n      , totalScroll = el.scrollHeight\n      , currentScroll = top + el.offsetHeight;\n    //If we're at the top or the bottom of the containers\n    //scroll, push up or down one pixel.\n    //\n    //this prevents the scroll from \"passing through\" to\n    //the body.\n    if(top === 0) {\n      el.scrollTop = 1;\n    } else if(currentScroll === totalScroll) {\n      el.scrollTop = top - 1;\n    }\n  });\n  el.addEventListener('touchmove', function(evt) {\n    //if the content is actually scrollable, i.e. the content is long enough\n    //that scrolling can occur\n    if(el.offsetHeight < el.scrollHeight)\n      evt._isScroller = true;\n  });\n}\noverscroll(document.querySelector('.scroll'));\ndocument.body.addEventListener('touchmove', function(evt) {\n  //In this case, the default behavior is scrolling the body, which\n  //would result in an overflow.  Since we don't want that, we preventDefault.\n  if(!evt._isScroller) {\n    evt.preventDefault();\n  }\n});\nlaravel 为 VerifyCsrfToken 添加过滤条件\n//修改 app/Http/Middleware/VerifyCsrfToken.php\n<?php\n\nnamespace App\\Http\\Middleware;\n\nuse Illuminate\\Foundation\\Http\\Middleware\\VerifyCsrfToken as BaseVerifier;\nuse Closure;\n\nclass VerifyCsrfToken extends BaseVerifier\n{\n    /**\n     * The URIs that should be excluded from CSRF verification.\n     *\n     * @var array\n     */\n    protected $except = [\n        //\n    ];\n\n    public function handle($request, Closure $next)\n    {\n        // 如果是来自 api 域名，就跳过检查\n        if ($_SERVER['SERVER_NAME'] != config('api.domain'))\n        {\n            return parent::handle($request, $next);\n        }\n\n        return $next($request);\n    }\n}\nswitch 字符串和数字会隐式转换比较\n\n$string=\"2string\";\n\nswitch($string)\n{\n    case (string) 1:\n        echo \"this is 1\";\n        break;\n    case (string) 2:\n        echo \"this is 2\";\n        break;\n    case '2string':\n        echo \"this is a string\";\n        break;\n}\n输出调试信息\n\nfunction log(msg){\n    var $body = document.querySelector('body');\n    \n    if( !$body.querySelector('.info_wz_852') ){\n        $body.innerHTML += '<div class=\"info_wz_852\" style=\"position:fixed;top:0;left:0;z-index:99999; background:#000;color:#f00;\"></div>';\n    }\n        \n    var $info = $body.querySelector('.info_wz_852');\n    var date = new Date(),\n        minute = ('00'+date.getMinutes()).slice(-2),\n        second = ('00'+date.getSeconds()).slice(-2);\n    \n    try{\n        throw new Error();\n    }catch(e){\n        var loc = (e.stack.replace(/Error\\n/).split(/\\n/)[1]).replace(/^(\\s|\\u00A0)+/,'').replace(/(\\s|\\u00A0)+$/,'');\n            \n        // var arr = loc.split(':'),\n        //     col = parseInt(arr.pop()),\n        //     line = parseInt(arr.pop());\n    \n        $info.innerHTML += '<p>['+minute+':'+second+'] '+loc+'</p><p>'+msg+'</p><br/>';\n    }\n}\n对象数组互转方法\n/**\n     * 数组转换对象\n     *\n     * @param $arr 数组\n     * @return object|void\n     */\n    public function arrayToObject($arr)\n    {\n\n        if (gettype($arr) != 'array') return;\n        foreach ($arr as $k => $v) {\n            if (gettype($v) == 'array' || getType($v) == 'object')\n                $e[$k] = (object)$this->arrayToObject($v);\n        }\n        return (object)$e;\n    }\n\n    /**\n     * 对象转换数组\n     *\n     * @param $e StdClass对象实例\n     * @return array|void\n     */\n    public function objectToArray($s)\n    {\n        $s = (array)$s;\n        foreach ($s as $k => $v) {\n            if (gettype($v) == 'resource') return;\n            if (gettype($v) == 'object' || gettype($v) == 'array')\n                $e[$k] = (array)$this->objectToArray($v);\n        }\n        return $e;\n    }\njavascript数组随机\nArray.prototype.shuffle = function(n) {\n  var len = this.length , num = n?Math.min(n,len):len,arr = this.slice(0)\n  arr.sort(function(a,b){\n     return Math.random()-0.5\n  })\n  return arr.slice(0,num-1)\n}\nphp生成不重复字符串\necho sprintf('%x',crc32(microtime()));\nPHP 随机用户名账号\n//循环创建1万个随机账号，0碰撞，10万大约0-3个碰撞，足够应付未来数十亿级PV\nfunction genUserNumber()\n{\n    $chars = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n    $username = \"\";\n    for ( $i = 0; $i < 6; $i++ )\n    {\n        $username .= $chars[mt_rand(0, strlen($chars))];\n    }\n    return strtoupper(base_convert(time() - 1420070400, 10, 36)).$username;\n}\n一个操作中对 Redis 服务器执行多个命令\nRedis::pipeline(function ($pipe) {\n  for ($i = 0; $i < 1000; $i++) {\n    $pipe->set(\"key:$i\", $i);\n  } \n});\n中文拼音排序\nfrom pypinyin import lazy_pinyin\n\nchars = ['鑫','鹭','榕','柘','珈','骅','孚','迦','瀚','濮','浔','沱','泸','恺','怡','岷','萃','兖']\n\nchars.sort(key=lambda char: lazy_pinyin(char)[0][0])\n\nprint([lazy_pinyin(char) for char in chars])\nprint(chars)\n[['cui'], ['fu'], ['hua'], ['han'], ['jia'], ['jia'], ['kai'], ['lu'], ['lu'], ['min'], ['pu'], ['rong'], ['tuo'], ['xin'], ['xun'], ['yi'], ['yan'], ['zhe']]\n['萃', '孚', '骅', '瀚', '珈', '迦', '恺', '鹭', '泸', '岷', '濮', '榕', '沱', '鑫', '浔', '怡', '兖', '柘']\nphp 金额每三位加逗号分隔\n//money_format\n>>> strrev(implode(',', str_split(strrev('434353222323443'), 3)) )\n=> \"434,353,222,323,443\"\nphp时间格式化\n\nfunction getDiffTime($timestamp) \n{\n    $datetime = new DateTime(date('Y-m-d H:i:s', $timestamp));\n    $datetime_now = new DateTime();\n    $interval = $datetime_now->diff($datetime);\n    list($y, $m, $d, $h, $i, $s) = explode('-', $interval->format('%y-%m-%d-%h-%i-%s'));\n    if ((($result = $y) && ($suffix = '年前')) ||\n        (($result = $m) && ($suffix = '月前')) ||\n        (($result = $d) && ($suffix = '天前')) ||\n        (($result = $h) && ($suffix = '小时前')) ||\n        (($result = $i) && ($suffix = '分钟前')) ||\n        (($result = $s) && ($suffix = '刚刚'))) {\n        return $suffix != '刚刚' ? $result . $suffix : $suffix;\n    }\n}\nhtml写入word\nfunction word($data,$fileName=''){ \nif(empty($data)) return ''; \n$data='<html xmlns:o=\"urn:schemas-microsoft-com:office:office\" xmlns:w=\"urn:schemas-microsoft-com:office:word\" xmlns=\"http://www.w3.org/TR/REC-html40\">'.$data.'</html>'; \nif(empty($fileName)) $fileName=date('YmdHis').'.doc'; \n$fp=fopen($fileName,'wb'); \nfwrite($fp,$data); \nfclose($fp); \n} \n$str = '<h2>hello daye</h2>'; \nword($str); \n\n一行代码可以看到所有页面元素\n[].forEach.call($$(\"*\"),function(a){a.style.outline=\"1px solid #\"+(~~(Math.random()*(1<<24))).toString(16)})https://segmentfault.com/a/11...http://blog.tanteng.me/2015/1...http://joebon.cc/date-cross-b...https://segmentfault.com/a/11...https://segmentfault.com/q/10...https://www.zhihu.com/questio...http://t.cn/RqgIMWahttp://t.cn/h4tDfghttp://div.io/topic/1610https://www.talkingcoder.com/...http://www.w3cfuns.com/notes/...http://www.cnblogs.com/shocke...\n\n                ", "mainLikeNum": ["2 "], "mainBookmarkNum": "8"}