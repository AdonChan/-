{"title": "基于HTTP标准协议的API接口设计规范构思 - 修仙 ", "index": "node.js,python,javascript,golang", "content": "开发规范\n\n版本控制git\n开发流程git flow\n\n接口\n\n\n请求方式\nurl\n动作\n中文说明\n\n\n\nGET\n/resources/\nlist\n列表\n\n\nPOST\n/resources/\ncreate\n创建\n\n\nGET\n/resources/:id\nretrieve\n详细\n\n\nPUT\n/resources/:id\nupdate\n更新\n\n\nPATCH\n/resources/:id\npartial_update\n部分更新\n\n\nDELETE\n/resources/:id\ndestroy\n删除\n\n\n\n数据\n\n请求支持form-date,json,x-www-form-urlencode\n返回格式统一为json\n一个请求对应一个serializer\n\n错误\n\n错误信息包含在返回内容里\n不同的错误对应不同的错误信息代码\nhttp错误码按照标准用法使用\n\n认证\n\njwt\ntoken\noauth2\n\n权限\n\n以中间件形式作为权限鉴别插件，根据http请求格式直接判断权限\n用户登录成功时，将用户信息与权限信息缓存保证效率\n\n日志\n\n日志以中间件形式提供\n根据业务需求氛围入库日志与普通日志\n\n文档(待完善)\n根据上面的接口格式写文档\n{\n  \"resources\": {\n    \"list\": {\n      \"params\": {},\n      \"response\": {}\n    },\n    \"create\": {\n      \"request\": {},\n      \"response\": {}\n    },\n    \"retrieve\": {\n      \"response\": {}\n    },\n    \"update\": {\n      \"request\": {},\n      \"response\": {}\n    },\n    \"partial_update\": {\n      \"request\": {},\n      \"response\": {}\n    },\n    \"destroy\": {}\n  }\n}\n测试\n业务所需接口测试覆盖率100%\n部署\n\ndocker\ndocker-compose\ndocker-machine\ndocker-swarm\n\n服务器资源监控\n待完善\n\n                ", "mainLikeNum": ["2 "], "mainBookmarkNum": "5"}