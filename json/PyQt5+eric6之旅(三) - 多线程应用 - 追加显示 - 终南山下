{"title": "PyQt5+eric6之旅(三) - 多线程应用 - 追加显示 - 终南山下 ", "index": "python", "content": "实时追加显示\n\n\ncode\nfrom PyQt5 import QtCore, QtGui, QtWidgets\nfrom PyQt5.QtCore import * \nfrom PyQt5.QtWidgets import *\nimport time\nimport sys\n\nclass EmittingStream(QtCore.QObject):  \n        textWritten = QtCore.pyqtSignal(str)  #定义一个发送str的信号\n        def write(self, data):\n            self.textWritten.emit(str(data)) \n\nclass BackendThread(QThread):\n     # 通过类成员对象定义信号\n    update_date = pyqtSignal(str)\n\n     # 处理业务逻辑\n    def run(self):\n        while True:\n            data = QDateTime.currentDateTime()\n            currTime = data.toString(\"yyyy-MM-dd hh:mm:ss\")\n            self.update_date.emit( str(currTime) )\n            time.sleep(1)\n\nclass Ui_MainWindow(object):\n    def setupUi(self, MainWindow):\n        MainWindow.setObjectName(\"MainWindow\")\n        MainWindow.resize(800, 600)\n        self.centralWidget = QtWidgets.QWidget(MainWindow)\n        self.centralWidget.setObjectName(\"centralWidget\")\n        self.gridLayout = QtWidgets.QGridLayout(self.centralWidget)\n        self.gridLayout.setObjectName(\"gridLayout\")\n        self.pushButton = QtWidgets.QPushButton(self.centralWidget)\n        self.pushButton.setObjectName(\"pushButton\")\n        self.gridLayout.addWidget(self.pushButton, 0, 0, 1, 1)\n        self.textEdit = QtWidgets.QTextEdit(self.centralWidget)\n        self.textEdit.setObjectName(\"textEdit\")\n        self.gridLayout.addWidget(self.textEdit, 1, 0, 1, 1)\n        MainWindow.setCentralWidget(self.centralWidget)\n        \n        #下面将输出重定向到textEdit中\n        sys.stdout = EmittingStream(textWritten=self.handleDisplay)  \n        sys.stderr = EmittingStream(textWritten=self.handleDisplay)\n        \n        self.retranslateUi(MainWindow)\n        QtCore.QMetaObject.connectSlotsByName(MainWindow)\n        \n    def retranslateUi(self, MainWindow):\n        _translate = QtCore.QCoreApplication.translate\n        MainWindow.setWindowTitle(_translate(\"MainWindow\", \"实时显示\"))\n        self.pushButton.setText(_translate(\"MainWindow\", \"开始\"))\n\n    def initUI(self):\n          # 创建线程\n        self.backend = BackendThread()\n          # 连接信号\n        self.backend.update_date.connect(self.handleDisplay)\n          # 开始线程\n        self.backend.start()\n\n    # 将当前时间输出到文本框\n    def handleDisplay(self, data):\n        cursor = self.textEdit.textCursor()  \n        cursor.movePosition(QtGui.QTextCursor.End)\n        # self.textEdit.setText(data)\n        cursor.insertText(data + '\\n')  \n        self.textEdit.setTextCursor(cursor)  \n        self.textEdit.ensureCursorVisible()\n\nif __name__ == '__main__':\n    \n    app = QtWidgets.QApplication(sys.argv)\n    MainWindow = QtWidgets.QMainWindow()\n    win = Ui_MainWindow()\n    win.setupUi(MainWindow)\n    win.initUI()\n    MainWindow.show()\n    sys.exit(app.exec_())\n\nresult\n\n\n目前遇到的问题是qt designer使用上遇到很多坑,像是菜单,工具栏各个按钮之间怎么去绑定特定的槽,各种报错.\n然后现在想到一种方式是,qt designer纯用来设计页面,信号与槽之间的绑定自己写,修修补补.\n参考\n\nhttps://www.cnblogs.com/topsh...\nhttp://www.broadview.com.cn/a...\n\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "0"}