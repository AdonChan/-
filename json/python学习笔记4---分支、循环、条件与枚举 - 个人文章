{"title": " python学习笔记4---分支、循环、条件与枚举 - 个人文章 ", "index": "python", "content": "表达式\n表达式（Expression）是运算符（operator）和操作数（operand）所构成的序列\n\n\n>>> 1 + 1\n2\n>>> a = [1,2,3]\n>>> 1 + 1 + 1 + 1\n4\n>>> 1 + 2 * 3\n7\n>>> 1 * 2 + 3\n5\n>>> a = 1 + 2 * 3\n>>> a = 1\n>>> b = 2\n>>> c = a and b or c\n>>> c = int('1') + 2\n运算符优先级\n\n同级的运算符的优先级还是有区别的 比如逻辑运算符里的and的优先级大于or\n\n>>> a = 1\n>>> b = 2\n>>> c = 3\n>>> a + b * c\n7\n>>> 1 or 2\n1\n>>> 1 and 3\n3\n>>> a or b and c\n1\n>>> a or (b and c)\n1\n>>> a or 3\n1\n>>> (a or b) and c\n3\n>>> (a or b) and (c + 1)   //两个括号同级，左结合\n4\n>>> a = 1\n>>> b = 2\n>>> c = a + b    //出现赋值符号时，右结合\n>>> print(c)    \n3\n>>> c = a or b\n>>> print(c)\n1\n>>> a = 1\n>>> b = 2\n>>> c = 2\n>>> not a or b + 2 == c\nFalse\n>>> ((not a) or ((b + 2) == c))    //优先级：not > and > or\nFalse\n在文本文件中编写Python代码\npython脚本是后缀名为.py的文件，通过命令行“python filename.py”执行\n\n推荐的IDE：PyCharm、vsCode，大型工程适合用PyCharm，学习适合用vsCode，vsCode中推荐的插件:python、Terminal、Vim、vscode-icons\n注释\n单行注释用#多行注释用```\n流程控制语句\n主要有条件控制（if else）、循环控制（for while）、分支\n\n条件控制（if else)\n# encoding: utf-8\n\nmood = False\n\nif mood :\n    print('go to left')\n    # print('back away')\n# print('back away')\nelse :\n    print('go to right')\n    \na = 1\nb = 2\nc = 2\n# if后面不仅可以是布尔值，还可以是表达式\nif a or b + 1 == c :\n    print('go to left')\n    # print('back away')\n# print('back away')\nelse :\n    print('go to right')\n# encoding: utf-8\n\"\"\"\n    一段小程序\n\"\"\"\n# constant 常量  建议全大写\nACCOUNT = 'hughie'\nPASSWORD = '123456'\n# python变量建议都用小写，用下划线分隔单词，不用驼峰命名\nprint('please input account')\nuser_account = input()\n\nprint('please input password')\nuser_password = input()\n\nif ACCOUNT == user_account and PASSWORD == user_password:\n    print('success')\nelse:\n    print('fail')\n# encoding: utf-8\n# snippet 片段\n\nif condition:\n    pass\nelse:\n    pass\n\n\na = True\nif a:\n    # pass 空语句/占位语句\n    pass\nelse:\n    print('')\n\n\nif True:\n    pass\nif False:\n    pass\n\n# 嵌套分支\nif condition:\n    if condition:\n        pass\n    else:\n        pass\nelse:\n    if condition:\n        pass\n    else:\n        pass\n\n# 代码块\nif condition:\n    code1\n        code11\n        code22\n            code333\n            code444\n                code5555\n                code6666\n    code2\n    code3\nelse:\n    code1\n    code2\n    code3\n\n\n改写为elif\n# encoding: utf-8\n\"\"\"\na = x\n\na = 1 print('apple')\na = 2 print('orange')\na = 3 print('banana')\n\nprint('shopping')\n\"\"\"\n\na = input()\nprint('a is' + a)\nif a == 1:\n    print('apple')\nelse:\n    if a == 2:\n        print('orange')\n    else:\n        if a == 3:\n            print('banana')\n        else:\n            print('shopping')\n\n\n# 改写为elif\na = input()\nprint(type(a))\nprint('a is ' + a)\na = int(a)\nif a == 1:\n    print('apple')\nelif a == 2:\n    print('orange')\nelif a == 3:\n    print('banana')\nelse:\n    print('shopping')\n循环（while   for）\n# encoding: utf-8\n# 循环\n\n# 循环语句\n\n# while     for\n# CONDITION = True\n# while CONDITION:\n#     print('I am while')\n\ncounter = 1\n# 递归常用while\nwhile counter <= 10:\n    counter += 1\n    print(counter)\nelse:\n    print('EOF')\n# encoding: utf-8\n\n# 主要是用来遍历/循环 序列或者集合、字典\n# a = ['apple', 'orange', 'banana', 'grape']\n# for x in a:\n#     print(x)\n\n# a = [['apple', 'orange', 'banana', 'grape'], (1, 2, 3)]\n# for x in a:\n#     for y in x:\n#         # print(y, end='')\n#         print(y)\n# else:\n#     print('fruit is gone')\n\n\n# a = [1, 2, 3]\n\n# for x in a:\n#     if x == 2:\n#         # break 遇到x==2的时候终止，打印出1\n#         # break\n#         # continue 遇到x==2的时候跳过，打印出1，3\n#         continue\n#     print(x)\n# else:\n#     print('EOF')\n\n\na = [['apple', 'orange', 'banana', 'grape'], (1, 2, 3)]\nfor x in a:\n    # if 'banana' in x:\n    #     break\n    for y in x:\n        if y == 'orange':\n            # 内部循环跳出后，外部循环还在执行\n            break\n        print(y)\nelse:\n    print('fruit is gone')\n# encoding: utf-8\n# for (i=0; i<10; i++){}\n\n# 以上的for循环用python实现\n# for x in range(0, 10):\n#     # range(0,10) 表示从0开始的10个数字，并不包含10\n#     print(x)\n\n\n# for x in range(0, 10, 2):\n#     # range(0,10,2) 2表示步长\n#     print(x, end=' | ')\n#     # 打印结果：0 | 2 | 4 | 6 | 8 |\n\n\nfor x in range(10, 0, -2):\n    print(x, end=' | ')\n    # 打印结果：10 | 8 | 6 | 4 | 2 |\n# encoding: utf-8\n\na = [1, 2, 3, 4, 5, 6, 7, 8]\n\n# for i in range(0, len(a), 2):\n#     print(a[i], end=' | ')\n    # 1 | 3 | 5 | 7 | \n\nb = a[0:len(a):2]\nprint(b)\n    # [1, 3, 5, 7]\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "0"}