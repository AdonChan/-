{"title": "Python面向对象练习-通过pygame改良乌龟吃鱼 - 学习分享 ", "index": "python", "content": "先看看最后效果\n图片的话是从网上小鱼儿那个案例里面拿的，实现的功能如下：\n\n是通过方向键操作乌龟，进行吃鱼\n吃鱼的时候根据乌龟的x,y坐标和鱼的x,y进行检测，在碰撞区域则干掉这条鱼\n背景音乐和吃鱼音乐的播放\n分数累积\n鱼的平滑游动（控制帧频）\n\n\n实现代码\nimport random\nimport pygame\nimport sys\nfrom pygame.locals import *  #导入一些常用的函数\n\npygame.init()\nscreen=pygame.display.set_mode([640,480]) \npygame.display.set_caption('乌龟吃鱼') #定义窗口的标题为'乌龟吃鱼'\nbackground = pygame.image.load(\"C:\\\\Users\\\\Administrator\\\\Desktop\\\\game\\\\images\\\\haidi.jpg\").convert()\nfishImg = pygame.image.load(\"C:\\\\Users\\\\Administrator\\\\Desktop\\\\game\\\\images\\\\fish.png\").convert_alpha()\nwuguiImg = pygame.image.load(\"C:\\\\Users\\\\Administrator\\\\Desktop\\\\game\\\\images\\\\turtle.png\").convert_alpha()\n\n#乌龟吃掉小鱼的音乐  mp3格式的不行，wav格式的\neatsound = pygame.mixer.Sound(\"C:\\\\Users\\\\Administrator\\\\Desktop\\\\achievement.wav\")\n#背景音乐\npygame.mixer.music.load(\"C:\\\\Users\\\\Administrator\\\\Desktop\\\\game_music.mp3\")\npygame.mixer.music.play(loops=0, start=0.0)\n#成绩文字显示\ncount=0\nfont =pygame.font.SysFont(\"arial\", 40)\nscore = font.render(\"score %d\"%count, True, (255, 255, 255))\n\nw_width = wuguiImg.get_width()-5 #得到乌龟图片的宽度，后面留着吃鱼的时候用\nw_height = wuguiImg.get_height()-5 #得到乌龟图片的高度\n\ny_width = fishImg.get_width()-5 #得到鱼图片的宽度\ny_height = fishImg.get_height()-5 #得到鱼图片的高度\n\nfpsClock=pygame.time.Clock() #创建一个新的Clock对象，可以用来跟踪总共的时间\n#乌龟类\nclass Turtle:\n    def __init__(self):\n        self.power=100 #体力\n        #乌龟坐标\n        self.x=random.randint(0,500)\n        self.y=random.randint(0,400)\n    #乌龟移动的方法：移动方向均随机 第四条\n    def move(self,new_x,new_y):\n        #判断移动后是否超出边界\n        if new_x<0:\n            self.x=0-new_x\n        elif new_x>640:\n            self.x=640-(new_x-640)\n        else:\n            #不越界则移动乌龟的位置\n            self.x=new_x                \n        if new_y<0:\n            self.y=0-new_y\n        elif new_y>480:\n            self.y=480-(new_y-480)\n        else:\n            #不越界则移动乌龟的位置\n            self.y=new_y\n        self.power-=1 #乌龟每移动一次，体力消耗1           \n    def eat(self):\n        self.power+=20 #乌龟吃掉鱼，乌龟体力增加20\n        if self.power>100:\n            self.power=100 #乌龟体力100（上限）\n#鱼类\nclass Fish:\n    def __init__(self):\n        #鱼坐标\n        self.x=random.randint(0,500)\n        self.y=random.randint(0,400)             \n    def move(self):\n        new_x=self.x+random.choice([-10])\n        if new_x<0:\n            self.x=650\n        else:\n            self.x=new_x                \n\n#开始测试数据\ntur=Turtle() #生成1只乌龟\nfish=[] #生成10条鱼\nfor item in range(10):\n    newfish=Fish()\n    fish.append(newfish) #把生成的鱼放到鱼缸里\n\n#pygame有一个事件循环，不断检查用户在做什么。事件循环中，如何让循环中断下来（pygame形成的窗口中右边的插号在未定义前是不起作用的）\nwhile True:\n    for event in pygame.event.get():\n        if event.type==pygame.QUIT:\n            sys.exit()\n        if event.type == KEYDOWN:   \n            #通过上下左右方向键控制乌龟的动向   \n            if event.key==pygame.K_LEFT:\n                tur.move(tur.x-10,tur.y)\n            if event.key==pygame.K_RIGHT:\n                tur.move(tur.x+10,tur.y)\n            if event.key==pygame.K_UP:\n                tur.move(tur.x,tur.y-10)\n            if event.key==pygame.K_DOWN:\n                tur.move(tur.x,tur.y+10)\n\n    screen.blit(background, (0, 0)) #绘制背景图片\n    screen.blit(score,(500,20))#绘制分数\n    #绘制鱼\n    for item in fish:\n        screen.blit(fishImg, (item.x, item.y))\n        # pygame.time.delay(100)\n        item.move() #鱼移动\n    screen.blit(wuguiImg, (tur.x, tur.y)) #绘制乌龟\n    #判断游戏是否结束：当乌龟体力值为0（挂掉）或者鱼儿的数量为0游戏结束\n    if tur.power<0 or len(fish)==0:\n        print(\"Game Over ~\")\n        sys.exit()\n    for item in fish:\n        # print(\"鱼\",item.x,item.y,y_width,y_height)\n        # print(\"乌龟\",tur.x,tur.y,w_width,w_height)\n        if ((tur.x < item.x + y_width) and (tur.x + w_width > item.x) and (tur.y < item.y + y_height) and (w_height + tur.y > item.y)) :\n            tur.eat() #乌龟吃鱼的方法\n            fish.remove(item) #鱼死掉\n            #吃鱼音乐\n            eatsound.play()\n            count=count+1 #累加\n            score = font.render(\"score %d\"%count, True, (255, 255, 255))\n            print(\"死了一只鱼\")\n            print(\"乌龟最新体力值为 %d\"%tur.power)\n\n    pygame.display.update() #更新到游戏窗口\n    fpsClock.tick(10) #通过每帧调用一次fpsClock.tick(10)，这个程序就永远不会以超过每秒10帧的速度运行\n\n\n\n                ", "mainLikeNum": ["1 "], "mainBookmarkNum": "0"}