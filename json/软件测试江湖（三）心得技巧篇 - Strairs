{"title": "软件测试江湖（三）心得技巧篇 - Strairs ", "index": "html5,python,java,php,javascript", "content": "有人的地方就有江湖，有江湖的地方就有恩怨。有的恩怨避无可避，有的本可以避免，只是因为年轻不懂事，不懂得江湖的规矩，惹下许多的是非。软件测试江湖也是江湖，也有一些小技巧。\n1）Bug记录技巧\n详细的bug描述\n作为测试来讲，bug记录是日常工作中非常重要的一项，这项工作的好坏直接决定了后续的bug修改功能是否能顺利进行。1.将bug出现的环境，出现时的状况等详细描述并记录下来2.将bug出现的步骤详细记录下来，3.评估bug复现的概率，并将自己的意见记录下来4.对bug的紧急程度进行标识。记录工作越详细，越周全，后面就越有利于开发人员复现bug，修复bug。开发人员也乐于接受这样的bug任务，会节省很多不必要的时间。\n2）Bug管理技巧\n将bug跨团队指定给开发人员\nBug记录下来只是完成了测试工作的开始，重要的是将发现的bug反馈给开发人员，由开发人员将bug修复，测试的工作才算是圆满完成。\n以往的做法都是测试将新发现的bug一股脑儿的加到开发任务中，然后就狗撵兔子似得催着开发修改自己提交的bug。这样既不方便测试对bug的管理追踪，也容易造成开发将bug修复和日常开发任务混淆。要避免以上的情况可以这样做：1.将bug单独进行管理，独立与开发项目之外2.根据软件的版本对bug进行版本管理3.将我们冗长的bug清单进行瘦身4.修改的bug才通过任务跨项目的方式分配给开发人员这样的好处是可以防止开发陷入bug的汪洋大海中，可以有条不紊地安排开发的bug修改计划。这样既保证了bug的修复，也维护了双方的关系。\n3）bug追踪技巧通过看板形式追踪查看bug修复状态\n将bug交付给开发人员后，测试还需要追踪bug的修复进展。通常的公司bug修复完成后会通过邮件的形式通知到测试，但是存在以下弊端：1.如果日常工作邮件数量过多，很容易忽略邮件通知，2.信息的不同步3.测试只能被动等待通知，无法主动掌握bug状态。\n所以一款合适的bug管理工具对于测试来说至关重要，就个人经验来说，使用看板的方式追踪bug状态是最舒服最省事也最有效率的方式。\n以上是在过往测试江湖中个人总结的三条小技巧，技巧虽小，但是可以帮助初入测试江湖的小白少走一些弯路，让个人的职业发展更加顺利。\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "2"}