{"title": "Theano - 广播(broadcasting) - 数据分析 ", "index": "python3.5,python3.x,python", "content": "广播（Broadcasting)\n广播是这样的一个机制：它允许不同维度的张量进行加法或者乘法运算。在运算时，他将会沿着维度缺失的方向复制较小的那个张量。\n通过广播机制，一个标量可以被加到矩阵上，一个向量可以被加到矩阵上，或者一个标量可以被加到向量上。\n如上图，广播一个行矩阵。T和F分别表示True和False,指明沿着哪个维度可以进行广播。如果第二个参数是向量，它的形状为（2，）以及它的广播模式为（False,）。它将会自动向左展开，匹配矩阵的维度，最终得到（1,2）和（True,Fale）。\n不像numpy那样动态地进行广播，Theano需要知道哪些维度需要进行广播。当可用的时候，广播信息将会以变量的类型给出。\n下面的代码说明为了和矩阵执行加法运算，行和列怎么进行广播的：\nimport theano\nimport numpy\nimport theano.tensor as T\nr = T.row()\nr.broadcastable\n# (True, False)\nmtr = T.matrix()\nmtr.broadcastable\n# (False, False)\nf_row = theano.function([r, mtr], [r + mtr])\nR = numpy.arange(3).reshape(1,3)\nR\n# array([[0, 1, 2]])\nM = numpy.arange(9).reshape(3, 3)\nM\n# array([[0, 1, 2],\n#        [3, 4, 5],\n#        [6, 7, 8]])\nf_row(R, M)\n# [array([[  0.,   2.,   4.],\n#        [  3.,   5.,   7.],\n#        [  6.,   8.,  10.]])]\nc = T.col()\nc.broadcastable\n# (False, True)\nf_col = theano.function([c, mtr], [c + mtr])\nC = numpy.arange(3).reshape(3, 1)\nC\n# array([[0],\n#        [1],\n#        [2]])\nM = numpy.arange(9).reshape(3, 3)\nf_col(C, M)\n# [array([[  0.,   1.,   2.],\n#        [  4.,   5.,   6.],\n#        [  8.,   9.,  10.]])]\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "0"}