{"title": "django基础（一） - 个人文章 ", "index": "centos,django,html,python", "content": "django基础-（一）\n项目的创建和启动\n(venv3) [vagrant@localhost ~]$ cd /vagrant/\n(venv3) [vagrant@localhost vagrant]$ django-admin startproject devops\n(venv3) [vagrant@localhost vagrant]$ tree devops/\ndevops/      #项目容器\n├── devops     #是实际的python项目包\n│ ├── __init__.py\n│ ├── settings.py   #配置文件\n│ ├── urls.py     #路由文件\n│ └── wsgi.py\n└── manage.py     #实用的命令行工具\n(venv3) [vagrant@localhost vagrant]$ vim devops/devops/settings.py    #数据库配置文件更改\nDATABASES = {\n   'default': {\n       'ENGINE': 'django.db.backends.mysql',\n       'NAME': 'devops',\n       'USER': 'root',\n       'PASSWORD': '123456',\n       'HOST': 'localhost',\n       'PORT': 3306,\n          'OPTIONS':{\n           'init_command': 'SET default_storage_engine=INNODB;',\n           },\n    }\n}\n服务启动\n(venv3) [vagrant@localhost devops]$ python manage.py runserver 0:8000\n新建项目\n(venv3) [vagrant@localhost devops]$ python manage.py startapp dashboard     #方法一\n(venv3) [vagrant@localhost devops]$ django-admin startapp dashboard1           #方法二\nstartproject和startapp的区别\n一个项目下有多个app（一对多的关系）\n配置url\n(venv3) [vagrant@localhost devops]$ vim dashboard/urls.py\nfrom django.conf.urls import url\nurlpatterns = [\n]\n注册app\n(venv3) [vagrant@localhost devops]$ vim devops/settings.py\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'dashboard'\n]\nhello world\n视图函数\n(venv3) [vagrant@localhost devops]$ vim dashboard/views.py\nfrom django.shortcuts import render\nfrom django.http import HttpResponse\n#视图函数\ndef index(request):\n    return HttpResponse(\"hello world\")\n配置app url\n(venv3) [vagrant@localhost devops]$ vim dashboard/urls.py\nfrom django.conf.urls import url\nfrom .views import index\nurlpatterns = [\n    url(r'^$',index,name='index')\n]\n配置project url\n(venv3) [vagrant@localhost devops]$ vim devops/urls.py\nfrom django.conf.urls import url,include\nfrom django.contrib import admin\nurlpatterns = [\n    url(r'^admin/', admin.site.urls),\n    url(r'^dashboard/',include(\"dashboard.urls\"))\n]\n启动项目\n(venv3) [vagrant@localhost devops]$ python3 manage.py runserver 0:8000\nHttpRequest对象\n\n是在django.http这个模块中\n是有django创建\n官方文档docs\n\n\n常用的属性：\nrequest.body     -----b''request.scheme    -----httprequest.path        ----  /dashboard/request.method   --- GETrequest.GETrequest.POSTrequest.META\nHttpResponse对象\n\nHttpResponse:返回字符串\nJsonResponse:返回字典，注意safe=False是针对于列表类型\n\nGET与POST请求\n- GET\nrequest.GET\nrequest.GET.get('xx')\nrequest.GET.getlist('oo')\n- POST\nrequest.GET\nrequest.GET.get('xx')\nrequest.GET.getlist('oo')\nQuerydict\nIn [1]: from django.http import QueryDict                                                                  \nIn [2]: QueryDict('aa=bb&cc=dd&cc=xxx')                                                                    \nOut[2]: <QueryDict: {'aa': ['bb'], 'cc': ['dd', 'xxx']}>\nIn [3]: q = QueryDict('aa=bb&cc=dd&cc=xxx')                                                         \\\nIn [4]: QueryDict.fromkeys(['a','b','a'],value='val')                                                      \nOut[4]: <QueryDict: {'a': ['val', 'val'], 'b': ['val']}>\nIn [5]: q                                                                                                  \nOut[5]: <QueryDict: {'aa': ['bb'], 'cc': ['dd', 'xxx']}>\nIn [6]: q.dict()                                                                                           \nOut[6]: {'aa': 'bb', 'cc': 'xxx'}\nIn [7]: q.urlencode()                                                                                      \nOut[7]: 'aa=bb&cc=dd&cc=xxx'\nDELETE&PUT请求\n请求返回都在request.body中\n视图函数\ndef index_2(request):\n    if request.method == \"GET\":\n        print(\"request get =\",request.GET)\n        data = request.GET.copy()\n        data['aa'] = 'xxxxxx'\n        print(\"data =\",data)\n        print(\"aa =\",request.GET.get(\"aa\"))       #取出单个值\n        print(\"cc =\",request.GET.getlist(\"cc\"))   #取出多个值\n    elif request.method == \"POST\":\n        print(\"request post =\",request.POST)\n        print(\"aa =\",request.POST.get(\"aa\"))\n        print(\"cc =\",request.POST.getlist(\"cc\"))\n\n    elif request.method == \"DELETE\":\n        print(\"delete=\",QueryDict(request.body))\n\n    elif request.method == \"PUT\":\n        print(\"put=\",QueryDict(request.body))\n\n    return HttpResponse(\"\")\n请求方式：\nIn [1]: import requests                                                                             \nIn [2]: url = \"http://127.0.0.1:8000/dashboard/\"    \nIn [3]: data = {}                                                                                         \nIn [4]: data['aa'] = 'bb'                                                                              \nIn [5]: data['cc'] = ['dd','ee']      \nIn [9]: requests.delete(url,data=data)                                                     Out[9]: <Response [200]>\nIn [10]: requests.put(url,data=data)                                                         Out[10]: <Response [200]>\n用户登录练习\n视图函数\ndef login(request):\n    msg = \"\"\n    if request.method == \"POST\":\n        username = request.POST.get(\"username\")\n        userpass = request.POST.get(\"userpass\")\n        if username == \"admin\" and userpass == \"123456\":\n            msg = \"login success\"\n        else:\n             msg = \"login failed\"\n    else:\n         msg = \"请求方法不被允许！\"\n     returnHttpResponse(msg) \npost请求方法\nIn [11]: url = \"http://192.168.33.10/login/\"                                       \nIn [12]: data = {}                                                                                       \nIn [13]: data['username'] = \"admin\"                                                         \nIn [14]: data['userpass'] = \"123456\"   \nIn [16]: r = requests.post(url,data)  \nIn [18]: r.content.decode('utf8')  \n用户创建\n(venv3) [vagrant@localhost devops]$ python3 manage.py shell\n(venv3) [vagrant@localhost devops]$ python3 manage.py dbshell\n(venv3) [vagrant@localhost devops]$ python3 manage.py showmigrations\n(venv3) [vagrant@localhost devops]$ python3 manage.py makemigrations\n(venv3) [vagrant@localhost devops]$ python3 manage.py migrate\n-----------------------------------创建用户--------------------------------------\n(venv3) [vagrant@localhost devops]$ python3 manage.py shell\nIn [1]: from django.contrib.auth.models import User                                                        \nIn [2]: User.objects.create_user(\"wanghui\",\"wanghui@qq.com\",'123456')      #创建普通用户\nIn [3]: User.objects.create_superuser(\"admin\",\"admin@qq.com\",'123456')                  #创建超级管理员\n---------修改密码-------------------------------------------------------\nIn [5]: u = User.objects.get(username=\"wanghui\")                                                           \nIn [6]: u.set_password('654321')                                                                           \nIn [7]: u.save()       \n---------删除用户----------------------------\n用户登录\n步骤：一个视图\nGET请求：展示登陆页面\nPOST请求：执行用户登陆\n                   1. 接收用户post过来的用户名密码\n                    2. 验证用户名密码\n                    3. 返回结果\n\n视图函数\nfrom django.contrib.auth.models import User\nfrom django.contrib.auth import login,authenticate\ndef LoginView(request):\n    if request.method == 'POST':\n        username = request.POST.get('username')\n        userpass = request.POST.get('userpass')\n        # try:\n        # User.objects.get(username=username)\n        # except User.DoesNotExist:\n        # return HttpResponse(\"用户不存在！\")\n        user = authenticate(request,username=username,password=userpass)\n        if user is not None:\n            login(request,user)\n            return HttpResponse(\"用户登录成功\")\n        else:\n            return HttpResponse(\"用户登录失败\")\n    return render(request, 'login.html')\n模板文件\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>用户登录</title>\n</head>\n<body>\n<div>\n    <form method=\"POST\">\n        <li>\n            <span>username</span>\n            <input type=\"text\" name=\"username\" id=\"\">\n        </li>\n        <li>\n            <span>password</span>\n            <input type=\"password\" name=\"userpass\">\n        </li>\n        <li>\n            <input type=\"submit\">\n        </li>\n    </form>\n</div>\n</body>\n</html>\n路由\nfrom django.conf.urls import url\nfrom . import views\nurlpatterns = [\n    url(r'^$',views.index,name=\"index\"),\n    url(r'^index2/$',views.index_1,name=\"index_1\"),\n    url(r'^login/$',views.loginv1,name=\"login\"),\n    url(r'^loginv2/$',views.LoginView,name=\"loginv2\"),\n]\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "0"}