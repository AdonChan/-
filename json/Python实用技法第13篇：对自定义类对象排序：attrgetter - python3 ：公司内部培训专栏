{"title": "Python实用技法第13篇：对自定义类对象排序：attrgetter - python3 ：公司内部培训专栏 ", "index": "python", "content": "上一篇文章：Python实用技法第12篇：通过公共键对字典列表排序：itemgetter下一篇文章：Python实用技法第14篇：根据字段将记录分组：itertools.groupby()\n\n1、需求🙀\n对自定义的类组成的列表进行排序。\n2、解决方案😸\n内建的sorted()函数可接受一个用来传递可调用对象(callable)的参数key，而该可调用对象会返回待排序对象中的某些值，sorted则利用这些值来比较对象。\n实例：\nfrom operator import attrgetter\nclass User:\ndef __init__(self,userId):\nself.userId=userId\n\ndef __repr__(self):\nreturn 'User({})'.format(self.userId)\n\nusers=[User(40),User(20),User(30)]\nprint(users)\n\n#方法1\nprint(sorted(users,key=lambda u:u.userId))\n\n#方法2\nprint(sorted(users,key=attrgetter('userId')))\n运行结果：\n[User(40), User(20), User(30)]\n[User(20), User(30), User(40)]\n[User(20), User(30), User(40)]\nattrgetter通常会更快一点。上面计数同样适用min()和max()函数。\n\n                ", "mainLikeNum": ["1 "], "mainBookmarkNum": "1"}