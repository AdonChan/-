{"title": "Python解析XML文件生成HTML - michael翔的IT私房菜 ", "index": "python", "content": "XML文件result.xml，内容如下：\n<ccm>    \n    <metric>\n        <complexity>1</complexity>\n        <unit>multiply</unit>\n        <classification>A</classification>\n        <file>all\\mymath.py</file>\n        <startLineNumber>9</startLineNumber>\n        <endLineNumber>10</endLineNumber>\n    </metric>\n    <metric>\n        <complexity>1</complexity>\n        <unit>divide</unit>\n        <classification>A</classification>\n        <file>all\\mymath.py</file>\n        <startLineNumber>13</startLineNumber>\n        <endLineNumber>14</endLineNumber>\n    </metric>\n</ccm>\nimport xml.etree.cElementTree as ET\nimport os\nimport sys\n\ntree = ET.ElementTree(file='result.xml')\n\n# 根元素（root）是一个Element对象。我们看看根元素都有哪些属性\nroot = tree.getroot()\n\n# 没错，根元素并没有属性。与其他Element对象一样，根元素也具备遍历其直接子元素的接口\nfor child_of_root in root:\n    print(child_of_root,child_of_root.attrib)\n    for x in child_of_root:\n        print(child_of_root, x, x.tag,':',x.text)\n利用Jinja2生成HTML\n模版文件templa/base.html:\n<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <title>Radon</title>\n    <link rel=\"stylesheet\" href=\"https://cdn.bootcss.com/bootstrap/3.3.7/css/bootstrap.min.css\">\n    <script src=\"https://cdn.bootcss.com/jquery/2.1.1/jquery.min.js\"></script>\n    <script src=\"https://cdn.bootcss.com/bootstrap/3.3.7/js/bootstrap.min.js\"></script>\n</head>\n\n<body>\n    <h1>Radon-圈复杂度检查结果</h1>\n    <table class=\"table table-hover\">\n        <thead>\n            <tr>\n                {% for td in data[0] %}\n                <th>{{ td.tag }}</th>\n                {% endfor %}\n            </tr>\n        </thead>\n        <tbody>\n            {%for m in data%} \n            {% set complexity = m[0].text|float %}\n            {% if m[0].text|float < 6 %} #或者 {% if complexity < 6 %}\n            <tr class=\"success\">\n                {% for v in m %}\n                <td>{{v.text}}</td>\n                {% endfor %}    \n            </tr>\n            {% else %}\n            <tr class=\"danger\">\n                    {% for v in m %}\n                    <td>{{v.text}}</td>\n                    {% endfor %}    \n            </tr>\n            {% endif %} \n            {%endfor%}\n        </tbody>\n    </table>\n</body>\n\n</html>\n渲染脚本：\nfrom jinja2 import Environment, FileSystemLoader\n\nt=[]\nfor metric in root:\n    t.append(metric)\n    \nprint(t)\n\nxml_loader = FileSystemLoader(\"template\")\nxml_env = Environment(loader=xml_loader)\nxml_tmp = xml_env.get_template(\"base.html\")\n\nxml_info = xml_tmp.render(data=t)\n\nwith open(os.path.join(\"template\", \"result.html\"), \"w\") as f:\n    f.write(xml_info)\n参考：\n\n深入解读Python解析XML的几种方式\nxml.etree.ElementTree — The ElementTree XML API\nDoes the Jinja2 templating language have the concept of 'here' (current directory)?\n欢迎来到 Jinja2\njinja2模板\n\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "0"}