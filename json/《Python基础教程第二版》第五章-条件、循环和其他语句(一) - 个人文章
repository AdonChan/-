{"title": "《Python基础教程第二版》第五章-条件、循环和其他语句(一) - 个人文章 ", "index": "python", "content": "print和import\nprint打印多个表达式，用逗号,隔开\nprint 'abc:', 42, 'nonono'\n#输出在每个参数之间添加空格\nprint在结尾处加上逗号,,接下来的语句会与前一条语句打印在同一行\nprint 'hello',\nprint 'word!'\n#hello word!\nimport从模块中导入函数\nimport module\nfrom module import function\nfrom module import function,function2,function3\nfrom module import*\nas子句，给出想要使用模块的别名\nimport math as fu1\nfu1.sqrt(4)\n\nfrom math import sqrt as fun2   \nfun2(4)\n\n赋值\n序列解包/递归解包\n多个赋值操作同时进行\nx,y,z = 1,2,3\n交换变量\nx,y = y,x\npopitempopitem 获取并删除字典中任意的键值对，返回键值对元组，可以直接赋值到两个变量中。\nscoundrel = {'name':'Robin', 'girlfriend':'Marion'}\nkey, value = scoundrel.popitem()\nNote：\n所解包的序列中的元素数量必须和赋值符号=左边的变量数量完全一致。\n#除非使用星号运算符：\n# a,b,*rest = [1,2,3,4]\n# rest结果为[3,4]\n\n链式赋值\nx = y = function()\n增量赋值\nx = 2 \nx += 2\n\n语句块：缩进排版\n创建语句块：\n代码前放置空格缩进语句可以创建语句块。\nNote: 块中的每行都应该缩进同样的量。\nline1\nline2:\n    block\n    same block\n    the last bolck\nline3\n其中，\n1. 冒号:标识语句块开始；\n2. 块中每一个语句都是缩进相同量；\n3. 退回到和已经闭合的块一样的缩进量时，表示当前块结束。\n\n条件和条件语句\n布尔变量\n假fales(0)\nFales None 0 \"\" () [] {}\n#其他都为真true(1)\nbool函数\nbool('I think I'm ok.')\n#true,一般Python会自动转换这些值\n\nif语句\nif\nname = raw_input(‘your name:’)\nif name.endwith('afra'):\n    print 'hell, afra!'\nelse\nname = raw_input(‘your name:’)\nif name.endswith('afra'):\n    print 'hell, afra!'\nelse:\n    print 'who?'\nelif检查多个条件,else if简写\nnum = input('number:')\nif num > 0:\n    print '>0'\nelif num < 0:\n    print '<0'\nelse:\n    print '0'\n嵌套       if嵌套if语句\nname = raw_input('name?')\nif name.endswith('afra'):\n    if name.startswith('Mr.'):\n        print 'Mr.afra!'\n    elif name.startswith('Mrs.'):\n        print 'Mrs.afra'\n    else:\n        print 'afra'\nelse:\n    print 'who?'        \n\n运算符\n\n比较运算符\n< \n== \n>\n>= \n<= \n!= \nis  同一对象\nis not  不同对象昂\nx in y  x是y容器的成员\nnot in    不是容器内的成员\n\n连接运算符比较运算符和赋值运算符都可以连接\n0 < age < 10\n\n\n相等运算符==\n\n\nis同一性运算符\n`is`判定同一性，而不是相等性.\n使用`==`运算符来判定两个对象是否相等，使用`is`判定两个是否是同一个对象。\n\n\nin成员资格运算符\nname = raw_input('name?')\nif 's' in name:\n    print 's'\nelse:\n    print '?'\n\n\n字符串和序列比较\n字符串可按照字母顺序比较。\n字母的顺序值可以用 ord函数 查到\nord()和chr()功能相反\n忽略大小写可以使用 upper()\\lower()\n\n'KiJ'.lower() == 'kIj'.lower()\n\n\n布尔运算符and / or / not\nnumber = input('number?')\nif number <= 10 and number >=1:\n    print 'yes'\nelse:\n    print 'no'\n#连接比较 \n1 <= number <= 10\n\n#三个运算符结合\nif ((cash > price) or customer_has credit) and not out_stock:\n    give()     \n#短路逻辑\n略\n#Python内置条件表达式\na if b else c\nb为真，返回a；否则，返回c\n\n\n\n断言\nasser\nif not condition:\n    crash program\n可以要求某些条件必须为真，例如，检查函数参数的属性、作为初期测试和调试过程中的辅助条件。\nage = 10\nassert 0 < age < 100\nage = -1\nassert 0 < age < 100, 'must be realistic'\n   \n\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "0"}