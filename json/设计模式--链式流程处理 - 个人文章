{"title": "设计模式--链式流程处理 - 个人文章 ", "index": "python", "content": "1.应用场景：流程审批，顺序链式处理，控制每个子模块执行处理的次数，控制子模块执行顺序。2.应用：    通过对一个全链条中的全局变量，全局实例进行赋值修改变量，达到控制子模块是否执行，执行次数，决定下一个是否执行的作用。\n\nclass Car:\n    def __init__(self):\n        self.name=None\n        self.km=11000\n        self.fuel=5\n        self.oil=5\n\ndef handle_fuel(car):\n    if car.fuel<10:\n        print('add fuel')\n        car.fuel=100\ndef handle_km(car):\n    if car.km>10000:\n        print('made a car test')\n        car.km=0\ndef handle_oil(car):\n    if car.oil<10:\n        print('add oil')\n        car.oil=100\n\nclass Garage:\n    def __init__(self):\n        self.handles=[]\n    def add_handler(self,handler):\n        self.handles.append(handle)\n    def handle_car(self,car):\n        for handle in self.handles:\n            handle(car)\n\nif __name__ == '__main__':\n\n    handlers = [handle_fuel, handle_km, handle_oil]\n\n    garage = Garage()\n\n\n\n    for handle in handlers:\n\n        garage.add_handler(handle)\n\n    garage.handle_car(Car())\n\n\n\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "0"}