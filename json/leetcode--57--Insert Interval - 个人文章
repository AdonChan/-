{"title": "leetcode--57--Insert Interval - 个人文章 ", "index": "python", "content": "问题描述：\nGiven a set of non-overlapping intervals, insert a new interval into the intervals (merge if necessary).\n\nYou may assume that the intervals were initially sorted according to their start times.\nExample 1:\nGiven intervals [1,3],[6,9], insert and merge [2,5] in as [1,5],[6,9].\nExample 2:\nGiven [1,2],[3,5],[6,7],[8,10],[12,16], insert and merge [4,9] in as[1,2],[3,10],[12,16].This is because the new interval [4,9] overlaps with[3,5],[6,7],[8,10].\n\nclass Solution(object):\n    def insert(self, intervals, newInterval):\n        \"\"\"\n        :type intervals: List[Interval]\n        :type newInterval: Interval\n        :rtype: List[Interval]\n        \"\"\"\n        start=newInterval.start\n        end=newInterval.end\n        # print('start,end',start,end)\n        outs=list()\n        index=0\n        flag_break=0\n        for index,interval in enumerate(intervals):\n            if interval.end>=start:\n                if interval.start>end:\n                    flag_break=1\n                    break\n                else:\n                    start=min(start,interval.start)\n                    end=max(end,interval.end)\n                    # print('start,end:', start, end)\n\n            else:\n                outs.append(interval)\n        outs.append(Interval(start,end))\n        if flag_break:\n            outs.extend(intervals[index:])\n        # print(outs)\n        outs_num=[ (out.start,out.end) for out in outs]\n        return outs_num\n分析：这道题的关键在于理解问题，抽取原型，理解中间可以merge部分如何界定，以及非merge部分如何进行追加list。 需要注意的是：循环到最后一个元素和在最后一个元素break的区别。\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "0"}