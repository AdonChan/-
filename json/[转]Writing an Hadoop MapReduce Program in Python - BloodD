{"title": "[转]Writing an Hadoop MapReduce Program in Python - BloodD ", "index": "python,streaming,hadoop", "content": "mapper.py\n\n#!/usr/bin/env python\n\"\"\"A more advanced Mapper, using Python iterators and generators.\"\"\"\n\nimport sys\n\ndef read_input(file):\n    for line in file:\n        # split the line into words\n        yield line.split()\n\ndef main(separator='\\t'):\n    # input comes from STDIN (standard input)\n    data = read_input(sys.stdin)\n    for words in data:\n        # write the results to STDOUT (standard output);\n        # what we output here will be the input for the\n        # Reduce step, i.e. the input for reducer.py\n        #\n        # tab-delimited; the trivial word count is 1\n        for word in words:\n            print '%s%s%d' % (word, separator, 1)\n\nif __name__ == \"__main__\":\n    main()\n\n\nreducer.py\n\n#!/usr/bin/env python\n\"\"\"A more advanced Reducer, using Python iterators and generators.\"\"\"\n\nfrom itertools import groupby\nfrom operator import itemgetter\nimport sys\n\ndef read_mapper_output(file, separator='\\t'):\n    for line in file:\n        yield line.rstrip().split(separator, 1)\n\ndef main(separator='\\t'):\n    # input comes from STDIN (standard input)\n    data = read_mapper_output(sys.stdin, separator=separator)\n    # groupby groups multiple word-count pairs by word,\n    # and creates an iterator that returns consecutive keys and their group:\n    #   current_word - string containing a word (the key)\n    #   group - iterator yielding all [\"&lt;current_word&gt;\", \"&lt;count&gt;\"] items\n    for current_word, group in groupby(data, itemgetter(0)):\n        try:\n            total_count = sum(int(count) for current_word, count in group)\n            print \"%s%s%d\" % (current_word, separator, total_count)\n        except ValueError:\n            # count was not a number, so silently discard this item\n            pass\n\nif __name__ == \"__main__\":\n    main()\n\n\n\n转自：http://www.michael-noll.com/tutorials/writing-an-hadoop-mapreduce-program-in-python/\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "1"}