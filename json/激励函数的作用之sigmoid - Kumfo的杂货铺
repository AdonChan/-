{"title": "激励函数的作用之sigmoid - Kumfo的杂货铺 ", "index": "机器学习,python", "content": "\n首先看一下这个sigmoid函数的图像，以x值的0值做为区分点，在0值范围左右的y轴数据为0~1范围内的数据。\npython实现：\nfrom math import e\n\nfrom matplotlib import pyplot as plt\n\nxs = []\nys = []\n\ndef sigmoid(x):\n    y = 1. / (1. + e **(-x))\n    return y;\n\nfor x in range(-1000,1001):\n    x = x * 0.1\n    y = sigmoid(x)\n    xs.append(x)\n    ys.append(y)\n\nprint(xs)\nprint(ys)\n\nplt.plot(xs,ys)\nplt.show()\n\n核心思想是公式:\n\n以上我所展示的是sigmoid函数以及函数所产生的图像，以下我来说一下一般来说我们所希望激励函数应该是什么样子的。\n通常来说，我们希望一个数据做了激励后，应该能明确的知道结果应该是true或false，但是对于这种函数，如：\ndef f(x):\n    if(x < 0):\n    return 0;\n    if(x > 0):\n    return 1;\n所产生的函数是不连续且不可求导的，那么在计算过程中就会非常的不方便，sigmoid其实相当于做了折中处理。且在具体的计算过程中，根据实际情况，也许产生的S(x)可能取值在0~0.5以及0.5~1分别分成两类。也有可能是0~0.8，0.8~1。在具体的计算过程中可能会更灵活。\n以上就当一个笔记，后续理解如果有出入，再做修改。￼\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "0"}