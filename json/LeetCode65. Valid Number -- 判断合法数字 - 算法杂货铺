{"title": "LeetCode65. Valid Number -- 判断合法数字 - 算法杂货铺 ", "index": "python,算法,string", "content": "描述\nValidate if a given string is numeric.\nSome examples:\"0\" => true\" 0.1 \" => true\"abc\" => false\"1 a\" => false\"2e10\" => true\n分析\n该题的说明比较模糊，所以需要慢慢进行尝试来弄清楚哪些是合法的数字。整理了以下规则：\n\n符号只能出现在最前面或者字符e后面一位\n' . '只能e的前面，且只能有一个小数点\n\ne最多只能出现一次，且前面必须有数字，后面也必须有数字\n\n所以按照数字、小数点、e和符号这四类列出规则就可以了，记住e后面必须有数字，所以需要增加一个变量numberAftereSeen。\n代码\nclass Solution:\n    def isNumber(self, s):\n        \"\"\"\n        :type s: str\n        :rtype: bool\n        \"\"\"\n        # 去除前后的空格\n        temp_s = s.strip()\n        numberSeen = False\n        pointSeen = False\n        eSeen = False\n        numberAftereSeen = True\n        for i in range(len(temp_s)):\n            if temp_s[i].isdigit():\n                numberSeen = True\n                numberAftereSeen = True\n            elif temp_s[i] == \".\":\n                # 小数点前面不能出现e和小数点\n                if eSeen or pointSeen:\n                    return False\n                pointSeen = True\n            elif temp_s[i] == \"e\":\n                # e前面不能出现e，并且需要有数字\n                if eSeen or not numberSeen:\n                    return False\n                eSeen = True\n                # 保证e后面也有数字\n                numberAftereSeen = False\n            elif temp_s[i] in [\"+\", \"-\"]:\n                # 符号只能再0位和e后面一位\n                if i != 0 and temp_s[i-1] != \"e\":\n                    return False\n            else:\n                return False\n        return numberSeen and numberAftereSeen\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "0"}