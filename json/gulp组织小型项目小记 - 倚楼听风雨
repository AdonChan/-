{"title": "gulp组织小型项目小记 - 倚楼听风雨 ", "index": "flask,python,jinja2,javascript,gulp", "content": "目前正在开发一个python markdown wiki系统，对于前端模块化与打包这块出现了一些选择。1、采用webpack模块化及打包由于项目比较小，稍微了解后，觉得没必要采用webpack。杀鸡焉用牛刀？2、采用requirejs模块化，gulp打包还是由于项目比较小，甚至不需要进行模块化，所以放弃采用requirejs,只是采用gulp进行打包。3、css预编译框架,目前比较流行的有sass,less:目前没有采用，下一步尝试一下。4、js组件化，目前比较流行的如Angular,VueJs等。项目较小,需要ajax交互更新页面的并不多，没有采用。部分功能用模板引擎的宏来实现。\n当然采用gulp打包主要是为了解决以下几个问题：1、js、css文件压缩与合并2、js、css缓存与版本问题\n关于js、css缓存与版本问题问题，目前为解决新版本发布，使得浏览器缓存发送新的请求而不是使用缓存的js，css文件。有两种方案：\n\napp.js变为app-2qwee.js\napp.js变为app.js?v=wqe2434er3\n\n我比较喜欢的是后者方式。gulp有个插件gulp-version-number可以解决这个问题，但是由于我采用模板引擎jinja2与flask框架开发，所以html中是这样的\n<link rel=\"stylesheet\" type=\"text/css\" href=\"{{ url_for('static', filename='app.css') }}\">\n\n经过gulp-version-number编译后变成了\n<link rel=\"stylesheet\" type=\"text/css\" href=\"{{ url_for('?v=16124df4fdca2e5244636c2bca625276static', filename='app.css') }}\">\n\n而我期望的是\n<link rel=\"stylesheet\" type=\"text/css\" href=\"{{ url_for('static', filename='app.css') }}?v=16124df4fdca2e5244636c2bca625276\">\n好奇的你肯定会问，为什么期望的不是这样呢？url_for('static', filename='app.css?v=16124df4fdca2e5244636c2bca625276') }}\"经实验，经过url_for输出结果中?变成了%3F，经过了urlencode，所以浏览器无法识别它为查询参数。\n没办法，只能改改这个插件的源码：具体代码在插件代码的index.js处：大概在207-284行部分：主要改动就是替换sts[i].match正则，加入_RULE长度判断。\n   var appendto = {\n        'css': function (content, k, v) {\n            var sts = content.match(/<link[^>]*rel=['\"]?stylesheet['\"]?[^>]*>/g);\n            \n            if (util.isArray(sts) && sts.length) {\n                for (var i = 0, len = sts.length; i < len; i++) {\n                    \n                    //var _RULE = sts[i].match(/href=['\"]?([^>'\"]*)['\"]?/);\n                    var _RULE=sts[i].match(/(\\{\\{\\surl_for\\('static',\\s?filename=['\"].*?['\"]\\s?\\)\\s\\}\\})/);\n                    if(!_RULE||_RULE.length<2){\n                        continue;\n                    }\n                    console.log(sts[i]);\n                    console.log(_RULE[1]);\n                    if (_RULE[1]) {\n                        var _UrlPs = parseURL(_RULE[1]);\n                        var _Query = queryToJson(_UrlPs.query);\n                        var _Append = {};\n                        if (!_Query.hasOwnProperty(k) || this['cover']) {\n                            _Append[k] = v;\n                        }\n                        _UrlPs.query = jsonToQuery(util._extend(_Query, _Append));\n                        content = content.replace(sts[i], sts[i].replace(_RULE[1], renderingURL(_UrlPs)));\n                    }\n                }\n            }\n            return content;\n        },\n        'js': function (content, k, v) {\n            var sts = content.match(/<script[^>]*src=['\"]?([^>'\"]*)['\"]?[^>]*>[^<]*<\\/script>/g);\n            if (util.isArray(sts) && sts.length) {\n                for (var i = 0, len = sts.length; i < len; i++) {\n                    var _RULE = sts[i].match(/(\\{\\{\\surl_for\\('static',\\s?filename=['\"].*?['\"]\\s?\\)\\s\\}\\})/);//.match(/src=['\"]?([^>'\"]*)['\"]?/);\n                    if(!_RULE||_RULE.length<2){\n                        continue;\n                    }\n                    console.log(sts[i]);\n                    console.log(_RULE[1]);\n                    \n                    if (_RULE[1]) {\n                        var _UrlPs = parseURL(_RULE[1]);\n                        var _Query = queryToJson(_UrlPs.query);\n                        var _Append = {};\n                        if (!_Query.hasOwnProperty(k) || this['cover']) {\n                            _Append[k] = v;\n                        }\n                        _UrlPs.query = jsonToQuery(util._extend(_Query, _Append));\n                        content = content.replace(sts[i], sts[i].replace(_RULE[1], renderingURL(_UrlPs)));\n                    }\n                }\n            }\n            return content;\n        },\n        'image': function (content, k, v) {\n            var sts = content.match(/<img[^>]*>/g);\n            if (util.isArray(sts) && sts.length) {\n                for (var i = 0, len = sts.length; i < len; i++) {\n                    var _RULE = sts[i].match(/(\\{\\{\\surl_for\\('static',\\s?filename=['\"].*?['\"]\\s?\\)\\s\\}\\})/);//.match(/src=['\"]?([^>'\"]*)['\"]?/);\n                    if(!_RULE||_RULE.length<2){\n                        continue;\n                    }\n                    console.log(sts[i]);\n                    console.log(_RULE[1]);\n                    if (_RULE[1]) {\n                        var _UrlPs = parseURL(_RULE[1]);\n                        var _Query = queryToJson(_UrlPs.query);\n                        var _Append = {};\n                        if (!_Query.hasOwnProperty(k) || this['cover']) {\n                            _Append[k] = v;\n                        }\n                        _UrlPs.query = jsonToQuery(util._extend(_Query, _Append));\n                        content = content.replace(sts[i], sts[i].replace(_RULE[1], renderingURL(_UrlPs)));\n                    }\n                }\n            }\n            return content;\n        }\n    };\n然后，项目主要配置文件如下：不多说，具体看配置package.json\n{\n  \"name\": \"mdwiki\",\n  \"version\": \"1.0.0\",\n  \"description\": \"\",\n  \"main\": \"index.js\",\n  \"scripts\": {\n    \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\"\n  },\n  \"author\": \"xbynet\",\n  \"license\": \"ISC\",\n  \"devDependencies\": {\n    \"del\": \"^2.2.2\",\n    \"gulp\": \"^3.9.1\",\n    \"gulp-autoprefixer\": \"^3.1.1\",\n    \"gulp-clean\": \"^0.3.2\",\n    \"gulp-concat\": \"^2.6.1\",\n    \"gulp-flatten\": \"^0.3.1\",\n    \"gulp-minify-css\": \"^1.2.4\",\n    \"gulp-rev\": \"^7.1.2\",\n    \"gulp-sourcemaps\": \"^1.9.1\",\n    \"gulp-uglify\": \"^2.0.0\",\n    \"gulp-version-number\": \"^0.1.5\",\n    \"pump\": \"^1.0.1\",\n    \"run-sequence\": \"^1.2.2\"\n  }\n}\n\ngulpfile.js\nconst gulp = require('gulp');\nconst uglify = require('gulp-uglify');\nconst pump = require('pump');\nconst version = require('gulp-version-number');\nconst autoprefixer = require('gulp-autoprefixer');\nconst sourcemaps=require('gulp-sourcemaps');\nconst runSequence = require('run-sequence');\nconst del = require('del');\nconst cssmin = require('gulp-minify-css');\n//const imagemin = require('gulp-imagemin');\nconst clean = require('gulp-clean');\n//const flatten = require('gulp-flatten');\nconst DEST_DIR='build';\nconst SRC_DIR='mdwiki-master/app';\n// Environment setup.\nvar env = {\n    production: false\n};\n\n// Environment task.\ngulp.task(\"set-production\", function(){\n    env.production = true;\n});\n\nconst versionConfig = {\n  'value': '%MDS%',\n  'append': {\n    'key': 'v',\n    'to': ['css', 'js','image'],\n  },\n};\n\ngulp.task('html',()=>{\n    return gulp.src(SRC_DIR+'/**/*.html')\n    .pipe(version(versionConfig))\n    .pipe(gulp.dest(DEST_DIR));\n});\ngulp.task('jsmin', function (cb) {\n    if(env.production){\n        return gulp.src([SRC_DIR+'/**/*.js'])\n        .pipe(uglify({mangle: {except: ['require' ,'exports' ,'module' ,'$']}})) //排除混淆关键字\n        .pipe(gulp.dest(DEST_DIR));\n    }\n    else{\n        return gulp.src([SRC_DIR+'/**/*.js'])\n        .pipe(sourcemaps.init())\n        .pipe(uglify({mangle: {except: ['require' ,'exports' ,'module' ,'$']}})) //排除混淆关键字\n        .pipe(sourcemaps.write('.'))\n        .pipe(gulp.dest(DEST_DIR));\n    }\n    \n});\ngulp.task('cssmin', function () {\n    if(env.production){\n        return gulp.src(SRC_DIR+'/**/*.css')\n        //.pipe(concat('main.css'))\n        .pipe(autoprefixer('last 2 version', 'safari 5', 'ie 8', 'ie 9', 'opera 12.1', 'ios 6', 'android 4'))\n        .pipe(cssmin())\n        .pipe(gulp.dest(DEST_DIR));\n    }\n    else{\n        return gulp.src(SRC_DIR+'/**/*.css')\n        //.pipe(concat('main.css'))\n        .pipe(autoprefixer('last 2 version', 'safari 5', 'ie 8', 'ie 9', 'opera 12.1', 'ios 6', 'android 4'))\n        .pipe(sourcemaps.init())\n        \n        .pipe(cssmin())\n        .pipe(sourcemaps.write('.'))\n        .pipe(gulp.dest(DEST_DIR));\n    }\n    \n});\ngulp.task('rawtoone', () =>{\n    return gulp.src([SRC_DIR+'/**/*.{png,jpg,jpeg,gif,bmp,ico}',SRC_DIR+'/**/*.{swf,eot,svg,ttf,woff}'])\n        .pipe(flatten())\n        //.pipe(imagemin())\n        .pipe(gulp.dest(DEST_DIR));\n    }\n);\ngulp.task('copy', () =>{\n    return gulp.src([SRC_DIR+'/**/*.{png,jpg,jpeg,gif,bmp,ico}',SRC_DIR+'/**/*.{swf,eot,svg,ttf,woff}'])\n        .pipe(gulp.dest(DEST_DIR));\n    }\n);\n// Clean\ngulp.task('clean', function(cb) {\n   return  del(['./build'],cb);\n      // return gulp.src('build', {read: false,force: true})\n      //  .pipe(clean());\n});\n// Default task\ngulp.task('dev',function(callback) {\n    runSequence('clean',['html', 'jsmin','cssmin','copy'],callback);\n});\n\ngulp.task('product',function(callback) {\n    runSequence('set-production','clean',['html', 'jsmin','cssmin','copy'],callback);\n});\ngulp.task('watch', function() {\n  gulp.watch(SRC_DIR+'/**/*.html',['html']);\n  gulp.watch(SRC_DIR+'/**/*.js', ['jsmin']);\n  gulp.watch(SRC_DIR+'/**/*.css', ['cssmin']);\n  gulp.watch([SRC_DIR+'/**/*.{png,jpg,jpeg,gif,bmp,ico}',SRC_DIR+'/**/*.{swf,eot,svg,ttf,woff}'],['copy']);\n  // Create LiveReload server\n  //livereload.listen();\n  // Watch any files in dist/, reload on change\n  //gulp.watch(['dist/**']).on('change', livereload.changed);\n});\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "2"}