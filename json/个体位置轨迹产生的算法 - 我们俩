{"title": "个体位置轨迹产生的算法 - 我们俩 ", "index": "近邻nn,轨迹产生算法,python", "content": "个体位置轨迹产生的算法\nMoving in a Neighborhood(MN) algorithm\n论文An Anonymous Communication Techniques using Dummies for Location-based Services 中提到的，根据用户前一时刻的位置，产生下一时刻的位置的算法，可以用户模拟用户或者dummy轨迹产生的方法\n\nimport random\n\nclass dummy:\n    def __init__(self):\n        self.x = 0\n        self.y = 0\n        self.t = 0\n\ndef MovingInNeighborhood(m,n):\n\n    dummyPretemp = dummy() # 前一时刻用户位置及时间信息\n    dummyNexttemp = dummy() # 后一时刻用户位置及时间信息\n\n    # 用户位置及时间 初始化\n    dummyPretemp.x = 0\n    dummyPretemp.y = 0\n    dummyPretemp.t = 0\n    # 生成下一位置及时间信息\n    dummyNexttemp.x = random.randint( dummyPretemp.x - m, dummyPretemp.x + m )\n    dummyNexttemp.y = random.randint( dummyPretemp.y - m, dummyPretemp.y + m )\n    dummyNexttemp.t = dummyPretemp.t + 1 \n\n    dummyNext= [ dummyNexttemp.x, dummyNexttemp.y, dummyNexttemp.t ]        \n    dummyNext = [ dummyNext ]   \n\n    i = 0\n    for i in range(n):  \n        print i\n        print dummyNext     \n        dummyPretemp = dummyNexttemp\n        # 生成下一位置及时间信息\n        dummyNexttemp.x = random.randint( dummyPretemp.x - m, dummyPretemp.x + m )\n        dummyNexttemp.y = random.randint( dummyPretemp.y - m, dummyPretemp.y + m )\n        dummyNexttemp.t = dummyPretemp.t + 1\n\n        dummyNext.append( [ dummyNexttemp.x, dummyNexttemp.y, dummyNexttemp.t ] )\n        i = i + 1\n\n#print dummyA.x\n\nMovingInNeighborhood(3,3)\n\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "0"}