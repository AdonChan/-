{"title": "一行代码搞定人脸识别 - 码上就来 ", "index": "机器学习,python", "content": "什么，只要一行代码就能搞定人脸识别？当然是假的啦。\n虽然不能一行就搞定，依靠python强大的人脸识别包，只要十多行代码完全可以实现人脸识别的功能。这就叫站在巨人的肩膀上，看得更高更远。\nface-recognition，使用最先进的人脸识别技术构建而成的python包，而且具有深度学习功能。经测试识别正确率高达99.38％。确实很高。\n安装\n因为face-recognition使用到了dlib库，这是c++写的一个包含机器学习，计算机视觉等算法的库，所以使用之前要先安装dlib。不过这还不行，dlib库又依赖一个叫做boost的东西，总之有些麻烦，所以我就不写详细步骤啦╰(￣▽￣)╭。linux下安装比较简单，命令行下几行代码就搞定，windows安装见这里。\n所有工作准备好之后，使用pip安装：\npip install face-recognition\n人脸检测\n如何检测一张图片中的人脸？face-recognition把带人脸的图片看成是由像素组成的二维数组，使用face_locations方法返回识别到的人脸的坐标（上下左右）。\n这样就可以啦，接下来只要把这些人脸坐标用矩形框圈出来，然后保存即可。\nimport face_recognition\nfrom skimage import draw, io\n%matplotlib inline\n# 图片文件\nfiles = \"F:\\data\\people.jpg\"\n# 加载图片\nimage = face_recognition.load_image_file(files)\n# 识别人脸坐标\nface_locations = face_recognition.face_locations(image)\n\n# 我们在此使用之前介绍过的skimage库进行绘制\n# 读出的图片在skimage中不能使用，故重新导入\nimg = io.imread(files)\n\nprint(\"I found {} face(s) in this photograph.\".format(len(face_locations)))\n\n# 循环标记人脸\nfor face_location in face_locations:\n    # 每个人脸的坐标\n    top, right, bottom, left = face_location\n    # 为每个人脸画四边形\n    # polygon_perimeter作用是绘制不填充的多边形\n    rr, cc = draw.polygon_perimeter([top, top, bottom, bottom], [left, right, right, left])\n    # 设置颜色为红色\n    draw.set_color(img, [rr, cc], [255, 0, 0])\n\n# 保存\nio.imsave('F:result.jpg', img)\nI found 24 face(s) in this photograph.\n\n\n我们打开图片看看效果。\nimport matplotlib.pyplot as plt\nfrom skimage import io\n\norigin = io.imread(files)\nreco = io.imread('f:result.jpg')\n\nplt.subplot(1, 2, 1)\nplt.imshow(origin)\nplt.subplot(1, 2, 2)\nplt.imshow(reco)\n\n\n效果不错，都识别出来了。\n人脸识别\n既然能够识别出有没有人脸，有可能知道这个人是谁吗？当然可以了，前提是你要提供一张包含某个人脸的照片。使用face_encodings对人脸进行编码，然后使用compare_faces方法比较即可。看代码。\nimport face_recognition\n\n# 首先打开一张已经知道是谁的照片，然后打开另一张照片\nzhuyizhi_image = face_recognition.load_image_file(\"F:zhuyizhi.jpg\")\nunknown_image = face_recognition.load_image_file(\"F:unknow.jpg\")\n\n# 识别出已知和未知人脸的面部特征\nzhu_face_encoding = face_recognition.face_encodings(zhuyizhi_image)[0]\nunknown_face_encoding = face_recognition.face_encodings(unknown_image)[0]\n\n# 可以添加多个已知的人脸照片\nknown_faces = [\n    zhu_face_encoding,\n \n]\n\n# 比较已知人脸和未知人脸，返回结果为true或者false。\nresults = face_recognition.compare_faces(known_faces, unknown_face_encoding)\n\nprint(\"Is the unknown face a picture of zhuyizhi? {}\".format(results[0]))\nprint(\"Is the unknown face a new person that we've never seen before? {}\".format(not True in results))\nIs the unknown face a picture of zhuyizhi? True\nIs the unknown face a new person that we've never seen before? False\n\n\n除了能检测出和识别出人脸之外，face-recognition还提供深度学习参数的支持，使得识别率更高。\n本人才疏学浅，上文中难免有些错误，还请各位品评指正。如果觉得写的还行，欢迎大家多多分享哈。\n\n                ", "mainLikeNum": ["8 "], "mainBookmarkNum": "12"}