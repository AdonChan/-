{"title": "python大佬养成计划----excel操作 - python太阳花 ", "index": "python", "content": "namedtuple新型数据类型\nPython中存储系列数据，比较常见的数据类型有list，除此之外，还有tuple数据类型.tuple元组的item只能通过index访问，collections模块的namedtuple子类不仅可以使用item的index访问item，还可以通过item的name进行访问。可以将namedtuple理解为c中的struct结构，其首先将各个item命名，然后对每个item赋予数据。\nfrom collections import namedtuple\n\n#python自带namedtuple使用说明\n#def namedtuple(typename, field_names, *, verbose=False, rename=False, module=None):\n    # - typename: 元组名称\n    # - field_names : 元组中元素的名称\n    # - rename: 如果元素名称中包含python关键字， 必须设置rename=True\n\nInfo = namedtuple('Users',['name','age','college'])\nuserone = Info('sheen',16,'xupt')\nprint(userone,type(userone))\nprint(userone.name)\n\nopenyxl模块\n是python的第三方库，对xlsx格式的Excel文档进行操作\nExcel基本信息\n\n工作薄(workbook)\n工作表(sheet)\n活动表(active sheet)\n行(row): 1,2,3,4,5,6.......\n列(column): A,B,C,D........\n单元格(cell): B1, C1\n\npython与excel\nimport openpyxl\n#1.加载excel文档\nworkbo = openpyxl.load_workbook(\"example.xlsx\")#<class 'openpyxl.workbook.workbook.Workbook'>\nall_sheet = workbo.sheetnames   #显示所有的工作表，['Sheet1', 'Sheet2', 'Sheet3', 'Sheet4']\nactive_sheet = workbo.active    #显示活动表，<Worksheet \"Sheet4\">\n#2.选择要操作的工作表\nsheet = workbo['Sheet1']        #选择要操作的工作表\ntitle_sheet = sheet.title       #获取工作表名称，Sheet1\n\n#3.查看指定的单元格信息\ncell_b1 = sheet.cell(row=1,column=2)    #查找指定单元格信息,返回一个对象，<Cell 'Sheet1'.B1>\nvalue_b1 = cell_b1.value                #查看指定单元格内容，17\n\n#4.获取工作表的行数和列数\nmax_row = sheet.max_row         #获取工作表行数\nmax_column = sheet.max_column   #获取工作表列数\n\n#5.修改工作表信息和单元格信息\nsheet.title = 'family_info'     #修改工作表的标题\nsheet['B1'] = 100               #修改单元格值\n#6.访问所有单元格信息\ninfo_row = sheet.rows               #返回的是一个生成器，<generator object Worksheet._cells_by_row at 0x000001DB770DFF68>\nfor row in info_row:          #遍历工作表，拿出每一个值\n    for column in row:\n        print(column.value,end=' ')\n    print()\n\n#7.保存修改信息\nworkbo.save(filename='modify.xlsx')\n\nexcel再排序\n根据表格内容再次排序，并保存到新的文件中\n# 需求:\n# 商品名称    商品价格    商品数量\n\n# - 定义一个函数， readwb(wbname, sheetname=None)\n# - 如果用户指定sheetname就打开用户指定的工作表， 如果没有指定， 打开active sheet;\n# -  根据商品的价格进行排序(由小到大)， 保存到文件中;商品名称:商品价格:商品数量\n\nimport openpyxl\ndef readwb(wbname,sheetname=None):\n    workbo = openpyxl.load_workbook(wbname)\n    if not sheetname:\n        sheet = workbo.active\n    else:\n        sheet = sheetname\n    wb_info = []\n    for row in sheet.rows:\n        row_info = [val.value for val in row]\n        wb_info.append(row_info)\n    return sorted(wb_info,key=lambda item:item[1])\ndef save_to_excel(data,wbname,wbsheet='Sheet1'):\n    workbo = openpyxl.Workbook()\n    sheet = workbo.active\n    for row_index,row in enumerate(data):\n        for column_index,cell_value in enumerate(row):\n            sheet.cell(row=row_index+1,column=column_index+1,value=cell_value)\n    workbo.save(wbname)\n\nexcel_info = readwb('Book1.xlsx')\nsave_to_excel(excel_info,'Book1_modify.xlsx')\n\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "0"}