{"title": "Python即时网络爬虫：API说明 - 一起学习python网络爬虫 ", "index": "编程语言,api,python爬虫,python", "content": "\nAPI说明——下载gsExtractor内容提取器\n1，接口名称\n下载内容提取器\n2，接口说明\n如果您想编写一个网络爬虫程序，您会发现大部分时间耗费在调测网页内容提取规则上，不讲正则表达式的语法如何怪异，即便使用XPath，您也得逐个编写和调试。\n如果要从一个网页上提取很多字段，逐个调试XPath将是十分耗时的。通过这个接口，你可以直接获得一个调测好的提取器脚本程序，是标准的XSLT程序，您只需针对目标网页的DOM运行它，就能获得XML格式的结果，所有字段一次性获得。\n这个XSLT提取器可以是您用MS谋数台生成的，也可以是其他人共享给您的，只要您有读权限，皆可下载使用。\n用于数据分析和数据挖掘的网络爬虫程序中，内容提取器是影响通用性的关键障碍，如果这个提取器是从API获得的，您的网络爬虫程序就能写成通用的框架。请参看GooSeeker的开源Python网络爬虫项目。\n3，接口规范\n3.1，接口地址（URL）\nhttp://www.gooseeker.com/api/getextractor\n\n3.2，请求类型（contentType）不限\n3.3，请求方法HTTP GET\n3.4，请求参数\n\nkey 必选：Yes；类型：String；说明：申请API时分配的AppKey\ntheme 必选：Yes；类型：String；说明：提取器名，就是用MS谋数台定义的规则名\nmiddle 必选：No；类型：String；说明：规则编号，如果相同规则名下定义了多个规则，需填写\nbname 必选：No；类型：String；说明：整理箱名，如果规则含有多个整理箱，需填写\n\n注释：请参看GooSeeker网络爬虫术语解释：集搜客GooSeeker专有名词解释\n3.5，返回类型（contentType）text/xml; charset=UTF-8\n3.6，返回参数HTTP消息头中的参数，如下：\nmore-extractor 类型：String；说明：相同规则名下有多少个提取器。通常只在可选参数没有填写的时候需要关注这个参数，用以提示客户端有多个规则和整理箱，客户端自己决定是否要在发送请求时携带明确的参数\n3.7，返回错误信息\n\n消息层错误以HTTP 400返回，比如，URL中的参数不符合本规范\n\n应用层错误以HTTP 200 OK返回，具体错误码用XML文件放在消息体中，XML结构如下：\n<return>\n    <code>具体的错误码</code>\n</return>\n\n\n\n具体的code值如下：\nkeyError：权限验证失败\nparamError：URL中传来的参数有误，比如，参数名称或值不正确\nempty：非错误状态，而是请求的提取器是不存在的，比如，某个抓取规则并没有创建整理箱，则返回empty\n\n\n\n4，用法范例（python语言）\n提取器名获取参考 1分钟快速生成用于网页内容提取的xslt\n示例代码：\n# -*- coding: utf-8 -*-\nfrom urllib import request\n\nurl = 'http://www.gooseeker.com/api/getextractor?key=您的key&theme=您的提取器名'\n\nresp = request.urlopen(url)\ncontent = resp.read()\nif(content):\n    print(content)\n\n接下来我会对此API进行测试，将案例发布出来。\n5，相关文档\n1， Python即时网络爬虫项目: 内容提取器的定义\n6，集搜客GooSeeker开源代码下载源\n1， GooSeeker开源Python网络爬虫GitHub源\n7，文档修改历史\n1，2016-06-22：V1.0\n\n                ", "mainLikeNum": ["1 "], "mainBookmarkNum": "8"}