{"title": "利用apidoc维护api接口文档 - 个人文章 ", "index": "windows,python,php,node.js,javascript", "content": "什么是apidoc\napidoc是一个轻量级的在线REST接口文档生成系统，支持多种主流语言，包括Java、C、C#、PHP和Javascript等。使用者按照要求书写相关注释，就可以生成可读性好、界面美观的在线接口文档。\n这里了解更多\n快速开始\n\n\n安装依赖\n\n\n安装nodejs https://nodejs.org/官网下载.msi文件；测试是否安装成功 npm -v\n\nnpm的安装。由于新版的NodeJS已经集成了npm，所以之前npm也一并安装好了。同样可以使用cmd命令行输入\"npm -v\"来测试是否成功安装。如下图，出现版本提示便OK了。\n\n\n\n安装apidoc\n利用npm进行安装\nnpm install apidoc -g\n\n\n安装速度和网速有关，最多1到2分钟，\napidoc -v  可以查看版本信息\n安装好后在\nC:\\Users\\admin\\AppData\\Roaming\\npm\\node_modules\\apidoc\n能够看到如下文件\n\napidoc配置\n打开example文件夹apidoc.json为配置文件,修改参数为自己的项目信息。\n\n{\n  \"name\": \"apidoc-example\",\n  \"version\": \"0.3.0\",\n  \"description\": \"apidoc example project\",\n  \"title\": \"Custom apiDoc browser title\",\n  \"url\" : \"https://api.github.com/v1\",\n  \"sampleUrl\": \"https://api.github.com/v1\",\n  \"header\": {\n    \"title\": \"My own header title\",\n    \"filename\": \"header.md\"\n  },\n  \"footer\": {\n    \"title\": \"My own footer title\",\n    \"filename\": \"footer.md\"\n  },\n  \"template\": {\n      \"withCompare\": true,\n      \"withGenerator\": true\n  }\n}\n\n将 apidoc.json 拷贝到需要生成文档的目录下\n然后按照文档说明做代码注释\n/**\n * @api {get} /sguoshan_api/Logon 获取用户信息\n * @apiVersion 1.0.0\n * @apiName  Logon\n * @apiGroup User\n * @apiPermission 所有已注册用户\n * @apiPrivate\n * @apiDescription 与0.9.0相比安全性提高\n *\n * @apiParam {String} username 用户名称/邮箱/会员号\n * @apiParam {Number} password 用户密码\n * @apiExample 使用示例:\n * http://api.guoshanchina.com/sguoshan_api/Logon?username=911117&password=123456\n *\n * @apiSuccess {Number}   id            The Users-ID.\n * @apiSuccess {Date}     registered    Registration Date.\n * @apiSuccess {Date}     name          Fullname of the User.\n * @apiSuccess {String[]} nicknames     List of Users nicknames (Array of Strings).\n * @apiSuccess {Object}   profile       Profile data (example for an Object)\n * @apiSuccess {Number}   profile.age   Users age.\n * @apiSuccess {String}   profile.image Avatar-Image.\n * @apiSuccess {Object[]} options       List of Users options (Array of Objects).\n * @apiSuccess {String}   options.name  Option Name.\n * @apiSuccess {String}   options.value Option Value.\n *\n * @apiSuccessExample 成功 return ():\n{\n\"msg\": \"获取成功\",\n\"status\":\"200\",\n\"data\":{\n    \"id\":\"123\",\n    \"name\":\"shmily\"\n    }\n}\n * @apiError NoAccessRight     只用登陆成功才能访问.\n * @apiError UserNotFound   用户 <code>id</code> 错误.\n * @apiErrorExample 失败 return ():\n *     HTTP/1.1 401 Not Authenticated\n *     {\n *       \"msg\": \"没有权限\",\"status\":\"401\"\n *     }\n */\nfunction getUser() { return; }\n在命令行中\n切换到项目apidoc.json的上一级（api目录）\nd:\ncd www/shop/Web\napidoc -i api/ -o apidoc/\n运行后在api的同级目录能够看到生成了apidoc的文件夹。双击文件夹下的index.html，就能看到文档了。\n\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "3"}