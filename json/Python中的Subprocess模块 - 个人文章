{"title": "Python中的Subprocess模块 - 个人文章 ", "index": "python", "content": "以前我一直用os.system()处理一些系统管理任务,因为我认为那是运行linux命令最简单的方式.我们能从Python官方文档里读到应该用subprocess 模块来运行系统命令.subprocess模块允许我们创建子进程,连接他们的输入/输出/错误管道，还有获得返回值。subprocess模块打算来替代几个过时的模块和函数，比如： os.system, os.spawn*, os.popen*, popen2.*命令。让我们来看一下subprocess 有哪些不同的函数.\nsubprocess.call()\n执行由参数提供的命令.我们可以用数组作为参数运行命令,也可以用字符串作为参数运行命令(通过设置参数shell=True)注意,参数shell默认为False我们用subprocess.call()来做一个统计磁盘的例子:\nsubprocess.call(['df', '-h'])\n下面的例子把shell设置为True\nsubprocess.call('du -hs $HOME', shell=True)\n注意,python官方文档里对参数shell=True陈述了一个警告:\nInvoking the system shell with shell=True can be a security hazard if combinedwith untrusted input\n现在,我们来看看输入与输出\nInput and Output\nsubprocess 模块能阻止输出,当你不关心标准输出的时候是非常方便的.它也使你通过一种正确的方式管理输入/输出,有条理地整合python脚本中的的shell命令.\nReturn Codes\n通过subprocess.call的返回值你能够判定命令是否执行成功.每一个进程退出时都会返回一个状态码，你可以根据这个状态码写一些代码。\nstdin, stdout and stderr\n我在使用subprocess 时,有一个微妙的部分是怎么使用管道把命令连接起来.管道表明一个新的子管道应该被创建.默认的设置为None,意味着没有重定向发生标准错误可以指向标准输出,表明子进程的错误信息会被捕获到和标准输出同一个文件.\nsubprocess.Popen()\nsubprocess 模块中基本的进程创建和管理由Popen 类来处理.subprocess.popen是用来替代os.popen的.我们来做一些真实的例子,subprocess.Popen需要一个数组作为参数:\nimport subprocess\n\np = subprocess.Popen([\"echo\", \"hello world\"], stdout=subprocess.PIPE)\n\nprint p.communicate()\n\n>>>('hello world\n', None)\n注意,虽然你可以使用 \"shell=True\",但并不推荐这样的方式.如果你知道你只用几个有限的函数,比如Popen和PIPE,你可以单单指定这几个函数:\nfrom subprocess import Popen, PIPE\n\np1 = Popen([\"dmesg\"], stdout=PIPE)\n\nprint p1.communicate()\n\nPopen.communicate()\ncommunicate()函数返回一个tuple(标准输出和错误).Popen.communicate() 和进程沟通:发送数据到标准输入.从标准输出和错误读取数据直到遇到结束符.等待进程结束.输入参数应该是一个字符串,以传递给子进程,如果没有数据的话应该是None.基本上,当你用 communicate()函数的时候意味着你要执行命令了.\n用subprocess写Ping程序\n我们先问用户地址,然后用ping请求这个地址.\n# Import the module\nimport subprocess\n\n# Ask the user for input\nhost = raw_input(\"Enter a host to ping: \")    \n\n# Set up the echo command and direct the output to a pipe\np1 = subprocess.Popen(['ping', '-c 2', host], stdout=subprocess.PIPE)\n\n# Run the command\noutput = p1.communicate()[0]\n\nprint output\n译自\n\n                ", "mainLikeNum": ["1 "], "mainBookmarkNum": "5"}