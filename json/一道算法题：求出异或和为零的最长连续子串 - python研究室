{"title": "一道算法题：求出异或和为零的最长连续子串 - python研究室 ", "index": "python", "content": "最近看见一道算法题，本着见题解题的学习心态解决了它，由于目前正在研究正则表达式，所以就从正则的方向入手了：题目如下：\n输入N个整数，中间用空格隔开，求出异或和为0的最长连续子串。要求输出子串的长度、子串在输入的数组中的起始位置和结束位置。如果不存在这样的子串则输出-1.\n代码如下：\nimport re\nx = input('请输入')\n#将输入的整数去掉空格并分别存入列表备用，用来最后比对子串的位置。\nz = re.split(r'\\s+',x)\n#定义空列表用来存放所有符合异或和为0的连续子串\nlis = []\nwhile 1:\n#首先查找是否存在符合条件的子串\n    res1 = re.search(r'((\\d+)\\s+\\2\\s*)+',x)\n    if not res1:break\n#如果存在的话就把它保存到列表中\n    lis.append(res1.group().strip())\n#并且删除该子串，以便进行后续查找。\n    x = re.sub(r'((\\d+)\\s+\\2\\s*)+','',x,1)\nif lis: \n#对查找结果进行筛选，把列表中每个子串转再换成列表   \n    for i in range(len(lis)):\n        lis[i] = re.split(r'\\s+',lis[i])\n#创建字典，key为每个子串长度，value为每个子串的列表形式\n    dic = {len(lis[i]):lis[i] for i in range(len(lis))}\n#求出最长的子串\n    max_str = dic[max(dic)]\n    a = len(max_str)\n    for i in range(len(z)-a+1):\n        if z[i:i+a] == max_str:\n            b = i+1\n            break\n    c = b+a-1\n    print(a,b,c)\nelse:\n    print('-1')\n我自己测试一千多条数据是OK的，欢迎各位学长指教。\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "0"}