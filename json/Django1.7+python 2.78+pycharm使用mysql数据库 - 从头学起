{"title": "Django1.7+python 2.78+pycharm使用mysql数据库 - 从头学起.. ", "index": "python,django", "content": "配置好virtualenv 和virtualenvwrapper后，使用pycharm创建新项目。之后要面临的问题就来了，之前一直使用的是sqlite作为开发数据库进行学习，按照之前看教程的原则，好像就是说开发环境要和生产环境尽量的一致，所以现在想尝试一下使用更有可能在生产环境部署的mysql数据库进行开发。\n\n本觉得是一件应该很轻松的事情，没想到遇到了一些麻烦\n\n根据一通百度，搜出来的方案大概有：\n\nMySQLdb\nmysql安装时候自带的connector\npymysql\n\nMySQLdb\n是django官方推荐的第一个是django官方推荐的数据库链接库，也自然是我第一个尝试的。可是安装的时候居然找不到适合64位，python2.78的安装文件! 通过一篇文章介绍修改勉强装上了支持2.7的版本，结果使用的时候总是unicode报错，mysql的数据库也按照教程说的设置成了utf8编码，只得作罢\n\n2，自带的connector\n\n又是一个看起来很官方的版本，但是按照官方的安装方法总是提示没有mysql.connector.django这个模块。。。。不明白为什么。再仔细找找发现安装成功的同学之后又碰到了中文unicode报错。。。。。残念\n\n3，pymysql\n\n这是博客上关于python3试用django-mysql的解决方案。一开始因为非官方没有使，倒是意外简单的成功了。。。\n\n在project的inti.py里面添加：\n\nimport pymysql\npymysql.install_as_MySQLdb()\n\n\nsettings:\n\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.mysql', #数据库引擎\n        'NAME': 'django',                       #数据库名\n        'USER': 'user',                       #用户名\n        'PASSWORD': 'password!',                   #密码\n        'HOST': 'localhost',                           #数据库主机，默认为localhost\n        'PORT': '3306',                           #数据库端口，MySQL默认为3306\n        'OPTIONS': {\n            'autocommit': True,\n        },\n    }\n}\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "2"}