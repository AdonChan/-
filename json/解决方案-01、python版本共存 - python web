{"title": "解决方案-01、python版本共存 - python web ", "index": "python", "content": "1.为什么需要版本共存？\n首先python版本共存指的是不同版本的python解释器，同时存在在同一个独立的系统中。例如：我们在进行项目开发时有时需要用到python2，有时要用到python3。但是在我们执行.py文件时在命令窗口键入 python test.py 时，到底系统会给我用python2执行还是python3执行呢？那我们有时候需要用指定的python版本该怎么办呢？ 以及我如何用指定的pip？ 这些都将是大问题。小编我最近也遇到了类似的问题，弄了很久查了很多资料，最后用虚拟环境完美地解决了这些问题。\n2.如何建虚拟环境\n首先 进入terminal（win下指命令行）界面 输入python 会进入python shell模式\n\n\n在这里我们就能看到系统默认的python解释器版本了然后输入quit() 退出python3 shell（python2 shell 的退出方法为Ctrl+C）\n建议先卸载其中一个python版本（python3 用安装程序卸载 python2用卸载程序卸载）不过不卸载应该也不会出现问题 只不过我没试过 不能保证没问题\n如果你的默认python没有安装pip那就先安装pippip安装包下载地址下载下来后解压 进入terminal界面切换到pip的文件夹执行python setup.py install\n更新pippip -m pip install --upgrade pip如果pip更新失败就再重新安装pip 继续更新\n安装virtualenvwrapper-win 注：如果是linux系统 比如ubuntu等 不需要加-winpip install virtualenvwrapper-win\n安装成功后新建虚拟环境\nmkvirtualenv -p C:\\python35\\python.exe py3env\n# C:\\python35\\python.exe是我的python3的路径\n\nmkvirtualenv -p C:\\python27\\python.exe --system-site-packages py2env\n# C:\\python27\\python.exe是我的python3的路径 --system-site-packages参数是导入python2中已安装的包 不加这个参数 默认不导入\n然后我们就能通过在terminal中输入 workon py3env来进入python3的虚拟环境\n\n\n\n输入workon py2env来进入python2的虚拟环境\n3.virtualenvwrapper的其他命令\nworkon env_name\n#进入虚拟环境或者切换虚拟环境\n\ndeactivate\n#离开虚拟环境\n\nworkon 或 lsvirtualenv\n#列出虚拟环境列表\n\nrmvirtual env_name\n#删除虚拟环境\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "0"}