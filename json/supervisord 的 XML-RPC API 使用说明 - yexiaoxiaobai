{"title": "supervisord 的 XML-RPC API 使用说明 - yexiaoxiaobai ", "index": "python,supervisord", "content": "supervisord 的安装\n\n使用 easy_install 安装 supervisord\n\nsudo easy_install  supervisord \n\n\nsupervisord 的配置\n\n生成配置文件\n\nsudo sh -c '/usr/local/bin/echo_supervisord_conf  > /etc/supervisord.conf'\n\n\nsupervisord 的配置文件如下\n\n; Sample supervisor config file.\n;\n; For more information on the config file, please see:\n; http://supervisord.org/configuration.html\n;\n; Note: shell expansion (\"~\" or \"$HOME\") is not supported.  Environment\n; variables can be expanded using this syntax: \"%(ENV_HOME)s\".\n\n[unix_http_server]\nfile=/tmp/supervisor.sock   ; (the path to the socket file)\n;chmod=0700                 ; socket file mode (default 0700)\n;chown=nobody:nogroup       ; socket file uid:gid owner\n;username=user              ; (default is no username (open server))\n;password=123               ; (default is no password (open server))\n\n[inet_http_server]         ; inet (TCP) server disabled by default\nport=127.0.0.1:9001        ; (ip_address:port specifier, *:port for all iface)\nusername=ops              ; (default is no username (open server))\npassword=vipshop               ; (default is no password (open server))\n\n[supervisord]\nlogfile=/tmp/supervisord.log ; (main log file;default $CWD/supervisord.log)\nlogfile_maxbytes=50MB        ; (max main logfile bytes b4 rotation;default 50MB)\nlogfile_backups=10           ; (num of main logfile rotation backups;default 10)\nloglevel=info                ; (log level;default info; others: debug,warn,trace)\npidfile=/tmp/supervisord.pid ; (supervisord pidfile;default supervisord.pid)\nnodaemon=false               ; (start in foreground if true;default false)\nminfds=1024                  ; (min. avail startup file descriptors;default 1024)\nminprocs=200                 ; (min. avail process descriptors;default 200)\n;umask=022                   ; (process file creation umask;default 022)\n;user=chrism                 ; (default is current user, required if root)\n;identifier=supervisor       ; (supervisord identifier, default is 'supervisor')\n;directory=/tmp              ; (default is not to cd during start)\n;nocleanup=true              ; (don't clean up tempfiles at start;default false)\n;childlogdir=/tmp            ; ('AUTO' child log dir, default $TEMP)\n;environment=KEY=\"value\"     ; (key value pairs to add to environment)\n;strip_ansi=false            ; (strip ansi escape codes in logs; def. false)\n\n; the below section must remain in the config file for RPC\n; (supervisorctl/web interface) to work, additional interfaces may be\n; added by defining them in separate rpcinterface: sections\n[rpcinterface:supervisor]\nsupervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface\n\n[supervisorctl]\nserverurl=unix:///tmp/supervisor.sock ; use a unix:// URL  for a unix socket\n;serverurl=http://127.0.0.1:9001 ; use an http:// url to specify an inet socket\n;username=chris              ; should be same as http_username if set\n;password=123                ; should be same as http_password if set\n;prompt=mysupervisor         ; cmd line prompt (default \"supervisor\")\n;history_file=~/.sc_history  ; use readline history if available\n\n; The below sample program section shows all possible program subsection values,\n; create one or more 'real' program: sections to be able to control them under\n; supervisor.\n\n[program:ds.tools.vip.com]\ncommand=sh /apps/dat/web/newcode/debug_ds/run.sh ; the program (relative uses PATH, can take args)\nprocess_name=%(program_name)s ; process_name expr (default %(program_name)s)\nnumprocs=1                    ; number of processes copies to start (def 1)\ndirectory=/apps/dat/web/newcode/debug_ds/ ; directory to cwd to before exec (def no cwd)\n;umask=022                     ; umask for process (default None)\n;priority=999                  ; the relative start priority (default 999)\nautostart=true                ; start at supervisord start (default: true)\nautorestart=true        ; whether/when to restart (default: unexpected)\n;startsecs=1                   ; number of secs prog must stay running (def. 1)\n;startretries=3                ; max # of serial start failures (default 3)\n;exitcodes=0,2                 ; 'expected' exit codes for process (default 0,2)\nstopsignal=QUIT               ; signal used to kill process (default TERM)\nstopwaitsecs=10               ; max num secs to wait b4 SIGKILL (default 10)\n;stopasgroup=false             ; send stop signal to the UNIX process group (default false)\n;killasgroup=false             ; SIGKILL the UNIX process group (def false)\n;user=chrism                   ; setuid to this UNIX account to run the program\n;redirect_stderr=true          ; redirect proc stderr to stdout (default false)\n;stdout_logfile=/a/path        ; stdout log path, NONE for none; default AUTO\n;stdout_logfile_maxbytes=1MB   ; max # logfile bytes b4 rotation (default 50MB)\n;stdout_logfile_backups=10     ; # of stdout logfile backups (default 10)\n;stdout_capture_maxbytes=1MB   ; number of bytes in 'capturemode' (default 0)\n;stdout_events_enabled=false   ; emit events on stdout writes (default false)\n;stderr_logfile=/a/path        ; stderr log path, NONE for none; default AUTO\n;stderr_logfile_maxbytes=1MB   ; max # logfile bytes b4 rotation (default 50MB)\n;stderr_logfile_backups=10     ; # of stderr logfile backups (default 10)\n;stderr_capture_maxbytes=1MB   ; number of bytes in 'capturemode' (default 0)\n;stderr_events_enabled=false   ; emit events on stderr writes (default false)\n;environment=A=\"1\",B=\"2\"       ; process environment additions (def no adds)\n;serverurl=AUTO                ; override serverurl computation (childutils)\n\n; The below sample eventlistener section shows all possible\n; eventlistener subsection values, create one or more 'real'\n; eventlistener: sections to be able to handle event notifications\n; sent by supervisor.\n\n;[eventlistener:theeventlistenername]\n;command=/bin/eventlistener    ; the program (relative uses PATH, can take args)\n;process_name=%(program_name)s ; process_name expr (default %(program_name)s)\n;numprocs=1                    ; number of processes copies to start (def 1)\n;events=EVENT                  ; event notif. types to subscribe to (req'd)\n;buffer_size=10                ; event buffer queue size (default 10)\n;directory=/tmp                ; directory to cwd to before exec (def no cwd)\n;umask=022                     ; umask for process (default None)\n;priority=-1                   ; the relative start priority (default -1)\n;autostart=true                ; start at supervisord start (default: true)\n;autorestart=unexpected        ; whether/when to restart (default: unexpected)\n;startsecs=1                   ; number of secs prog must stay running (def. 1)\n;startretries=3                ; max # of serial start failures (default 3)\n;exitcodes=0,2                 ; 'expected' exit codes for process (default 0,2)\n;stopsignal=QUIT               ; signal used to kill process (default TERM)\n;stopwaitsecs=10               ; max num secs to wait b4 SIGKILL (default 10)\n;stopasgroup=false             ; send stop signal to the UNIX process group (default false)\n;killasgroup=false             ; SIGKILL the UNIX process group (def false)\n;user=chrism                   ; setuid to this UNIX account to run the program\n;redirect_stderr=true          ; redirect proc stderr to stdout (default false)\n;stdout_logfile=/a/path        ; stdout log path, NONE for none; default AUTO\n;stdout_logfile_maxbytes=1MB   ; max # logfile bytes b4 rotation (default 50MB)\n;stdout_logfile_backups=10     ; # of stdout logfile backups (default 10)\n;stdout_events_enabled=false   ; emit events on stdout writes (default false)\n;stderr_logfile=/a/path        ; stderr log path, NONE for none; default AUTO\n;stderr_logfile_maxbytes=1MB   ; max # logfile bytes b4 rotation (default 50MB)\n;stderr_logfile_backups        ; # of stderr logfile backups (default 10)\n;stderr_events_enabled=false   ; emit events on stderr writes (default false)\n;environment=A=\"1\",B=\"2\"       ; process environment additions\n;serverurl=AUTO                ; override serverurl computation (childutils)\n\n; The below sample group section shows all possible group values,\n; create one or more 'real' group: sections to create \"heterogeneous\"\n; process groups.\n\n;[group:thegroupname]\n;programs=progname1,progname2  ; each refers to 'x' in [program:x] definitions\n;priority=999                  ; the relative start priority (default 999)\n\n; The [include] section can just contain the \"files\" setting.  This\n; setting can list multiple files (separated by whitespace or\n; newlines).  It can also contain wildcards.  The filenames are\n; interpreted as relative to this file.  Included files *cannot*\n; include files themselves.\n\n;[include]\n;files = relative/directory/*.ini\n\n\n启动 supervisord\n\n启动 supervisord 的命令如下：\n\nsupervisord\n\n\n使用 supervisorctl 查看 supervisord 相关信息\n\n$ supervisorctl\nds.tools.vip.com                 RUNNING    pid 13794, uptime 0:17:25\nsupervisor> \n\n\n\n查看 supervisor 的所有命令可以使用 help 帮助命令\n\n ~]$ supervisorctl\nds.tools.vip.com                 RUNNING    pid 13794, uptime 0:17:25\nsupervisor> help\n\ndefault commands (type help <topic>):\n=====================================\nadd    clear  fg        open  quit    remove  restart   start   stop  update \navail  exit   maintail  pid   reload  reread  shutdown  status  tail  version\n\n\n\n查看某个命令的具体用法为 help commandname\n\nsupervisor> help start\nstart <name>            Start a process\nstart <gname>:*         Start all processes in a group\nstart <name> <name>     Start multiple processes or groups\nstart all               Start all processes\nsupervisor> \n\n\nXML-RPC API 的使用\n\n通过配置文件所知，我们的配置的 url 如下：\n\n[inet_http_server]         ; inet (TCP) server disabled by default\nport=127.0.0.1:9001        ; (ip_address:port specifier, *:port for all iface)\nusername=ops              ; (default is no username (open server))\npassword=vipshop               ; (default is no password (open server))\n\n\n连接 supervisord 的代码示例如下：\n\nimport xmlrpclib\nserver = xmlrpclib.Server('http://ops:vipshop@127.0.0.1:9001/RPC2')\n\n\n当我们不知道 supervisord  有哪些方法的时候，可以使用如下接口查询出 API 支持的方法\n\nmethods = server.system.listMethods()\nprint methods\n\n\n输出如下：\n\n>>> print methods\n['supervisor.addProcessGroup', 'supervisor.clearAllProcessLogs', 'supervisor.clearLog', 'supervisor.clearProcessLog', 'supervisor.clearProcessLogs', 'supervisor.getAPIVersion', 'supervisor.getAllConfigInfo', 'supervisor.getAllProcessInfo', 'supervisor.getIdentification', 'supervisor.getPID', 'supervisor.getProcessInfo', 'supervisor.getState', 'supervisor.getSupervisorVersion', 'supervisor.getVersion', 'supervisor.readLog', 'supervisor.readMainLog', 'supervisor.readProcessLog', 'supervisor.readProcessStderrLog', 'supervisor.readProcessStdoutLog', 'supervisor.reloadConfig', 'supervisor.removeProcessGroup', 'supervisor.restart', 'supervisor.sendProcessStdin', 'supervisor.sendRemoteCommEvent', 'supervisor.shutdown', 'supervisor.startAllProcesses', 'supervisor.startProcess', 'supervisor.startProcessGroup', 'supervisor.stopAllProcesses', 'supervisor.stopProcess', 'supervisor.stopProcessGroup', 'supervisor.tailProcessLog', 'supervisor.tailProcessStderrLog', 'supervisor.tailProcessStdoutLog', 'system.listMethods', 'system.methodHelp', 'system.methodSignature', 'system.multicall']\n\n\n注：官方的文档的 XML-RPC API\n\n查看某个进程的详细信息\n\nproInfo = server.supervisor.getProcessInfo('ds.tools.vip.com')\nprint proInfo\n\n\n输出如下：\n\n{'now': 1405479228, 'group': 'ds.tools.vip.com', 'description': 'pid 13794, uptime 0:25:45', 'pid': 13794, 'stderr_logfile': '/tmp/ds.tools.vip.com-stderr---supervisor-hWn1G5.log', 'stop': 0, 'statename': 'RUNNING', 'start': 1405477683, 'state': 20, 'stdout_logfile': '/tmp/ds.tools.vip.com-stdout---supervisor-JGiMlV.log', 'logfile': '/tmp/ds.tools.vip.com-stdout---supervisor-JGiMlV.log', 'exitstatus': 0, 'spawnerr': '', 'name': 'ds.tools.vip.com'}\n\n\n具体详细的可以参考官方文档，列举的很详细，这只是一个简单的介绍。\n\n                ", "mainLikeNum": ["2 "], "mainBookmarkNum": "5"}