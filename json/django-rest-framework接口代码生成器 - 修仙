{"title": "django-rest-framework接口代码生成器 - 修仙 ", "index": "python,django,django-rest-framework", "content": "拒绝重复劳动．\n保存如下代码为codeGen.py,放到模块统计目录下\nimport sys\n\nname = sys.argv[1]\nverbose = sys.argv[2]\n\n\ndef underscore(str):\n    return \"\".join(map(lambda x: \"_\" + x if x.isupper()  else x, str))[1:].lower()\n\n\nmodel = \"\"\"class {name}(CoreModel):\n\n    class Meta:\n        verbose_name = '{verbose}'\n        verbose_name_plural = '{verbose}'\"\"\".format(name=name, verbose=verbose)\n\nserializer = \"\"\"class {name}Serializer(serializers.ModelSerializer):\n    class Meta:\n        model = {name}\"\"\".format(name=name, verbose=verbose)\n\nview = \"\"\"class {name}ViewSet(viewsets.ModelViewSet):\n    serializer_class = {name}Serializer\n    queryset = {name}.objects.all()\"\"\".format(name=name, verbose=verbose)\n\nurl = \"\"\"router.register(r'{lower}', {name}ViewSet, base_name=\"{lower}\")\"\"\".format(name=name, verbose=verbose,\n                                                                                   lower=underscore(name) + 's')\n\ntry:\n    with open('models.py', 'a') as f:\n        f.write(model)\n    with open('serializers.py', 'a') as f:\n        f.write(serializer)\n    with open('views.py', 'a') as f:\n        f.write(view)\n    with open('urls.py', 'a') as f:\n        f.write(url)\n\n    print(\"生成api接口{name}完毕\".format(name=name))\nexcept:\n    print(\"代码生成过程出错\")\n\n执行命令\n在模块目录下执行　python codeGen.py 模型单词　模型说明其中模型单词为托峰命名法.\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "4"}