{"title": "flask入门2-模板引擎 - Python全栈玩起来 ", "index": "python,flask", "content": "day2模板\n模板引擎\n说明：模板文件就是按照一定的规则书写的展示效果的HTML文件  模板引擎就是负责按照指定规则进行替换的工具\n模板引擎选择jinja2\n一、渲染模板的方法\n\n\n将渲染的模板进行返回\nrender_template()\n\n\n渲染字符串返回\nrender_templates_string()\n\n\n实例\n@app.route('/')\ndef index():\n    #将模板内容响应给用户\n    return render_template('index.html')\n    #渲染一内容响应给用户\n    return render_template_string('<h1 style=\"color:green;font-size:18px;\">原谅色</h1>')\n二、模板的语法\n模板中只存在俩种语法\n\n\n变量\n{{ var }}\n#像模板文件中传参\nreturn render_template('index.html',title='首恶')\n{{ title }}\n\n标签{% 标签名 %}\n\n\n注意：\n在模板中使用字典中的键 需要像使用对象得方式来调用\n{{data.key}}\n如果在模板中给定的变量不存在 则插入的是空字符串 不会报错\n三、过滤器\n过滤器使用管道符 | 来使用的\n\n{{ var|abs }}  返回一个数值的绝对值\n\ndefault  设置默认值\n只有当给定的变量不存在时 则执行默认值\n当设置default的boolean的时候 会执行默认值\n<li>{{ data.bool|default('我是默认值',boolean=True) }}</li>\n\nfirst:  取出变量中的第一个字符\nlast:  取出变量中的最后一个字符\n\nformat： 字符的格式化\n<li>{{ '我叫%s 我今年%d岁了 我的存款为 %.2f'|format('罗铁汉',38,23) }}</li>\n\nlength:  返回变量值的长度\n\njoin: 拼接成字符串\n<li>{{ [1,2,3,4]|join('') }}</li>\n<li>{{ [1,2,3,4]|join('x') }}</li>\n\nsafe: 不转义标签 原样显示\nlower  转为小写\nupper  转为大写\n\nreplace 替换\n<li>{{ data.string|replace('a','x') }}</li>\n\nstriptages  去除HTML标签{{ data.html|striptags }}\n\n\n四、标签\n语法格式 ：{% 标签名 %}\n(1) if\n实例\n{% if data.bool %}\n        <li>{{ data.bool }}值为真</li>\n{% elif True %}\n        <li>{{ True }}职位真</li>\n{% else %}\n        <li>{{ data.bool }}值为假</li>\n{% endif %}\n(2) for 循环\n实例\n{% for i in data.xxxx %}\n{#  错误的迭代方法TypeError: 'bool' object is not iterable #}\n{#    {% for i in data.bool %}#}\n        <li>{{ i }}</li>\n{% else %}\n        <li>当迭代的变量不存在时 则执行else</li>\n{% endfor %}\n注意：\nbreak  continue 不能够在这里使用\n迭代字典\n{% for k,v in data.items() %}\n     <li>{{ k }}=>{{ v }}</li>\n{% endfor %}\n获取当前迭代的状态\n\n\n变量\n描述\n\n\n\nloop.index\n获取当前迭代的索引 从1开始\n\n\nloop.index0\n获取当前迭代的索引 从0开始\n\n\nloop.first\n是否为第一次迭代\n\n\nloop.last\n是否为最后一次迭代\n\n\nloop.length\n迭代的长度\n\n\n\n六、注释\n{# 多行注释 #}\n七、文件包含    include\n相当于把一个文件 拷贝到当前的你的包含的位置\n实例\n{% include 'common/header.html' %}\n<div>我是中间的内容</div>\n{% include 'common/footer.html' %}\n注意：\n\n包含的公共的文件中  只存放 公共的代码 除此以外什么都不要存在\n\n导入的时候  如果文件和在同一级别 直接导入就可以  如果包含在某个目录中 需要写出路径\n{% include 'common/header.html' %}\n{% include 'test.html' %}\n​\n\n\n八、宏 macro\n概念： 类似python中的函数\n实例\n在macro.html中\n{% macro input(name,type='text',value='') %}\n    <input type=\"{{ type }}\" name=\"{{ name }}\" value=\"{{ value }}\">\n{% endmacro %}\n宏的调用\n{{ input('text','username','') }}\n{{ input() }} \n{{ input(type='password',name='userpass') }}\n宏的导入\n(1) import\n{% import 'test.html' as test %}\n{% import 'common/test.html' as test %}\n<p>用户名： {{ test.input(type='password',name='userpass') }}</p>\n(2) form import\n{% from 'test.html' import input %}\n{% from 'common/test.html' import input %}\n<p>用户名： {{ input(type='password',name='userpass') }}</p>\n注意：\n\n宏的调用只能在定义的下方去调用 否则未定义\n宏如果存在形参 且没有默认值 则可以调用(没意义)\n形参的默认值 需要遵循默认值规则  有默认值的参数 放右侧\n可以正常使用 关键字参数\n\n九、继承 extends\n语法：\n\n{% extends %} 继承某个模板\n{% block %}  挖坑和填坑\n{{ super() }} 调用被替换掉的代码\n\nbase.html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n{% block header %}\n    <meta charset=\"UTF-8\">\n    {% block meta %}\n    {% endblock %}\n    <title>{% block title%}首页{% endblock %}</title>\n    <style>\n        {% block style %}\n            p{color:red;}\n        {% endblock %}\n    </style>\n    {% block link %}\n    {% endblock %}\n    {% block script %}\n    {% endblock %}\n{% endblock %}\n</head>\n<body>\n<header>头部</header>\n{% block con %}\n    我是中间的内容部分\n{% endblock %}\n<footer>尾部</footer>\n</body>\n</html>\nindex.html继承 base.html\n{% extends 'common/base.html' %}\n{% block title %}\n我的首页\n{% endblock %}\n{% block style %}\n    {{ super() }}\n    p{color:green;}\n{% endblock %}\n{% block con %}\n<p>我是首页的内容</p>\n    我是首页的内容\n{% endblock %}\n注意：\n如果当替换某个样式的时候 所有原来的样式 都消失了  去查看是否使用了super()\n十、flask-bootstrap\n安装\npip install flask-bootstrap\nsudo pip3 install flask-bootstrap\n使用\n继承 bootstrap/base.html 基础模板 改造成适用于自己网站的base.html基础模板\n自己的base.html\n{% extends 'bootstrap/base.html' %}\n{% block navbar %}\n    <nav class=\"navbar navbar-inverse\" style=\"border-radius: 0px;\">\n        <div class=\"container-fluid\">\n            <!-- Brand and toggle get grouped for better mobile display -->\n            <div class=\"navbar-header\">\n                <button type=\"button\" class=\"navbar-toggle collapsed\" data-toggle=\"collapse\"\n                        data-target=\"#bs-example-navbar-collapse-1\" aria-expanded=\"false\">\n                    <span class=\"sr-only\">Toggle navigation</span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                </button>\n                <a class=\"navbar-brand\" href=\"#\"><span class=\"glyphicon glyphicon-signal\" aria-hidden=\"true\"></span></a>\n            </div>\n\n            <!-- Collect the nav links, forms, and other content for toggling -->\n            <div class=\"collapse navbar-collapse\" id=\"bs-example-navbar-collapse-1\">\n                <ul class=\"nav navbar-nav\">\n                    <li class=\"active\"><a href=\"#\">首页 <span class=\"sr-only\">(current)</span></a></li>\n                    <li><a href=\"#\">发帖子</a></li>\n\n                </ul>\n\n                <ul class=\"nav navbar-nav navbar-right\">\n                    <form class=\"navbar-form navbar-left\">\n                    <div class=\"form-group\">\n                        <input type=\"text\" class=\"form-control\" placeholder=\"Search\">\n                    </div>\n                    <button type=\"submit\" class=\"btn btn-default\">Submit</button>\n                </form>\n                    <li><a href=\"#\">注册</a></li>\n                    <li><a href=\"#\">登录</a></li>\n                    <li class=\"dropdown\">\n                        <a href=\"#\" class=\"dropdown-toggle\" data-toggle=\"dropdown\" role=\"button\" aria-haspopup=\"true\"\n                           aria-expanded=\"false\">个人中心 <span class=\"caret\"></span></a>\n                        <ul class=\"dropdown-menu\">\n                            <li><a href=\"#\">个人信息</a></li>\n                            <li><a href=\"#\">修改头像</a></li>\n                            <li><a href=\"#\">修改密码</a></li>\n                            <li role=\"separator\" class=\"divider\"></li>\n                            <li><a href=\"#\">Separated link</a></li>\n                            <li role=\"separator\" class=\"divider\"></li>\n                            <li><a href=\"#\">退出登录</a></li>\n                        </ul>\n                    </li>\n                </ul>\n            </div><!-- /.navbar-collapse -->\n        </div><!-- /.container-fluid -->\n    </nav>\n{% endblock %}\n{% block content %}\n    <div class=\"container\">\n        {% block pagecontent %}\n            网页的中间内容部分写在当前的位置\n        {% endblock %}\n    </div>\n{% endblock %}\n使用  index.html\n{% extends 'common/base.html' %}\n{% block title %}\n首页\n{% endblock %}\n十一、错误页面的定制\nmanage.py\n@app.errorhandler(404)\ndef page_not_found(e):\n    return render_template('common/error.html',error=e,code=404)\n\n@app.errorhandler(500)\ndef server_error(e):\n    return render_template('common/error.html',error=e,code=500)\nerror.html\n{% extends 'common/base.html' %}\n{% block title %}\n    {{ code }}错误\n{% endblock %}\n{% block pagecontent %}\n    <div class=\"alert alert-danger\" role=\"alert\">{{ error }}</div>\n{% endblock %}\n十二、视图传递多个参数\n(1) 原始传参\n@app.route('/')\ndef index():\n    return render_template('index.html',arg1=1,arg2=2...)\n(2) 使用字典\n@app.route('/')\ndef index():\n    return render_template('index.html',arg={arg1:1,arg2:2...})\n    kwarg={arg1:1,arg2:2...}\n    return render_template('index.html',``)\n(3) 使用全局变量g\n@app.route('/')\ndef index():\n    g.name = '张三'\n    g.age = 18\n    return render_template('index.html')\n模板中\n    <ol>\n        <li>{{ g.name }}</li>\n        <li>{{ g.age }}</li>\n    </ol>\n(4) 使用 **locals()\n@app.route('/')\ndef index():\n    name = '张三'\n    age = 18\n    print(locals())\n    return render_template('index.html',**locals())\n模板中\n<li>{{ name }}</li>\n<li>{{ age }}</li>\n十三、url_for 构造绝对的链接地址\n@app.route('/test/')\ndef test():\n    print(url_for('index',_external=True))\n    return 'test'\n十四、加载静态资源\n静态资源：图片，css，js，视频，音频，，\n实例\n<img src=\"{{ url_for('static',filename='img/17.jpg') }}\" alt=\"\">\nflask入门3-表单\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "0"}