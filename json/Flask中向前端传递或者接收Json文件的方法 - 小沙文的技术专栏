{"title": "Flask中向前端传递或者接收Json文件的方法 - 小沙文的技术专栏 ", "index": "python,flask", "content": "最近在学习Python的flask微框架，用到最多的就是和前端针对REST API进行交互，那么自然而然传递Json就成为了家常便饭，特意总结了一下和前端交互几种方法。\n1. 利用flask的request.form.get()方法\n这一中方法主要利用flask的request.form.get方法，获得前端发送给后台的json文件\nPython 端代码：\n@app.route('/sendjson', methods=['POST'])\ndef sendjson():\n\n# 接受前端发来的数据\ndata = json.loads(request.form.get('data'))\n\n# lesson: \"Operation System\"\n# score: 100\nlesson = data[\"lesson\"]\nscore = data[\"score\"]\n\n# 自己在本地组装成Json格式,用到了flask的jsonify方法\ninfo = dict()\ninfo['name'] = \"pengshuang\"\ninfo['lesson'] = lesson\ninfo['score'] = score\nreturn jsonify(info)\n    \n    \nJS代码：\n<script>\n    $(document).ready(function () {\n    var data = {\n         data: JSON.stringify({\"lesson\": \"Operation System\", \"score\": 100})\n   }\n      $.ajax({\n        url:\"/sendjson\",\n        type: 'POST',\n        data: data,\n        success: function (msg) {\n            alert(msg.name)\n        }\n    })\n  });\n</script>\n    \n2. 利用flask的request.get_data()方法\nPython端代码：\n@app.route('/sendjson2',methods=['POST'])\ndef sendjson2():\n\n# 接收前端发来的数据,转化为Json格式,我个人理解就是Python里面的字典格式\ndata = json.loads(request.get_data())\n\n# 然后在本地对数据进行处理,再返回给前端\nname = data[\"name\"]\nage = data[\"age\"]\nlocation = data[\"location\"]\ndata[\"time\"] = \"2016\"\n\n# Output: {u'age': 23, u'name': u'Peng Shuang', u'location': u'China'}\n# print data\nreturn jsonify(data)\n\n\n相比第一种方法JS的代码，这一种更常见也更容易理解一些，在前端组织好Json，再传递给后台\nJS代码：\n <script>\n    $(document).ready(function () {\n        var student = new Object();\n        student.name = \"Peng Shuang\";\n        student.age = 23;\n        student.location = \"China\";\n        var data = JSON.stringify(student)\n\n    $.ajax({\n        url: \"/sendjson2\",\n        type: \"POST\",\n        data: data,\n        success: function (msg) {\n            alert(msg.time)\n        }\n    })\n    })\n</script>\n\n                ", "mainLikeNum": ["4 "], "mainBookmarkNum": "12"}