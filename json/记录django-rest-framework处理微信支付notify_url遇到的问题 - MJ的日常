{"title": "记录django-rest-framework处理微信支付notify_url遇到的问题 - MJ的日常 ", "index": "微信支付,django-rest-framework,django,python", "content": "最近在做一个小程序，小程序有涉及到微信支付，说来惭愧，还是第一次自己动手去做微信支付这一块的实现，所以过程中遇到了很多人都会踩的坑（例如mmp的微信支付各种key各种id要在哪里找，很难找），这次使用django来开发，接口部分用django-rest-framework（下面简称drf）。\n入入入入入正题吧。\n微信支付统一下单接口，有一个叫notify_url的参数，作用我就照搬官方文档：\n异步接收微信支付结果通知的回调地址，通知url必须为外网可访问的url，不能携带参数。\n吐槽：官方文档竟然不告诉我到时候是通过Get还是Post（难道是其他HTTP method）请求我，我怕我到时候措不及防，事实证明，是通过Post来请求的。\n好了，我前面的支付功能都写好了，就等微信爸爸来调我的notify_url了，测试支付完之后，屁颠屁颠跑去IDE的控制台看debug输出，结果有Traceback，找找里面的关键信息：Unsupported media type \"text/xml\" in request.，哭唧唧。\n唔，聪明如我，drf可以自定义parser类，官方文档也有提到一个xml的parser，安装了，然后为这个接口指定了parser_classes，代码如下：\n# ...省略\nclass WechatNotifyView(APIView):\n    \"\"\"\n    微信回调接口\n    \"\"\"\n    authentication_classes = []\n    permission_classes = (AllowAny,)\n    parser_classes = (XMLParser,)\n\n    def post(self, request):\n        print(request.data)\n        return Response()\n满心欢喜重新测试一次，结果还是不对，追查了下，发现了关键所在，微信调用notify_url的时候，Content-Type是text/xml而不是application/xml，真是mmp，看了下XMLParser的源码，改起来很简单：\n# ...省略\nclass WechatPaymentXMLParser(XMLParser):\n    media_type = 'text/xml'\n\nclass WechatNotifyView(APIView):\n    # ...省略\n    parser_classes = (WechatPaymentXMLParser,)\n    # ...省略    \n    \n再测试了一次，搞定，request.data打印出来的就是那个xml内容的字典形式。吐槽：微信的东西总是有吐不完的槽，但爸爸始终是爸爸。\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "0"}