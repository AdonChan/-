{"title": "Python入门学习(三) - 个人文章 ", "index": "python", "content": "在掌握了怎么用Python定义变量和Python常用的数据类型后, 我们就可以继续探索Python世界了.\n运算符\n算术运算符\n\n\n运算符\n描述\n实例\n\n\n\n+\n加\n1 + 2 => 3\n\n\n-\n减\n3 - 2 => 1\n\n\n*\n乘\n2 * 3 => 6\n\n\n/\n除\n6 / 2 => 3\n\n\n//\n整除\n7 // 2 => 3\n\n\n%\n模除\n7 % 2 = 1\n\n\n**\n幂\n2 ** 3 = 8\n\n\n\n关系运算符\n\n\n运算符\n描述\n实例\n\n\n\n==\n等于\n1 == 2 => False\n\n\n!=\n不等\n3 != 2 => True\n\n\n<>\n不等\n2 <> 3 => True\n\n\n>\n大于\n6 > 2 => True\n\n\n<\n小于\n7 < 2 => False\n\n\n>=\n大于等于\n7 >= 2 = True\n\n\n<=\n小于等于\n2 <= 3 = True\n\n\n\n赋值运算符\n\n\n运算符\n描述\n实例\n\n\n\n=\n赋值\nx = 1\n\n\n+=\n加赋值\nx += 1\n\n\n-=\n减赋值\nx -= 1\n\n\n*=\n乘赋值\nx *= 2\n\n\n/=\n除赋值\nx /= 2\n\n\n//=\n整除赋值\nx //= 2\n\n\n%=\n模除赋值\nx %= 2\n\n\n**=\n幂赋值\nx **= 3\n\n\n\n位运算符\n\n\n运算符\n描述\n实例\n\n\n\n&\n与运算\n5 & 2\n\n\n|\n或运算\n5 | 2\n\n\n~\n取反运算\n~7\n\n\n^\n异或运算\n7 ^ 3\n\n\n<<\n左移运算\n1 << 2\n\n\n>>\n右移运算\n7 >> 1\n\n\n\nprint( 5 & 2 ) # 00000101 and 00000010 => 00000000 => 0\nprint( 5 | 2 ) # 00000101 or 00000010 => 00000111 => 7 \nprint( 7 ^ 3)  # 00000111 xor 00000011 => 00000100 => 4\nprint(1 << 2) # 00000001 << 2 => 00000100 => 4 \nprint(7 >> 1) # 00000111 >> 1 => 00000011 => 3\nprint(~7) # -x - 1 => -8\n\n涉及到的一些概念1. 源码: 是指由 0 和 1 组成的二进制数.(先低后高存储)2. 无符号位数:  是指将源码的所有有效位数, 都用来表示数值(比如 \"0000 0001\" 这是一个8位的二进制数, 可以表示数的范围就是[0, 255])3. 有符号位数: 是指用源码的第一位表示符号位(1 表示负数, 0 表示正数), 其余的位数来表示数值(比如\"0000 0001\" 这是一个8位的二进制数, 可以表示数的范围就是[-128, 127])4. 原码:  是指用有符号位数表示的二进制数5. 反码:  正数的反码是它本身, 负数的反码是除符号位外的其他位取反得到的(比如 -7的原码是 10000111, 反码就是 11111000) 6. 补码: 正数的补码是它本身, 负数的补码是在反码的基础上加 1(比如 -7 的反码是 11111000, 那补码就是 11111001)\n~取反运算符, 是将数值的补码进行取反 ~7 => ~(0000 0111) => 1111 1000 => 1000 0111(反码) => 1000 1000(补码) => -8同理 ~(-8) ∵ -8 => 1000 1000(原码) => 1111 0111(反码) ==> 1111 1000(补码)∴ ~(-8) => ~(1111 1000) => 0000 0111 => 7\n逻辑运算符\n\n\n运算符\n描述\n实例\n\n\n\nnot\n非\nnot True\n\n\nand\n与\nTrue and False\n\n\nor\n或\nTrue or False\n\n\n\n成员运算符\n\n\n运算符\n描述\n实例\n\n\n\nin\n存在\n1 in range(10)\n\n\nnot in\n不存在\n1 not in range(2, 10)\n\n\n\n身份运算符\n\n\n运算符\n描述\n实例\n\n\n\nis\n是否相同引用\nx is y\n\n\nis not\n是否不同引用\nx is not y\n\n\n\n运算符的优先级\n\n\n运算符\n描述\n\n\n\n**\n指数 (最高优先级)\n\n\n~\n按位翻转\n\n\n* / % //\n乘, 除, 模除和整除\n\n\n+ -\n加法, 减法\n\n\n>> <<\n右移，左移运算符\n\n\n&\n与运算\n\n\n^ |\n或运算符和异或运算符\n\n\n<= < > >=\n比较运算符\n\n\n<> == !=\n关系运算符\n\n\n= %= /= //= -= += = *=\n赋值运算符\n\n\nis is not\n身份运算符\n\n\nin not in\n成员运算符\n\n\nnot or and\n逻辑运算符\n\n\n\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "1"}