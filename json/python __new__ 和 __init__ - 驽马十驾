{"title": "python __new__ 和 __init__ - 驽马十驾 ", "index": "python", "content": "概述\nnew 和 init 是类实例化的过程中被调用的方法， new 负责对象的创建，相当于构造器或者构造函数； init 负责对象初始化。 使用频率上， init 较多会被使用。\nclass A(object):\n\n    def __new__(cls):\n        return object.__new__(cls)\n\n    def __init__(self):\n        self.instance_method()\n\n    def instance_method(self):\n        print 'success!'\n\nnewA = A()\n\n区别\n参数\nnew 的第一个参数是 cls，表示类本身。\n而 init 类似一般的实例方法， 第一个参数是 self，表示实例。我们可以看到 init 方法运行之前， 实例已经可以被使用了（self参数）。实例上的其他的方法也是可以使用的了。\n调用时机\n当我们创建类的对象时， new 先被调用，返回一个对象，对象引用作为参数传递给 init__， 然后对象属性被初始化。__init 方法不能返回任何数据。\n__new__ --->(创建对象) --> __init__(self)\n使用\n只有很少的时候需要自己编写 new 方法，比如单例模式。大多数情况下，只需要关心实例的初始化，初始化过程中属性的分配，以及是否调用其他的实例方法。\n以上代码和经验仅在 Python(2.7) 得到验证。\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "0"}