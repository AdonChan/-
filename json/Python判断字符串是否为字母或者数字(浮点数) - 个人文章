{"title": "Python判断字符串是否为字母或者数字(浮点数) - 个人文章 ", "index": "python3.5,python", "content": "str为字符串s为字符串\nstr.isalnum() 所有字符都是数字或者字母\nstr.isalpha() 所有字符都是字母\nstr.isdigit() 所有字符都是数字\nstr.isspace() 所有字符都是空白字符、t、n、r\n检查字符串是数字/浮点数方法\nfloat部分\n>> float('Nan')\nnan\n>> float('Nan')\nnan\n>> float('nan')\nnan\n>> float('INF')\ninf\n>> float('inf')\ninf\n>> float('-INF')\ninf\n>> float('-inf')\ninf\n\n第一种：最简单\ndef is_number(str):\n    try:\n        # 因为使用float有一个例外是'NaN'\n        if str=='NaN':\n            return False\n        float(str)\n        return True\n    except ValueError:\n        return False\n    \nfloat例外示例\n >>> float('NaN')\n nan\n\n使用complex()\ndef is_number(s):\n    try:\n        complex(s) # for int, long, float and complex\n    except ValueError:\n        return False\n\n    return True\n\n综合1\ndef is_number(s):\n    try:\n        float(s) # for int, long and float\n    except ValueError:\n        try:\n            complex(s) # for complex\n        except ValueError:\n            return False\n\n    return True\n\n综合2-还是无法完全识别\ndef is_number(n):\n    is_number = True\n    try:\n        num = float(n)\n        # 检查 \"nan\" \n        is_number = num == num   # 或者使用 `math.isnan(num)`\n    except ValueError:\n        is_number = False\n    return is_number\n    \n>>> is_number('Nan')   \nFalse\n\n>>> is_number('nan')  \nFalse\n\n>>> is_number('123')  \nTrue\n\n>>> is_number('-123') \nTrue\n\n>>> is_number('-1.12')\nTrue\n\n>>> is_number('abc')  \nFalse\n\n>>> is_number('inf')  \nTrue\n\n第二种：只能判断是整数\n使用isnumeric()\n# str必须是uniconde模式\n>>> str = u\"345\"\n>>> str.isnumeric()True\nhttp://www.tutorialspoint.com/python/string_isnumeric.htm\n\nhttp://docs.python.org/2/howt...\n使用isdigit()\nhttps://docs.python.org/2/lib...\n>>> str = \"11\"\n>>> print str.isdigit()\nTrue\n\n>>> str = \"3.14\"\n>>> print str.isdigit()\nFalse\n\n>>> str = \"aaa\"\n>>> print str.isdigit()\nFalse\n\n使用int()\ndef is_int(str):\n    try:\n        int(str)\n        return True\n    except ValueError:\n        return False\n\n第三种：使用正则(最安全方法)\nimport re\ndef is_number(num):\n    pattern = re.compile(r'^[-+]?[-0-9]\\d*\\.\\d*|[-+]?\\.?[0-9]\\d*$')\n    result = pattern.match(num)\n    if result:\n        return True\n    else:\n        return False\n        \n        \n>>>: is_number('1')\nTrue\n\n>>>: is_number('111')\nTrue\n\n>>>: is_number('11.1')\nTrue\n\n>>>: is_number('-11.1')\nTrue\n\n>>>: is_number('inf')\nFalse\n\n>>>: is_number('-inf')\nFalse\n\n原文网址：Python判断字符串是否为字母或者数字(浮点数)\n\n                ", "mainLikeNum": ["1 "], "mainBookmarkNum": "1"}