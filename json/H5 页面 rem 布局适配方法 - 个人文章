{"title": "H5 页面 rem 布局适配方法 - 个人文章 ", "index": "python,html5,html,css,javascript", "content": " rem 布局适配方案\n\n主要方法为：\n\n按照设计稿与设备宽度的比例，动态计算并设置 html 根标签的 font-size 大小；\ncss 中，设计稿元素的宽、高、相对位置等取值，按照同等比例换算为 rem 为单位的值；\n设计稿中的字体使用 px 为单位，通过媒体查询稍作调整。\n\n\n1 动态设置 html 标签 font-size 大小\n精简通用版本：\n\n!(function(win, doc){\n  function setFontSize() {\n    // 获取window 宽度\n    // zepto实现 $(window).width()就是这么干的\n    var winWidth =  window.innerWidth;\n    // doc.documentElement.style.fontSize = (winWidth / 640) * 100 + 'px' ;\n    \n    // 640宽度以上进行限制 需要css进行配合\n    var size = (winWidth / 640) * 100;\n    doc.documentElement.style.fontSize = (size < 100 ? size : 100) + 'px' ;\n  }\n\n  var evt = 'onorientationchange' in win ? 'orientationchange' : 'resize';\n\n  var timer = null;\n\n  win.addEventListener(evt, function () {\n    clearTimeout(timer);\n\n    timer = setTimeout(setFontSize, 300);\n  }, false);\n\n  win.addEventListener(\"pageshow\", function(e) {\n    if (e.persisted) {\n      clearTimeout(timer);\n\n      timer = setTimeout(setFontSize, 300);\n    }\n  }, false);\n  // 初始化\n  setFontSize();\n\n}(window, document));\n\n高配精确版本：\n(function(WIN) {\n    var  setFontSize = WIN.setFontSize = function (_width) {\n        var  docEl = document.documentElement; \n        // 获取当前窗口的宽度\n        var  width = _width || docEl.clientWidth; // docEl.getBoundingClientRect().width;\n\n        // 大于 1080px 按 1080\n        if (width > 1080) { \n            width = 1080;\n        }\n\n        var  rem = width / 10;\n        console.log(rem);\n\n        docEl.style.fontSize = rem + 'px';\n\n        // 误差、兼容性处理\n        var  actualSize = win.getComputedStyle && parseFloat(win.getComputedStyle(docEl)[\"font-size\"]);\n        if (actualSize !== rem && actualSize > 0 && Math.abs(actualSize - rem) > 1) {\n            var remScaled = rem * rem / actualSize;\n            docEl.style.fontSize = remScaled + 'px';\n        }\n    }\n\n    var timer;\n\n    function dbcRefresh() {\n        clearTimeout(timer);\n        timer = setTimeout(setFontSize, 100);\n    }\n\n    //窗口更新动态改变 font-size\n    WIN.addEventListener('resize', dbcRefresh, false);\n    //页面显示时计算一次\n    WIN.addEventListener('pageshow', function(e) {\n        if (e.persisted) { \n            dbcRefresh() \n        }\n    }, false);\n    setFontSize();\n})(window)\n\n\n//对H5活动推过页面，宽高比例有所要求，可适当调整\n\nfunction adjustWarp(warpId = '#warp') {\n\n    const $win = $(window);\n    const height = $win.height();\n    let width = $win.width();\n\n    // 考虑导航栏情况\n    if (width / height < 360 / 600) {\n        return;\n    }\n\n    width = Math.ceil(height * 360 / 640);\n\n    $(warpId).css({\n        height,\n        width,\n        postion: 'relative',\n        top: 0,\n        left: 'auto',\n        margin: '0 auto'\n    });\n\n    // 重新计算 rem\n    window.setFontSize(width);\n}\n2 通过 CSS3媒体查询设置 rem\n简单易用 缺乏灵活度 请看demo 你懂的\n@media screen and ( min-width: 320px){html{font-size:50px}}\n@media screen and ( min-width: 360px){html{font-size:56.25px}}\n@media screen and ( min-width: 375px){html{font-size:58.59375px}}\n@media screen and ( min-width: 384px){html{font-size:60px}}\n@media screen and ( min-width: 400px){html{font-size:62.5px}}\n@media screen and ( min-width: 414px){html{font-size:64.6875px}}\n@media screen and ( min-width: 424px){html{font-size:66.25px}}\n@media screen and ( min-width: 480px){html{font-size:75px}}\n@media screen and ( min-width: 540px){html{font-size:84.375px}}\n@media screen and ( min-width: 640px){html{font-size:100px}}\n\n根据个人项目需求和产品设计可适当修改，以上demo写法并不唯一固定。\n\n                ", "mainLikeNum": ["1 "], "mainBookmarkNum": "3"}