{"title": "一键下载你的youtube视频 - 个人文章 ", "index": "python,youtube", "content": "很多人喜欢逛油管看视频，自然就会有一些喜欢的收藏集或者视频作者，有时候想要下载下来保存在本地播放，这样的话就不用每次FQ，毕竟有些代理的速度并不是很理想(如果你的代理速度炒鸡快的话，请忽略这篇文章)。\n当你想下载油管视频，又觉得一些下载网站或者工具无法满足你的要求的时候，比如我想定制下载的清晰度，我想只下载视频或者只下载音频，又或者想下载字幕等等。这时候下载工具就无法满足你了，今天这里就安利一个强大的工具youtube-dl.看github上3W多个star，就知道这工具很厉害了。下面简单说下如何使用\n安装youtube-dl:\nyoutube-dl is a command-line program to download videos from YouTube.com and other video\n这里推荐使用pip安装（需要python环境）：\n$ pip install youtube-dl\n检查安装是否成功：\n$ youtube-dl\nUsage: youtube-dl [OPTIONS] URL [URL...]\n\nyoutube-dl: error: You must provide at least one URL.Type youtube-dl --help to see a list of all options.\n安装ffmpeg\nffmpeg是一个用来合成转换音频视频的工具：\nA complete, cross-platform solution to record, convert and stream audio and video.\nyoutube-dl下载完音频视频后会调用这个工具进行合成，所以也需要安装一下ffmpeg：\n1.windows安装：直接在官网下载zip包，解压后，将path/to/ffmpeg/bin目录加入环境变量即可.这里不多说了\n2.ubuntu安装：ffmpeg在ubuntu14.04中已经被libav取代。但这个决定已经被逆转了，在ubuntu15.04中又可用了。所以如果你使用的是ubuntu15.04以上的版本，可以使用sudo apt-get install ffmpeg命令进行安装，如果你是ubuntu14.04及以下的版本，需要从mc3man ppa源安装：\n添加源\n$ sudo add-apt-repository ppa:mc3man/trusty-media\n出现以下提示，请按<Enter>确认\n*Please note that if using this ppa I would *not* try upgrading to 14.10/15.04, ect. Do a fresh install instead. The intent here is just for users wishing to stay on 14.04*\nIf upgrading anyway use ppa-purge first -\nsudo ppa-purge  ppa:mc3man/trusty-media\n\nAlso note that with apt-get a sudo apt-get dist-upgrade is needed for initial setup & with some package upgrades\n More info: https://launchpad.net/~mc3man/+archive/ubuntu/trusty-media\nPress [ENTER] to continue or ctrl-c to cancel adding it\n更新package list：\n$ sudo apt-get update\n$ sudo apt-get dist-upgrade\n安装ffmpeg：\n$ sudo apt-get install ffmpeg\n检查是否安装成功:\n$ ffmpeg\nffmpeg version N-89777-g6e80079a28 Copyright (c) 2000-2018 the FFmpeg developers\n  built with gcc 7.2.0 (GCC)\n  configuration: --enable-gpl --enable-version3 --enable-sdl2 --enable-bzlib --enable-fontconfig --enable-gnutls --enable-iconv --enable-libass --enable-libbluray --enable-libfreetype --enable-libmp3lame --enable-libopencore-amrnb --enable-libopencore-amrwb --enable-libopenjpeg --enable-libopus --enable-libshine --enable-libsnappy --enable-libsoxr --enable-libtheora --enable-libtwolame --enable-libvpx --enable-libwavpack --enable-libwebp --enable-libx264 --enable-libx265 --enable-libxml2 --enable-libzimg --enable-lzma --enable-zlib --enable-gmp --enable-libvidstab --enable-libvorbis --enable-libvo-amrwbenc --enable-libmysofa --enable-libspeex --enable-amf --enable-cuda --enable-cuvid --enable-d3d11va --enable-nvenc --enable-dxva2 --enable-avisynth --enable-libmfx\n  libavutil      56.  7.100 / 56.  7.100\n  libavcodec     58.  9.100 / 58.  9.100\n  libavformat    58.  3.100 / 58.  3.100\n  libavdevice    58.  0.100 / 58.  0.100\n  libavfilter     7. 11.101 /  7. 11.101\n  libswscale      5.  0.101 /  5.  0.101\n  libswresample   3.  0.101 /  3.  0.101\n  libpostproc    55.  0.100 / 55.  0.100\nHyper fast Audio and Video encoder\nusage: ffmpeg [options] [[infile options] -i infile]... {[outfile options] outfile}...\n使用youtube-dl\n命令使用也很简单:\n$ youtube-dl [OPTIONS] URL [URL...]\n其强大之处就在于命令选项非常丰富，支持各种功能，下面简单介绍一些：\n1.查看视频所有类型：\n$ youtube-dl -F <url>\n## 或者:\n$ youtube-dl --list-formats <url>\n该命令会列出该视频所存在的所有格式，并不会进行下载\n$ youtube-dl -F https://www.youtube.com/watch?v=dfnCAmr569k\n[youtube] sRVRN2DlDp4: Downloading webpage\n[youtube] sRVRN2DlDp4: Downloading video info webpage\n[youtube] sRVRN2DlDp4: Extracting video information\n[info] Available formats for sRVRN2DlDp4:\nformat code  extension  resolution note\n249          webm       audio only DASH audio   55k , opus @ 50k, 1.83MiB\n250          webm       audio only DASH audio   71k , opus @ 70k, 2.37MiB\n140          m4a        audio only DASH audio  128k , m4a_dash container, mp4a.40.2@128k, 4.72MiB\n171          webm       audio only DASH audio  131k , vorbis@128k, 4.01MiB\n251          webm       audio only DASH audio  137k , opus @160k, 4.58MiB\n278          webm       256x144    144p   99k , webm container, vp9, 24fps, video only, 3.32MiB\n160          mp4        256x144    144p  113k , avc1.4d400c, 24fps, video only, 2.71MiB\n242          webm       426x240    240p  228k , vp9, 24fps, video only, 6.75MiB\n133          mp4        426x240    240p  248k , avc1.4d4015, 24fps, video only, 5.10MiB\n243          webm       640x360    360p  415k , vp9, 24fps, video only, 12.19MiB\n134          mp4        640x360    360p  637k , avc1.4d401e, 24fps, video only, 12.23MiB\n244          webm       854x480    480p  769k , vp9, 24fps, video only, 20.70MiB\n135          mp4        854x480    480p 1187k , avc1.4d401e, 24fps, video only, 22.97MiB\n247          webm       1280x720   720p 1539k , vp9, 24fps, video only, 40.88MiB\n136          mp4        1280x720   720p 2364k , avc1.4d401f, 24fps, video only, 42.75MiB\n248          webm       1920x1080  1080p 2703k , vp9, 24fps, video only, 74.20MiB\n137          mp4        1920x1080  1080p 4331k , avc1.640028, 24fps, video only, 78.09MiB\n271          webm       2560x1440  1440p 9057k , vp9, 24fps, video only, 197.73MiB\n264          mp4        2560x1440  1440p 10409k , avc1.640032, 24fps, video only, 203.63MiB\n313          webm       3840x2160  2160p 18092k , vp9, 24fps, video only, 577.79MiB\n17           3gp        176x144    small , mp4v.20.3, mp4a.40.2@ 24k\n36           3gp        320x180    small , mp4v.20.3, mp4a.40.2\n43           webm       640x360    medium , vp8.0, vorbis@128k\n18           mp4        640x360    medium , avc1.42001E, mp4a.40.2@ 96k\n22           mp4        1280x720   hd720 , avc1.64001F, mp4a.40.2@192k (best)\n上述示例展示了一个油管视频的每种清晰度，格式 以及format code\n2.下载指定质量的视频和音频并自动合并\n$ youtube-dl -f <format code> <url>\n其中format code 就是youtube-dl -F <url>命令列出来的第一列结果。这里其实隐含了对ffmpeg的使用，youtube-dl会去寻找ffmpeg并用其进行音视频合并操作\n3.对视频质量和音频进行定制下载：\n$ youtube-dl -f \"bestvideo[ext=mp4]+bestaudio[ext=m4a]/best[ext=mp4]/best\" <url>\n上述示例的意思是：下载最高质量的mp4格式，或者没有mp4格式的情况下 下载最高质量的其他格式，其他示例请参考format-selection-examples：\n4.下载字幕对于国内的同学来说，有可能需要字幕，那么youtube-dl也支持字幕下载。\n# 下载字幕\n$ youtube-dl --write-sub <url> \n\n# 下载该视频所有可用的字幕\n$ youtube-dl --write-sub --all-subs <url>\n\n# 下载自动生成的字幕(仅限youtube)\n$ youtube-dl --write-auto-sub <url>\n5.字幕选择和转换对于国内大多数播放器来说，youtube下载的vtt字幕并不能正确加载，而如果能转换成srt字幕就完美了，youtube-dl自然也支持这种功能啦，还可以选择对应语言的字幕进行下载呢：\n# 选择英文字幕并转换成srt格式，同时下载视频\n$ youtube-dl --sub-lang en --convert-subs srt --write-sub <url>\n6.下载视频列表如果你一个视频列表需要下载，youtube-dl也是支持的，用法没啥不同：\n$ youtube-dl <palylist_url>\nyoutube-dl 会识别你的url是单个视频还是视频列表，并进行下载。\n下载视频自定义文件名：\n# 使用 -o 参数\n$ youtube-dl -o \"%(upload_date)s-%(title)s.%(ext)s\" <url>\n上述命令指定下载的视频文件采用 上传日期 + 视频名称+视频扩展名 作为文件名。更多参数请看youtube-dl output-template\n组合上面所说的指定视频质量，下载字幕，转换字幕等命令在一起：\n$ youtube-dl -f \"bestvideo[ext=mp4]+bestaudio[ext=m4a]/best[ext=mp4]/best\" --sub-lang en --convert-subs srt -o \"%(upload_date)s-[%(title)s].%(ext)s\" --write-sub https://www.youtube.com/watch?v=dfnCAmr569k\n这样下载下来的视频，就可以直接享用了\n对了，本地下载需要你的代理开启全局模式。如果不想开启全局模式的话，需要在每一条命令后面加上代理设置：--proxy \"https://127.0.0.1:1080\"\n嵌入youtube-dl\nyoutube-dl不但是一个很好的命令行工具，而且还支持嵌入代码使用，下面看一个简单的示例：\nfrom __future__ import unicode_literals\nimport youtube_dl\n\nclass MyLogger(object):\n    def debug(self, msg):\n        print(msg)\n\n    def warning(self, msg):\n        print(msg)\n\n    def error(self, msg):\n        print(msg)\n\ndef my_hook(d):\n    if d['status'] == 'finished':\n        print('Done downloading, now converting ...')\n\nydl_opts = {\n    'format': 'bestvideo[ext=mp4]+bestaudio[ext=m4a]/best[ext=mp4]/best',\n    'outtmpl':'%(upload_date)s-[%(title)s].%(ext)s',\n    'writeautomaticsub':True,\n    'subtitleslangs':'en',\n    'logger': MyLogger(),\n    'progress_hooks': [my_hook],\n}\nwith youtube_dl.YoutubeDL(ydl_opts) as ydl:\n    ydl.download(['https://www.youtube.com/watch?v=dfnCAmr569k'])\n代码很简单，重点在于ydl_opts这个字典，里面的每一项就是命令行中youtube-dl的一个参数，是不是很方便？\n自定义转换字幕文件\n如果youtube-dl的字幕转换无法满足要求的话，你还可以自己写代码进行转换，这里再安利一个字幕转换的库pycaption。支持各种流行的视频字幕格式\ndemo：\nfrom pycaption import WebVTTReader, SRTWriter\n\ndef vtt_to_srt():\n    vtt_content = \"\"\"WEBVTT Kind: captions Language: en   00:00:03.000 --> 00:00:04.766 size:88% position:56% ♪ I WANNA BE YOUR END GAME ♪   00:00:06.000 --> 00:00:08.000 ♪ I WANNA BE YOUR FIRST STRING ♪ \"\"\"\n\n    caption_set = WebVTTReader().read(vtt_content)\n    srt_content = SRTWriter().write(caption_set)\n    print(srt_content)\n\nvtt_to_srt()\n怎么样，是不是很简单？\n好了，差不多介绍完了，关于youtube-dl的更多使用姿势，请自行解锁（逃）。\n\n参考：\n\n使用youtube-dl下载国外视频\nyoutube-dl的Github项目\npycaption\nyoutube-dl-download-video-from-youtube-with-subtitles-tutorial\nHow to install FFmpeg on Ubuntu 14.04\n\n本文同时发布在掘金\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "0"}