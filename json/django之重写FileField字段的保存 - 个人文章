{"title": "django之重写FileField字段的保存 - 个人文章 ", "index": "python,django", "content": "重写FileField字段的保存，以重命名为例\nsettings.py添加配置\nsettings.py中末尾添加配置如下，指定指向的操作文件中的类：\n# 文件上传重写\nDEFAULT_FILE_STORAGE = \"app.customfilefield.storage.FileStorage\"\n\n添加FileStorage\napp应用下添加python包customfilefield，注意有init.py文件，customfilefield下创建py文件storage.py，文件内容为：\nstorage.py\n# -*-coding:utf-8 -*-\nfrom django.core.files.storage import FileSystemStorage\nfrom django.http import HttpResponse\nfrom django.conf import settings\nimport os, time, random\nfrom app import utils\n\nclass FileStorage(FileSystemStorage):\n    def __init__(self, location=settings.MEDIA_ROOT, base_url=settings.MEDIA_URL):\n        #初始化\n        super(FileStorage, self).__init__(location, base_url)\n\n    #重写 _save方法\n    def _save(self, name, content):\n        #文件扩展名\n        ext = os.path.splitext(name)[1]\n        #文件目录\n        d = os.path.dirname(name)\n        # 定义文件名，源文件名，避开系统定义的随机字符串追加，所以避开不用name字段\n        end = utils.find_last(str(content), \".\")\n        filename = \"\"\n        if end != -1:\n            filename = str(content)[:end]\n        # 定义文件名，年月日时分秒随机数\n        fn = time.strftime(\"%Y%m%d%H%M%S\")\n        fn = fn + \"_%d\" % random.randint(0,100)\n        #重写合成文件名\n        name = os.path.join(d, filename + fn + ext)\n        #调用父类方法\n        return super(FileStorage, self)._save(name, content)\n\nutils.py\n# 获取字符串中指定字符最后一次出现的位置\ndef find_last(string,str):\n    last_position=-1\n    while True:\n        position=string.find(str,last_position+1)\n        if position==-1:\n            return last_position\n        last_position=position\n如此，最后上传的文件名为原文件名加上年月日时分秒加上0-100的随机数保存，效果如下：\n\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "1"}