{"title": "python初学——网络编程之FTP服务器支持多并发版本 - 个人文章 ", "index": "python", "content": "对MYFTP项目进行升级。扩展支持多用户并发访问与线程池。MYFTP项目请见python初学——网络编程之FTP服务器。\n扩展需求\n1.在之前开发的FTP基础上，开发支持多并发的功能2.不能使用SocketServer模块，必须自己实现多线程3.必须用到队列Queue模块，实现线程池4.允许配置最大并发数，比如允许只有10个并发用户\n需求模型\n用例名\nMYFTP\n场景\n\nwhen：任意时间\nwhere：任何地点\nwho：FTP用户\n\n用例描述\n\nftp使用用户名密码登录。密码需要加密认证、允许支持多用户登录。\n每个用户有自己的家目录，所有的访问必须限制在用户的家目录。但在家目录中创建的目录可以进行目录切换。\n用户的目录有磁盘配额。不允许超过磁盘配额。\n用户可以查看当前目录下的文件列表。\n用户可以上传和下载文件，并且保证文件的一致性。\n文件的传输过程中显示精度条。\n支持断点续传。\n支持多用户并发访问\n支持线程池\n\n用户价值\n实现一套自己的FTP服务端与客户端。\n约束\n线程池使用Queue模块实现\n建模设计\nUML图\n顺序图\n登录顺序图\n\n程序讲解\n程序主体\n请从github下载后使用MYFTPREADME\n目录结构\n在原来的lib目录中增加一个mythread.py的文件。该文件是一个使用Queue模块编写的线程池类。\n+---bin                     # 执行程序目录\n|       create_user.py      # 创建用户程序\n|       myftpc.py           # ftp_server启动程序\n|       myftps.py           # ftp_client启动程序\n|       __init__.py\n|\n+---conf\n|   |   settings.py         # 配置文件\n|   |   __init__.py\n|   |\n|   \\---__pycache__\n|\n+---core\n|   |   logger.py           # 日志生成文件\n|   |   main.py             # 主程序文件\n|   |   __init__.py \n|   |\n|   \\---__pycache__\n|\n+---db                      # 数据库目录\n|   \\---accounts            # 账号表目录\n|---id_user_rs.json         # 账号ID与用户名对应关系\n+---file_upload             # ftp文件服务器目录\n+---lib                     # 类文件\n|   |   account.py          # 账号类\n|   |   db.py               # 数据库类\n|   |   myftp_client.py     # ftp客户端类\n|   |   myftp_server.py     # ftp服务端类\n|   |   mythread.py         # 线程池类（新增加内容）\n|   |   process.py          # 进度条展示类（暂时未使用）\n|   |   __init__.py\n|   |\n|   \\---__pycache__\n\\---log\n        __init__.py\nmythread.py文件介绍\nmythread使用队列简单实现了一个线程池的功能。实现的方式比较简单，就是通过在队列中存放maxsize的线程对象。当客户端连接服务端后时从队列中拿取一个线程对象，创建自己的任务。执行完任务后再往队列中添加一个新的线程对象。\n# -*-coding: utf-8 -*-\n# Auther： Henry Yuan\nimport threading\nimport time\nimport queue\n\nclass MyThread():\n    \"\"\"\n        自定义的线程类，使用queue支持简单的线程池\n    \"\"\"\n    def __init__(self,maxsize):\n        \"\"\"\n\n        :param maxsize:  队列的数量\n        \"\"\"\n        self.maxsize=maxsize\n        self.q=queue.Queue(maxsize)  # 初始化一个队列对象\n        # 在队列中先存放maxsize个队列对象。这一步就做到了线程池的作用。\n        for i in range(maxsize):\n            self.q.put(threading.Thread)  # 在队列中先存放线程对象\n\n    def get_thread(self):\n        \"\"\"  从队列中拿取线程对象\n\n        :return:\n        \"\"\"\n        return self.q.get()\n\n    def put_thread(self):\n        \"\"\"  往队列中存放线程对象\n\n        :return:\n        \"\"\"\n        self.q.put(threading.Thread)\n环境\n本系统基于python 3.6版本开发。可运行在安装了python 3.6版本的linux或windows系统中。\n用法\n创建FTP用户\n进入bin目录:\n> cd bin\n执行create_user.py:\n> python ./create_user.py\nAccount:test2       # 用户名\nPassword:test2      # 密码\nHome directory(test2):    # 账号的根目录。默认为账号名称\nQuota(bytes):10           # 账号的quota。默认为1G\n\n===================ACCOUNT INFO===================\n             Account:      test2\n             Home Dir:     test2\n             Quota:        10\n==================================================\n启动ftp服务端\n进入bin目录:\n> cd bin\n执行create_user.py:\n> python ./myftps.py\n启动ftp客户端\n进入bin目录:\n> cd bin\n执行create_user.py:\n> python ./myftpc.py\nFTP用于登录：\nName:test2\nPassword:test2\nAccount [test2] login successful\nftp>: \n客户端命令\n\n\nls: 查看用户当前目录的文件和目录列表\n ftp>: ls\n  驱动器 D 中的卷是 新加卷\n  卷的序列号是 020D-6062\n \n  D:\\deployment\\MYFTP\\file_upload\\test2 的目录\n \n 2018/04/16  12:17    <DIR>          .\n 2018/04/16  12:17    <DIR>          ..\n                0 个文件              0 字节\n                2 个目录 45,605,543,936 可用字节\n Directory [test2] list successful.\n ftp>: \n\n\npwd: 查看当前所在目录\nftp>: pwd\nDirectory [\\] show successful.\n\n\nmdir: 创建目录\n ftp>: mdir temp_dir\n Directory [temp_dir] create successful.\n\n\ncd：切换目录\nftp>: cd temp_dir\nDirectory [temp_dir] change successful.\n\n\nput: 上传文件-支持断点续传\nftp>: get temp_file.md\nStart download -----> temp_file.md\ntrandata: %s b'test123'\n[>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]100% recvsize:7, filesize:7\nFile [temp_file.md] download successful.\n\n\nget: 下载文件-支持断点续传\nftp>: put temp_file.md\n[>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]100%\nFile [temp_file.md] upload successful.\n\n\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "0"}