{"title": "Python爬虫之自制英汉字典 - 个人文章 ", "index": "网页爬虫,python", "content": "  最近在微信公众号中看到有人用Python做了一个爬虫，可以将输入的英语单词翻译成中文，或者把中文词语翻译成英语单词。笔者看到了，觉得还蛮有意思的，因此，决定自己也写一个玩玩~~  首先我们的爬虫要能将英语单词翻译成中文，因此，我们就需要一个网站帮助我们做这件事情。于是，我们选定有道词典，网址为： http://dict.youdao.com/ 。在该网页中我们输入单词nice,就会出来这个单词的意思，如下图：\n\n  针对上述过程，对于熟悉爬虫的读者来说，是不难完成将输入的单词的中文意思从网页中提取出来的。笔者的代码如下：\nimport requests\nfrom bs4 import BeautifulSoup\n\n# get word from Command line\nword = input(\"Enter a word (enter 'q' to exit): \")\n\n# main body\nwhile word != 'q': # 'q' to exit\n    try:\n        # 利用GET获取输入单词的网页信息\n        r = requests.get(url='http://dict.youdao.com/w/%s/#keyfrom=dict2.top'%word)\n        # 利用BeautifulSoup将获取到的文本解析成HTML\n        soup = BeautifulSoup(r.text, \"lxml\")\n        # 获取字典的标签内容\n        s = soup.find(class_='trans-container')('ul')[0]('li')\n        # 输出字典的具体内容\n        for item in s:\n            if item.text:\n                print(item.text)\n        print('='*40+'\\n')\n    except Exception:\n        print(\"Sorry, there is a error!\\n\")\n    finally:\n        word = input( \"Enter a word (enter 'q' to exit): \")\n运行上述Python代码，结果如下：\n\n  上述过程无疑是简单的，下面，我们增加一些新的功能，如下：\n\n将Python代码打包成exe文件；\n在CMD中输出单词的中文意思时，输出为彩色文字。\n\n  利用ctypes模块，我们可以对Windows系统进行简单操作，而利用pyinstaller模块，我们可以将自己的Python代码打包成exe文件。  改修的Python代码如下：\nimport requests\nfrom bs4 import BeautifulSoup\nimport random\nimport ctypes\n\nSTD_INPUT_HANDLE = -10\nSTD_OUTPUT_HANDLE = -11\nSTD_ERROR_HANDLE = -12\n\nFOREGROUND_DARKBLUE = 0x01  # 暗蓝色\nFOREGROUND_DARKGREEN = 0x02  # 暗绿色\nFOREGROUND_DARKSKYBLUE = 0x03  # 暗天蓝色\nFOREGROUND_DARKRED = 0x04  # 暗红色\nFOREGROUND_DARKPINK = 0x05  # 暗粉红色\nFOREGROUND_DARKYELLOW = 0x06  # 暗黄色\nFOREGROUND_DARKWHITE = 0x07  # 暗白色\nFOREGROUND_DARKGRAY = 0x08  # 暗灰色\nFOREGROUND_BLUE = 0x09  # 蓝色\nFOREGROUND_GREEN = 0x0a  # 绿色\nFOREGROUND_SKYBLUE = 0x0b  # 天蓝色\nFOREGROUND_RED = 0x0c  # 红色\nFOREGROUND_PINK = 0x0d  # 粉红色\nFOREGROUND_YELLOW = 0x0e  # 黄色\nFOREGROUND_WHITE = 0x0f  # 白色\n\nstd_out_handle = ctypes.windll.kernel32.GetStdHandle(STD_OUTPUT_HANDLE)\n\n# 设置文字颜色\ndef set_cmd_text_color(color, handle=std_out_handle):\n    Bool = ctypes.windll.kernel32.SetConsoleTextAttribute(handle, color)\n    return Bool\n\n# 重置文字颜色为白色\ndef resetColor():\n    set_cmd_text_color(FOREGROUND_DARKWHITE)\n\n# 以指定颜色输出文字\ndef cprint(mess, color):\n    color_dict = {'暗蓝色': FOREGROUND_DARKBLUE,\n                  '暗绿色': FOREGROUND_DARKGREEN,\n                  '暗天蓝色': FOREGROUND_DARKSKYBLUE,\n                  '暗红色': FOREGROUND_DARKRED,\n                  '暗粉红色': FOREGROUND_DARKPINK,\n                  '暗黄色': FOREGROUND_DARKYELLOW,\n                  '暗白色': FOREGROUND_DARKWHITE,\n                  '暗灰色': FOREGROUND_DARKGRAY,\n                  '蓝色': FOREGROUND_BLUE,\n                  '绿色': FOREGROUND_GREEN,\n                  '天蓝色': FOREGROUND_SKYBLUE,\n                  '红色': FOREGROUND_RED,\n                  '粉红色': FOREGROUND_PINK,\n                  '黄色': FOREGROUND_YELLOW,\n                  '白色': FOREGROUND_WHITE\n                 }\n    set_cmd_text_color(color_dict[color])\n    print(mess)\n    resetColor()\n\n# 颜色列表\ncolor_list = ['暗蓝色','暗绿色','暗天蓝色','暗红色','暗粉红色','暗黄色','暗白色','暗灰色',\\\n              '蓝色','绿色','天蓝色','红色','粉红色','黄色','白色']\n\n# print information of this application\nprint('#'*60)\nprint('This app is used for translating English word to Chineses!')\nprint('#'*60+'\\n')\n\n# get word from Command line\nword = input(\"Enter a word (enter 'q' to exit): \")\n\n# main body\nwhile word != 'q': # 'q' to exit\n    try:\n        # 利用GET获取输入单词的网页信息\n        r = requests.get(url='http://dict.youdao.com/w/%s/#keyfrom=dict2.top'%word)\n        # 利用BeautifulSoup将获取到的文本解析成HTML\n        soup = BeautifulSoup(r.text, \"lxml\")\n        # 获取字典的标签内容\n        s = soup.find(class_='trans-container')('ul')[0]('li')\n        # 随机选择输出的颜色\n        random.shuffle(color_list)\n        # 输出字典的具体内容\n        for item in s:\n            if item.text:\n                cprint(item.text, color_list[0])\n        print('='*40+'\\n')\n    except Exception:\n        print(\"Sorry, there is a error!\\n\")\n    finally:\n        word = input( \"Enter a word (enter 'q' to exit): \")\n利用pyinstaller模块,将上述程序打包为exe文件。比如我们刚才的Python代码的文件名为English_2_Chinese_dict.py，位于E盘下的eng_2_chn文件夹下，我们可以在CMD中先切换到E盘下eng_2_chn文件夹，再输入以下命令：\npyinstaller -F English_2_Chinese_dict.py\n这样就会生成一些文件，如下图：\n\n我们想要的生成的exe文件位于dist文件夹下，运行该exe文件，并测试，如下：\n\n  这样我们也就实现了上述新增的功能，能够更加方便地运行我们的程序。怎么样，是不是觉得Python爬虫酷酷的？不知作为新手的你，有没有一点心动呢？赶紧学起来吧，哈哈~~  本次分享到此结束，如有任何问题，请在下面评论哦~~\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "0"}