{"title": "Python综合练习之创建员工信息表 - python研究室 ", "index": "python", "content": "这是一道综合练习题，要求如下：创建员工信息表，格式为:\n#字段1,字段2,字段3,字段4,字段5\n#1,***  ,***  ,  *******,***\n#2,***,  ***, *******,***\n#3,*** ,***   ,  *****,  ***\n要求可以根据条件语句进行查询，格式为 select  where   命令之间用空格隔开\ndef emp(): \n    lis_res = [[],[],[],[],[]] #定义最终存储数据的列表\n    with open('yuangong','r',encoding='utf-8') as f:\n        cha = input('请输入查询语句，格式为：select *** where *** > ***').strip()\n        lis = cha.split(' ')#定义存放输入语句的列表\n        n = [] #n表示符合查询变量的字符串所在列表位置\n        if lis[0] == 'select' and lis[2] == 'where':#设定关键字条件\n            lis1 = lis[1].split(',')#定义查询元素的列表\n            lis_title = f.readline().split(',') #文件中第一行为字段名\n            lis_title = [s.strip() for s in lis_title]#列表推导式，去掉每个元素两边的空格\n            for v in lis1:#循环遍历要查询的字段是否在文件中\n                if v in lis_title:\n                    n.append(lis_title.index(v))\n            if '*' in lis[1]:n=[0,1,2,3,4]#定义使用*模糊查询\n            if n == []: #如果字段不存在则退出程序\n                print('查询的字段不存在')\n                return\n            if lis[4] == '>':#检查条件语句是否是大于号\n                if lis[3] in lis_title: #字段是否包含条件语句\n                    m = lis_title.index(lis[3]) #m表示符合条件语句的字符串所在列表位置\n                else:\n                    print('字段不含有该条件')\n                    return\n                for v in f:\n                    lis_f = v.split(',')#把取出来的每条数据都转化成列表\n                    lis_f = [s.strip() for s in lis_f] #列表推导式，去掉每个元素两边的空格\n                    if lis_f[m].isdigit() and lis[5].isdigit():#检查条件是否都为数字\n                        if int(lis_f[m]) > int(lis[5]):\n                            for i in n:#如果条件成立则把结果追加到lis_res中\n                                lis_res[i].append(lis_f[i])\n                    else:print('无法进行比较')\n            elif lis[4] == '<':#检查条件语句是否是大于号\n                if lis[3] in lis_title: #字段是否包含条件语句\n                    m = lis_title.index(lis[3]) #m表示符合条件语句的字符串所在列表位置\n                else:\n                    print('字段不含有该条件')\n                    return\n                for v in f:\n                    lis_f = v.split(',')#把取出来的每条数据都转化成列表\n                    lis_f = [s.strip() for s in lis_f] #列表推导式，去掉每个元素两边的空格\n                    if lis_f[m].isdigit() and lis[5].isdigit():#检查条件是否都为数字\n                        if int(lis_f[m]) < int(lis[5]):\n                            for i in n:#如果条件成立则把结果追加到lis_res中\n                                lis_res[i].append(lis_f[i])\n                    else:print('无法进行比较')\n            elif lis[4] == '=':#检查条件语句是否是大于号\n\n                if lis[3] in lis_title: #字段是否包含条件语句\n                    m = lis_title.index(lis[3]) #m表示符合条件语句的字符串所在列表位置\n                else:\n                    print('字段不含有该条件')\n                    return\n                for v in f:\n                    lis_f = v.split(',')#把取出来的每条数据都转化成列表\n                    lis_f = [s.strip() for s in lis_f] #列表推导式，去掉每个元素两边的空格\n                    if lis_f[m] == lis[5]:\n                        for i in n:#如果条件成立则把结果追加到lis_res中\n                            lis_res[i].append(lis_f[i])\n            elif lis[4] == 'like':#定义like模糊搜索\n                if lis[3]in lis_title:\n                    m = lis_title.index(lis[3]) #m表示符合条件语句的字符串所在列表位置\n                else:\n                    print('字段不含有该条件')\n                    return\n                for v in f:\n                    lis_f = v.split(',')#把取出来的每条数据都转化成列表\n                    lis_f = [s.strip() for s in lis_f] #列表推导式，去掉每个元素两边的空格\n                    if lis[5] in lis_f[m]:\n                        for i in n:\n                            lis_res[i].append(lis_f[i])                \n            else:print('请以空格将各个名字隔开')       \n        else:print('请输入正确的指令')\n    if n!= []:#防止乱输指令后报错\n        for i in range(len(lis_res[n[0]])):#输出结果\n            for k in n:\n                print(lis_res[k][i],end='  ')\n            print('\\n',end='')\nemp()\n请输入查询语句，格式为：select *** where *** > ***select * where phone like 188\n1  tom  25  18888888888  it  \n\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "0"}