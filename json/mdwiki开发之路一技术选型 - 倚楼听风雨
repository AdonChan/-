{"title": "mdwiki开发之路一技术选型 - 倚楼听风雨 ", "index": "python,javascript,flask,markdown,wiki", "content": "mdwiki是一款markdown wiki系统，可以作为个人或小型团队的知识库管理系统。项目地址：本系列文章最后一篇给出(需要时间整理和测试)\n为什么我要开发mdwiki?\n目前本人的知识库管理系统采用的是dokuwiki，它是一款用PHP开发的非常强大的一款wiki系统。但是很遗憾不支持markdown语法写作。再加上目前开始学习Python与爬虫。所以决定用Python写一个markdown wiki系统。前期不考虑集成爬虫，后期考虑集成爬虫(这样对某些好文章的收藏就没必要复制粘贴了)。\n技术选型\nPython3 or 2.7？\n作为新手，Python3义不容辞.为什么？就为了原生支持UTF-8.(开玩笑),因为Python3代表了Python的未来，而且越来越多的库已经迁移到了Python3，没有什么理由不选择它。\nIDE选择：\npycharm+sublime text3，这个也没必要解释了。\nWeb框架选择:\nFlask(为什么？只会这个，而且大家都说好。)\n服务器选择:\nnginx+gunicorn这应该是比较流行的方案吧，也不做过多解释。\n数据库选择：SQLite+Redis\n部署方式:Supervisor管理Nginx+gunicornFabric远程发布\n浏览器兼容性：不考虑万恶的IE\n后端库选择:Flask Web框架Jinja2 flask官方指定模板引擎SQLAlchemy ORM框架Celery任务调度whoosh+jieba:信息检索oss2：阿里云oss云存储SDKredis：Redis的python连接客户端Markdown：后端markdown解析\nFlask插件如下：Flask-Babel国际化插件Flask-Script命令行插件Flask-sqlalchemy ORM插件集成Flask-migrate数据迁移插件Flask-WTF表单插件flask-login插件flask-Principal权限管理Flask-Security插件flask-mail插件Flask-cache缓存插件flask-testing测试插件Flask-Moment本地化时间日期\n前端库选择：\ngulp-前端资源管理与打包,可以参考我的一篇文章:gulp组织小型项目小记\nanimate.css特效bootstrap 都懂的jQueryjQuery插件：validate,fancyBox,jQuery-uisimplemde markdown编辑器webuploader 百度开源的文件上传组件toastr一款漂亮的通知组件taggle.js 标签输入组件highlight.js代码高亮\n下一篇主题待定.\n\n                ", "mainLikeNum": ["1 "], "mainBookmarkNum": "4"}