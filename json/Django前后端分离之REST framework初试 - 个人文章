{"title": "Django前后端分离之REST framework初试 - 个人文章 ", "index": "python,django,rest_framework", "content": "之前刚学django时硬生生使用了静态资源和接口分离的方法，实际使用中肯定会非常不方便。于是发现了用于前后端分离，编写后台API的REST framework框架。这里做初步尝试官方文档看起来非常入门本次实践主要是根据官方文档步骤进行初步实践，其中加入一些自己学习时理解的注释，不能保证翻译正确，所有的参考链接都放在文末吧。但是！学习过程中发现两处引用模块官网有误！代码中会标注出来官方文档地址先放：http://www.django-rest-framew...\n一、项目安装\n首先是安装django和djangorestframework\npip install django\npip install djangorestframework\n多数人都应该安装好了吧\n根据按官网demo安装应用\ndjango-admin.py startproject tutorial\ndjango-admin.py startapp quickstart\n然后是数据库迁移\npython manage.py migrate\n接着创建管理员页面和用户\npython manage.py createsuperuser --email admin@example.com --username admin\n二、Serializer（序列化器）配置\n定义一些配置，创建一个tutorial/quickstart/serializers.py模块，编写如下代码\nfrom django.contrib.auth.models import User, Group #引入django身份验证机制User模块和Group模块\nfrom rest_framework import serializers #引入rest framework的serializers\n\nclass UserSerializer(serializers.HyperlinkedModelSerializer): #继承超链接模型解析器\n    class Meta:\n        model = User #使用User model\n        fields = ('url', 'username', 'email', 'groups') #设置字段\n\nclass GroupSerializer(serializers.HyperlinkedModelSerializer):\n    class Meta:\n        model = Group  #使用Group model\n        fields = ('url', 'name')\n三、视图配置\n在tutorial/quickstart/views.py编写如下代码（render都可以注释掉了？？？）这里有一处官网引入模块错误\n#from django.shortcuts import render\nfrom django.contrib.auth.models import User, Group #引入model\nfrom rest_framework import viewsets #引入viewsets，类似controllers\n# from tutorial.quickstart.serializers import UserSerializer, GroupSerializer 官网模块引入写法，有误\nfrom quickstart.serializers import UserSerializer, GroupSerializer #引入刚刚定义的序列化器\n\n# Create your views here.\nclass UserViewSet(viewsets.ModelViewSet):\n    queryset = User.objects.all().order_by('-date_joined') #集合\n    serializer_class = UserSerializer  #序列化\n\nclass GroupViewSet(viewsets.ModelViewSet):\n    queryset = Group.objects.all()\n    serializer_class = GroupSerializer\n四、URL\n在tutorial/urls.py编写URL这里有一处官网引入模块错误\nfrom django.contrib import admin\nfrom django.urls import path, re_path\n#rest\nfrom django.conf.urls import url, include\nfrom rest_framework import routers\n# from tutorial.quickstart import views  官网模块引入写法，有误\nfrom quickstart import views\nrouter = routers.DefaultRouter() #路由\nrouter.register(r'users', views.UserViewSet) #路由地址与接口配置\nrouter.register(r'groups', views.GroupViewSet)\n\n#注：path是新写法，url为老写法,若要使用正则，则使用re_path\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    #rest\n    re_path(r'^', include(router.urls)), #包含进路由配置的url\n    url(r'^api-auth/', include('rest_framework.urls', namespace='rest_framework')) #浏览器测试接口配置\n]\n五、设置\ntutorial/settings.py下安装\nINSTALLED_APPS = (\n    ...\n    'rest_framework',\n)\n六、打开浏览器测试\npython manage.py runserver\n启动服务器后浏览器输入http://127.0.0.1:8000可进入接口测试页面\n记得在右上角处点击登录\n七、参考链接\ndjango用户验证机制：https://docs.djangoproject.co...什么是Serializer：http://www.django-rest-framew...什么是Serializer relations：http://www.django-rest-framew...什么是viewsets：http://www.django-rest-framew...url和re_path中r是什么：https://www.cnblogs.com/xuchu...url与path区别：https://blog.csdn.net/endless...\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "0"}