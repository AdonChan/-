{"title": "分享Python以太坊虚拟机实现Py-EVM - 个人文章 ", "index": "程序员,虚拟机,区块链,以太坊,python", "content": "Py-EVM是用Python编写的以太坊虚拟机的新实现。目前github上695个star，正在积极开发中，但正在通过以太坊/测试提供的测试套件快速推进。我们感谢有Vitalik和现有的PyEthereum代码，使得我们有的快速进步，因为许多设计决策都受到启发，甚至直接从PyEthereum代码库移植。\nPy-EVM旨在最终成为EVM的事实Python实现，为公共和私有链提供广泛的用例。开发将侧重于创建具有良好定义的API的EVM，友好且易于理解的文档，可作为功能齐全的主网节点运行。\n特别是Py-EVM目标旨在：\n\n提供是一种使用最广泛使用和理解的语言之一Python的EVM的示例实现。\n为客户提供低级API，以构建完整或轻量级节点。\n易于理解和修改。\n高度灵活地支持研究以及私有区块链等替代用例。\n\nTrinity\n虽然Py-EVM提供EVM的低级API，但它并不旨在直接实现完整节点或轻节点。\n我们提供了一个基于Py-EVM的称为Trinity的完整节点的基本实现。\n将来可能会有基于Py-EVM的替代客户端。\n第1步：Alpha发布\n该计划首先是适用于测试目的的MVP，alpha级发布。我们将寻找早期采用者，以提供有关我们的架构和API选择的反馈，以及一般反馈和错误发现。\n开发\nPy-EVM依赖于所有客户端的常见测试的子模块，因此你需要使用--recursive标记克隆repo。例如：\ngit clone --recursive git@github.com:ethereum/py-evm.git\nPy-EVM需要Python 3。通常，保证干净的Python 3环境的最佳方法是使用virtualenv，例如：\n# once:\n$ virtualenv -p python3 venv\n\n# each session:\n$ . venv/bin/activate\n然后通过以下方式安装所需的python包：\npip install -e .[dev]\n运行测试\n可以使用以下命令运行测试：\npytest\n或者你可以安装tox来运行完整的测试套件。\nReleasing\n需要Pandoc才能将markdown README转换为正确的格式，以便在pypi上正确呈现。\n对于类似Debian的系统：\napt install pandoc\n在OSX上:\nbrew install pandoc\n要发布新版本：\nbumpversion $$VERSION_PART_TO_BUMP$$\ngit push && git push --tags\nmake release\n去新建一个docker镜像：\nmake create-docker-image version=<version>\n默认情况下，这将创建一个新镜像，其中有两个标记指向它：\n\n\nethereum/trinity:<version>：（显示版本）\n\nethereum/trinity:latest：（最新的，直到用未来的“最新”覆盖）\n\n然后，推送到docker hub。\ndocker push ethereum/trinity:<version>\n# the following may be left out if we were pushing a patch for an older version\ndocker push ethereum/trinity:latest\n如何使用bumpversion\n此repo的版本格式为{major}.{minor}.{patch}表示stable，{patch}.{minor}.{patch}-{stage}.{devnum}表示unstable（stage可以是alpha或beta））。\n要在发布下一个版本，请使用bumpversion并指定要调整的部分，例如bumpversion minor或bumpversion devnum。\n如果你处于beta版，则bumpversion stage阶段将切换为稳定版。\n要在当前版本稳定时发出不稳定版本，请明确指定新版本，例如bumpversion --new-version 4.0.0-alpha.1 devnum\n学习文档：Documentation hosted by ReadTheDocs\n======================================================================\n分享一个的交互式在线编程实战教程：\npython以太坊，主要是针对python工程师使用web3.py进行区块链以太坊开发的详解。\n这里是原文\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "0"}