{"title": "Python面向对象练习-乌龟吃鱼 - 学习分享 ", "index": "python", "content": "题目要求\n首先放上题目要求：\n游戏编程：按以下要求定义一个乌龟类和鱼类并尝试编写游戏\n\n假设游戏场景为范围（x,y）为0<=x<=10,0<=y<=10\n游戏生成1只乌龟和10条鱼\n它们的移动方向均随机\n乌龟的最大移动能力为2（它可以随机选择1还是2移动），鱼儿的最大移动能力是1\n当移动到场景边缘，自动向反方向移动\n乌龟初始化体力为100（上限）\n乌龟每移动一次，体力消耗1\n当乌龟和鱼坐标重叠，乌龟吃掉鱼，乌龟体力增加20\n鱼暂不计算体力\n当乌龟体力值为0（挂掉）或者鱼儿的数量为0游戏结束\n\n场景图\n\n代码实现\nimport random\n#乌龟类\nclass Turtle:\n    def __init__(self):\n        self.power=100 #体力\n        #乌龟坐标\n        self.x=random.randint(0,10)\n        self.y=random.randint(0,10)\n    #乌龟移动的方法：移动方向均随机 第四条\n    def move(self):\n        #计算移动后的新位置（只有四种可能）\n        new_x=self.x+random.choice([1,2,-1,-2])\n        new_y=self.y+random.choice([1,2,-1,-2])\n        #判断移动后是否超出边界\n        if new_x<0:\n            self.x=0-new_x\n        elif new_x>10:\n            self.x=10-(new_x-10)\n        else:\n            #不越界则移动乌龟的位置\n            self.x=new_x                \n        if new_y<0:\n            self.y=0-new_y\n        elif new_y>10:\n            self.y=10-(new_y-10)\n        else:\n            #不越界则移动乌龟的位置\n            self.y=new_y\n        self.power-=1 #乌龟每移动一次，体力消耗1           \n    def eat(self):\n        self.power+=20 #乌龟吃掉鱼，乌龟体力增加20\n        if self.power>100:\n            self.power=100 #乌龟体力100（上限）\n\n#鱼类\nclass Fish:\n    def __init__(self):\n        #鱼坐标\n        self.x=random.randint(0,10)\n        self.y=random.randint(0,10)             \n    def move(self):\n        #计算移动后的新位置（只有四种可能）\n        new_x=self.x+random.choice([1,-1])\n        new_y=self.y+random.choice([1,-1])\n        #判断移动后是否超出边界\n        if new_x<0:\n            self.x=0-new_x\n        elif new_x>10:\n            self.x=10-(new_x-10)\n        else:\n            #不越界则移动鱼的位置\n            self.x=new_x                \n        if new_y<0:\n            self.y=0-new_y\n        elif new_y>10:\n            self.y=10-(new_y-10)\n        else:\n            #不越界则移动鱼的位置\n            self.y=new_y       \n\n#开始测试数据\ntur=Turtle() #生成1只乌龟\nfish=[] #生成10条鱼\nfor item in range(10):\n    fish.append(Fish()) #把生成的鱼放到鱼缸里\n\n#判断游戏是否结束：当乌龟体力值为0（挂掉）或者鱼儿的数量为0游戏结束  \nif tur.power<0 or len(fish)==0:\n    print(\"Game Over ~\")\n#游戏开始\n#首先乌龟迈出第一步\n# print(tur.x,tur.y) #乌龟移动前   \ntur.move()\n# print(tur.x,tur.y) #乌龟移动后\nfor item in fish:\n    item.move()\n    if item.x==tur.x and item.y==tur.y:\n        tur.eat()\n        fish.remove(item)\n        print(\"死了一只鱼\")\n        print(\"乌龟最新体力值为 %d\"%tur.power)   \n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "0"}