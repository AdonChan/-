{"title": "LeetCode-Remove Element-从排序数组中删除重复项 - 个人文章 ", "index": "python,算法,leetcode", "content": "描述：\n给定一个有序数组，你需要原地删除其中的重复内容，使每个元素只出现一次,并返回新的长度。不要另外定义一个数组，您必须通过用 O(1) 额外内存原地修改输入的数组来做到这一点。示例：\n给定数组: nums = [1,1,2],\n你的函数应该返回新长度 2, 并且原数组nums的前两个元素必须是1和2\n不需要理会新的数组长度后面的元素\n实现\n重复的需要去掉，无非就是遍历数组，发现重复，就把后面的往前移，把重复值覆盖掉。具体说，可以维护2个指针，慢指针开始指向数组第一个元素，快指针指向第二个元素，然后快指针不断判断自己当前元素和前一个元素是否相同，相同则快指针后移，不相同则将当前值赋值给慢指针的后一个元素，慢指针后移。最后慢指针指向的元素及前面所有元素都是不重复的。具体过程参考如下代码和注释：\nclass Solution(object):\n    def removeDuplicates(self, nums):\n        \"\"\"\n        :type nums: List[int]\n        :rtype: int\n        \"\"\"\n        if len(nums) <= 1:\n            return len(nums)\n\n        s = 0\n\n        for f in range(1, len(nums)):\n            if nums[s] != nums[f]:\n                s += 1\n                nums[s] = nums[f]\n        return s + 1\n\n                ", "mainLikeNum": ["1 "], "mainBookmarkNum": "0"}