{"title": "Mac 任意Python环境安装 Caffe 的终极教程 - JinkeyCode ", "index": "python,macos,caffe", "content": "原文链接 https://jinkey.ai/post/tech/m...本文作者 Jinkey（微信公众号 jinkey-love，官网 https://jinkey.ai）感谢 yubang 老司机指导填坑，大神的博客http://blog.yubangweb.com/文章允许非篡改署名转载，删除或修改本段版权信息转载的，视为侵犯知识产权，我们保留追求您法律责任的权利，特此声明！\n1 概要\n1.1 为什么要写这篇文章\n由于历史原因：我的电脑有五六个直接安装在系统的Python的环境，加上一堆 Python 虚拟环境。\n包括 Mac 系统的原因：自带的系统环境无法安装 pip 及其他第三方库，必须通过 homebrew来自行安装一个python 而这个python路径和系统的并不一样。包括 Anaconda 的原因：之前为了安装某些科学计算库方便使用了Anaconda，并且需要同时使用python2和3，所以由多了两个环境。\n在如此混乱的开发环境下，配置 Caffe 实在艰难，特此教程。\n1.2 为什么不用 docker 运行\n因为 Pycharm Community Edition 2017.1 不支持远程调试，其他开发环境不好用。你要用 docker 的话可以不忽略该教程了。\n1.3 用到的环境\n因为随着各种库更新，不一定有空更新教程导致该教程某些步骤不可用，特此说明一下写这个文章的时候各个库的版本。MacOS 10.12.6Python 2.7.13pip 9.0.1Pycharm Community Edition 2017.1Homebrew 1.3.1cmake version 3.8.2caffe 1.0\n2 环境准备\n2.1 Homebrew\n终端运行\n/usr/bin/ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n2.2 Python\nbrew install python\n下载(get-pip.py)[https://bootstrap.pypa.io/get...]，切换到 get-pip.py所在目录，终端输入命令\npython get-pip.py\n完成后安装虚拟环境（也不是必须的，后面配置路径的时候会说到，这里顺便介绍虚拟环境，避免多个项目造成开发环境很混乱）\nsudo pip install virtualenv\n2.3 CMake\nbrew install cmake\n2.4 Caffe 依赖\nbrew install -vd snappy leveldb gflags glog szip lmdb\nbrew tap homebrew/science\nbrew install hdf5 opencv\nbrew install --build-from-source --with-python -vd protobuf\nbrew install --build-from-source -vd boost boost-python\nbrew install protobuf boost\n2.5 Caffe 的 Python 依赖\n这里我使用的是 Pycharm 新建虚拟环境，新建在 /Users/Yourname/CaffeLearn（建立在哪里都可以，你自己记住就好）选择基础环境的时候记得选择通过 Homebrew 安转的那个，应该是在/usr/local/Cellar/python/2.7.13，参考下图创建好之后，在控制台（点Terminal 那个Tab）依赖 caffe 所需要的 Python库运行以下命令\npip install numpy scikit-image protobuf\n3  Caffe 配置详解\n3.1 Makefile.config\n从(https://github.com/BVLC/caffe...[https://github.com/BVLC/caffe/releases]下载最新版本的代码，解压，从终端进入项目目录cd caffe-1.0。该教程使用的是 caffe-1.0。\ncp Makefile.config.example Makefile.config\n用 Xcode 打开 Makefile.config（不要用 word 或者文本编辑打开）如果你的 Mac 的显卡是Intel 的GPU，那么是没法使用 cuda 加速的，找到并把# CPU_ONLY := 1的注释去掉，即CPU_ONLY := 1，这样让 Caffe 仅在 CPU 下运行。\n找到以下片段\n# NOTE: this is required only if you will compile the python interface.\n# We need to be able to find Python.h and numpy/arrayobject.h.\nPYTHON_INCLUDE := /usr/include/python2.7 \\\n        /usr/lib/python2.7/dist-packages/numpy/core/include\nPYTHON_INCLUDE修改成（ 步骤2.5叫你们记住的虚拟环境路径!!! 现在就有用了，一定得分别能找到Python.h 和 numpy/arrayobject.h两个文件），后面接着是python2.7还是python2.7.13还是python2.7.12取决于你们安装的版本，教程后面提到的部分也请注意这点。\nPYTHON_INCLUDE := /Users/Yourname/CaffeLearn/include/python2.7 \\\n        /Users/Yourname/CaffeLearn/lib/python2.7/site-packages/numpy/core/include\n保存，（caffe-1.0目录）终端运行\ncmake .\n3.2 CaffeConfig.cmake\ncmake完成后，用 Xcode 打开项目目录下的 CaffeConfig.cmake（不要用 word 或者文本编辑打开），把倒数第三行的set(Caffe_CPU_ONLY OFF)改成set(Caffe_CPU_ONLY ON)，保存并关闭。\n3.3 CMakeCache.txt\n用 Xcode 打开项目目录下的 CMakeCache.txt（不要用 word 或者文本编辑打开）\nCPU_ONLY:BOOL=OFF\n改为\nCPU_ONLY:BOOL=ON\n此外，找到然后修改PYTHON_EXECUTABLE:FILEPATH、PYTHON_INCLUDE_DIR:PATH、PYTHON_LIBRARY:FILEPATH，修改如下\n//Path to a program.\nPYTHON_EXECUTABLE:FILEPATH=/Users/Yourname/CaffeLearn/bin/python2.7\n\n//Path to a file.\nPYTHON_INCLUDE_DIR:PATH=Users/Yourname/CaffeLearn/include/python2.7\n\n//Path to a library.（ 通过 Homebrew 安装的 Python 环境）\nPYTHON_LIBRARY:FILEPATH=/usr/local/Cellar/python/2.7.13_1/Frameworks/Python.framework/Versions/2.7/lib/libpython2.7.dylib\n保存并关闭。\n4 Caffe 编译\n4.1 临时软连接系统和Homebrew 安装的 Python 路径\n否则在接下来 make 的过程可能会出现错误：\n'pyconfig.h' cannot be found\n在终端运行以下命令建立连接\nexport CPLUS_INCLUDE_PATH=\"$CPLUS_INCLUDE_PATH:/usr/include/python2.7/\"\n4.2 开始编译\n在终端依次执行\nmake all\nmake install\nmake runtest\n编译且测试成功。\n5 使用\n将 Caffe-1.0/python 路径下的 caffe 文件夹拷贝到虚拟环境下\n/Users/Yourname/CaffeLearn/lib/python2.7/site-packages/\n在项目中 import caffe 即可。\n6 版权声明\n原文链接 https://jinkey.ai/post/tech/m...本文作者 Jinkey（微信公众号 jinkey-love，官网 https://jinkey.ai）感谢 yubang 老司机指导填坑，大神的博客http://blog.yubangweb.com/文章允许非篡改署名转载，删除或修改本段版权信息转载的，视为侵犯知识产权，我们保留追求您法律责任的权利，特此声明！！\n\n                ", "mainLikeNum": ["1 "], "mainBookmarkNum": "5"}