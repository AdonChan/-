{"title": "【generator101】 - pypy的api - taowen ", "index": "pypy,python", "content": "从generator到greenlet到stackless再到pypy，各家的语法都不太一样。pypy底层的实现是continulet，看名字应该是continuation的意思。然后在这个基础上实现了stackless的api和greenlet的api。这种实现都是在用户代码里，而不是在解释器的内置库里实现的。\n\nfrom _continuation import continulet\n\ndef func(cont, a, b):\n    print(a)\n    cont.switch()\n    print(b)\n\ncont = continulet(func, 'hello', 'world')\ncont.switch()\nprint('switched from continulet')\ncont.switch()\n\n\n代码的输出是\n\nhello\nswitched from continulet\nworld\n\n\n从使用的感觉上非常类似于greenlet。感觉就是把greenlet隐式的当前greenlet的概念变成了显式的第一个函数参数。Java的quasar的语法风格也是类似： http://docs.paralleluniverse.co/quasar/\n所以从语法上来说就三类\n\n\ngenerator这样强制要求yield的\ngreenlet为代表的隐式yield控制权的\nstackless为代表强买强卖actor编码风格的\n\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "0"}