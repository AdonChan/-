{"title": "设计模式(python实现)：观察者模式 - 个人文章 ", "index": "python,设计模式", "content": "1.白话栗子\n市里新修了一个图书馆，现在招募一个图书管理员叫T，T知道图书馆里的图书更新和借阅等信息。现在有三个同学甲乙丙想去了解以后几个月的图书馆图书信息和借阅信息，于是它们去T那里注册登记。当图书馆图书更新后，T就给注册了的同学发送图书更新信息。三个月后，丙不需要知道图书更新信息了，于是就去T那儿注销了它的信息。所以，以后，只有甲乙会收到消息。几个月后，丁也去图书馆注册了信息，所以以后甲乙丁会收到图书更新信息。\n2.原理\n当我们遇到一个多对一的依赖关系时，就可以用观察者模式。观察者模式有一个被观察者(subject)和多个观察者(observer)。被观察者提供注册、删除、通知的功能，观察者提供数据更新和展示等功能。上面栗子中，T就是一个被观察者，T提供了注册身份信息的功能、删除信息的功能和给甲乙丙丁发送通知的功能，而甲乙丙丁就是观察者，更新它们从T那个获取的信息。\n3.好处\n独立封装，互不影响：观察者和被观察者都是独自封装好的，观察者之间并不会相互影响热插拔：在软件运行中，可以动态添加和删除观察者\n4.Show in Code\nclass Subject(object):\n    def __init__(self):\n        self._observers = [] #观察者列表\n\n    #注册功能\n    def attach(self, observer):\n        if observer not in self._observers:\n            self._observers.append(observer)\n\n    #删除功能\n    def delete(self, observer):\n        try:\n            self._observers.remove(observer)\n        except ValueError:\n            pass\n\n    #通知功能\n    def notify(self, modifier=None):\n        for observer in self._observers:\n            if modifier != observer:\n                observer.update(self)\n\n#被观察者数据来源\nclass Data(Subject):\n    def __init__(self, name=''):\n        Subject.__init__(self)\n        self.name = name\n        self._data = 0\n    @property\n    def data(self):\n        return self._data\n\n    @data.setter\n    def data(self, value):\n        self._data = value\n        self.notify()\n\n#观察者\nclass Viewer:\n    def __init__(self, name=''):\n        self._name = name\n    def update(self, subject):\n        print('my name is ', self._name, 'and', subject.name, '***', subject.data)\n\nif __name__ == '__main__':\n    data1 = Data('管理员T')\n    view1 = Viewer('甲')\n    data1.attach(view1)\n    view2 = Viewer('乙')\n    data1.attach(view2)\n    view3 = Viewer('丙')\n    data1.attach(view3)\n\n    print('data1初始值')\n    print(data1.data)\n    print('改变data1的值')\n    data1.data = 5\n    print('再次改变data1的值')\n    data1.data = 10\n\n    print('删除view3后')\n    data1.delete(view3)\n    data1.data = 90\n    \n    \n\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "0"}