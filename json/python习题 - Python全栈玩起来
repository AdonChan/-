{"title": "python习题 - Python全栈玩起来 ", "index": "python", "content": "装饰器的使用\n使用一个装饰器,查看任意函数(除递归函数)运行时间(20分)\nimport time\n\n\n# --exeTime\ndef exeTime(func):\n    def newFunc(*args, **kwargs):\n        t0 = time.time()\n\n        print(\"@%s, {%s} start\" % (time.strftime(\"%X\", time.localtime()), func.__name__))\n        back = func(*args, **kwargs)\n        print(\"@%s, {%s} end\" % (time.strftime(\"%X\", time.localtime()), func.__name__))\n        print(\"@%.3fs taken for {%s}\" % (time.time() - t0, func.__name__))\n        return back\n    return newFunc\n\n\n# --end of exeTime\n\n@exeTime\ndef foo():\n    for i in range(10000000):\n        pass\n\nif __name__ == \"__main__\":\n    foo()\n    \n    \n    \n按时间顺序输出歌词\nmusicLrc = \"\"\"[00:03.50]传奇[00:19.10]作词：刘兵 作曲：李健[00:20.60]演唱：王菲[00:26.60]04:40.75[00:36.25]只是因为在人群中多看了你一眼[04:49.00]02:47.44再也没能忘掉你容颜02:54.83梦想着偶然能有一天再相见03:02.32从此我开始孤单思念03:08.1503:09.35想你时你在天边         03:16.90想你时你在眼前03:24.42想你时你在脑海03:31.85想你时你在心田03:38.6704:09.96[01:36.25]宁愿相信我们前世有约04:16.37[01:42.47]今生的爱情故事 不会再改变04:24.82[01:51.18]宁愿用这一生等你发现04:31.38[01:57.43]我一直在你身旁 从未走远04:39.55[02:07.85]\"\"\"\n\n# 方法一\nimport time\ndict1 = {}\nlist_key = []\n\nmusic_list1 = musicLrc.splitlines()\nfor i in music_list1:\n    music_list2 = i.split(']')  # ['[04:40.75', '[02:39.90', '[00:36.25', '只是因为在人群中多看了你一眼']\n    for j in range(len(music_list2)-1):\n        list2 = music_list2[j][1:].split(':')   # [1:] 是为了去掉[ 获得完整时间\n        times = float(list2[0])*60 + float(list2[1])\n        dict1[times] = music_list2[-1]\n\nd = sorted(dict1.items(), key = lambda x:x[0]) # 返回一个\n# print(d)\n\nstart_time = time.clock()\n\nfor key in d:\n    tmp = round(key[0],2)\n    tmp_min = tmp//60\n    tmp_sec = (tmp//1)%60\n    tmp_ms = (tmp*100//1)%100\n    while True:\n        end_time = time.clock()\n        if round(end_time,2) == tmp:\n            print('[%02.0f:%02.0f.%02.0f%s]'%(tmp_min,tmp_sec,tmp_ms,key[1]))\n            break\n            \n            \n# 方法二\nimport time\n#通过]来得知总共需要打印多少歌词\ncounter = musicLrc.count(\"]\")\n#分行切割\nlist1 = musicLrc.splitlines()\n# num是计算打了多少行数据了\nnum = 0\n#标记位\ntime_self_flag = 0\n#开始\nstart_time = time.clock()\n\nwhile True:\n    end_time = time.clock()\n    #获取分钟\n    end_time_min = end_time//60\n    #获取秒钟\n    end_time_sec = (end_time//1)%60\n    #获取微妙\n    end_time_ms = (end_time*100//1)%100\n    #将时间按照 [时:分:秒 复制给变量time_self1\n    time_self1 = \"[%02.0f:%02.0f.%02.0f\" % (end_time_min, end_time_sec, end_time_ms)\n    #这里进行判断,是为了避免在同一时间对所有歌词判断多遍\n    if time_self1 != time_self_flag:\n        time_self_flag = time_self1\n        # print(time_self1)\n        for i in list1:\n            list2 = i.split(\"]\")\n            for j in list2:\n                #时间戳 与 歌词时间进行对比,相同则打印,不同则推出\n                if j == time_self1:\n                   print(j+\"]\"+list2[-1])\n                   num += 1\n                   break\n    #打印完所有歌词,则退出while循环\n    if num == counter:\n        break\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "1"}