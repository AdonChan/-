{"title": "自动为Flask写的API生成帮助文档 - Python测试开发 ", "index": "python,flask,api文档", "content": "Flask是Python一个非常轻量的库，可以让你毫不费力地写一个简单的网站。如果你需要写一些后台API或者准备自动化测试数据时，Flask是一个非常不错的选择。\n一个API例子\n举个例子，我们可以这样写几个API，具体实现暂时略过：\n# views/api.py\n\napi = Blueprint('api', __name__)\n\n@api.route('/get_todo', methods=['GET'])\ndef get_todo():\n    \"\"\"Get all todo tasks.\"\"\"\n    pass\n\n\n@api.route('/add_todo', methods=['POST'])\ndef add_todo():\n    \"\"\"\n    Add a todo task,  please post data in json format, e.g.\n\n    data = {\n              \"name\":\"the title\",\n              \"task\":\"the detail\"\n            }\n    \"\"\"\n    pass\n\n\n@api.route('/delete_todo', methods=['GET', 'POST'])\ndef delete_todo():\n    \"\"\"Delete a todo task.\"\"\"\n    pass\n\n一旦你的API完成，你可能需要和调用方沟通调用的细节，最好给一些例子。明明你已经在代码里给所有方法都写了注释，难道还要再把这些注释拿出来重新组织排版一下？\n我猜你和我一样，听过这么一句话。\n\nread the fucking manual!\n可是谁会去翻代码去看你的注释呢，何况你的代码他们还不一定能看到。如果能自动生成一个帮助页面那就好了。\n自动化API帮助文档\n假设我们的API都是以 http://127.0.0.1/api/* 的形式书写的，那么最好把API的完整列表就放在根目录下面，比如这样：\n\nview 方法的实现主要依靠 app.url_map 来获取Flask中所有的API：\n# views/api.py\n\ndef get_api_map():\n    \"\"\"Search API from rules, if match the pattern then we said it is API.\"\"\"\n    for rule in get_app().url_map.iter_rules():\n        if re.search(r'/api/.+', str(rule)):\n            yield str(rule), rule.endpoint\n\n\n@api.route('/', methods=['GET'])\ndef index():\n    \"\"\"List all API to this page, api_map contains each api url + endpoint.\"\"\"\n    api_map = sorted(list(get_api_map()))\n    index_url = url_for('main.index', _external=True)\n    api_map = [(index_url + x[0][1:], x[1]) for x in api_map]\n    return render_template('api_index.html', api_map=api_map)\n模板的实现：\n# templates/api_index.html\n\n{% extends \"./layout.html\" %}\n\n{% block title %}API Root{% endblock %}\n\n{% block breadcrumb_nav %}\n    <li><a href=\"{{ url_for('api.index') }}\">Api Root</a></li>\n{% endblock %}\n\n{% block page_header %}\n    <h1>Api Root</h1>\n{% endblock %}\n\n{% block content_area %}\n<pre>{\n{% for i in api_map %}    \"<a href=\"/docs/{{ i[1] }}\">{{ i[0] }}</a>\"{{ \",\\n\" if not loop.last }}{% endfor %}\n}</pre>\n{% endblock %}\n接下来我们来文档化每个具体的API方法，最终的展示结果会是这样的。\n\nview 方法的实现思路其实也很明确，我们可以通过 app.view_functions 这个字典找到每个API 的endpoint所绑定的方法，然后访问方法的名字和文档即可。\n# views/main.py\n\nmain = Blueprint('main', __name__)\n\n\n@main.route('/', methods=['GET'])\ndef index():\n    \"\"\"Redirect home page to docs page.\"\"\"\n    return redirect(url_for('api.index'))\n\n\n@main.route('/docs/<endpoint>', methods=['GET'])\ndef docs(endpoint):\n    \"\"\"Document page for an endpoint.\"\"\"\n    api = {\n        'endpoint': endpoint,\n        'methods': [],\n        'doc': '',\n        'url': '',\n        'name': ''\n    }\n\n    try:\n        func = get_app().view_functions[endpoint]\n\n        api['name'] = _get_api_name(func)\n        api['doc'] = _get_api_doc(func)\n\n        for rule in get_app().url_map.iter_rules():\n            if rule.endpoint == endpoint:\n                api['methods'] = ','.join(rule.methods)\n                api['url'] = str(rule)\n\n    except:\n        api['doc'] = 'Invalid api endpoint: \"{}\"!'.format(endpoint)\n\n    return render_template('api_docs.html', api=api)\n\n\ndef _get_api_name(func):\n    \"\"\"e.g. Convert 'do_work' to 'Do Work'\"\"\"\n    words = func.__name__.split('_')\n    words = [w.capitalize() for w in words]\n    return ' '.join(words)\n\n\ndef _get_api_doc(func):\n    if func.__doc__:\n        return func.__doc__\n    else:\n        return 'No doc found for this API!'\n模板的实现：\n{% extends \"./layout.html\" %}\n\n{% block title %}API - {{ api['name'] }}{% endblock %}\n\n{% block breadcrumb_nav %}\n    <li><a href=\"{{ url_for('api.index') }}\">Api Root</a></li>\n    <li><a href=\"{{ api['url'] }}\">{{ api['name'] }}</a></li>\n{% endblock %}\n\n{% block page_header %}\n    <h1>{{ api['name'] | upper }}</h1>\n{% endblock %}\n\n{% block content_area %}\n<pre>\n<b>Target:</b><span><a href=\"{{ api['url'] }}\">{{ api['url'] }}</a></span>\n<b>Allow :</b> <span>{{ api['methods'] }}</span>\n<b>Usage :</b> <span>{{ api['doc'] }}</span>\n</pre>\n{% endblock %}\nGitHub项目地址\n如果你想看完整的例子，可以到我的GitHub去拉一份代码。\nhttps://github.com/tobyqin/fl...\n只需要三步就可以在你的机器上运行Demo：\ncd /path/to/flask_api/doc\npip install -r requirements.txt\npython main.py\n如果你觉得Demo不错，欢迎给个Star。有建议或者想法也可以拿来讨论。\n\n关于作者：Toby Qin, Python 技术爱好者，目前从事测试开发相关工作，转载请注明原文出处。\n欢迎关注我的博客 https://betacat.online，你可以到我的公众号中去当吃瓜群众。\n\n\n\n                ", "mainLikeNum": ["1 "], "mainBookmarkNum": "4"}