{"title": " 【Leetcode】71. 简化路径 - LeetCode题解 ", "index": "leetcode,数据结构,算法,python,java", "content": "题目\n给定一个文档 (Unix-style) 的完全路径，请进行路径简化。\n例如，path = \"/home/\", => \"/home\"path = \"/a/./b/../../c/\", => \"/c\"\n边界情况:\n你是否考虑了 路径 = \"/../\" 的情况？在这种情况下，你需返回 \"/\" 。此外，路径中也可能包含多个斜杠 '/' ，如 \"/home//foo/\" 。在这种情况下，你可忽略多余的斜杠，返回 \"/home/foo\" 。\n题解\n这个题目让我想起了大学数据结构的第一个实验，写一个计算器，包括括号，小数等等情况，当时需要处理的情况比较复杂，而自己也是写得十分丑陋。\n有兴趣的同学可以看原博客：https://blog.csdn.net/hit1110...\n回到本题,要处理上面说的各种符号的情况,无非就是向stack中加pop元素还是push元素。\n\npop : 两个点的时候代表回上一级目录，那么把栈定元素出栈\n如果遇到不是点，也不是空格，不是回退到上一级目录，那么进栈\n\njava代码\nclass Solution {\n    public String simplifyPath(String path) {\n        Stack<String> stack = new Stack<>();\n        String[] p = path.split(\"/\");\n        for (int i = 0; i < p.length; i++) {\n            if (!stack.empty() && p[i].equals(\"..\"))\n                stack.pop();\n            else if (!p[i].equals(\".\") && !p[i].equals(\"\") && !p[i].equals(\"..\"))\n                stack.push(p[i]);\n        }\n        return \"/\" + String.join(\"/\", stack);\n    }\n}\npython代码\nclass Solution:\n    def simplifyPath(self, path):\n        \"\"\"\n        :type path: str\n        :rtype: str\n        \"\"\"\n        stack = []\n        p = path.split('/')\n        for i in p:\n            if len(stack) > 0 and i == '..':\n                stack.pop()\n            elif i != '.' and i != '' and i != '..':\n                stack.append(i)\n\n        return '/' + '/'.join(stack)\n因为对Python不是超级熟悉,这里踩了一个小小的坑。python中 != ==是对值的比较,类似于java中的equals (值)python中的 is, is not 是对对象本身的比较,类似于java中的A == B (指针)\n每日英文\nFear has never been a good adviser, neither in our personal lives nor in our society. Cultures and societies that are shaped by fear, will without doubt not get a grip on the future. ‧Angela Merkel 恐惧从来不是一个好的顾问，不管是在我们的个人生活中，还是在社会中。文化和社会被恐惧所塑造，在将来这无疑也不会消失。\n近期热门\n\n【Leetcode】70. 爬楼梯\n【Leetcode】69. x 的平方根\n【Spring】IOC是啥有什么好处\n【Leetcode】67. 二进制求和\n\n\n一年不是365天，而是8760个小时！————艾力\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "0"}