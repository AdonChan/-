{"title": "leetcode-27. Remove Element - 个人文章 ", "index": "python", "content": "题目阐释：\n根据告知的元素，从列表中删除，并计算剩余元素的个数\n重点：\n通过移动一个列表的元素，记录index位置，将一个列表内的所有元素分类。\n计算剩余元素的个数，也可以看成先分类，再统计。\nGiven an array nums and a value val, remove all instances of that value in-place and return the new length.Do not allocate extra space for another array, you must do this by modifying the input array in-place with O(1) extra memory.\nThe order of elements can be changed. It doesn't matter what you leave beyond the new length.\nExample 1:\n\nGiven nums = [3,2,2,3], val = 3,\n\nYour function should return length = 2, with the first two elements of nums being 2.\n\nIt doesn't matter what you leave beyond the returned length.\n\nExample 2:\nGiven nums = [0,1,2,2,3,0,4,2], val = 2,\n\nYour function should return length = 5, with the first five elements of nums containing 0, 1, 3, 0, and 4.\n\nNote that the order of those five elements can be arbitrary.\nIt doesn't matter what values are set beyond the returned length.\nclass Solution:\n    def removeElement(self, nums, val):\n        \"\"\"\n        :type nums: List[int]\n        :type val: int\n        :rtype: int\n        \"\"\"\n        start,end=0,len(nums)-1\n        while start<=end:\n            if nums[start]==val:\n                nums[start],nums[end]=nums[end],nums[start]\n                end-=1\n            else:\n                start+=1\n        return start\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "0"}