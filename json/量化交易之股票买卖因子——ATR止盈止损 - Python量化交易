{"title": "量化交易之股票买卖因子——ATR止盈止损 - Python量化交易 ", "index": "python", "content": "前言\n技术指标大体可以分为趋势型和震荡型两类，前几期介绍的N日突破和均线突破属于趋势型指标，在趋势模型中支撑交易策略的背后逻辑是假设之前价格的上涨预示着之后一段时间内也会上涨，多数趋势型指标是围绕这个逻辑展开分析的。震荡型指标侧重于波动幅度的分析，本文就介绍震荡型指标中应用非常广泛的ATR指标。\n\nATR指标介绍\nATR（Average true range）又称平均真实波动范围，简称ATR指标，是由J.Welles Wilder发明的，ATR指标主要是用来衡量市场波动的强烈度，即为了显示市场变化率的指标。较低的ATR表示市场交易气氛比较冷清（股价横盘整理，预示变盘），而较高的ATR则表示市场交易气氛比较旺盛（股价波幅加剧有主力资金进出），较高的ATR或较低的ATR可以被看作价格趋势的反转或下一个趋势的开始。\nATR指标的计算方法如下：\n\nTR=MAX[当日最高价-当日最低价、abs(当日最高价-昨日收盘价)、abs(昨日收盘价-当日最低价)]，即真实波幅为今日振幅、今日最高价与昨日收盘价波幅、今日最低与昨日收盘价波幅中的最大值。由于昨天的收盘价与今天的开盘价可能存在跳空缺口，因此最高价可能在昨日收盘价之下，同理最低价可能在昨日收盘价之上，这样真实波动值定义为三者中最大值。\nATR=MA(TR,N)，即对真实波幅TR进行N日移动平均计算，常用参数为14日或21日。\n\n\nATR指标可视化\n使用TA-Lib库中的ATR函数可直接计算出ATR14和ATR21波动幅度走势，而后进行可视化绘制。\nself.kl_pd['art14'] = talib.ATR(self.kl_pd.High.values,self.kl_pd.Low.values,self.kl_pd.Close.values,timeperiod=14)#计算ART14 \nself.kl_pd['art21'] = talib.ATR(self.kl_pd.High.values,self.kl_pd.Low.values,self.kl_pd.Close.values,timeperiod=21)#计算ART21\n\n\n\nATR止盈止损实现\n将ATR值作为止盈止损的基准值，当买入价格大于今日收盘价格lose_n倍ATR值时止损卖出，当买入价格小于今日收盘价格win_n倍ATR值时止盈卖出，此处设置ATR最大止盈系数为2，最大止损系数为0.8，即策略倾向于盈利大于亏损。在多策略突破融合基础上增加ATR止盈止损策略作为卖出因子的一部分，当到达止盈或止损价位时即触发卖出指令。\nsell_factors = [{'xd': 5,'class': FactorSellNdayBreak},\n            {'xd': 30,'class': FactorSellAverBreak},\n            {'stop_loss_n': 0.8,'stop_win_n': 2,'class': FactorSellAtrStop}]\nclass FactorSellAtrStop:\n    def __init__(self,**kwargs):\n        if 'stop_loss_n' in kwargs:\n            #设置止损ATR倍数\n            self.stop_loss_n = kwargs['stop_loss_n']\n            \n        if 'stop_win_n' in kwargs:\n            #设置止盈ATR倍数\n            self.stop_win_n = kwargs['stop_win_n']\n                    \n    def fit_sell_order(self):\n        sell_signal = True\n        return sell_signal\n\n    def fit_day(self,kl_index, stock_df, Buy_Price): \n        today = stock_df.ix[kl_index]#获取当天数据  \n        if Buy_Price == 0:#无成交价格\n            return False      \n        if (Buy_Price > today.Close) and ((Buy_Price - today.Close) > self.stop_loss_n * today.atr14):\n            #print 'stop_loss_n',kl_index,today.Close,Buy_Price\n            return self.fit_sell_order()     \n        elif (Buy_Price < today.Close) and ((today.Close - Buy_Price) > self.stop_win_n * today.atr14):            \n            #print 'stop_win_n',kl_index,today.Close,Buy_Price\n            return self.fit_sell_order()\n        else:\n            return False  \n\n注：FactorSellAtrStop的fit_day函数中传入了Buy_Price买入价，由于该参数在遍历所有卖出因子中都会传入，因此其他因子的fit_day函数的形参使用args，即实参中按照位置传值，多余值以元祖的方式传递至args*\n\n效果显示\n下图分别为增加ATR止盈止损策略前后的执行效果显示，可以看出其中有2笔交易（2017-04-12、2017-10-13）触发了止损，一笔交易（2017-08-21）触发了止盈。\n\n\n\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "0"}