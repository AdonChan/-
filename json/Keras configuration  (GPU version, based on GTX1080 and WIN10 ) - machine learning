{"title": "Keras configuration  (GPU version, based on GTX1080 and WIN10 ) - machine learning ", "index": "windows,github,python", "content": "This is my first blog about machine learning.( •̀ ω •́ )y\nTo begin with,the most important thing is to configure a group of proper tools and develope environments.Keras is a well recommended framework by google, which can either supported by tensorflow and theano. Due to the excellent optimization by nvidia, the latest version of nv gamer graphics card (gtx10x0，titan xp)can also largely extend the efficiency of network training. So if one of the card is available, a GPU version of Keras is recommended. \nMy graphics card is GTX1080, the operating system is windows10 X64. \n1. Microsoft Visual Studio 2015\nFirstly, if you want to install a GPU version of machine learning framework, a Microsoft visual studio is needed. The version of Microsoft vs(also the CUDA Toolkit mentioned below) depends on your graphics card. If your card doesn't belong to one of the latest NVidia version (gtx10x0,titan xp),then visual studio 2010~2013 is strongly recommended, because vs2015 is only compatible with cuda8.0,which is the only CUDA version supported by GTX1080. Due to my GTX1080, I've chosen vs2015 as my version, which can be de directly downloaded at the following link:\nhttp://download.microsoft.com...\nIt's a community version, totally free for individual developer.\nThe installation of vs2015 is so simple, load the iso file and click the execution file just like all other software.\n\nVS2015 will automatically configure the environment without needing more Settings.\n2. Anaconda2 4.4.0\nTo run Keras framework, a python environment is also needed. You can directly find the open source codes of python on GitHub, but I recommend Anaconda, for it has already integrated a lot of third-party libs (numpy, scipy, matplotlib, ipython, spyder.....). There are 2 version of Anaconda can be accessed, corresponding to python2+ and python3+. I took anaconda2(python2.7 version) as my choise. If you need to do text procession works, py3+ is recommended.\nDownload it from official site: https://www.continuum.io/down...\n\nIt can also be downloaded from the archive of the open source share site of Tsinghua university, choose anaconda2 4.4.0 if you choose python2.7 as environment:https://mirrors.tuna.tsinghua...\n\n\nDownloading from the latter can speed up a lot if you are in mainland CHINA.\nWhen installing anaconda, don't forget add the folder of anaconda scripts and libs to the environment variables.\n3. Gcc compiler\nSince we chose GPU version of Keras as our derivation machine, a g++ is indispensable.open command line (win+R, cmd)and tap in the code:\nconda install mingw libpython\n4. CUDA Toolkit 8.0\nIt's the core part if you want to use your powerful GPU to do the batch calculation and derivation.CUDA Toolkit is provided by NVIDIA to support GPU oriented programming, which is only valid for graphics cards of NVIDIA but not AMD or Intel graphics products. If you have no NVIDIA graphics card, CPU version of Keras deep learning framework can be used.\nGo to NVIDIA official site to download CUDA Toolkit, choose your version of operating system.https://developer.nvidia.com/...\n\n5. install Theano/Tensorflow\nOpen the CMD, tap in the code one by one:\n#Which torch you wanna choose? Theano or Tensorflow?\npip install theano;#pip install tensorflow; \npip install keras\nconda install git\npip install --upgrade --no-deps git+git://github.com/Theano/Theano.git\n6. Configuration\nAdd the following path into environment variables:\n#Change the disk and folder if you've already chosen another place\nC:\\Anaconda2;\nC:\\Anaconda2\\Scripts;\nC:\\Anaconda2\\MinGW\\bin;\nC:\\Anaconda2\\MinGW\\x86_64-w64-mingw32\\lib;\ncreate a new variable, add in the PATH:\n#Change the dick, folder; change \"theano\" to \"tensorflow\" if you chose another\nC:\\Anaconda2\\Lib\\site-packages\\theano;\ncreate a txt file .theanorc.txt at your USER fold, add in the content:\n[global]\nopenmp=False \ndevice = gpu   \noptimizer_including=cudnn  \nfloatX = float32  \nallow_input_downcast=True  \n[lib]\ncnmem = 0.8 \n[blas]\nldflags=  \n[gcc]\ncxxflags=-ID:\\Anaconda2\\MinGW  \n[nvcc]\nfastmath = True  \n--flags=-LD:\\Anaconda2\\libs #change it to your own directory\n--compiler_bindir=D:\\Microsoft Visual Studio 12.0\\VC\\bin #change it to your own directory\n\n#delete all annotation \nTill now, everything has been done.Open your python environment(cmd or ipython notebook or spyder) and try to import~!\npython\nimport numpy as np\nimport theano #or 'import tensorflow as tf' \nimport keras\nIf you want to do more, try to use keras and nimst database train a multi-layer perceptron model.\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "0"}