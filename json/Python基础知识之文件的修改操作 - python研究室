{"title": "Python基础知识之文件的修改操作 - python研究室 ", "index": "python", "content": "今天我们来讨论下python下如何实现：打开文件—修改文件——关闭文件的操作\n本文采用逐行解释的方法。\n思路：\n第一步：把文件读取出来第二部：再用'w'模式写入到新文件第三部：把原文件删除，并且把新文件重命名回原文件这样就实现了文件的修改操作\n我们先来看看原文件的内容\nwith open('xiakexing') as old_file:\n    print(old_file.read())\n赵客缦胡缨，吴钩霜雪明。银鞍照白马，飒沓如流星。\n十步杀一人，千里不留行。事了拂衣去，深藏身与名。\n闲过信陵饮，脱剑膝前横。将炙啖朱亥，持觞劝侯嬴。\n三杯吐然诺，五岳倒为轻。眼花耳热后，意气素霓生。\n救赵挥金锤，邯郸先震惊。千秋二壮士，烜赫大梁城。\n纵死侠骨香，不惭世上英。谁能书阁下，白首太玄经。\n\n我们想要做的修改是把第二行的千里不留行改成“万里不流行”补充说明：用with open()格式可以同时打开两个文件，本例中实际上是打开文件xiakexing，并且创建文件xiakexing.bak,分别创建对应的文件对象old_file和new_file\nwith open('xiakexing') as old_file,open('xiakexing.bak','w') as new_file:\n#采用for循环从文件对象old_file里迭代地读取文件，简单来讲就是一行一行地读取文件，这样内存中只存储了一行文件的内容，节省了内存，也防止文件过大时造成的“超载”\n    for i in old_file:\n        if '千里不留行' in i: #这里每读取一行我们就对其进行条件判断，判断该行是否是我们要找的那一行\n            i = i.replace('千','万')#当找到该行时，把该行的内容替换成我们想要的内容\n#每读取一行我们就在新文件中写入一行，不管该行有没有变化,总之就是读一行、写一行、读一行、写一行\n        new_file.write(i) \n#当for循环结束后，文件也已经被我们修改完毕了，这时应该删除旧文件，重命名新文件，为了实现这一目的，我们引入了os模块，os模块内主要是一些和操作系统有关的函数\nimport os            \nos.remove('xiakexing') #删除原文件\nos.rename('xiakexing.bak','xiakexing') #把新文件重命名回原文件名，最终实现了文件的修改\n然后我们再来看看文件的内容\nwith open('xiakexing') as old_file:\n    print(old_file.read())\n赵客缦胡缨，吴钩霜雪明。银鞍照白马，飒沓如流星。\n十步杀一人，万里不留行。事了拂衣去，深藏身与名。\n闲过信陵饮，脱剑膝前横。将炙啖朱亥，持觞劝侯嬴。\n三杯吐然诺，五岳倒为轻。眼花耳热后，意气素霓生。\n救赵挥金锤，邯郸先震惊。千秋二壮士，烜赫大梁城。\n纵死侠骨香，不惭世上英。谁能书阁下，白首太玄经。\n这样，我们就实现了文件的修改。由于我们使用的是with open() as 的方法，所以不需要文件关闭的步骤，如果是通过file=open()的方式开打的文件，则必须在末尾加上关闭文件的语句。\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "0"}