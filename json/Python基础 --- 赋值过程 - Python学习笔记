{"title": "Python基础 --- 赋值过程 - Python学习笔记 ", "index": "python", "content": "python中，赋值的过程：\na1 = 1\n\n创建对象1\n变量a1引用该对象\n完成赋值\n\n实际上a1只是一个引用,它指向1这个对象。再举一个例子就好理解了。\n当重新定义一个变量:a2a2 = a1a2并不是指向a1，而是指向1这个对象。\n那是不是只要变量值大小相同就表示引用的是同一个对象了呢？\n事实上不是的。例如：v1 = 4.3v2 = 1.3 + 3虽然v1 v2值相同，但是在系统中保存的是两个独立对象\n这里之所以用到浮点数而不用整数或字符串举例，是因为 在Python中，整形对象和字符串对象是不可变对象，系统会高效的缓存他们 ，不知情的情况下会认为两个变量引用同一个对象。如下：\na = 1\nid(a)  #33775960\nb = 1\nid(b)  #33775960\n#######\nm = 1.0\nid(m)  #33846944\nn = 1.0\nid(n)  #33846920\n\nid()方法返回对象在内存中的地址 官方文档\n事实上，Python认为在程序中这些小整形会被经常用到，所以尽会缓存简单的整型数，缓存的范围是(-1, 100)。 不过这个范围不是永恒不变的，所以尽量不要在自己的程序中尝试使用这个特性 。\n----------------------分割线--------------------\n最近在看关于python基础的书籍，以弥补自己对python底层的知识的欠缺，特此记录。\n成为更好的自己。\n参考书籍------python核心编程(第二版)\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "1"}