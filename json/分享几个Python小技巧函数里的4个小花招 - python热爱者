{"title": "分享几个Python小技巧函数里的4个小花招 - python热爱者 ", "index": "python", "content": "前面讲了很多内容都是关于python的变量，数据结构，下面我们来谈一谈python的函数。python里的函数知识点大概分为基础的定义使用，作用域和参数传递，高级用法，其中参数传递最为灵活，作用域最为绕人.\n函数其实是对程序逻辑进行结构化或者过程化的一种编程方法,把整块的代码巧妙的隔离成易于管理的小块，是最基本的一种代码抽象的方式。\npython函数是用def关键字定义的:\ndef算是函数的头,头上一般会有一个函数名，后面跟0个或者多个参数然后是函数的身体,这个代码块就是函数的主体部分，一般会缩进写最后是函数的尾巴包含一个return语句,返回一个对象的表达式.今天我们先来说一说里面的一些小花招，算是给初学者的开胃菜，为后面正式讲函数热热身:\n1.Python函数可以返回多个值\n一般的编程语言比如c,c++,java,一般返回的都是一个值，python可以返回多个值(perl其实也可以)，因为有的时候我们除了需要函数返回计算的结果，我们还需要返回一些操作的状态，看个简单的例子你就明白了 ：\n\n这个getHtmlResponse()函数可以返回多个值，第一值是返回处理的状态True or false,第二值是msg,有的时候我们需要先判断状态，若true 就不管了，若是false再进一步处理.\n这样的场景下用函数返回多个值这个特性很容易搞定.原理其实就是函数返回了一个元组，然后把结果赋值给多个变量。\n说到这里，我穿插一个小技巧，我的时候我们希望丢弃掉一些返回值，\n我们可以用_搞定(用一个几乎用不到的变量名，来作为要丢弃的值的名称)\n\n2.尽量用异常表示特殊情况，不要返回None\npython函数若你什么都不return,默认返回None，很容易忽视这一点\n\n有的同学说我写函数代码，会记得加上None,但是有的时候返回None也会让你误解，不好处理，你不信我们看下面一个例子:\n\n原因是当分子为0的时候,计算结果为0,那这个结果去做条件判断时，会出现问题，会弄巧成拙。其实你返回None是有特殊意义的，是为了判断分母为0.\n解决这个问题有两个办法:第一个是把返回值拆成两部分，返回一个元组，第一个元素是操作是否成功,第二个是运行结果，改成如下:\n\n第二个好的办法是：根本不返回None,直接抛异常给上一级，使得调用者必须应对它，好我们来改一下代码看看：\n# 异常部分后面会讲，valueError是异常中的一种,表示传给函数的参数类型不正确\n\n现在调用者就需要处理因输入值无效而引发的异常，而不需要用条件语句去判断函数的返回值，非常清晰而且不容易混淆.\n3.匿名函数\npython除了def语句之外，还提供了一中懒人专用的函数叫做lambda,有点LISP语言的风格(LISP是一个非常著名的黑客语言).所以称为lambda匿名函数,其实就想def一样,这个表达式创建了一个能够调用的函数，它其实是返回一个函数而不是像传统的函数赋值给一个变量名,所以一般都是在一种行内进行使用.\n形式:\nlambda arg1,arg2...argN:expression using arg\n\nlambda是一个表达式，而不是一个语句作为一个表达式,经常在列表中或者函数中调用,能够出现在python语法不允许出现def的地方.此外做为一个表达式lambda返回了一个值(新的函数)，可以选择性的赋值给一个变量名。\nlambda的主体是单个的表达式，而不是代码块lambda的主体简单的就像放在def主体的return 里的代码一样，写成一个表达式，lambda通常比def功能要小，只能封装一些有限的逻辑，lambda为简单任务而生,def则处理更大更复杂的任务.\n\n对比一下吧:\n普通函数\n\n匿名函数\n\n在比如在排序对数据整理时经常用到:\n\n也许懒惰也是推进人类进步的一大利器，当年因为懒惰嫌Dos太麻烦才有了win,当年的手机系统因为懒惰希望不用键盘直接手点点多好才有了触摸屏，因为懒惰懒的打字才推进了语音识别.\n4.警惕默认参数的潜在问题\n最后一个花招是很具有迷惑性的，一定要看仔细，一般我们在函数参数传递的时候，希望用一种非静态的类型来作为关键字的默认值，比如我们经常会有打印日志消息的函数:\n\n奇怪两条消息戳是一样的，这是因为datetime.datetime.now()只执行了一次，也就是说在函数定义的时候执行了一次。参数的默认值会在每一个模块加载进来的时候求出，一旦这段模块加载进来了，参数的默认值就很固定了，程序不会再出执行datetime.datetime.now()\n是不是觉得很冤枉，明明想动态的一下的，反而变成了静静~~ 肿么办\n这里有一个小技巧，在Python中若你想动态实现默认值，习惯把默认值改成None,然后加一些注释,看代码吧:\n\n现在两条消息的时间戳就不同了，如果参数的实际默认值是可变类型，切记切记用None作为形式上的默认值.\n好了函数里的小花招就讲到这里啦,希望能给初学者一些启发,若有什么不懂的，也可以留言跟我探讨交流.\n\n                ", "mainLikeNum": ["1 "], "mainBookmarkNum": "0"}