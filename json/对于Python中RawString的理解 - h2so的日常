{"title": "对于Python中RawString的理解 - h2so的日常 ", "index": "python", "content": "2016年1月9日\n总结\n1、'''作用: 可以表示 \"多行注释\" 、\"多行字符串\" 、\"其内的单双引号不转义\"\n\n2、r 代表的意思是: raw \n\n3、r 只对其内的反斜杠起作用(注意单个 \\ 的问题)\n\n\nraw string 有什么用处呢？  raw string 就是会自动将反斜杠转义。\n    >>> print('\\n')\n    \n    \n    >>> print(r'\\n')\n    \\n\n    >>>\n（注：出现了两个空行是因为 print() 会自动添加一个空行）\n再举个例子：\n    >>> r'\\\\\\\\\\\\' == '\\\\\\\\\\\\\\\\\\\\\\\\'\n    True\n    >>> print('\\\\\\\\\\\\\\\\\\\\\\\\')\n    \\\\\\\\\\\\\n    >>> print(r'\\\\\\\\\\\\')\n    \\\\\\\\\\\\\n    >>> \n上述就是raw string 的基本功能。\n\n所谓的\nprint(r'''1\n2\n3\n4''')    \n\n和\nprint('''1\n2\n3\n4''')\n\n效果一样的原因其实就在于三引号内没有 \\  所以 r  英雄无用武之地\n有一点要注意的是，raw string 并不能让诸如 print(r'\\') 起作用。因为在编译时Python还是会尝试使用反斜杠来转义单引号，从而造成字符串没有终止的问题.\n举例：\n    >>> print(r'C:\\Windows\\System32')\n    C:\\Windows\\System32\n\n    >>> print('C:\\\\Windows\\\\System32')\n    C:\\Windows\\System32\n\n    >>> print('C:\\Windows\\System32')\n    C:\\Windows\\System32\n    >>>\n最后一行也可以生效的原因是，\\W 和 \\S 什么都不是。所以在这个例子中Python发现“无法转义”，所以就不做任何转义而直接打印转义符。但是：\n    >>> print('C:\\Windows\\System32\\new')\n    C:\\Windows\\System32\n    ew\n\n    >>> print(r'C:\\Windows\\System32\\new')\n    C:\\Windows\\System32\\new\n    \n就不一样了。\n\n                ", "mainLikeNum": ["1 "], "mainBookmarkNum": "3"}