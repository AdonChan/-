{"title": "【大坑记】Python中的全局变量变成了局部变量 - 奇怪的程序猿 ", "index": "flask,python", "content": "上线前忙忙乎乎写代码，更新了一个同事的代码，发现日志模块报错了\n伪代码如下：\n\nfrom flask import current_app\n\ndef add_log(data, app=None):\n    if app:\n        current_app = app\n    current_app.game_logger.info(data)\n\nadd_log(data)\n\n错误代码：\nUnboundLocalError: local variable 'current_app' referenced before assignment\n\n因为确认在flask的app上下文中，而且没有传app参数进去，所以光看代码逻辑，一直很奇怪为啥会报current_app不存在的错误。\n后来好奇自己写了个小程序测验\ng = 10\n\ndef test(a=None):\n    if a:\n        g = a\n    print g\n\ntest()\n\n同样报了UnboundLocalError错误\nlocal variable 'g' referenced before assignment\n\n于是猜出了，在定义这个函数的时候，我们在函数内存在给全局变量 g 赋值的操作，它就默认把函数内的 g 变成了本地变量。（即便这条赋值语句并没有被执行）\n所以解决方法是，就是很简单的加个 global 申明全局变量\n修改后的代码\ng = 10\n\ndef test(a=None):\n    global g\n    if a:\n        g = a\n    print g\n\ntest()\n\n输出正常了- -\n诶，说到底就是基础不够扎实啊╮(╯_╰)╭\n\n                ", "mainLikeNum": ["1 "], "mainBookmarkNum": "0"}