{"title": "python小记 - 个人文章 ", "index": "python", "content": "提示:由于水平有限，如发现有疑问或错误的地方请毫不客气的提出、讨论,我会在第一时间回复,感谢在先\n重要的事情说三遍  查看module文档的时候方法执行一定添加()  查看module文档的时候方法执行一定添加()  eg: help(str)\n获取帮助方法\n查看help()  另一种方法: module_name.__doc__\n查看python3中内置方法\ndir(__builtins__)\n0.问题描述: 在树莓派支持的centos上面 pip install pylint 最后提示安装成功;python shell 中 import pylint 没有报错. 但bash提示:command not found.\n1.找到pylint的位置(/usr/local/python3/bin/pylint)直接运行成功2.效仿安装python3方法,在/usr/bin/中创建软连接.\n1.is 与 == 区别https://stackoverflow.com/que...\n判断两个变量指针是否相同使用is,判断两个变量的值是否相同使用==is will return True if two variables point to the same object, == if the >objects referred to by the variables are equal.\n[ ] is [ ] :false\n[ ] == [ ] : ture\n2.列表拷贝https://stackoverflow.com/que...\n    1.使用分片(shallow copy)\n    new_list = my_list[:]\n    2.使用list\n    new_list = list(my_list)\n    3.使用copy浅复制(import copy)\n    new_list = copy.copy(my_list)\n    4.使用copy.deepcopy()深拷贝\n    new_list = copy.deepcopy(my_list)\n3.函数参数http://blog.csdn.net/kc_11979...\n>>> def test(var, buf=[]):\n    buf.append(var)\n    return buf\n>>> test('a')\n    ['a']\n>>> test('b')\n    ['a', 'b']\n可以认为python的函数也是一个对象，这个对象有一个可执行的方法和部分属性,里面参数是共享的.\n解决方法:\n>>> def test(var, buf=None):\n        if buf == None:\n            buf = []\n        buf.append(var)\n       \n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "0"}