{"title": "python_bomb----函数高级特性(生成器) - python太阳花 ", "index": "python", "content": "迭代\n可以通过 for 循环来遍历 list 或 tuple,这种遍历我们称为迭代(Iteration)只要是可迭代对象，都可以迭代，比如字典默认情况下，字典迭代的是key值如何让判断一个类型是否可迭代\nfrom collections import Iterable    #导入collections模块的Iterable类型判断方法\nprint(isinstance({'abc':1},Iterable))\n\n\nTrue\n列表生成式\nPython 内置的非常简单却强大的可以用来创建 list的生成式\n列表生成方法\nfor循环\n#输出0～9之间偶数的平方\nli= []\nfor i in range(0,10,2):\n    li.append(i**2)\n    \nli\n[0, 4, 16, 36, 64]\n\n列表生成式\nprint([i**2 for i in range(0,10,2)])\n[0, 4, 16, 36, 64]\n\n列表生成式相对循环语句，代码简洁\n#找出1～100之间所有质数\n#质数（prime number）又称素数，有无限个。\n#质数定义为在大于1的自然数中，除了1和它本身以外不再有其他因数。\n\ndef isprime(num):\n    for i in range(2, num):\n        if num % i == 0:\n            return False\n    else:\n        return True\n\n\nval = int(input(\"请输入一个数：\"))\nprint([i for i in range(2, val) if isprime(i)])\n\n\n请输入一个数：100\n[2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\n\n\n字典生成式\n#合并大小写\n#key值最终为小写\n\nd1={'a':10,'b':3,'A':10,'B':8}\n\nprint({k.lower():d1.get(k.upper(),0)+d1.get(k.lower(),0)for k,v in d1.items()})\n\n{'a': 20, 'b': 11, 'c': 13}\n\n生成器\n通过列表生成式,我们可以直接创建一个列表,受到内存限制,列表容量肯定是有限的创建一个包含 100 万个元素的列表,占用很大的存储空间\n生成器是什么?\n在循环的过程中不断推算出后续的元素呢?这样就不必创建完整的 list,从而节省大量的空间。在 Python 中,这种一边循环一边计算的机制,称为生成器(Generator)\n读取生成器\n\nnext()\nfor循环\n\n#Fibnonacci数列\n#1,1,2,3,5,8,13,....\n\n#yield:函数中带有yield，那么这个函数的返回值就是一个生成器\n#如果要执行函数内容，需要调用next方法或者for循环\n#当执行next方法时，遇到yield程序停止\n#直到下一次next方法时，从上一次yiled停止的地方继续执行，遇到yeild停止\ndef fibnnonacci(num):   #num表示将来显示几个值\n    a,b,count = 0,1,0   #count是已经显示过的次数\n    while count<=num:\n        yield b\n        a,b = b,a+b\n        count+=1\nres = fibnnonacci(100)\nprint(next(res))\nprint(next(res))\nprint(next(res))\nprint(next(res))\n\n\n1\n1\n2\n3\n\nProcess finished with exit code 0\n\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "0"}