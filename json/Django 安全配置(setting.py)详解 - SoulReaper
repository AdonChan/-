{"title": "Django 安全配置(setting.py)详解 - SoulReaper ", "index": "python,django,web安全", "content": "Django 安全配置(setting.py)详解\n标签（空格分隔）： python django web安全\n---\n1. 必须配置:\n0x01. PASSWORD_HASHER\n这个配置是在使用Django自带的密码加密函数的时候会使用的加密算法的列表.默认如下:\nPASSWORD_HASHERS = (\n    'django.contrib.auth.hashers.PBKDF2PasswordHasher',\n    'django.contrib.auth.hashers.PBKDF2SHA1PasswordHasher',\n    'django.contrib.auth.hashers.BCryptSHA256PasswordHasher',\n    'django.contrib.auth.hashers.BCryptPasswordHasher',\n    'django.contrib.auth.hashers.SHA1PasswordHasher',\n    'django.contrib.auth.hashers.MD5PasswordHasher',\n    'django.contrib.auth.hashers.CryptPasswordHasher',\n)\n默认使用第一个条目的加密算法,即PBKDF2算法.所以在使用make_password,check_password,is_password_unable等密码加解密函数的时候,需要添加这个list在setting.py文件中,推荐使用默认配置的算法.相关链接:https://docs.djangoproject.com/en/1.8/ref/settings/#password-hashershttps://docs.djangoproject.com/en/1.8/topics/auth/passwords/\n\n0x02. ADMINS\nADMINS是一个二元元组,记录开发人员的姓名和email，当DEBUG为False而views发生异常的时候发email通知这些开发人员.类如:\n(('John', 'john@example.com'), ('Mary', 'mary@example.com'))\n相关链接:https://docs.djangoproject.com/en/1.8/ref/settings/#admins\n\n0x03. ALLOWED_HOSTS\nALLOWED_HOSTS是为了限定请求中的host值,以防止黑客构造包来发送请求.只有在列表中的host才能访问.强烈建议不要使用*通配符去配置,另外当DEBUG设置为False的时候必须配置这个配置.否则会抛出异常.配置模板如下:\nALLOWED_HOSTS = [\n    '.example.com',  # Allow domain and subdomains\n    '.example.com.',  # Also allow FQDN and subdomains\n]\n相关链接:https://docs.djangoproject.com/en/1.8/ref/settings/#allowed-hosts\n\n0x04. DEBUG\nDEBUG配置为True的时候会暴露出一些出错信息或者配置信息以方便调试.但是在上线的时候应该将其关掉，防止配置信息或者敏感出错信息泄露.\n    DEBUG = False\n相关链接:https://docs.djangoproject.com/en/1.8/ref/settings/#std:setting-DEBUG\n\n0x05. INSTALLED_APPS\nINSTALLED_APPS是一个一元数组.里面是应用中要加载的自带或者自己定制的app包路径列表.\nINSTALLED_APPS = [\n    'anthology.apps.GypsyJazzConfig',\n    # ...\n]\n相关链接:https://docs.djangoproject.com/en/1.8/ref/settings/#installed-appshttps://docs.djangoproject.com/en/1.8/ref/applications/\n\n0x06. MANAGERS\n和ADMINS类似,并且结构一样,当出现'broken link'的时候给manager发邮件.相关链接:https://docs.djangoproject.com/en/1.8/ref/settings/#std:setting-MANAGERS\n\n0x07. MIDDLEWARE_CLASSES\nweb应用中需要加载的一些中间件列表.是一个一元数组.里面是django自带的或者定制的中间件包路径,如下：\nMIDDLEWARE_CLASSES = (\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n    'django.middleware.security.SecurityMiddleware',\n)\n相关链接:https://docs.djangoproject.com/en/1.8/ref/settings/#std:setting-MIDDLEWARE_CLASSEShttps://docs.djangoproject.com/en/1.8/topics/http/middleware/\n\n0x08. TEMPLATE_DEBUG\n同样是一个DEBUG开关,若为True,DEBUG信息在触发异常之后,会显示在网页上.上线之前必须修改成:\nTEMPLATE_DEBUG = False\n相关链接:https://docs.djangoproject.com/en/1.8/ref/settings/#std:setting-TEMPLATE_DEBUG\n\n\n2. 建议配置\n\n0x01. DEBUG\nDEBUG = False\n防止配置信息和调试信息暴露\n\n0x02. SESSION_COOKIE_SECURE\nSESSION_COOKIE_SECURE = True\n使得session cookie被标记上secure标记,从而只能传输在HTTPS下相关链接:https://docs.djangoproject.com/en/1.8/ref/settings/#session-cookie-secure\n\n0x03. SESSION_COOKIE_HTTPONLY\nSESSION_COOKIE_HTTPONLY = True\n使得session cookie被标记上http only标记,从而只能被http协议读取,不能被Javascript读取\n\n0x04. TEMPLATE_DEBUG\nTEMPLATE_DEBUG = False\n防止配置信息和debug信息通过view传出.\n\n\n3. 推荐的中间件:\n\n0x01. SessionMiddleware\n\n配置作用:在应用中使用session\n配置方法:在MIDDLEWARE_CLASSES中加入:django.contrib.sessions.middleware.SessionMiddleware\n相关链接:https://docs.djangoproject.com/en/1.8/ref/middleware/https://docs.djangoproject.com/en/1.8/topics/http/sessions/\n\n\n0x02. CsrfViewMiddleware\n配置作用:在应用中添加CSRF token用来防范csrf攻击\n配置方法:\n\n1.在MIDDLEWARE_CLASSES中加入:django.contrib.sessions.middleware.CsrfViewMiddleware\n相关链接:https://docs.djangoproject.com/en/1.8/ref/middleware/https://docs.djangoproject.com/en/1.8/ref/csrf/\n\n0x03. clickjacking.XFrameOptionsMiddleware\n配置作用:在Http header中添加 X-Frame-Options 标志.防范Clickjacking\n配置方法:\n\n1.在MIDDLEWARE_CLASSES中加入:django.middleware.clickjacking.XFrameOptionsMiddleware\n相关链接:https://docs.djangoproject.com/en/1.8/ref/clickjacking/\n\n\n\n4. 推荐安装的app:\n\n0x01. django_bleach\n作用:过滤html字符串,返回合法的已经过滤的安全html字符串.官方链接:https://bitbucket.org/ionata/django-bleach文档:https://django-bleach.readthedocs.org/en/latest/\n0x02. xframeoptions\n作用:防范ClickJacking,作用和官方的XFrameOptionsMiddleware相似官方链接:https://github.com/paulosman/django-xframeoptions\n\n                ", "mainLikeNum": ["5 "], "mainBookmarkNum": "20"}