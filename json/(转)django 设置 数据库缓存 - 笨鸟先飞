{"title": "(转)django 设置 数据库缓存 - 笨鸟先飞 ", "index": "django,python", "content": "最近博客增加了许多新功能，访问速度有所下降，在国内某搜索引擎上查找的时候看到了这篇文字，简单明了，所以转发过来，虽不是原创但是希望能够帮助更多的朋友。\nDjango 官方缓存系统介绍：\nhttps://docs.djangoproject.com/en/1.8/to...\n配置cache方式及内部实现机制：\ndjango中cache大体分为三种，即针对全站的缓存配置、针对视图的缓存配置、针对数据的缓存配置。本站采用数据库+全站缓存。\n\n1.设置缓存，在settings.py添加\nCACHES = {\n    'default': {\n        'BACKEND': 'django.core.cache.backends.db.DatabaseCache',\n        'LOCATION': 'my_cache_table',  # 要缓存的表名\n        'TIMEOUT': 600,                # 默认的缓存有效时间,以秒计. 默认值是 300 秒(五分钟).\n        'OPTIONS': {\n            'MAX_ENTRIES': 1000        # 缓存的最大条目数(超出该数旧的缓存会被清除,默认值是 300).\n        }\n    }\n}\n\n2.创建缓存表\npython manage.py createcachetable\n\n3.缓存整个站点\n设置了缓存类型之后, 最简单使用缓存的方式就是缓存整个站点. \n在MIDDLEWARE_CLASSES 设置中添加 django.middleware.cache.CacheMiddleware , 就象下面的例子一样:\nMIDDLEWARE_CLASSES = (\n    'django.middleware.cache.UpdateCacheMiddleware',          # 注意位置，在前\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.cache.FetchFromCacheMiddleware',       # 注意位置，在后\n)\n\n4.在settings.py添加CACHE_MIDDLEWARE_SECONDS :每个页面应该被缓存的秒数。\nCACHE_MIDDLEWARE_SECONDS = 500   # 每个页面应该被缓存的秒数\n\n5.重启django,就可以体验缓存了。\n转自:http://www.opdev.cn/blog/article/73.html\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "1"}