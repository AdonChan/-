{"title": "python抓取简单网页数据的小实例 - cyqian ", "index": "requests,python,数据抓取,beautifulsoup", "content": "抓取网页数据的思路有好多种，一般有：直接代码请求http、模拟浏览器请求数据（通常需要登录验证）、控制浏览器实现数据抓取等。这篇不考虑复杂情况，放一个读取简单网页数据的小例子：\n\n目标数据\n\n将ittf网站上这个页面上所有这些选手的超链接保存下来。\n\n数据请求\n\n真的很喜欢符合人类思维的库，比如requests，如果是要直接拿网页文本，一句话搞定：\n\ndoc = requests.get(url).text\n\n\n解析html获得数据\n\n以beautifulsoup为例，包含获取标签、链接，以及根据html层次结构遍历等方法。参考见这里。下面这个片段，从ittf网站上获取指定页面上指定位置的链接。\n\nurl = 'http://www.ittf.com/ittf_ranking/WR_Table_3_A2.asp?Age_category_1=&Age_category_2=&Age_category_3=&Age_category_4=&Age_category_5=&Category=100W&Cont=&Country=&Gender=W&Month1=4&Year1=2015&s_Player_Name=&Formv_WR_Table_3_Page='+str(page)\ndoc = requests.get(url).text\nsoup = BeautifulSoup(doc)\natags = soup.find_all('a')\nrank_link_pre = 'http://www.ittf.com/ittf_ranking/'\n\nmlfile = open(linkfile,'a')\nfor atag in atags:\n    #print atag\n    if atag!=None and atag.get('href') != None:\n        if \"WR_Table_3_A2_Details.asp\" in atag['href']:\n            link = rank_link_pre + atag['href']\n            links.append(link)\n            mlfile.write(link+'\\n')\n            print 'fetch link: '+link\nmlfile.close()\n\n\n                ", "mainLikeNum": ["1 "], "mainBookmarkNum": "3"}