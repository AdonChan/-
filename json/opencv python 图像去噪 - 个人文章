{"title": "opencv python 图像去噪 - 个人文章 ", "index": "opencv-python,opencv,python", "content": "Image Denoising \nOpenCV提供了这种技术的四种变体。\n\ncv2.fastNlMeansDenoising（） - 使用单个灰度图像\ncv2.fastNlMeansDenoisingColored（） - 使用彩色图像。\ncv2.fastNlMeansDenoisingMulti（） - 用于在短时间内捕获的图像序列（灰度图像）\ncv2.fastNlMeansDenoisingColoredMulti（） - 与上面相同，但用于彩色图像。\n\nCommon arguments:\n\nh：参数决定滤波器强度。较高的h值可以更好地消除噪声，但也会删除图像的细节 (10 is ok)\nhForColorComponents：与h相同，但仅适用于彩色图像。 （通常与h相同）\ntemplateWindowSize：应该是奇数。 （recommended 7）\nsearchWindowSize：应该是奇数。 （recommended 21）\n\ncv2.fastNlMeansDenoisingColored()如上所述，它用于从彩色图像中去除噪声。 （噪音预计是高斯噪音）\nimport numpy as np\nimport cv2\nimport matplotlib.pyplot as plt\n\n\nimg = cv2.imread('img.jpg')\n\ndst = cv2.fastNlMeansDenoisingColored(img,None,10,10,7,21)\n\nplt.subplot(121),plt.imshow(img)\nplt.subplot(122),plt.imshow(dst)\nplt.show()\n\ncv2.fastNlMeansDenoisingMulti（）\n现在我们将相同的方法应用于视频。 第一个参数是嘈杂帧的列表。 第二个参数imgToDenoiseIndex指定我们需要去噪的帧，因为我们在输入列表中传递了frame的索引。 第三个是temporalWindowSize，它指定了用于去噪的附近帧的数量。 在这种情况下，使用总共temporalWindowSize帧，其中中心帧是要去噪的帧。 例如，传递了5个帧的列表作为输入。 设imgToDenoiseIndex = 2和temporalWindowSize = 3.然后使用frame-1，frame-2和frame-3对帧-2进行去噪\nimport numpy as np\nimport cv2\nimport matplotlib.pyplot as plt\n\n\ncap = cv2.VideoCapture('test.mp4')\n\n# create a list of first 5 frames\nimg = [cap.read()[1] for i in range(5)]\n\n# convert all to grayscale\ngray = [cv2.cvtColor(i, cv2.COLOR_BGR2GRAY) for i in img]\n\n# convert all to float64\ngray = [np.float64(i) for i in gray]\n\n# create a noise of variance 25\nnoise = np.random.randn(*gray[1].shape)*10\n\n# Add this noise to images\nnoisy = [i+noise for i in gray]\n\n# Convert back to uint8\nnoisy = [np.uint8(np.clip(i,0,255)) for i in noisy]\n\n# Denoise 3rd frame considering all the 5 frames\ndst = cv2.fastNlMeansDenoisingMulti(noisy, 2, 5, None, 4, 7, 35)\n\nplt.subplot(131),plt.imshow(gray[2],'gray')\nplt.subplot(132),plt.imshow(noisy[2],'gray')\nplt.subplot(133),plt.imshow(dst,'gray')\nplt.show()\n\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "0"}