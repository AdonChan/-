{"title": "Django的TEMPLATES设置项（1.8新特性） - 盐字 ", "index": "web开发,python,django", "content": "TEMPLATES\n\nDjango 1.8的新特性\n一个列表，包含所有在Django中使用的模板引擎的设置。列表中的每一项都是一个字典，包含某个引擎的选项。\n\n以下是一个简单的设定，告诉Django模板引擎从已安装的应用程序（installed applications）的templates子目录中读取模板：\n\npythonTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'APP_DIRS': True,\n    },\n]\n\n\n以下选项对所有引擎（backends）都可用。\n\nBACKEND\n\n默认：无定义\n使用的模板引擎。内建的模板引擎有：\n\n\n'django.template.backends.django.DjangoTemplates'\n'django.template.backends.jinja2.Jinja2'\n\n通过设置BACKEND为一个完整的（fully-qualified）路径（例如'mypackage.whatever.Backend'），你可以使用非Django自带的引擎。\n\nNAME\n\n默认：看下面\n该模板引擎的别名。它是一个标识符，让你在渲染时可以选择一个引擎。别名在所有配置好的模板引擎中必须是唯一的。\n当未提供值时，默认是定义引擎类的模板名，也即是与BACKEND相邻的最后一部分。\n例如如果引擎是'mypackage.whatever.Backend'，那么它的默认名为'whatever'。\n\nDIRS\n\n默认：[]（空列表）\n引擎用于查找模板源文件的目录，按搜索顺序排列。\n\nAPP_DIRS\n\n默认：False\n引擎是否在已安装应用程序（的目录）内查找模板源文件。\n\nOPTIONS\n\n默认：{}（空字典）\n传递给该模板引擎（backend）的其他参数。不同的引擎，可用的参数不一样。\n\nTEMPLATE_CONTEXT_PROCESSORS\n\n默认：(\"django.contrib.auth.context_processors.auth\",\n\"django.template.context_processors.debug\",\n\"django.template.context_processors.i18n\",\n\"django.template.context_processors.media\",\n\"django.template.context_processors.static\",\n\"django.template.context_processors.tz\",\n\"django.contrib.messages.context_processors.messages\")\n\n\n  自1.8版本起，不赞成使用：\n  在一个DjangoTemplates引擎中的OPTIONS设置'context_processors'选项来代替。\n\n\n用于填充在RequestContext中的上下文的调用函数（callables）的元组。这些函数获取一个request对象作为它的参数，返回一个将要填充至上下文项目的字典。\n\n\n  Django 1.8的变化：\n  在Django 1.8中，内建模板的上下文处理器从django.core.context_processors移至django.template.context_processors。\n\n\nTEMPLATE_DEBUG\n\n默认：False\n\n\n  自1.8版本起，不赞成使用：\n  在一个DjangoTemplates引擎中的OPTIONS设置'debug' 选项来代替。\n\n\n一个打开/关闭模板调试模式的布尔值。如果值是True，在模板渲染期间，抛出任何异常都将显示一个可爱的、详情报告的错误页面。该页面包含该模板相关的代码段，并且使用适当的行高亮。\n注意如果DEBUG是True，Django只会显示可爱的错误页面。\n参见 DEBUG。\n\nTEMPLATE_DIRS\n\n默认：()（空列表）\n\n\n  自1.8版本起，不赞成使用：\n  在一个DjangoTemplates引擎中设置'DIRS'选项来代替。\n\n\ndjango.template.loaders.filesystem.Loader搜索模板源代码的路径列表，，按搜索顺序排列。\n注意即使在Windows中，这些路径也是使用Unix风格的正斜杠。\n参见 The Django template language 。\n\nTEMPLATE_LOADERS\n\n默认：('django.template.loaders.filesystem.Loader',\n 'django.template.loaders.app_directories.Loader')\n\n\n  自1.8版本起，不赞成使用：\n  在一个DjangoTemplates引擎中的OPTIONS设置'loader'选项来代替。\n\n\n模板读取器类的元组，用字符串指定。每个读取器类知道怎样从一个特定源（particular source）中导入模板。可选地，也可以使用一个元组来代替使用一个字符串。元组中的第一项应该是读取器的模块，随后的项是在初始化时传递给读取器。参见 The Django template language: for Python programmers。\n\nTEMPLATE_STRING_IF_INVALID\n\n默认：''（空字符串）\n\n\n  自1.8版本起，不赞成使用：\n  在一个DjangoTemplates引擎中的OPTIONS设置'string_if_invalid' 选项来代替。\n\n\n当使用了不可用的（比如说拼写错误）变量时模板系统输出的字符串。参见 How invalid variables are handled。\n\n\n  来自 Setting | Django documentation | Django。\n\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "6"}