{"title": "Ubuntu下部署Django应用 - tcitry的专栏 ", "index": "mysql,python,ubuntu,django", "content": "以下所有代码中的操作都需要在命令行运行\n安装mysql\napt-get update\napt-get install mysql-server mysql-client\n根据提示设置MySQL root用户密码\nMySQL设置中文utf8格式\n一般在/etc/mysql下\n[client]下添加default-character-set=utf8\n[mysqld]下添加character-set-server=utf8\n[mysql]下添加default-character-set=utf8\n重启MySQL\nservice mysql restart\n进入MySQL查看编码\nshow variables like 'char%';\n\n为MySQL建立远程连接\n由于修改数据库时不可能频繁的登服务器在命令行下修改，远程用workbench连接MySQL服务器是更方便的选择，先登入MySQL，授权一个可以远程连接这个数据库的用户名和密码\n>>GRANT ALL PRIVILEGES ON *.* TO myuser@'%' IDENTIFIED BY 'mypassword' WITH GRANT OPTION;\n>>FLUSH PRIVILEGES; \n有的MySQL没有开放远程连接的端口，只允许本地连接，你需要查看my.conf之类的文件，我的在/etc/mysql/my.cnf把\nbind-address:127.0.0.1\n那行注释掉即可\n安装pip\n下载地址\napt-get install python-pip\n安装django1.7\ndjango官网\npip install Django==1.7\npython进入python2.7解释器\n>>import django\n>>\n不出错说明安装成功\n安装mysql-python\n安装mysql-python注意需要配置mysql_config我的在(/usr/bin目录下，其他的类似也在bin目录下，视不同系统不同版本而定)如果 /usr/bin目录下没有mysql_config，需要安装mysql开发包\napt-get install python-setuptools\napt-get install libmysqld-dev\napt-get install libmysqlclient-dev\napt-get install python-dev\n下载链接https://pypi.python.org/pypi/MySQL-python/\nwget 'url'\n解压zip文件，首先安装unzip\napt-get install unzip\nunzip mysql-python.zip\ncd mysql-python\nvi site.cfg\n把mysql_config路径那行取消注释，路径为/usr/bin/mysql_config\ncd ..\npython setup.py build\npython setup.py install\n进去python解释器\n>>import MySQLdb\n>>\n不报错说明安装成功\nMySQLdb不支持python3，可以试试pymysql，同时在Python3的项目中，需要在__init__.py中添加\nimport pymysql\npymysql.install_as_MySQLdb()\n这是由于Django调用MySQL的接口问题，在setting.py文件中具体为'ENGINE': 'django.db.backends.mysql',，仔细查看这句代码就会发现Django默认调用的是MySQLdb，虽然它只支持Python2.0。\n配置nginx\n最重要的就是nginx的配置\n我的配置目录在/etc/nginx/nginx.conf和/etc/nginx/sites-enable/*后者可以在前者文件中设置，先查看配置文件/etc/nginx/sites-enable/django\n\n根据自己的应用修改配置文件中static路径，server_name，root等。修改完毕注意要service nginx reload\n关于静态文件的地址配置还是需要多说一句，nginx中的/static目录对应的是setting.py文件中的STATIC_ROOT目录，两个写一样的，执行python manage.py collectstatic收集的文件是admin后台模块的静态样式文件，执行完后这些静态文件就被复制在你设置的STATIC_ROOT目录了。\n部署代码\n因为我的代码在github，先安装git\napt-get install git\ngit clone https://github.com/tcitry/dlpucsdn.git\n部署以后注意修改数据库密码，邮件服务器密码，debug模式False，template_debug模式为False。\nvirtualenv\npip install virtualenv\n根据网上现有的教程简单看看virtualenv的使用很容易理解，在项目依赖的相关程序配置过程中需要始终开着virtualenv。\n配置Gunicorn\n查看这个教程修改为自己的应用参数\nservice gunicorn restart\n当部署一个应用时可以将配置文件放在/etc/init.d/gunicorn.conf文件里面。但同时部署多个文件的时候，可以使用supervisor+gunicorn+virtualenv的部署方式，这样可以在每个不同的项目目录利用virtualenv为每个应用配置不同的环境，同时可以使服务器的环境更加易于管理。\n先在项目的根目录测试一下，确保gunicorn安装正确，\n../bin/gunicorn myapp.wsgi:application\n不出错就说明正确了，出错一般是提示没有那个module名，检查一下django是否安装，执行命令的文件目录是否正确。\nsupervisor的使用\napt-get install supervisor\nsudo vim /etc/supervisord.conf\n编辑的内容如下，请自行修改项目和目录名。\n[program:classroom]\ncommand = sh /home/projects/classroom/classroom/gunicorn_start\nuser = root\nredirect_stderr = true\nautorestart = true\n配置这个gunicorn_start.sh\ncd /home/projects/classroom/classroom\n../bin/gunicorn classroom.wsgi:application -w 4 -b :8000\n启动supervisor\n/etc/init.d/supervisord start\n其他方式\nsupervisorctl start <name>\nsupervisorctl stop <name>\n安装七牛云SDK\n由于网站的静态存储要用七牛云，在运行程序前要安装否则报错没有qiniu SDK的方法。\npip install qiniu\n七牛云安装前注意安装的版本，我被坑过一次，写程序时是6.0版本，部署时都7.0了，接口全都不一样。\n还有\n还有不推荐cloudflare等国外CDN加速，亲身体验。\n还有推荐下这篇来自digitalocean的部署实例\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "25"}