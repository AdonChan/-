{"title": "学习Python的建议 - 凯威的讲堂 ", "index": "进阶,入门,python", "content": "前言\nPython是最容易入门的编程语言，没有之一。如果初学者接触的第一门语言是C或者C++，对他们来说最难的不是语法，而是容易出现内存泄漏、指针等问题。有时候排查这些问题对初学者的打击很大，尤其是没掌握排查BUG技巧时。\n如果初学者接触的第一门语言是Python，学习曲线则会平滑得多，掌握一些基本语法和Python内置的数据结构，已经可以上手写一些小工具或者小型应用。这对初学者来说，非常重要。因为学习的过程是一个突破舒适区的过程，会面临很多痛苦，如果学习过程得不到激励，很容易半途而废，类似我们开玩笑说的「从入门到放弃」。Python还有很多优点：上手快，第三方库丰富，资料丰富，很容易做出“可见可得”的应用。比如你要拿C或者C++做web服务，这上手门槛就有点高了。所以很多工科学生，甚至是科班学生会问学了C/C++到底有什么用，因为想上手做一些“可见可得”的应用太难。Python就大不同，你想搞Web开发？上来一个Flask框架立马就撸。想搞点数据分析？上来一个Panda+数据可视化，撸起来轻松愉快甚有快感。想抓取什么数据？你自己基于request撸一个小爬虫采集点网站信息，app信息都不是什么难事。 \n也是因为这样，学习Python的过程几乎接近“无痛”，有很好的学习正反馈过程，学一点知识就能做一点小东西，能看得到自己成长和进步。安利了这么多好处，来看看学Python分几个阶段吧。\n1.基础知识\nPython最基本的语言特性和语法:\n\n变量\n数据类型与数据结构\n输入和输出\n运算符、表达式、语句\n控制流(顺序控制，选择控制和循环控制)\n面向过程编程\n面向对象编程\n异常处理\n组织代码\n标准库、第三方库\n\n针对面向对象这一块需要重点的讲一下，为什么会有面向对象？以及我们如何设计面向对象系统？这个思考的过程有助于你理解面向对象编程思想。\n可以说「一切皆对象」这句话普适性是很强的，大家都在玩的王者农药，里面每一个对战英雄，每一个野怪，每一张地图都是通过面向对象的思想构建起来的。如果一开始你觉得太复杂，大可把用「分而治之」的思想把复杂的对象break down，分解成多个简单合理的对象。任何复杂的系统都可以由若干个简单可靠的系统组成，多个简单可靠的系统有序地组织起来是可以实现强大功能的。举个例子，还拿农药来说，”英雄“是可以作为一个基类的对吧，每个英雄都有血条，移动速度，AD，AP，物防，法扛等等。李白平A后裔一下，这是对象之间的通信（或者说交互）。后裔放大打中李白，李白眩晕，这一系列的触发过程都可以通过面向对象来建模。\n在掌握了语法特点，掌握了面向对象的思想之后，我们应该能够在控制台（windows或者mac的命令行）里边实现一个有意思的程序。这个程序应该解决现实生活中的一个实际问题。比如出现一个职位的发布和管理系统。有以下功能。我们可以录入职位信息。保存到文件上。我们还可以加载职位信息。按多种条件去查询，比如按关键字按城市。按薪资范围。按商圈工作年限等等。\n在做这个的过程中，自己需要设计一个很好的面向对象系统。也把Python里常用的语言基本特性都用到了。达到这个阶段算是勉强及格了吧，不过仅仅是在语言掌握层面。如果想当一个合格的研发工程师，还需要掌握很多其他技能。\n2. 进阶的阶段\n现在的开发大部分是基于web的，比如app要调web接口，pc端肯定也要调web接口，所以我们不能光在控制台里面玩。这个时候需要了解，http协议和Python web开发。我们可以重做前面提到的求职发布系统，学习基于Python web如何实现。这个时候你需要实现若干个接口：\n用户端：\n\n用户注册\n用户登录\n请求首页刷出默认的职位列表\n\n筛选职位列表\n\n根据城市\n根据关键字\n根据薪酬\n根据工作商圈\n\n\n\n管理后台：\n\n登录\n发布职位\n更新职位\n删除职位\n\n为了实现以上接口，你需要弄清楚什么是GET，什么是POST请求，什么场景下用GET，什么场景用POST。你还需要明白一个Python web开发框架，要明白一个http请求到了web框架之后，框架做了什么事情，如何在里面实现业务逻辑。哪些数据是服务共享的，哪些数据是用户/请求独享的。\n此外，应该学会Python如何操作数据库实现增删改查，大部分的任务都离不开增删改查。比如我提到的发布职位就是create的过程，更新就是update，还有删除是delete，读是read。江湖有一个戏称CRUD boy。\n如果能顺利度过进阶阶段，你应该能举一反三实现其他类似系统了。比如现在很火的分销，拼团，还有新闻Feeds等等。\n好像我没怎么提数据结构和算法，这个要看个人追求。如果你要在最短时间内学会Python开发，恐怕是没时间学好数据结构和算法了，能掌握自带的数据结构用法就行。如果你的学习时间充足，我的建议是一定要学数据结构和算法。为了以后长期的发展，为了人民币，一定要学好数据结构和算法，我简直苦口婆心地劝啊。\n3. 工业界经验\n最后一个阶段是实际的工业经验。这个阶段，你应该对公司用的基础架构，如RPC，数据库缓存消息系统中间件，烂熟于心。同时应该掌握最基本的系统设计的技巧。知道如何根据一个实际需求，设计一个高可用，高性能高扩展性的系统。\n实际上我觉得第一个阶段是最容易的，第二个阶段会碰到一些坑，有时候不好解决。在第二个阶段，你可能需要比较好的自学能力，或者有一个好的学长导师。第三个阶段需要比较体系化的训练和思考。\n如果说你的系统设计能力ok，甚至经验丰富，再加上你不错的算法，你肯定有一份好工作，薪资可能说多了显浮夸，但优秀的应届生很多人超过30w，甚至50w已经是常态了。工作3-5年的过百万的也大有人在。\n这个时代，程序员虽然辛苦了一点，但无疑碰上最好的时代了。\nPS：辛苦是因为知识更新很快，行业发展也很快，逼着程序员也要往前走。保持学习才是从业者的基本素养，而不是掌握某门语言某门技术。\n插播广告\n最后来个巨硬的广告，近期凯威老师和SegmentFault正在联合推荐精品课，可能是东半球最好的Python课~\n该系列的第一节课：凯威教你学 Python（一）：Python 的变量和源代码机制该系列的第二节课：凯威教你学 Python（二）：Python 的字符串和列表\n\n\n\n                ", "mainLikeNum": ["62 "], "mainBookmarkNum": "41"}