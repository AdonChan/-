{"title": "【Python】判断数独是否合法 - 追不上乌龟的兔子 ", "index": "算法,python", "content": "背景\n在LintCode刷题的时候碰到一个很水的题目，不过要注意很多细节，不然调试的时候非常麻烦，利用Python的一些小技巧写了一个很简短的解决方案。\n题目描述\n请判定一个数独是否有效。\n该数独可能只填充了部分数字，其中缺少的数字用 . 表示。\n\n注意事项\n一个合法的数独（仅部分填充）并不一定是可解的。我们仅需使填充的空格有效即可。\n\n解体思路\n\n将数独按照行、列和块进行预处理，然后分别判断是否合法。\n利用Python的表达式推导，匿名函数和all函数可以很方便的进行处理。\n\n代码\nclass Solution:\n# @param board, a 9x9 2D array\n# @return a boolean\ndef isValidSudoku(self, board):\n    rows = [list(lst[::]) for lst in board]\n    columns = [[lst[idx] for lst in board] for idx in range(9)]\n    blocks_origin = [board[row][column] for x in [[0, 1, 2], [3, 4, 5], [6, 7, 8]] for y in [[0, 1, 2], [3, 4, 5], [6, 7, 8]] for row in x for column in y] # 利用一些技巧直接按块储存数据\n    blocks = [[blocks_origin[row * 9 + column] for column in range(9)] for row in range(9)]\n    check = lambda lst: all([lst.count(x) == 1 for x in lst if x != '.']) # 判断一条记录（按某种方式排列的九个数字）是否合法\n    return all([check(x) for style in (rows, columns, blocks) for x in style]) # 一步搞定\n# 感想\n能不用循环体尽量不用循环体，她好，我也好。\n\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "0"}