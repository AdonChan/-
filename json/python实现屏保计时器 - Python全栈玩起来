{"title": "python实现屏保计时器 - Python全栈玩起来 ", "index": "python", "content": "什么都不说先上图吧，Python初学者实现屏保计时器\n原理：利用Python turtle库实现快速画图，每隔一秒钟擦除屏幕，然后获得电脑实时时间，再次画图，呈现动态时间。关于数字如果画，可以把数字理解为一个晶体管状的8（7segments），不同数字都是其演变而来，只不过对不同数字实现抬笔，落笔动作，可以对不同\nimport turtle, time\ndef drawGap():\n    turtle.penup()\n    turtle.fd(5)\ndef drawLine(draw):\n    drawGap()\n    turtle.pendown() if draw else turtle.penup()\n    turtle.fd(40)\n    drawGap()\n    turtle.right(90)\ndef drawDigit(d):\n    drawLine(True) if d in [2,3,4,5,6,8,9] else drawLine(False)  #g\n    drawLine(True) if d in [0,1, 3, 4, 5, 6,7, 8, 9] else drawLine(False) #c\n    drawLine(True) if d in [0, 2, 3, 5, 6, 8, 9] else drawLine(False) #d\n    drawLine(True) if d in [0,2,6,8] else drawLine(False) #e\n    turtle.left(90) #经历一次右转后，调整左转，方向竖直向上\n    drawLine(True) if d in [0,4,5,6,8,9] else drawLine(False) \n    drawLine(True) if d in [0,2,3,5,6,7,8,9] else drawLine(False)\n    drawLine(True) if d in [0,1,2,3,4,7,8,9] else drawLine(False)\n    turtle.left(180)\n    turtle.penup()\n    turtle.fd(20)\ndef drawDate(date):\n    turtle.pencolor('red')\n    for i in date:\n        if i == '-':\n            turtle.write('时',font=('Arial',18,'normal'))\n            turtle.pencolor('green')\n            turtle.fd(40)\n        elif i == '=':\n            turtle.write('分', font=('Arial', 18, 'normal'))\n            turtle.pencolor('blue')\n            turtle.fd(40)\n        elif i == '+':\n            turtle.write('秒', font=('Arial', 18, 'normal'))\n            turtle.pencolor('yellow')\n        else:\n            drawDigit(eval(i))\ndef init():\n    turtle.setup(1920,1080,0,0) #设置画布大小 200 200 为屏幕位置\n    turtle.speed(10)\n    turtle.penup() \n    turtle.goto(0,0)\n    turtle.fd(-350)\n    turtle.pensize(5)\ndef main():\n    while True:\n        turtle.clear()\n        init()\n        time_string = time.strftime(\"%H-%M=%S+\", time.localtime())\n        turtle.getscreen().tracer(30,0)\n        drawDate(time_string) #格式化时间 2017-05=02+ 控制输入年日月\n        time.sleep(1)\n        turtle.hideturtle()\n        \nmain()\n最后可以利用pyinstaller库实现Python程序exe软件化。\n:\\>pip install pyinstaller\n:\\>pyinstaller D:\\codes\\dpython.py\n:\\>pyinstaller -F dpython.py  //可以通过-F 参数对 Python 源文件生成一个独立的可执行文件\n\n                ", "mainLikeNum": ["2 "], "mainBookmarkNum": "0"}