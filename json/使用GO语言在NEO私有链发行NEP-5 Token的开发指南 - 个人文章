{"title": "使用GO语言在NEO私有链发行NEP-5 Token的开发指南 - 个人文章 ", "index": "python", "content": "\n本文是一篇关于使用Go语言设置NEO智能合约和NEO DApps开发环境的教程。 如果您还不了解NEO，智能合约和DApps是什么，您可以参考以下资料：\nWhat is NEO, and what is GAS? — blockknightNEO Smart Contract IntroductionWhat is NEO DApps?\n补充材料：\nNEO Smart Economy — NEO DAppsNEO For Beginners — NEO News Today — NEOFANSAwesome NEO\n**\n介绍\n**开发语言\n在NEO智能合约开发平台进行开发的优势之一是平台支持各种开发语言。\nNEO推荐使用C#语言，不过它也支持使用Python, Java, Go, Ruby，之后还会进一步支持Kotlin, C/C++, JavaScript等开发语言。.\n尽管支持多种语言，但我们仍可以发现现有的很多项目使用的是C#、Python、Java，使用GO语言的并不多。因此，参考City of Zion (CoZ)上的资料，我想尝试写一篇关于使用GO语言开发的简单教程，希望能吸引更多使用GO语言的开发人员参与开发。\n给GO开发人员的建议\n无论你是编程新手还是经验丰富的开发人员，刚开始时都建议你在私有域或测试网上进行开发。\n为什么？\n因为在主网上部署NEP-5 Token需要消耗490个GAS。\n写这篇文章的时候（2018年9月15日），GAS的市场价格是5.8美元，那么该笔费用就高达2842美元。对于任何创业公司而言，这都是一笔不小的费用。\n按照GAS的历史最高价，每个Token的价格为95.87美元，那么仅仅部署一次智能合约，你的成本就要增加4,7000美元。\n因此，刚开始开发的时候，建议你在私有域或者测试网上操作，当你准备好之后，再转到主网上部署合约。\n**\n要求\n**本教程中，开发环境的需求如下所示：\n操作系统 – 桌面版Ubuntu Desktop 18.04.1 LTSGit 命令行接口 –Git语言 – GO语言Go语言依赖管理工具 – DepDocker –Docker CE 和 Docker Compose编辑器 – Visual Studio Code, Extension: Go使用到的NEO的资料\nGO语言智能合约框架 – neo-storm预建好的使用Python语言编写的neo-privnet-with-gas以及nep-scan镜像 –  neo-scan-docker重要提示：结果可能因NEO编译器和节点版本不同而有差异。\n本质上来说，有几种方法可以运行私有域，例如使用 neo-go 或者 neo-privatenet-docker。 但是，在本教程中，我们会使用slipo编写的 neo-scan-docker。 neo-scan-docker是用neo-python构建的，所以它带有一些“Python”组件。 此外，它还带有neo-scan的UI，允许您分析智能合约的部署事务。\n*安装方法可能因操作系统而异。 相关的详细信息，请点击上面的链接查看。\n配置你的环境\n首先，我们先用 neo-scan-docker来配置一下NEO私有域。\n1、 检查一下Git, Docker and Docker Compose这些工具是否已经准备好。\nrichie@Redbuntu:~/Desktop$ sudo git --version\ngit version 2.17.1\nrichie@Redbuntu:~/Desktop$ sudo docker -v\nDocker version 18.06.1-ce, build e68fc7a\nrichie@Redbuntu:~/Desktop$ sudo docker-compose -v\ndocker-compose version 1.22.0, build f46880fe\n2、 克隆(Clone) slipo的 neo-scan-docker仓库代码，并使用 docker-compose来加载Docker镜像。 下载镜像可能需要点时间，请耐心等待done状态的出现。\nrichie@Redbuntu:~/Desktop$ git clone https://github.com/slipo/neo-scan-docker.git\nCloning into 'neo-scan-docker'...\nremote: Counting objects: 27, done.\nremote: Total 27 (delta 0), reused 0 (delta 0), pack-reused 27\nUnpacking objects: 100% (27/27), done.\nrichie@Redbuntu:~/Desktop$ cd neo-scan-docker/\nrichie@Redbuntu:~/Desktop/neo-scan-docker$ sudo docker-compose up\nStarting neo-scan-docker_postgresql_1 ... done\nStarting neo-privnet                  ...\ndone\nStarting neo-scan                     ...\ndone\nAttaching to neo-scan-docker_postgresql_1, neo-privnet, neo-scan\n3、在你的主机文件中，添加127.0.0.1 neo-privnet。注意：主机文件的位置可能因操作系统而异。\nUnix/Linux/macOS - /etc/hosts\nWindows          - C:\\Windows\\System32\\Drivers\\etc\\hosts\n4、在浏览器中输入http://127.0.0.1:4000/，可以看到City of Zion (CoZ)提供的neo-scan网页界面。\n\n5、点击钱包地址(Wallet Addresses)，你可以看到预存有NEO和GAS的钱包地址。部署智能合约的时候我们需要使用到这些Token。更多信息，可以查看 neo-privatenet 。\n导入WIF密钥可以获取预存有NEO和GAS的钱包的密钥。\n私钥/WIF 密钥\nKxDgvEKzgSBPPfuVfw67oPQBSjidEiqTHURKSDL1R7yGaGYAeYnr\n地址: AK2nJJpJr6o664CWJKi1QRXjqeic2zRp8y\n脚本哈希值 (用于检查): b'#\\xba\\'\\x03\\xc52c\\xe8\\xd6\\xe5\"\\xdc2\n39\\xdc\\xd8\\xee\\xe9'\n这样你的NEO私有域和neo-scan就已经配置好了。\n下一步，配置neo-storm。\n1、在终端中输入下面这几条命令， go version、dep version以及echo $GOPATH，确认一下Go, Dep, GOPATH都已经准备好。\nrichie@Redbuntu:~$ go version\ngo version go1.10.1 linux/amd64\nrichie@Redbuntu:~$ dep version\ndep:\n version     : devel\n build date  : \n git hash    : \n go version  : go1.8.3\n go compiler : gc\n platform    : linux/amd64\nrichie@Redbuntu:~$ echo $GOPATH\n/home/richie/go\n2、 输入 go get命令获取neo-storm，输入dep命令检查依赖包，使用make install命令进行安装。 *忽略警告信息\nrichie@Redbuntu:~$ go get -u\ngithub.com/CityOfZion/neo-storm\npackage github.com/CityOfZion/neo-storm: no Go files in\n/home/richie/go/src/github.com/CityOfZion/neo-storm\nrichie@Redbuntu:~$ cd $GOPATH/src/github.com/CityOfZion/neo-storm\nrichie@Redbuntu:~/go/src/github.com/CityOfZion/neo-storm$ sudo dep ensure\n-update\ndep: WARNING: Unknown field in manifest: prune\nrichie@Redbuntu:~/go/src/github.com/CityOfZion/neo-storm$ sudo make install\ninstalling project dependencies\ndep: WARNING: Unknown field in manifest: prune\ninstalling neo-storm framework\ndone installing, happy coding!\n3、 现在neo-storm已经安装好了，你可以测试一下。\nrichie@Redbuntu:~/go/src/github.com/CityOfZion/neo-storm$\nneo-storm\n\nNAME:\n   neo-storm - Neo smart contract\nframework for the Go programming language\n\nUSAGE:\n   neo-storm [global options] command[command options][arguments...]\n\nVERSION:\n   0.0.0\n\nCOMMANDS:\n     compile     compile a smart contract to an .avm file\n     testinvoke  testinvoke a smart contract against a remote NEO RPC node\n     init        initialize a new smart-contract in a directory with boiler plate code\n     help, h     Shows a list of commands or help for one command\n\nGLOBAL OPTIONS:\n   --help, -h     show help\n   --version, -v  print the version\n4、 “安装完成，开心编码” ——接下来开始我们的第一个智能合约吧。\nrichie@Redbuntu:~/Desktop$ cd ~/Desktop\nrichie@Redbuntu:~/Desktop$ neo-storm init -n NeoStormTest\nSuccessfully initialized smart contract [NeoStormTest]\nrichie@Redbuntu:~/Desktop$ cd NeoStormTest/\nrichie@Redbuntu:~/Desktop/NeoStormTest$ ls\nmain.go\nrichie@Redbuntu:~/Desktop/NeoStormTest$ cat main.go\npackage NeoStormTest\nimport \"github.com/CityOfZion/neo-storm/interop/runtime\"\nfunc Main(op string, args []interface{}) {\n    runtime.Notify(\"Hello world!\")\n发行NEP-5通证合约\n1、要在NEO上发行NEP-5通证，我们必须遵守它的通证标准。 *改进的NEP5可以在Github上查看，它允许Token上线NEX交易所。\nNEP-5 Token Standard\n\nMethods\n-totalSupply()\n-name()\n-symbol()\n-decimals()\n-balanceOf(account)\n-transfer(from, to, amount)\n\nEvents\n-transfer(from, to, amount)\n\nNEP-5(.1) by NEX\nMethods\n-totalSupply()\n-name()\n-symbol()\n-decimals()\n-balanceOf(ctx, account)\n-transfer(ctx, from, to, amount, callingScriptHash)\n-transferFrom(ctx, from, to, amount)\n-approve(ctx, owner, spender, amount, callingScriptHash)\n-allowance(ctx, owner, spender)\n2、 不用重新编写一个Token合约，你可以fork/clone我的github仓库。\nrichie@Redbuntu:~/Desktop$ git clone https://github.com/maplerichie/neo-go-nep5 MyFirstNeoGoContract\n3、 启动代码编辑器（我用的是Visual Studio Code），将~/Desktop/MyFirstNeoGoContract 添加到你的工作区（workspace）。Neo-storm的examples文件夹里也有例子，可以点击https://github.com/CityOfZion...。\n\n4、 编辑package，修改NEP-5的属性值，例如decimals, multiplier, owner Address, Name, Symbol, TotalSupply。\nPackage：应该将package修改为 package MyFirstNeoGoContract ，从而与文件夹名称保持一致。\nDecimals：用来设置Token使用的小数位数或者Token可被分割的最小单位。\n例如：NEO的小数点位数是0，意味着它是不可分的Token。因此不能转账或者接收小数个NEO，只能是整数个。小数只能在交易所使用，因为它们创建了自己的十进制系统来方便交易。\nMultiplier：这给出了Decimals和TotalSupply相乘时的值。 输入格式为10 ^ Decimals。\n例如： decimals = 6时，multiplier的值应该是10^6,即multiplier = 1000000。\nOwner: Token发行者的地址。这里我们使用neo-privetenet的地址AK2nJJpJr6o664CWJKi1QRXjqeic2zRp8y。\nName: 字符串格式的NEP-5Token的名称。\nSymbol： NEP-5Token符号，通常是3个字符的长度，但不是必须的。\nTotalSupply: 总发行量。设置一个总发行量可以防止通胀。\n\n5、 修改参数同时确保符合NEP-5Token标准。然后使用neo-storm来编译GO智能合约。\nrichie@Redbuntu:~/Desktop/MyFirstNeoGoContract$ neo-storm\ncompile -i main.go -o main.avm\n6、 当前目录下你可以看到 main.avm文件。现在neo-storm不会运行检查NEP-5Token标准。我的经验是缺少owner Address信息时，会显示错误信息。\n7、 现在讲NEP-5合约部署到Privatenet Docker。这么做之前我们需要先获取Privatenet Docker ID值，然后在主机上复制main.avm文件并粘贴进Privatenet Docker镜像中，然后将它附加到运行的Docker中。\nrichie@Redbuntu:~/Desktop/MyFirstNeoGoContract$ sudo\ndocker ps\n\nCONTAINER ID        IMAGE                       COMMAND                  CREATED             STATUS              PORTS                                                                       \nNAMES\n\n69c60667835b        slipoh/neo-scan             \"/bin/sh -c 'sleep\n3…\"   6 hours ago         Up About a minute   0.0.0.0:4000->4000/tcp                                                      \nneo-scan\n\n88b358cdd8ff       \ncityofzion/neo-privatenet  \n\"/bin/bash /opt/run.…\"  \n6 hours ago         Up About a\nminute  \n0.0.0.0:20333-20336->20333-20336/tcp,\n0.0.0.0:30333-30336->30333-30336/tcp  \nneo-privnet\n\nab96dc398c62        postgres:10.1              \n\"docker-entrypoint.s…\"  \n6 hours ago         Up About a\nminute   0.0.0.0:5432->5432/tcp                                                      \nneo-scan-docker_postgresql_1\n\nrichie@Redbuntu:~/Desktop/MyFirstNeoGoContract$ sudo docker cp main.avm\n88b358cdd8ff:/neo-python\n\nrichie@Redbuntu:~/Desktop/MyFirstNeoGoContract$ sudo docker exec -it\n88b358cdd8ff /bin/bash\n*共识节点运行在在screen sessions，使用’screen -ls’命令查看\n*neo-python安装在/neo-python目录下，目录下带有a neo-privnet.wallet文件\n*有问题可报告给：https://github.com/CityOfZion...\n8、在Docker上，打开neo-python-cli终端并使用密码coz解锁钱包。\nroot@88b358cdd8ff:/neo-python# neopy\nPrivatenet useragent '/NEO:2.7.6/', nonce: 513759764\n[I 180914 10:34:09 LevelDBBlockchain:114] Created Blockchain DB at /root/.neopython/Chains/privnet\n[I 180914 10:34:09 NotificationDB:73] Created Notification DB At\n/root/.neopython/Chains/privnet_notif \nNEO cli. Type 'help' to get started\nneo> open wallet neo-privnet.wallet\n[password]> ***\nOpened wallet at neo-privnet.wallet\n9、 部署合约main.avm前，使用neo-scan看一看钱包余额。\nneo> wallet\n[I 180914 11:01:22 UserWallet:538] Script hash\nb'#\\xba\\'\\x03\\xc52c\\xe8\\xd6\\xe5\"\\xdc2 39\\xdc\\xd8\\xee\\xe9' <class\n'bytes'>\nUsed 0.357 Gas \nUsed 0.357 Gas \nWallet {\n    \"path\":\n\"neo-privnet.wallet\",\n    \"addresses\": [\n        {\n            \"version\": 0,\n            \"script_hash\":\n\"AK2nJJpJr6o664CWJKi1QRXjqeic2zRp8y\",\n            \"frozen\": false,\n            \"votes\": [],\n            \"balances\": {\n         \n\"0xc56f33fc6ecfcd0c225c4ab356fee59390af8560be0e930faebe74a6daff7c9b\":\n\"100000000.0\",\n              \n\"0x602c79718b16e442de58778e148d0b1084e3b2dffd5de6b7b16cee7969282de7\":\n\"74589.9996\"\n            },\n            \"is_watch_only\":\nfalse,\n            \"tokens\": [\n                \"[a3640dd3c560c75528e5f861da5da98958d0d713]\nNXT2 : 2500000.00000000\"\n            ]\n        }\n    ],\n    \"height\": 10294,\n    \"percent_synced\": 100,\n    \"synced_balances\": [\n        \"[NEO]: 100000000.0 \",\n        \"[NEOGas]: 74589.9996\n\",\n        \"[NXT2]: 2500000 \"\n    ],\n    \"public_keys\": [\n        {\n            \"Address\":\n\"AK2nJJpJr6o664CWJKi1QRXjqeic2zRp8y\",\n            \"Public Key\":\n\"031a6c6fbbdf02ca351745fa86b9ba5a9452d785ac4f7fc2b7548ca2a46c4fcf4a\"\n        }\n    ],\n    \"tokens\": [\n        {\n            \"name\": \"NEX\nTemplate V2\",\n            \"symbol\":\n\"NXT2\",\n            \"decimals\": 8,\n            \"script_hash\":\n\"0xa3640dd3c560c75528e5f861da5da98958d0d713\",\n            \"contract_address\":\n\"AHao29nmHmJ82Fsj1qDgqtDc2rtQ8u2n2b\"\n        }\n    ],\n    \"claims\": {\n        \"available\":\n\"0.0\",\n        \"unavailable\":\n\"7730.0\"\n    }\n}\n10、 看来可以开始部署了。再次提醒，钱包密码是coz。\nneo> import contract main.avm 0710 05 True False \ncontract properties: 1\nPlease fill out the following contract details:\n[Contract Name] > MyFirstNEOToken\n[Contract Version] > 1.0\n[Contract Author] > Richie\n[Contract Email] > babierichie@hotmail.com\n[Contract Description] > First NEO Token\nCreating smart contract....\n                 Name: MyFirstNEOToken \n              Version: 1.0\n               Author: Richie \n                Email: babierichie@hotmail.com \n          Description: First NEO Token \n        Needs Storage: True \n Needs Dynamic Invoke: False \n{\n    \"hash\":\n\"0x4e9b87c96158a8e2cc4b74794f727b38947e9862\",\n    \"script\": \"...\",\n    \"parameters\":\n\"0710\",\n    \"returntype\":\n\"05\"\n}\nUsed 500.0 Gas\n-------------------------------------------------------------------------------------------------------------------------------------\nTest deploy invoke successful\nTotal operations executed: 11 \nResults:\n[<neo.Core.State.ContractState.ContractState object at 0x7f79b510d278>]\nDeploy Invoke TX GAS cost: 490.0 \nDeploy Invoke TX Fee: 0.0 \n-------------------------------------------------------------------------------------------------------------------------------------\nEnter your password to continue and deploy this contract\n[password]> ***\n[I 180914 11:03:33 Transaction:613] Verifying transaction: b'9d63e8977edb6448b7d9efa93e0ff0258324ab3b530d3848def4b29dd6569114'\nRelayed Tx: 9d63e8977edb6448b7d9efa93e0ff0258324ab3b530d3848def4b29dd6569114\n11、 使用给定的哈希值验证交易。 注意：不同机器的哈希值是不一样的。\nneo> tx\n9d63e8977edb6448b7d9efa93e0ff0258324ab3b530d3848def4b29dd6569114\n{\n    \"txid\": \"0x9d63e8977edb6448b7d9efa93e0ff0258324ab3b530d3848def4b29dd6569114\",\n    \"type\":\n\"InvocationTransaction\",\n    \"version\": 1,\n    \"attributes\": [],\n    \"vout\": [\n        {\n            \"n\": 0,\n            \"asset\":\n\"0x602c79718b16e442de58778e148d0b1084e3b2dffd5de6b7b16cee7969282de7\",\n            \"value\":\n\"25493.9997\",\n            \"address\":\n\"AK2nJJpJr6o664CWJKi1QRXjqeic2zRp8y\"\n        }\n    ],\n    \"vin\": [\n        {\n            \"txid\":\n\"475a091ccaa6330320a29884f5f8796a260bdba91352dd409d16787b37d8be26\",\n            \"vout\": 0\n        }\n    ],\n    \"sys_fee\":\n\"4.9e-06\",\n    \"net_fee\":\n\"489.9999951\",\n    \"scripts\": [\n        {\n            \"invocation\":\n\"40510fa6630ef581108057ebe967cd306522466a32eaf068cf3717da1e640b866246c013033e3c878ebf9247a5a3500178b21b126b3af63ed07a86b0d2c4f34c89\",\n            \"verification\":\n\"21031a6c6fbbdf02ca351745fa86b9ba5a9452d785ac4f7fc2b7548ca2a46c4fcf4aac\"\n        }\n    ],\n    \"script\": \"...\",\n    \"gas\": 49000000000,\n    \"height\": 10302,\n    \"unspents\": [\n        {\n            \"n\": 0,\n            \"asset\":\n\"0x602c79718b16e442de58778e148d0b1084e3b2dffd5de6b7b16cee7969282de7\",\n            \"value\":\n\"25493.9997\",\n            \"address\":\n\"AK2nJJpJr6o664CWJKi1QRXjqeic2zRp8y\"\n        }\n    ]\n}\n12、 交易显示后，再次查看钱包余额。 在步骤9，我们的GAS余额为74589.9996，现在，GAS余额变为74099.9996。 因为这减少的490个 GAS已用于合约部署！\nneo> wallet\n[I 180914 11:18:38 UserWallet:538] Script hash\nb'#\\xba\\'\\x03\\xc52c\\xe8\\xd6\\xe5\"\\xdc2 39\\xdc\\xd8\\xee\\xe9' <class\n'bytes'>\nUsed 0.357 Gas \nUsed 0.357 Gas \nWallet {\n    \"path\":\n\"neo-privnet.wallet\",\n    \"addresses\": [\n        {\n            \"version\": 0,\n            \"script_hash\":\n\"AK2nJJpJr6o664CWJKi1QRXjqeic2zRp8y\",\n            \"frozen\": false,\n            \"votes\": [],\n            \"balances\": {\n               \n\"0xc56f33fc6ecfcd0c225c4ab356fee59390af8560be0e930faebe74a6daff7c9b\":\n\"100000000.0\",\n               \n\"0x602c79718b16e442de58778e148d0b1084e3b2dffd5de6b7b16cee7969282de7\":\n\"74099.9995\"\n            },\n            \"is_watch_only\":\nfalse,\n            \"tokens\": [\n               \n\"[a3640dd3c560c75528e5f861da5da98958d0d713] NXT2 :\n2500000.00000000\"\n            ]\n        }\n    ],\n    \"height\": 10348,\n    \"percent_synced\": 100,\n    \"synced_balances\": [\n        \"[NEO]: 100000000.0 \",\n        \"[NEOGas]: 48605.9999\n\",\n        \"[NXT2]: 2500000 \"\n    ],\n    \"public_keys\": [\n        {\n            \"Address\":\n\"AK2nJJpJr6o664CWJKi1QRXjqeic2zRp8y\",\n            \"Public Key\":\n\"031a6c6fbbdf02ca351745fa86b9ba5a9452d785ac4f7fc2b7548ca2a46c4fcf4a\"\n        }\n    ],\n    \"tokens\": [\n        {\n            \"name\": \"NEX\nTemplate V2\",\n            \"symbol\": \"NXT2\",\n            \"decimals\": 8,\n            \"script_hash\":\n\"0xa3640dd3c560c75528e5f861da5da98958d0d713\",\n            \"contract_address\":\n\"AHao29nmHmJ82Fsj1qDgqtDc2rtQ8u2n2b\"\n        }\n    ],\n    \"claims\": {\n        \"available\":\n\"0.0\",\n        \"unavailable\": \"8652.0\"\n    }\n}\n我们也可以看一看部署好的合约。\nneo> contract search My\nFound 1 results for My\n{\n    \"version\": 0,\n    \"code\": {\n        \"hash\": \"0x4e9b87c96158a8e2cc4b74794f727b38947e9862\",\n        \"script\": \"...\",\n        \"parameters\": \"0710\",\n        \"returntype\": 5\n    },\n    \"name\": \"MyFirstNEOToken\",\n    \"code_version\": \"1.0\",\n    \"author\": \"Richie\",\n    \"email\": \"babierichie@hotmail.com\",\n    \"description\": \"First NEO Token\",\n    \"properties\": {\n        \"storage\": true,\n        \"dynamic_invoke\": false\n    }\n}\n13、最后，我们可以尝试使用钱包的密码coz，来调用这个带有合约哈希值的Token。\nneo> testinvoke\n0x4e9b87c96158a8e2cc4b74794f727b38947e9862 deploy []\n好了，现在你已经在NEO的私有域上成功的发行了NEP-5Token。\n最后\n希望对于Gophers来说，能很轻松地照着本教程学习。也希望GO开发人员能加入 NEO’s Discord，一起开发学习。你一定要试一试！\n如果您真的需要我的帮助，请在Discord上联系我（LikKee.Richie＃5647）\n作者：Richie Chong，马来西亚人，NEOMY Community 社区成员校对者：Aaron Hong，马来西亚人\n翻译：包子\n原文链接：https://medium.com/coinmonks/...\n\nNEOFANS：neofans.org NEOFANS 微博：https://www.weibo.com/neofans...NEOFANS  telegram群：https://t.me/NEOfansCN\n\n                ", "mainLikeNum": ["1 "], "mainBookmarkNum": "1"}