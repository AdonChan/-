{"title": "关于python编码，你真的明白了吗 - 开发小记 ", "index": "python2.7,编码,python", "content": "计算机存储的几个概念\n想要彻底搞清楚编码问题，我们必须要先搞清楚计算机是怎么存储数据的，这就涉及到了计算机基础的几个概念了，开篇我们就先来捋捋这几个容易混淆的概念。\nbit\n二进制位， 是计算机内部数据储存的最小单位，11010100是一个8位二进制数。一个二进制位只可以表示0和1两种状态（2^1）；两个二进制位可以表示00、01、10、11四种（2^2）状态；三位二进制数可表示八种状态（2^3）……\nByte\n字节，是计算机中数据处理的基本单位，计算机中以字节为单位存储和解释信息，规定一个字节由八个二进制位构成，即1个字节等于8个比特（1Byte=8bit）。八位二进制数最小为00000000，最大为11111111；通常1个字节可以存入一个ASCII码，2个字节可以存放一个汉字国标码。\n字\n在计算机中，一串数码作为一个整体来处理或运算的，称为一个计算机字，简称宇。字通常分为若干个字节(每个字节一般是8位)。在存储器中，通常每个单元存储一个字，因此每个字都是可以寻址的。字的长度用位数来表示。在计算机的运算器、控制器中，通常都是以字为单位进行传送的。\n字长\n字长：电脑技术中对CPU在单位时间内(同一时间)能一次处理的二进制数的位数叫字长。所以能处理字长为8位数据的CPU通常就叫8位的CPU。同理32位的CPU就能在单位时间内处理字长为32位的二进制数据。\n字节和字长的区别：由于常用的英文字符用8位二进制就可以表示，所以通常就将8位称为一个字节。字长的长度是不固定的，对于不同的CPU、字长的长度也不一样。8位的CPU一次只能处理一个字节，而32位的CPU一次就能处理4个字节，同理字长为64位的CPU一次可以处理8个字节。\n常见的编码\nASCII: 1个字节，只编码英文字母和符号\ngb2312: 2个字节，增加了中文汉字和符号\nUnicode: 把所有语言都统一到一套编码里把所有语言都统一到一套编码里，一般是2个字节，生僻字4个字节\nutf-8： 可变长编码，常用的英文字母被编码成1个字节，汉字通常是3个字节，只有很生僻的字符才会被编码成4-6个字节。如果你要传输的文本包含大量英文字符，用UTF-8编码就能节省空间：\n在计算机内存中，统一使用Unicode编码，当需要保存到硬盘或者需要传输的时候，就转换为UTF-8编码，这样可以节省很多存储空间。\nPython编码\n注：这里讨论的是python2.7的情况\n两个函数\n在python中，str和unicode都是basestring的子类，basestring有以下两个方法：\nencode()： 将unicode字符串转换为其他编码字符串，参数为转换后编码\ndecode()： 将其他编码转换为unicode字符串，参数为转换前编码\nPS:\"string\".decode('utf-8') == unicode('string', 'utf-8')\n一个栗子\ns = '中文'\nprint type(s), len(s)\n\nu = u'中文'\nprint type(u), len(u)\n\nu2s = u'中文'.encode('utf-8')\nprint type(u2s), len(u2s)\n\n结果是这样的\n<type 'str'> 6\n<type 'unicode'> 2\n<type 'str'> 6\nconsole下查看u2s\n>>> u'中文'.encode('utf-8')\n'\\xe4\\xb8\\xad\\xe6\\x96\\x87'\n结论：\n\npython中定义的一个str变量实则是字节串，由Unicode经过编码(encode)后的字节组成的（也正好印证了utf8编码中一个中文字符是3个字节）\nUnicode才是真正意义上的字符串，由字符组成\n\n再次回顾两个函数用法\ns = '中文'\n# 这时是str，转为unicode需要用decode\nu = s.decode('utf-8')\nprint type(u)\n# 打印 <type 'unicode'>\n\n# unicode转为str ,使用encode\ns2 = u.encode('utf-8')\nprint type(s2)\n# 打印 <type 'str'>\n新结论：不同编码转换,使用Unicode作为中间编码\n#s是code_A的str\ns.decode('code_A').encode('code_B')\n在Python 3.x版本中，把'xxx'和u'xxx'已经都统一成Unicode编码了，即写不写前缀u都是一样的，而以字节形式表示的字符串则必须加上b前缀：b'xxx'。\n由于Python源代码也是一个文本文件，所以，当你的源代码中包含中文的时候，在保存源代码时，就需要务必指定保存为UTF-8编码。当Python解释器读取源代码时，为了让它按UTF-8编码读取，我们通常在文件开头写上这两行：\n#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n参考\n字节、字、位、比特，这四者之间的关系廖雪峰：python2.7教程之字符串和编码PYTHON-进阶-编码处理小结\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "6"}