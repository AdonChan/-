{"title": "[零基础学Python]集合的关系 - 易水禾 ", "index": "python", "content": "冻结的集合\n\n前面一节讲述了集合的基本概念，注意，那里所涉及到的集合都是可原处修改的集合。还有一种集合，不能在原处修改。这种集合的创建方法是：\n\n>>> f_set = frozenset(\"qiwsir\")     #看这个名字就知道了frozen，冻结的set\n>>> f_set\nfrozenset(['q', 'i', 's', 'r', 'w'])\n>>> f_set.add(\"python\")             #报错\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\nAttributeError: 'frozenset' object has no attribute 'add'\n\n>>> a_set = set(\"github\")           #对比看一看，这是一个可以原处修改的set\n>>> a_set\nset(['b', 'g', 'i', 'h', 'u', 't'])\n>>> a_set.add(\"python\")\n>>> a_set\nset(['b', 'g', 'i', 'h', 'python', 'u', 't'])\n\n\n集合运算\n\n先复习一下中学数学（准确说是高中数学中的一点知识）中关于集合的一点知识，主要是唤起那痛苦而青涩美丽的回忆吧，至少对我是。\n\n元素与集合的关系\n\n元素是否属于某个集合。\n\n>>> aset\nset(['h', 'o', 'n', 'p', 't', 'y'])\n>>> \"a\" in aset\nFalse\n>>> \"h\" in aset\nTrue\n\n\n集合与集合的纠结\n\n假设两个集合A、B\n\n\nA是否等于B，即两个集合的元素完全一样\n\n在交互模式下实验\n\n>>> a           \nset(['q', 'i', 's', 'r', 'w'])\n>>> b\nset(['a', 'q', 'i', 'l', 'o'])\n>>> a == b\nFalse\n>>> a != b\nTrue\n\n\n\nA是否是B的子集，或者反过来，B是否是A的超集。即A的元素也都是B的元素，但是B的元素比A的元素数量多。\n\n实验一下\n\n>>> a\nset(['q', 'i', 's', 'r', 'w'])\n>>> c\nset(['q', 'i'])\n>>> c<a     #c是a的子集\nTrue\n>>> c.issubset(a)   #或者用这种方法，判断c是否是a的子集\nTrue\n>>> a.issuperset(c) #判断a是否是c的超集\nTrue\n\n>>> b\nset(['a', 'q', 'i', 'l', 'o'])\n>>> a<b     #a不是b的子集\nFalse\n>>> a.issubset(b)   #或者这样做\nFalse\n\n\n\nA、B的并集，即A、B所有元素，如下图所示\n\n\n\n>>> a\nset(['q', 'i', 's', 'r', 'w'])\n>>> b\nset(['a', 'q', 'i', 'l', 'o'])\n>>> a | b                       #可以有两种方式，结果一样\nset(['a', 'i', 'l', 'o', 'q', 's', 'r', 'w'])\n>>> a.union(b)\nset(['a', 'i', 'l', 'o', 'q', 's', 'r', 'w'])\n\n\n\nA、B的交集，即A、B所公有的元素，如下图所示\n\n\n\n>>> a\nset(['q', 'i', 's', 'r', 'w'])\n>>> b\nset(['a', 'q', 'i', 'l', 'o'])\n>>> a & b       #两种方式，等价\nset(['q', 'i'])\n>>> a.intersection(b)\nset(['q', 'i'])\n\n\n我在实验的时候，顺手敲了下面的代码，出现的结果如下，看官能解释一下吗？（思考题）\n\n>>> a and b\nset(['a', 'q', 'i', 'l', 'o'])\n\n\n\nA相对B的差（补），即A相对B不同的部分元素，如下图所示\n\n\n\n>>> a\nset(['q', 'i', 's', 'r', 'w'])\n>>> b\nset(['a', 'q', 'i', 'l', 'o'])\n>>> a - b\nset(['s', 'r', 'w'])\n>>> a.difference(b)\nset(['s', 'r', 'w'])\n\n\n-A、B的对称差集，如下图所示\n\n\n\n>>> a\nset(['q', 'i', 's', 'r', 'w'])\n>>> b\nset(['a', 'q', 'i', 'l', 'o'])\n>>> a.symmetric_difference(b)\nset(['a', 'l', 'o', 's', 'r', 'w'])\n\n\n以上是集合的基本运算。在编程中，如果用到，可以用前面说的方法查找。不用死记硬背。\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "3"}