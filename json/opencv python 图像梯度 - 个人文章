{"title": "opencv python 图像梯度 - 个人文章 ", "index": "opencv-python,opencv,python", "content": "Image Gradients \nOpenCV提供三种类型的梯度滤波器或高通滤波器，Sobel，Scharr和Laplacian.\n1 Sobel 和 Scharr 导数\nSobel算子是结合了高斯平滑与微分运算的结合方法，所以它的抗噪声能力很强.\n用户可以设定求导方向，水平或者垂直（通过参数yorder和xorder）.也可以指定卷积核大小，通过参数ksize.如果ksize=-1，那么一个3*3的scharr滤波器会被使用，该滤波器会得到比Sobel滤波器更好的效果.\n2\n该方法计算了图像的拉普拉斯导数:\n$$\n\\Delta src = \\frac{\\partial ^2{src}}{\\partial x^2} + \\frac{\\partial ^2{src}}{\\partial y^2}\n$$\n每个求导数的方法都是使用Sobel求导方法,如果ksize=1，那么会使用下面核函数进行滤波.\n$$\nkernel = \\begin{bmatrix} 0 & 1 & 0 \\\\ 1 & -4 & 1 \\\\ 0 & 1 & 0 \\end{bmatrix} \n$$\n代码：\nimport cv2\nfrom matplotlib import pyplot as plt\n\nimg = cv2.imread('img.jpg',0)\n\nlaplacian = cv2.Laplacian(img,cv2.CV_64F)\nsobelx = cv2.Sobel(img,cv2.CV_64F,1,0,ksize=5)\nsobely = cv2.Sobel(img,cv2.CV_64F,0,1,ksize=5)\n\nplt.subplot(2,2,1),plt.imshow(img,cmap = 'gray')\nplt.title('Original'), plt.xticks([]), plt.yticks([])\nplt.subplot(2,2,2),plt.imshow(laplacian,cmap = 'gray')\nplt.title('Laplacian'), plt.xticks([]), plt.yticks([])\nplt.subplot(2,2,3),plt.imshow(sobelx,cmap = 'gray')\nplt.title('Sobel X'), plt.xticks([]), plt.yticks([])\nplt.subplot(2,2,4),plt.imshow(sobely,cmap = 'gray')\nplt.title('Sobel Y'), plt.xticks([]), plt.yticks([])\n\nplt.show()\n\nNOTE\n在我们的上一个示例中，输出数据类型为cv.CV_8U或np.uint8.但是这有一个小问题.将黑到白转换视为正斜率（它具有正值），而将白到黑转换视为负斜率（它具有负值）. 因此，当您将数据转换为np.uint8时，所有负斜率都为零.\n如果想要两种边界都检测到，最高的办法就是将输出数据类型设置更高，cv2.CV_16S，cv2.CV_64F等等,然后取绝对值转换为cv2.CV_8.\n代码：\nimport numpy as np\nimport cv2\nfrom matplotlib import pyplot as plt\n\nimg = cv2.imread('img5.png',0)\n\n\n# Output dtype = cv.CV_8U\nsobelx8u = cv2.Sobel(img,cv2.CV_8U,1,0,ksize=5)\n\n# Output dtype = cv.CV_64F. Then take its absolute and convert to cv.CV_8U\nsobelx64f = cv2.Sobel(img,cv2.CV_64F,1,0,ksize=5)\nabs_sobel64f = np.absolute(sobelx64f)\nsobel_8u = np.uint8(abs_sobel64f)\n\nplt.subplot(1,3,1),plt.imshow(img,cmap = 'gray')\nplt.title('Original'), plt.xticks([]), plt.yticks([])\nplt.subplot(1,3,2),plt.imshow(sobelx8u,cmap = 'gray')\nplt.title('Sobel CV_8U'), plt.xticks([]), plt.yticks([])\nplt.subplot(1,3,3),plt.imshow(sobel_8u,cmap = 'gray')\nplt.title('Sobel abs(CV_64F)'), plt.xticks([]), plt.yticks([])\n\nplt.show()\n\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "0"}