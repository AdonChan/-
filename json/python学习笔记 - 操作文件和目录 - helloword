{"title": "python学习笔记 - 操作文件和目录 - helloword ", "index": "python", "content": "pytho的os、os.path模块给我买提供了很多对文件或者目录进行操作的方法。\nos.path 对目录的操作\nimport os.path\n\nprint os.path.abspath('.')\n# 获取绝对路径\n\nprint os.path.join('aaa','bbb')\n# 合并目录。因为路径分隔符是平台相关的\n\nprint os.path.split('aaa/bbb/ccc')\n#分离路径。总是将把一个路径拆分为两部分，后一部分总是最后级别的目录或文件名\n\nprint os.path.split('aaa')\n# ('', 'aaa')\n\nprint os.path.split('aaa/bbb/ccc/demo.txt')\n# ('aaa/bbb/ccc', 'demo.txt')\n\nprint os.path.splitext('aaa/bbb/ccc/demo.txt')\n# ('aaa/bbb/ccc/demo', '.txt')\nos对文件进行操作\nos.rename('world222.txt', 'world222.txt')\n# 重命名\n\nos.remove('world2.txt')\n# 删除文件\n\nos.removedirs('hello')\n删除目录时，目录必须为空\n# 删除目录\nshutil，os模块的扩展版。\n说明：shutil的高级拷贝函数copy()`copy2()`均不能完全拷贝文件的元数据（metadata).\nshutil.copyfileobj(fsrc, fdst[, length])\n拷贝file-like object.\nshutil.copyfile(src, dst)\nsrc、dst必须是带路径的文件名。src、dst如果一样，那么则会包Error错误目标路径必须可写，否则IOError\nshutil.copy(src, dst)\nsrc dst可以是文件或者目录\nshutil.copymode(src, dst)\n拷贝mode，就是文件权限\nshutil.copystat(src, dst)\n拷贝文件权限，最后访问时间，最后修改时间，标记。\nshutil.copy(src, dst) 和 shutil.copy2(src, dst)\nsrc 需是文件； dst可以是文件或者是目录。shutil.copy会拷贝权限信息。shutil.copy2则是shutil.copy(src, dst)和shutil.copystat(src, dst)的结合。\nshutil.copytree(src, dst)\n拷贝目录，dst必须是还未存在的。dst如果已经存在但是并非一个目录，也会出错。\nshutil.rmtree(src, dst)\n删除目录。\nshutil.move(src, dst)\n讲一个目录或者文件移动到另一个文件或者目录。\n过滤\n我们可以使用for...if...来过滤目录。\nprint [x for x in os.listdir('.') if os.path.splitext(x)[1] == '.py']\n#打印出所有以.py结尾的文件。\n\nprint [x for x in os.listdir('.') if os.path.isdir(x)]\n# 打印出所有的目录。\n\n\n                ", "mainLikeNum": ["1 "], "mainBookmarkNum": "2"}