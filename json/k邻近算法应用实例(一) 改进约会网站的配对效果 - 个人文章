{"title": "k邻近算法应用实例(一) 改进约会网站的配对效果 - 个人文章 ", "index": "python", "content": "k邻近算法实例额（一）\n改进约会网站的配对效果\n应用背景：\n某约会网站收集了一些数据放在datingTestSet.txt中，每个样本数据占据一行，总共有1000行。样本主要包含以下3种特征:□ 每年获得的飞行常客里程数 □ 玩视频游戏所耗时间百分比 □ 每周消费的冰淇淋公升数在将上述特征数据输人到分类器之前，必须将待处理数据的格式改变为分类器可以接受的格式 。在kNN.py中创建名为file2matrix的函数，以此来处理输人格式问题。该函数的输人为文件名字符串输出为训练样本矩阵和类标签向量。\n转换数据生成数据集\n在kNN.py 中添加下面的函数：\ndef file2matrix(filename): \n    # 打开文件\n    fr = open(filename)\n    # 逐行读取\n    arrayOLines = fr.readlines()\n    # 获取总函数\n    numberOfLines = len(arrayOLines) \n    # 初始化矩阵\n    returnMat = zeros((numberOfLines,3)) \n    # 初始化标签数组\n    classLabelVector = []\n    index = 0\n    for line in arrayOLines:\n        # 头尾部格式化\n        line = line.strip()\n        # 根据tab切分\n        listFromLine = line.split('\\t')\n        # 矩阵单行赋予元素\n        returnMat[index, :] = listFromLine[0:3]   \n        # 标签数据赋值  \n        classLabelVector.append(int(listFromLine[-1])) \n        index += 1\n    return returnMat,classLabelVector\n进入终端：\n使用Matplotlib分析数据\n使用Matplotlib创建数据集的散点图， 进入终端:\n得到绘图：如上图散点图使用矩阵的第二、第三列数据，分别表示特征值“玩视频游戏所耗时间百分比”（x轴）和 “每周所消费的冰淇淋公升数”(y轴)\n由于没有使用上各组数据等标签， 所以我们很难从上图看出有用的信息，Matplotlib库提供了scatter函数支持个性化标记散点图上的点， 所以我们重新进入终端:\n获得新的绘图:\n未完待续·····\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "1"}