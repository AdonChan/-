{"title": "Anaconda：安装或更新 Python 第三方包 - 个人文章 ", "index": "pip,conda,python,anaconda", "content": "conda和pip简介\nconda\nconda是包及其依赖项和环境的管理工具。\n适用语言：Python, R, Ruby, Lua, Scala, Java, JavaScript, C/C++, FORTRAN。\n适用平台：Windows, macOS, Linux\n用途：\n\n快速安装、运行和升级包及其依赖项。\n在计算机中便捷地创建、保存、加载和切换环境。\n\n如果你需要的包要求不同版本的Python，你无需切换到不同的环境，因为conda同样是一个环境管理器。仅需要几条命令，你可以创建一个完全独立的环境来运行不同的Python版本，同时继续在你常规的环境中使用你常用的Python版本。——conda官方网站\nconda为Python项目而创造，但可适用于上述的多种语言。\nconda包和环境管理器包含于Anaconda的所有版本当中。\npip\npip是用于安装和管理软件包的包管理器。\npip编写语言：Python。\nPython中默认安装的版本：\nPython 2.7.9及后续版本：默认安装，命令为pipPython 3.4及后续版本：默认安装，命令为pip3pip名称的由来：pip采用的是递归缩写进行命名的。其名字被普遍认为来源于2处：\n“Pip installs Packages”（“pip安装包”）“Pip installs Python”（“pip安装Python”）\n安装或更新 Python 第三方包\n可以使用conda和pip命令来安装包，但是，请不要使用pip命令来更新conda包，这样可能会导致环境问题。当首次使用Anaconda或者Miniconda时，最好使用conda进行更新包。\n安装包\n安装不包含在Anaconda中的Python第三方包。通常情况下，可以使用下方这个命令：\nconda install package_name\n如果上方命令失败，可以使用pip包管理工具来安装第三方包：  \npip install package_name\n更新包\n可以使用conda update命令来更新包：\nconda update package_name\npip同样支持使用带--upgrade标志来更新包：\npip install --upgrade package_name\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "0"}