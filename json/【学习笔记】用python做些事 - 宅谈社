{"title": "【学习笔记】用python做些事 - 宅谈社 ", "index": "python", "content": "课时5：字符串-基础\n切片，索引\ns = \"use python do somenthing\n\ns[1],s[-1],s[1:3],s[1:6:2],s[1:],s[:-1],s[:]\n\nspilt,join,[start:stop:step]\n常用方法集合\n\"let us\" + s, s*2 #字符串重复\ns.upper()\ns.find('pa')\ns.replace('python','java')\n\nprint \"%s like %s\" %('we','python')\n\nstrip()    #返回去除两侧空格（不包括内部）的字符串\n转义r''\n\ns=\"C:\\newpython\",print s,len(s)\nr'\\n\\    #前缀字符串，不考虑转义\ns=r\"C:\\newpython\"\nUnicode u''\ncoding：utf-8\n\n课时6：字符串-re\nimport re\n\n# Regular expression\n\nre.match(p,text)\nre.search(p,text)\nre.findall(p,text)\nre.split(p,text)\nre.sub(p,s,text)\n\npattern = re.compile(p)\nresults = pattern.match(text)\n整体模式\n11个元字符:\\,^,$,.,|,?,*,(),[],{},特殊含义：\\,.可选：|,[]重复：*,+,?,{},（贪婪模式）6个字符类：\\d,\\D,\\s,\\S,\\w,\\W4个位置类：\\b,\\B,\\A,\\Z,C^、$)分组:（）编译选项：I、L、M、S、U、X\n^    start\n$    end\n.    except \\n\n+    1-inf\n*    0-inf\n?    0-1\n[]    or\n{}    repeat\n[^]   not\n\n课时7 日期和时间\nDatetime\n日期：                Datetime.date.today()\n日期和时间：           datetime.datetime.now()\n1000天之后是哪一天：    datetime.timedelta(days=1000)\n打印格式的问题：        Isoformat(),strtime()\n字符串转换：            strptime()\ntime\nDatetime.time(12,11,30)\n\nTime.time()    #实际时间\nTime.clock(）    #cpu时间\nTime.sleep()    #以s为时间\nimport datetime\n课时8 列表\n切片，索引，引用\na = [1,2,3]\na_ref = a\na[2] = 100\n常用操作\na_copy=a[:]\na.append(300)\na.insert(1,50)\na.pop()\na.sort()\na.reverse()\ndel a[1]\n嵌套\nb = [a,a_ref,a_copy]\nc = [1,2,'123','abc']\n\n+,* Count(val)    #对某个元素计数（多态函数）\n元组\n不可变的列表\n(a,b,c)    #不能原处修改\n常用操作\nindex \ncount    #对某个元素计数\n+,*\n嵌套：    可嵌套可变的list\n转换：    tuple()\n课时9 字典\nKey-Value\ndict = {'xiaoming':90,'xiaohong':80,'xioamao':60}\ndict,zip\n常用操作\nKeys,values\nGet\nUpdate\nDel\nClear\n嵌套\n散列表，没有顺序，适合插入，查询操作\nKey不一定是字符串，但一定是不可变对象（数字，字符串，元组）。\n[(k,dict[k] for k ins sorted(dict,keys())]    #列表解析\nsorted(dict.iteritems()key=lambda d:d[1],reverse=True)\n再谈引用和拷贝\n#引用\nL = [4，5，6]\nX = L*4,Y = [L]*4\nL[1] = 0\nprint X,Y\n\n\n#浅拷贝\n字典D.copy(),copy.copy(D)\n列表L[:]\n\n#深拷贝\ncopy.deepcopy(D)\n#将两个等长度的list合并成dict\ntext = 'C++ python shell ruby java javascript c'\ncode_num = [38599,100931,26153,93142,84275,184220]\n\ntext_list = text.split(' ')\ncode_dict = dict(zip(text_list,code_num))\n\n\n#get\na = code_dict.get('fortran',None)\n\n#update,del,copy,clear\nother_code = {'php':78014,'objective-c':34444}\ncode_dict.update(other_code)\ndel code_dict['c++']\n\n#sort key and value 列表解析\n[(k,a_copy[k]) for k in sorted(a_copy.keys())]\n课时10 文件\n#常用操作\n\nF = open(path,'r')    #返回对象为file-like object\n                      #还可以是内存，网络等，r，w，a\n\nF.read()\nF.readline()\nF.write()\nF.close()\n\n#中文支持\nimport codecs\nf = codecs.open(filename,mode,encoding)\n\n#文件操作\nimport os\nos.path.exists(filename)\nos.rename(old,new)\n#Shelve库\nimport shelve\nD = Shelve.open(file)\nD['name']='newtext'\nD.close()\n\n#Pickle/cPickle\nimport cPickle\nf = open(file,mode)\ncPickle.dump(obj,f)\nObj = cPickle.load(f)\n课时11 作业参考\n11.1 验证E-mail正则表达式\n\nimport re\ntext='aaa@163.com chu-tian-shu_1981@heibanke2015.com abc-fff@xfd.org ccc_fd2@fff.edu aaa@111 com'\n\nprint(re.findall(r'(\\w+[-\\w]*)@([a-zA-Z0-9]+)\\.(com|org|edu)',text))\n11.2  随机函数\n利用随机函数产生一个用户的用户名，密码，并利用文件将用户名和密码保存下来。\nimport random\ncharactor='abcdefghijklmnopqrstuvwxyz0123456789'\n\nlen_char = len(charactor)-1\n# generate name\na=[0]*4\na[0]=charactor[random.randint(0,len_char)]\na[1]=charactor[random.randint(0,len_char)]\na[2]=charactor[random.randint(0,len_char)]\na[3]=charactor[random.randint(0,len_char)]\n\nname=''.join(a)\n\n# generate password\na=[0]*6\na[0]=charactor[random.randint(0,len_char)]\na[1]=charactor[random.randint(0,len_char)]\na[2]=charactor[random.randint(0,len_char)]\na[3]=charactor[random.randint(0,len_char)]\na[4]=charactor[random.randint(0,len_char)]\na[5]=charactor[random.randint(0,len_char)]\n\npassword=''.join(a)\n\n#write file\nf=open('a.txt','w')\nf.write(name+','+password+'\\n')\nf.close()\n11.3 密码加密\n上面的文件中密码没有加密，不安全，请将文件内容读出后将密码字段通过md5的库处理后，再保存至另一个文件。\n#md5加密数据库\nimport hashlib\nhashlib.md5(password).hexdigest()\n11.4 公交车数据读取，存入字典\n\n#!/usr/bin/env python\n# coding: utf-8\nimport codecs\nimport re\n# read the file\n\n# f=codecs.open('beijing_jt.csv','r','utf-8')\n# read_list=[]\n# read_tmp=f.readline()\n\n# for i in range(0,39):\n#    read_tmp=f.readline()\n#    read_list.append(read_tmp)\n    \n# f.close()\n\nf=codecs.open('beijing_jt.csv','r','utf-8')\nread_tmp_total=f.readlines()\nf.close()\n\n# get linenum and stations information\ns_tmp=''.join(read_tmp_total[1:40])   #read_list\njt_info=s_tmp.split(',')\n\njt_stations = jt_info[-1].split('\\r\\n \\r\\n')\n\nprint jt_info[1]\n\n# convert stations info format\nstation_pattern = (r'(?P<number>[0-9]+)\\s(?P<name>\\D+)')\n\nstation_list = []\nstations = re.findall(station_pattern,jt_info[-1]) \nfor tmp in stations:\n    print tmp[0],tmp[1].strip()\n    station_list.append(tmp[1].strip())\n    \nprint \"-------------------------------------------------\"\n\nfor tmp in jt_stations:\n    stations = re.search(station_pattern,tmp.strip())\n    print stations.group('number'),stations.group('name')\n\nresult={}\nresult[jt_info[1]]=station_list\n\nprint result\n# coding: utf-8\n\nimport csv\nimport re \n\ncsvfile = open('beijing_jt.csv','r')\n\nreader = csv.reader(csvfile)\nreader.next()\n\njt_info = reader.next()\n\nprint jt_info[1].decode('utf-8')\n        \ncsvfile.close()\n\n# convert stations info format\nstation_pattern = (r'(?P<number>[0-9]+)\\s(?P<name>\\D+)')\nstation_list = []\n\nstations = re.findall(station_pattern,jt_info[-1].decode('utf-8')) \nfor tmp in stations:\n    print tmp[0],tmp[1].strip()\n    station_list.append(tmp[1].strip())\n    \nresult={}\nresult[jt_info[1]]=station_list\n\nprint result  \n\n课时12 赋值，输入输出语句\n赋值\na,b = 1,2\na,b = \"bj\",'sh\"\na,b = \"bj\"\na = b = \"bj\"\na,*b = \"beijing\"\na,b = (1,2)\na,b = [1,2]\n+= \n输入\ninput\nraw_input()    #原始输入\ninput()\n输出\n#3.x\n#函数\nprint([obj,...][,sep=''][,end='\\n'][,file=sys.stdout]\n\n#2.x\n#语句\nprint a,b\nprint >> file,a,b\nprint '%d,%d,%s'%(a,b,c)\nprint\"{0}like{1}\".format('we','python')\nprint\"{a} like {b}\".format(a='we',b='python')\n课时13 if语句和for循环语句\n#if\n\nif xxx:statement1\nelif xxx:statements2\nelse:statements3\n#其他用法\n\n#逻辑表达式\nnot/and/or\n#三元表达式\na = y if x > 0 else z\n\n#避免混用Tab和空格\n#Pass\n#分号\n#换行：括号匹配和反斜线\n#while/else\n\nWhile xxx:\n    statements1\n    if xxx:break/continue\nelse:\n    statements\n#for/else\n#列表，字符串，元组，字典，文件\n\nfor x on objects:\n    statenments\n    if xxx:break/continue\nelse:\n    statements 2\n课时14 列表解析和异常\n列表解析\n列表分析不但解决而且运行速度较快。\n用法\n#去除列表中重复元素\n\nl1 = ['b','c','d','b','c','a','a']\nl2 = []\n[l2.append(i) for i in l1 if not in l2]\nprint l2\n举例\n>>> iter=(x**2 for x in range(10) if x%2 == 0)\n>>> iter\n<gennerator object <genexpr> at 0x02419CB0\n>>> for el in iter:\n        print el\n        \nprint[(x,y) for x in (1,2,3,4) for y in (10,15,3,22) if x*y > 25] \n异常\n用法\ntry/except                #try后语句有异常发生后执行except\ntry/finally                #无论异常是否发生都执行finally\nraise error(meassage)    #触发异常\nAssert condition,message    #条件触发错误，触发后打印信息，并终止程序\n举例\na[1]    #NameError,a无定义\na = 2; a[1];    #TypeError,定义a为整数，按List去访问\na = [2];a[1];    #IndexError\na = {};a[1];    #KeyError\n\nRaise IndexError\nAssert False,\"error occur,please check program\"\n课时15 猜数字\n\n随机产生要猜的数字\n输入，用于接收用户输入的数字\n循环，如果没猜对则循环接收输入，并打出提示信息\n猜到数字或猜测次数达到一定次数后（6次）打印失败并退出\n\n# coding:utf-8\n\n\nimport random\n\nsecret = random.randint(1,100)\nguess,tries = 0,0\n\nprint u\"你好,我很幸运,我是一个路过的神仙,我有一个秘密\"\nprint u\"我的秘密是一个从1到99的数字,我只会给你6次机会来猜.\"\nprint u\"如果你猜到它,那说明你很幸运,赶紧去买彩票吧!\"\n\nwhile guess != secret and tries <6:\n    print u\"你猜这个数字是多少?(1-100)\"\n    guess = input()\n    if guess == secret:\n        print u\"哇~~,真的假的!你居然发现了我的秘密!它就是\"\n        break\n    elif guess < secret:\n        print str(guess),u\"太小了,你还差点运气!\"\n    elif guess > secret:\n        print str(guess),u\"太大了,你还差点运气!\"\n    tries +=1\n\nelse:\n    print u\"你唯一的机会已被你用完了!看来你还需要再攒点人品!\"\n    print u\"还是让我告诉吧!这个数字:\",str(secret)\n问题：\n\n输入非数字\n直接输入secret（作弊模式）\n\n作业3-1\n改进猜数字游戏，放作弊，错误输入判断\n作业3-2\n利用上次用户密码作业，请模拟注册过程：用户输入用户名后进行检测用户名是否在文件中的过程。并返回合理错误提示。如果不在则再输入密码，成功则增加用户信息到文件中，密码进行md5加密处理。\n作业3-3\n增加用户名，密码的合法化判断和错误提示。\n用户名：字母，数字，下划线和横线的组合，且首字符应是字母，长度不小于4密码：字母，数字，下划线和横线的组合，且长度不小于6\n作业3-4\n循环上一课的公交系统作业\n利用循环语句将所有线路的linenum和stations保存到一个字典对象\n执行后提示输入公交站名字，在所有公交线路的stations里查询该名字，并将包含有该名字的公交线路存到一个字进行返回。\n课时16\n3-1\n# coding:utf-8\n\nimport random\n\nsecret = random.randint(1,100)\nguess,tries = 0,0\n\nprint u\"你好,我很幸运,我是一个路过的神仙,我有一个秘密\"\nprint u\"我的秘密是一个从1到99的数字,我只会给你6次机会来猜.\"\nprint u\"如果你猜到它,那说明你很幸运,赶紧去买彩票吧!\"\n\nwhile guess != secret and tries <6:\n    print u\"你猜这个数字是多少?(1-100)\"\n    guess_str =raw_input()\n\n    try:\n        guess = int(guess_str)\n    except:\n        print u\"你输入的不是整数,请重新输入:\"\n        continue\n\n    if guess == secret:\n        print u\"哇~~,真的假的!你居然发现了我的秘密!它就是\"\n        break\n    elif guess < secret:\n        print str(guess),u\"太小了,你还差点运气!\"\n    elif guess > secret:\n        print str(guess),u\"太大了,你还差点运气!\"\n    tries +=1\n\nelse:\n    print u\"你唯一的机会已被你用完了!看来你还需要再攒点人品!\"\n    print u\"还是让我告诉吧!这个数字:\",str(secret)\n3-2\n# coding:utf-8\n\nimport random\n\nsecret = random.randint(1,100)\nguess,tries = 0,0\n\nprint u\"你好,我很幸运,我是一个路过的神仙,我有一个秘密\"\nprint u\"我的秘密是一个从1到99的数字,我只会给你6次机会来猜.\"\nprint u\"如果你猜到它,那说明你很幸运,赶紧去买彩票吧!\"\n\nwhile guess != secret and tries <6:\n    print u\"你猜这个数字是多少?(1-100)\"\n    guess_str =raw_input()\n\n    try:\n        guess = int(guess_str)\n    except:\n        print u\"你输入的不是整数,请重新输入:\"\n        continue\n\n    if guess == secret:\n        print u\"哇~~,真的假的!你居然发现了我的秘密!它就是\"\n        break\n    elif guess < secret:\n        print str(guess),u\"太小了,你还差点运气!\"\n    elif guess > secret:\n        print str(guess),u\"太大了,你还差点运气!\"\n    tries +=1\n\nelse:\n    print u\"你唯一的机会已被你用完了!看来你还需要再攒点人品!\"\n    print u\"还是让我告诉吧!这个数字:\",str(secret)\n\n课时16 作业参考\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "4"}