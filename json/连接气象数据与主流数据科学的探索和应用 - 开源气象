{"title": "连接气象数据与主流数据科学的探索和应用 - 开源气象 ", "index": "python", "content": "近些年，大数据和人工智能的长足发展，促使数据科学得到了繁荣发展，形成了丰富的技术栈和工具链，各类机构和科学家基于这样繁荣的生态构建了广泛的协作，形成了显著的生产力提升。气象数据来自长期的地面、高空、雷达和卫星的观测，隐含着丰富的地球环境和大气环流信息，为了存储、传输及研究应用这些数据，气象行业形成了一整套气象数据的协议和工具。这个生态本身的发展历史弥久，在业务实践中广泛应用，但在社会各行业数据广泛联系的当下，与主流的数据科学生态的藩篱限制了气象数据科学家参与更广泛层面上的协作。本文介绍了一些气象数据在数据科学领域应用的技术和工程实践，来尝试连接气象数据与主流数据科学的生态。\n本文从数据格式与协议、数据分析方法与工具、数据应用的工程化等角度，将当前气象数据研究与主流数据科学领域的情况进行对比，并介绍实现两者连通做的一些工程实践。\n1. 数据格式与协议\n中国气象局发布了BUFR、CREX、GRIB、NetCDF、HDF、XML等6种气象数据标准格式应用指南，这些格式适应气象数据的存储、传输和共享等场景的需求。GRIB、NetCDF 这类表驱码格式编码方式具有自描述、灵活可扩展、压缩存储、可直接存档等特点，是表示数值天气分析和预报的格点场产品的主要格式。格点场产品可以理解为气象要素值以格点方式分布的地理信息数据，而地理信息数据在数据科学应用是成熟而广泛的。\n地理信息数据主要有两种编码类型，栅格型和矢量型。栅格格式是一种附加了空间信息的图像格式，如 GeoTiff 是在 tiff 格式基础上附加了空间坐标与图片像素之间的对应关系等信息。栅格格式存储的数据因其与图像格式兼容，可以方便的应用数据科学中图像分析处理的相关成果，比如利用深度学习识别图像中的某种天气现象[1]，这在气象卫星数据的研究应用中已经有了一些案例。栅格数据另一种应用场景是数据可视化，将气象要素数据作为一个图层与其他地理信息图层相互叠加应用，在应用中考虑到服务器端与客户端带宽及渲染性能的限制，往往要对图像做瓦片化处理，按照数据缩放显示级别以图片文件的形式存放，也有讲这些瓦片存储数据库的方式，如 MBTiles。矢量格式是将信息按照不同形状以矢量方式存储的编码方式，这种格式对空间信息进行抽象形成特征(feature)，一般包括点、线和面三种类型。矢量格式数据在数据科学中用法很灵活，可以与其他地理信息数据进行空间计算，形成新的信息。气象数据转换为矢量形式比较常见的场景是根据要素值进行分级，然后在格点数据上绘制等值线，继而填充形成色斑图等。如根据降水量距平值分级为特旱、旱、正常、涝和特涝等，绘制形成不同分级的区域分布。\n表1 将气象数据转化为主流数据格式\n\n\n原始格式\n        需做的转换\n        主流格式\n        应用方向\n    \n\nNetCDF、GRIB、HDF\n        将格点做空间投影后绘制\n        GEOTIFF\n        基于深度学习的图像目标识别的深度学习\n    \n\n将格点做空间投影后绘制,进行瓦片化\n        Map Tiles/MBTiles\n        GIS应用中的图层服务\n    \n\n针对要素值进行分级，然后在格点数据上绘制等值线，继而填充形成色斑图等。如根据降水量距平值分级为特旱、旱、正常、涝和特涝等，绘制形成不同分级的区域分布。\n        GeoJson/KML\n        GIS应用中的图层服务，与其他数据图层进行空间计算，如裁剪、分割、合并等\n    \n\n2. 数据分析方法与工具\n气象数据分析主要是指气象要素变量及变量场的分析，分析的内容包括多个变量及变量场间的差异性、关联性、时空演变特征等。气象数据分析常用编程语言有Fortran，NCL等，常用的工具包括GrADS，MATLAB等，这些编程语言与工具在气象数据分析及可视化中应用广泛。\n主流数据科学领域中，R 和 Python 一直是主要的编程语言，近期来看 Python 因在云计算和机器学习领域中应用越来越广泛，预期在数据分析领域也将继续占据主流位置。开源世界一些基于 Python 的类库发展繁荣且相互协作，如 Numpy、Scipy 等，形成了很好的工具链，延伸到了数据处理分析、数据可视化、机器学习等各个数据相关业务场景。\n将气象数据融入主流数据科学的技术栈和工具链中，需要用 Python 等语言和工具读取气象数据之后展开后续的操作。以 GRIB 文件中的变量场为例，欧洲中期天气预报中心（ECMWF）提供了面向 Python 的 GRIB API，通过调取GRIB数据后转换可以获得 Numpy 中的矩阵结构（ndarray）数据，进而可以利用 ndarray 的一系列方法实现变量场数据相加减、求平均等操作。\n图1 使用Python NumPy处理GRIB数据\n对于变量场数据，可以继续通过变量分级，生成等值线、色斑图等形式，继续应用数据科学领域中处理地理信息数据的一些类库（如 matplotlib、shapely、geopandas 等）来实现一些空间计算。\n图2 使用matplotlib、geopandas生成色斑图后进行空间计算\n物联网发展产生了大量的包含空间信息的数据，比如交通工具的位置信息等，将气象数据转化后，就可以与这些数据进行综合分析，气象数据就实现了便捷的融入各行业的数据分析应用场景中。\n图3 将网格数据与铁路线路信息叠加显示\n3. 气象数据应用的工程化\n前文介绍的气象传统数据处理技术和工具多是适合小规模的科学研究中使用，如果将气象数据放到互联网、大规模应用等场景中，就需要在工程化方面做一些工作。这些工程化的工作也是借鉴了主流大数据分析领域中的一些手段，比如业务服务化、部署容器化等。\n业务服务化是将一个应用系统中的多个函数或者模块进行封装，之后通过接口暴露，然后通过接口的连接将应用系统组织起来的工程手段。在气象应用系统的实践中，通常将数据的处理转化、数据的分析方法、数据的渲染进行抽象实现封装形成服务。这样做的好处是实现不同系统间功能的重用，实现整个信息化业务体系的集约。\n我们在项目中实现了将数值预报云中的 GRIB 文件按照给定的色标生成色斑图的服务。以 GRAPES-MESO 为例，GRIB 文件里提供的是累计雨量，如果我们绘制小时雨量的话，就需要将前后两个预报时次的累计雨量相减。在应用实现中，将GRIB 文件处理、两个变量场相减、色斑图生成等逻辑进行封装之后，提供了一个REST风格的接入点（REST Endpoint）。应用的客户端直接通过 HTTP 协议，传入前后两个 GRIB 文件、色标等信息即可获得 geojson 数据，渲染在 Web 端的 GIS 应用中。\n图4 服务化的GRAPES-MESO数值预报色斑图生成\n将业务服务化后，业务在服务能力方面就具备了弹性，工程中通过将服务装入容器后进行编排，实现业务的弹性扩容。精细化的气象服务要求气象数据具有更高的时空分辨率，形成的数据规模随之增大，一些数据处理和渲染的耗时就会比较多，通过弹性的部署一定数量的服务，然后通过负载均衡来将访问均衡到各个容器中，从而让应用能够获得较低的访问延时。\n图5 GRAPES-MESO数值预报色斑图容器化部署\n4. 总结\n通过大数据生态中的技术、工具以及架构，我们将气象数据应用与主流的大数据应用场景打通，生态相融后形成了新的生产力，数据科学发展的广度和深度将帮助气象数据应用在数据挖掘、人工智能等领域继续拓展，建议气象行业中的数据应用科学家和开发者，在实践中更多尝试主流的数据科学生态的技术和工具。\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "1"}