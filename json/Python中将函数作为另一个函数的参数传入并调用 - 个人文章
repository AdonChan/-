{"title": "Python中将函数作为另一个函数的参数传入并调用 - 个人文章 ", "index": "python", "content": "Python中将函数作为另一个函数的参数传入并调用\n将函数作为另外一个函数的参数调用？听起来很复杂，其实动起手来很简单。下面跟我一起看看一些简单的例子，我尽量简单易懂：\n下面这段代码涵盖了函数调用的函数的传参和不传参的两个方面：\ndef func_a(func_a_arg_a, func, **kwargs):\n    print(func_a_arg_a)\n    func(**kwargs)\n\n\ndef func_b(arg_a):\n    print(arg_a)\n\n\ndef func_c():\n    print('Hello World')\n\n\nif __name__ == '__main__':\n    func_a(func_a_arg_a='temp', arg_a='Hello Python', func=func_b)\n    func_a(func_a_arg_a='temp', func=func_c)\n\n输出结果：\ntemp\nHello Python\ntemp\nHello World\n[Finished in 0.2s]\n**注意：对于func_a,主函数，传参随意了，需要什么穿什么，但是对于func_b and func_c就不尽然了；\nfunc_c作为不需要传参的函数，如果在func_a中有参数传入了会怎么样呢？\n------当时然报错啊,可以自动动手尝试下，毕竟敲代码的人动手才是正途：\n\nTypeError: func_c() got an unexpected keyword argument TypeE 'arg_a'\n\n对于fun_b:需要传参的函数：\n要注意的是：不传参报错：TypeError: func_b() missing 1 required positional argument: 'arg_a'\n不懂就百度，多参考一些blog在动手，参考是关键，动手更关键！！！\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "0"}