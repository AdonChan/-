{"title": "数据分析面试题之Pandas中的groupby - 个人文章 ", "index": "python", "content": "  昨天晚上，笔者有幸参加了一场面试，有一个环节就是现场编程！题目如下：  示例数据如下，求每名学生（ID）对应的成绩（score）最高的那门科目（class）与ID，用Python实现：\n\n这个题目看上去很简单，其实，并不简单。即要求输出形式如下：\n\n  当然，我们一开始能先到的是利用Pandas中的groupby，按ID做groupby，按score取最大值，可是之后的过程就难办了，是将得到的结果与原表做join，还是再想其他办法？  怎么办？答案就是Pandas中groupby的官方文档说明，网址为：http://pandas.pydata.org/pand...。 截图如下：\n\n本文将会用到其中的三个函数： idxmax(), idxmin(), rank().  其实，让我们来解决一开始提出的问题，Python代码如下：\nimport pandas as pd\n\ndf = pd.read_csv(\"E://score.csv\")\nnew_df = df.groupby(\"ID\")[\"score\"].idxmax()\nfor i in new_df:\n    print(df.iloc[i, :].tolist()[0:2])\n分析代码，df.groupby(\"ID\")[\"score\"].idxmax()是对原数据按ID做groupby，然后取score列，用idxmax(）取出成绩最好的行。然后取出这些行即可。  当然，上述代码存在两个衍生问题：\n\n每名学生（ID）对应的成绩（score）最低的那门科目（class）与ID；\n若有学生他的某些科目的成绩是一样的，求每名学生对应的成绩最高的那些科目与ID。\n\n  第一个问题，很好解决，在原先的代码中，将idxmax()替换为idxmin()即可，输出的结果如下：\n[1, 'C']\n[2, 'A']\n[3, 'C']\n[4, 'A']\n  第二个问题，如果有学生他的某些科目的成绩是一样的，如下面的示例数据：\n\n在上面数据中，第1,3名学生的最高成绩存在重复。这是，我们需要用到rank()函数，Python代码如下:\nimport pandas as pd\nimport numpy as np\n\ndf = pd.read_csv(\"E://score.csv\")\ndf[\"rank\"] = df.groupby(\"ID\")[\"score\"].rank(method=\"min\", ascending=False).astype(np.int64)\n#print(df)\nprint(df[df[\"rank\"] == 1][[\"ID\", \"class\"]])\n输出结果如下：\n    ID class\n0    1     A\n1    1     B\n5    2     C\n7    3     B\n8    3     C\n11   4     C\n可以看到，我们得到的df这个数据框添加了一列rank,就是每名学生的科目的成绩排名，得到的df如下：\n    ID class  score  rank\n0    1     A     90     1\n1    1     B     90     1\n2    1     C     70     3\n3    2     A     60     3\n4    2     B     80     2\n5    2     C    100     1\n6    3     A     90     3\n7    3     B    100     1\n8    3     C    100     1\n9    4     A     70     3\n10   4     B     80     2\n11   4     C     90     1\n然后按需要取出数据即可。\n  本次分享到此结束，欢迎大家交流~~\n注意：本人现已开通微信公众号： Python爬虫与算法（微信号为：easy_web_scrape）， 欢迎大家关注哦~~\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "0"}