{"title": "Python动态特性应对动态情况 - HeHa37 ", "index": "python", "content": "Python有一些定制类的特殊方法，如__str__()、__iter__()、__getitem__()，其中一些具有动态特性的方法可以用来很方便地处理某些动态状况。\nDuck-typing\nWhen I see a bird that walks like a duck and swims like a duck and quacks like a duck, I call that bird a duck.\nduck-typing是一种编程风格，它的含义是：一个对象的语义，不是由于它继承自特定的类或者实现某个接口，而是由它的属性和方法的集合所决定。也就是说，我们在使用一个对象的时候，不在乎它是什么类型、是否实现了特定的接口，而是在意它有没有我们需要的属性和方法。其实这就是在没有语言约束的情况下来实现多态，不像C++使用继承和虚函数在语言上设置约束来实现多态，所以就需要程序员来进行约束，好的文档、代码、测试都是很需要的。在用该风格编码时不要使用像type()、isintance()这样的方法去测试函数中参数的类型，而是直接使用参数来表述行为，如果该参数没有应有的属性或方法，就会报错。使用__getitem__()来使自己的类表现得和Python内建的list、tuple、dict一样时，就依靠了这种风格，下面给出Wiki上关于duck-typing的Python示例代码：\nclass Duck:\n    def quack(self):\n        print(\"Quaaaaaack!\")\n    def feathers(self):\n        print(\"The duck has white and gray feathers.\")\n\nclass Person:\n    def quack(self):\n        print(\"The person imitates a duck.\")\n    def feathers(self):\n        print(\"The person takes a feather from the ground and shows it.\")\n    def name(self):\n        print(\"John Smith\")\n\ndef in_the_forest(duck):\n    duck.quack()\n    duck.feathers()\n\ndef game():\n    donald = Duck()\n    john = Person()\n    in_the_forest(donald)\n    in_the_forest(john)\n\ngame()\nin_the_forest(duck)方法不管duck参数是Duck类型还是Person类型，只要该类型的实例由quack和feathers方法就可以。\n动态化属性和方法的调用\n\n__getattr__，当调用不存在的属性时，如果存在__getattr__方法，就会调用__getattr方法来尝试获得属性。\n__call__，使实例本身变成可调用的。这种完全动态的调用可以应对一些动态情况，例如实现REST API。\n\nclass Chain(object):\n\n    def __init__(self, path=''):\n        self._path = path\n\n    def __getattr__(self, path):\n        return Chain('%s/%s' % (self._path, path))\n\n    def __str__(self):\n        return self._path\n\n    def __call__(self, attr):\n        return Chain('%s/%s' % (self._path, attr))\n这样我们就不用给每个URL对应的API写方法了，采用链式的调用就可以，如schools/status/users，就可以用Chain().schools.status.users。某些REST API会在URL中添加参数，如/schools/users/ID/report,其中ID就是一个参数，是某个学生实际的学号，这时就可以利用__call__将对象变成可调用的，便可完成此功能，调用方式就是Chain().schools.users(ID).report。\n参考资料\n\n廖雪峰的Blog\nPython官方文档\n\n\n                ", "mainLikeNum": ["1 "], "mainBookmarkNum": "10"}