{"title": "Flask + Nginx + React + Webpack 配置解决跨域问题 - 流水账 ", "index": "webpack-dev-server,webpack,python", "content": "用 Flask 做后端开发单页应用，webpack-dev-server 生成静态文件在http://localhost:8080 下，Flask 页面在 http://localhost:5000 下。html 页面需要写成：\n...\n<script src=\"//localhost:8080/asserts/bundle.js\"></script>\n...\n存在跨域问题，现用 nginx 将 8080、5000 端口代理到默认的 80 端口解决。看着也更优雅。\nwebpack 配置：\nconst url = \"http://localhost:8080\"\n\nmodule.exports = {\n    output: {\n        filename: '[name].js',\n        path: path.resolve(__dirname, 'dist'),\n        publicPath: `${url}/asserts/`,\n    },\n    devServer: {\n        port: 8080,\n        compress: true,\n        hot: true,\n        historyApiFallback: true,\n        contentBase: path.join(__dirname, \"dist\"),\n        publicPath: `${url}/asserts/`,\n    }\n    ...\n}\nnginx 配置\nserver {\n    listen 80;\n    server_name localhost; \n    location / {\n        # flask 代理\n        proxy_pass http://127.0.0.1:5000;\n    }\n\n    location /asserts/ {\n        # webpack-dev-server 代理\n        proxy_pass http://127.0.0.1:8080/asserts/;\n        proxy_http_version 1.1;\n        proxy_set_header Upgrade $http_upgrade;\n        proxy_set_header Connection \"upgrade\";\n        error_page 502 @start-webpack-dev-server;\n    }\n\n    location @start-webpack-dev-server {\n        default_type text/plain;\n        return 502 \"Please start the webpack-dev-server first.\";\n    }\n}\n\n                ", "mainLikeNum": ["1 "], "mainBookmarkNum": "2"}