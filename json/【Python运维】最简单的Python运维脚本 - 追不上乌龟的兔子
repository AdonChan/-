{"title": "【Python运维】最简单的Python运维脚本 - 追不上乌龟的兔子 ", "index": "运维,python", "content": "背景\n最近在Windows 10上使用Linux子系统，发现它有一个非常坑爹的特点：Linux子系统是没有开机关机状态的，每次进入Bash shell就自动载入，退出后Linux子系统的所有进程都会被关闭，如果你撞了Mysql之类的服务要想随时运行的话就要保持Bash shell的随时开启，更坑的是这些服务并不会随之进入Bash shell而自动启动， 我只好写一个Python脚本用于管理这些服务。\n相关技术\nPython3, argparse module\n代码\nfrom os import system\nfrom argparse import ArgumentParser\n\ndef start_service(service):\n    system(\"service {} start\".format(service))\n\ndef stop_service(service):\n    system(\"service {} stop\".format(service))\n\ndef restart_service(service):\n    print(service)\n    system(\"service {} restart\".format(service))\n\ndef manage_service():\n    services = []\n    services.append(\"xinetd\")\n    services.append(\"lighttpd\")\n    return services\n\ndef set_args():\n    parser = ArgumentParser()\n    parser.add_argument(\"service\", help = \"the service to be managed.\")\n    parser.add_argument(\"-s\", \"--start\", help = \"start the service(s).\", action = \"store_true\")\n    parser.add_argument(\"-r\", \"--restart\", help = \"restart the service(s).\", action = \"store_true\")\n    parser.add_argument(\"-p\", \"--stop\", help = \"stop the service(s).\", action = \"store_true\")\n    return parser.parse_args()\n\ndef deal(args,services):\n    global start_service, restart_service, stop_service\n    services = services if not args.service else services if args.service == \"all\"else [args.service]\n    operation = start_service if args.start else restart_service if args.restart else stop_service\n    for  service in services:\n       operation(service)\n\nif __name__ == \"__main__\":\n    deal(set_args(),manage_service())\n运行\n开启服务\n(env) root@DESKTOP-1DDIIV2:~# python pyops.py all -s\ninitctl: 无法连接到 Upstart: Failed to connect to socket /com/ubuntu/upstart: 拒绝连接\n * Starting internet superserver xinetd                                                                                                                          [fail]\n * Starting web server lighttpd                                                                                                                                  [ OK ]\n(env) root@DESKTOP-1DDIIV2:~#\n关闭服务\n(env) root@DESKTOP-1DDIIV2:~# python pyops.py xinetd -p\ninitctl: 无法连接到 Upstart: Failed to connect to socket /com/ubuntu/upstart: 拒绝连接\n * Stopping internet superserver xinetd                                                                                                                          [ OK ]\n(env) root@DESKTOP-1DDIIV2:~#\n重启服务\n(env) root@DESKTOP-1DDIIV2:~# python pyops.py xinetd -r\nxinetd\ninitctl: 无法连接到 Upstart: Failed to connect to socket /com/ubuntu/upstart: 拒绝连接\n * Stopping internet superserver xinetd                                                                                                                          [ OK ]\n * Starting internet superserver xinetd                                                                                                                          [ OK ]\n(env) root@DESKTOP-1DDIIV2:~#\n感想\nPython脚本还是比shell脚本好写很多啊。\n\n                ", "mainLikeNum": ["1 "], "mainBookmarkNum": "6"}