{"title": "Python 字符串内置方法 - 名称是什么鬼~ ", "index": "string,python", "content": "Python 字符串内置方法\n作者博客：http://zzir.cn/\nstring.capitalize()\n返回字符串的第一个大写字母。\nstring.centr(width)\n返回一个共 width 列、填充空格的字符串，原始字符串处于其中心位置。\nstring.count(str, beg=0, end=len(string))\n统计 str 在 string 中出现的次数，如果给定了开始索引 beg 和结束索引 end，将统计 str 在 string 子串中出现的次数。\nstring.decode(encode='UTF-8', errors='strict')\n对 string 进行解码；如果发生错误，默认情况下会抛出 ValueError 异常，除非通过 ignore 或 replace 给出 errors。\nstring.encode(encode='UTF-8', errors='strict')\n对 string 进行编码；如果发生错误，默认情况下会抛出 ValueError 异常，除非通过 ignore 或 replace 给出 errors。\nstring.endswith(str, beg=0, end=len(string))\n确定 string 或 string的子串(如果给出了开始索引 beg 和结束索引 end)是否以 str 结尾，如果是则返回 True，否则返回 False。\nstring.expandtabs(tabsize=8)\n在 string 中扩展制表符为多个空格；如果 tabsize 没有提供默认为 8 个空格。\nstring.find(str, beg=0, end=len(string))\n确定 str 是否出现在 string 中；如果给定了开始索引 beg 和结束索引 end，则会确定 str 是否出现在 string子串中；如果找到则返回索引，否则返回 -1。\nstring.format(*args, **kwargs)\n根据传入的 args 和 kwargs 进行字符串格式化。\nstring.index(str, beg=0, end=len(string))\n与 find() 相同，但如果未找到 str，则会抛出一个异常。\nstring.isalnum()\n如果 string 中至少含有一个字符并且所有字符都是字母或数字，那么返回 True，否则返回 False。\nstring.isalpha()\n如果 string 中至少含有一个字符并且所有字符都是字母，那么返回 True，否则返回 False。\nstring.isdecimal()\n如果 string 中只包含十进制数则返回 True,否则返回 False。\nstring.isdigit()\n如果 string 中只包含数字则返回 True,否则返回 False。\nstring.islower()\n如果 string 包含至少一个区分大小写的字符并且都是小写返回 True，否则返回 False。\nstring.isnumeric()\n如果 stirng 只包含数字字符则返回 True,否则返回 False。\nstring.isspace()\n如果 stirng 只包含空格字符则返回 True,否则返回 False。\nstring.istitle()\n如果 string 是适合“标题大小写风格”（见 title()）则返回 True,否则返回 False。\nstring.isupper()\n如果 string 包含至少一个区分大小写的字符并且都是大写返回 True，否则返回 False。\nstring.join(seq)\n将 seq 序列中的元素字符串合并(连接)到一个字符串，string 作为分隔符。\nstring.ljust(width)\n返回一个空格填充的 string，原始字符的总列数为 width 的空间中左对齐。\nstring.lower()\n将 string 中所有的大写字母转换为小写字母。\nstring.lstrip()\n删除 string 中所有前置空格。\nstring.replace(str1, str2, num=string.count(str1))\n用 str2 替换 string 中出现的 str1，或者最多 num 个(如果给定 num 的值)。\nstring.rfind(str, beg=0, end=len(string))\n与 find() 相同，但在 string 中向后搜索。\nstring.rindex(str, beg=0, end=len(string))\n与 index() 相同，但在 string 中向后搜索。\nstring.rjust(width)\n返回一个空格填充的 string，原始字符的总列数为 width 的空间中右对齐。\nstring.rstrip()\n删除 string 中所有尾部空格。\nstring.split(str=\"\", num=string.cont(str))\n根据分隔符 str (如果没有提供默认为空格) 分割 string 并返回子串的列表；如果给定了 num，则最多分为 num 个子串。\nstring.splitlines(num=string.count('n'))\n在所有（或 num 个）换行处分割 string 并返回一个删除换行符后每行的列表。\nstring.startswith(str, beg=0, end=len(string))\n确定 string 或 string的子串(如果给出了开始索引 beg 和结束索引 end)是否以 str 开始，如果是则返回 True，否则返回 False。\nstring.strip([obj])\n对 string 执行 lstrip() 和 rstrip() 操作\nstring.swapcase()\n反转 string 中所有字母大小写。\nstring.title()\n返回 string 的“标题大小写风格”版本，既所有单词都已大写字母开始，而其余字母小写（另外见 istitle()）。\nstring.translate(str, del='')\n根据翻译表 str (256 个字符) 翻译 string，并删除 del 字符串中的内容。\nstring.upper()\n将 string 中所有的小写字母转换为大写字母。\nstring.zfill(width)\n返回左填充 0 并且总字数为 width 的原始字符串；用于数字，zfill()保留任何给定的符号（少一个 0）\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "1"}