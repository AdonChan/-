{"title": "python环境神器virtualenvwrapper安装与使用 - fidding技术日记 ", "index": "python,macos,virtualenvwrapper", "content": "virtualenv与virtualenvwrapper\n当涉及到python项目开发时为了不污染全局环境，通常都会使用环境隔离管理工具virtualenv与virtualenvwrapper。\nvirtualenv是在项目底下执行生成venv环境目录以此来进行管理，这非常适合使用诸如pycharm这种集成环境配置的开发工具；那么当通过shell来运行virtualenv时便会显得非常麻烦，因为每次shell关闭再打开后都需要重新配置环境参数。\nvirtualenvwrapper是将所有的python项目虚拟环境环境都存放在一起，在使用shell配合小型开发工具就会非常方便。\nvirtualenvwrapper安装配置（MAC）\n\n\n使用pip3安装\n$ sudo pip3 install virtualenvwrapper\n\n\n新建存放环境目录(笔者目录为Envs并放在Home下)\n$ mkdir -p ~/Envs\n\n\n配置virtualenvwrapper环境(使用python3)\ni. 打开bash_profile，执行vim ~/.bash_profile并写入\n# 设置virtualenvwrapper\nexport WORKON_HOME=~/Envs\nexport VIRTUALENVWRAPPER_PYTHON=/usr/local/bin/python3\n# 打开终端自动启用\nsource /usr/local/bin/virtualenvwrapper.sh\nii. 打开.zshrc，执行vim ~/.zshrc并写入(如果有安装item2与oh-my-zsh)\n# 设置virtualenvwrapper\nexport WORKON_HOME=~/Envs\nexport VIRTUALENVWRAPPER_PYTHON=/usr/local/bin/python3\n# 打开终端自动启用\nsource /usr/local/bin/virtualenvwrapper.sh\n\n\n使配置生效\n$ source ~/.bash_profile\n$ source ~/.zshrc\n\n\nvirtualenvwrapper 使用\n\n\n新建虚拟环境test并指定python版本python3\n$ mkvirtualenv test --python=python3\n执行lsvirtualenv指令查看所有环境，环境test位于~/Envs/test\n$ lsvirtualenv\ntest\n====\n\n\n在项目底下激活虚拟环境test\nworkon test\n\n\n其他指令\n## 退出环境test\ndeactivate\n## 删除环境test\nrmvirtualenv test\n## 更多指令可以在shell中输入virtualenv回车会有提示\n\n\nvirtualenvwrapper设置环境变量\n当我们使用框架时经常需要执行pip install或者 export环境变量等额外的操作，这时就需要使用postactivate等钩子文件（当然钩子文件还有很多，具体感兴趣可以去查看官方文档）。\n举个栗子：\n想在test虚拟环境激活后设置环境变量\n\n\n打开test的postactivate钩子文件vim ~/Envs/test/bin/postactivate\n#!/bin/zsh\n# This hook is sourced after this virtualenv is activated.\n\n# 在当前会话加入环境变量\nexport ENV=dev\n\n这时当执行workon test 激活虚拟环境后便会执行postactivate将项目环境变量Env设置为dev\n\n在postactivate 中还可以执行诸如pip install -r requirements.txt，pip install -e conf等shell 操作\n\n到目前为止基本的virtualenvwrapper使用就介绍完了\n原文地址：http://www.fidding.me/article/71\nhappy coding!\n\n                ", "mainLikeNum": ["1 "], "mainBookmarkNum": "1"}