{"title": "半个小时教你写一个装(bi)逼(she)之地图搜租房 - 一只软狗的自我修养 ", "index": "html,python", "content": "\nlayout: posttitle: 半个小时教你写一个毕设之地图搜租房category: 其他date: 2018-05-23tags:\n其他\n\n半个小时教你写一个毕设之地图搜租房\n首先需要一个Python3环境,怎么准备我就不多说了,实在不会的出门右转看一下廖雪峰老师的博客.\nHTML部分\n代码来自:高德API+Python解决租房问题,简单改了下加载数据部分\n代码路径:/static/index.html\n<html>\n\n<head>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"initial-scale=1.0, user-scalable=no, width=device-width\">\n    <title>毕业生租房</title>\n    <link rel=\"stylesheet\" href=\"http://cache.amap.com/lbs/static/main1119.css\" />\n    <link rel=\"stylesheet\" href=\"http://cache.amap.com/lbs/static/jquery.range.css\" />\n    <script src=\"http://cache.amap.com/lbs/static/jquery-1.9.1.js\"></script>\n    <script src=\"http://cache.amap.com/lbs/static/es5.min.js\"></script>\n    <script src=\"http://webapi.amap.com/maps?v=1.3&key=22d3816e107f199992666d6412fa0691&plugin=AMap.ArrivalRange,AMap.Scale,AMap.Geocoder,AMap.Transfer,AMap.Autocomplete\"></script>\n    <script src=\"http://cache.amap.com/lbs/static/jquery.range.js\"></script>\n    <style>\n    .control-panel {\n        position: absolute;\n        top: 30px;\n        right: 20px;\n    }\n    \n    .control-entry {\n        width: 280px;\n        background-color: rgba(119, 136, 153, 0.8);\n        font-family: fantasy, sans-serif;\n        text-align: left;\n        color: white;\n        overflow: auto;\n        padding: 10px;\n        margin-bottom: 10px;\n    }\n    \n    .control-input {\n        margin-left: 120px;\n    }\n    \n    .control-input input[type=\"text\"] {\n        width: 160px;\n    }\n    \n    .control-panel label {\n        float: left;\n        width: 120px;\n    }\n    \n    #transfer-panel {\n        position: absolute;\n        background-color: white;\n        max-height: 80%;\n        overflow-y: auto;\n        top: 30px;\n        left: 20px;\n        width: 250px;\n    }\n    </style>\n</head>\n\n<body>\n    <div id=\"container\"></div>\n    <div class=\"control-panel\">\n        <div class=\"control-entry\">\n            <label>选择工作地点：</label>\n            <div class=\"control-input\">\n                <input id=\"work-location\" type=\"text\">\n            </div>\n        </div>\n        <div class=\"control-entry\">\n            <label>选择通勤方式：</label>\n            <div class=\"control-input\">\n                <input type=\"radio\" name=\"vehicle\" value=\"SUBWAY,BUS\" onClick=\"takeBus(this)\" checked/> 公交+地铁\n                <input type=\"radio\" name=\"vehicle\" value=\"SUBWAY\" onClick=\"takeSubway(this)\" /> 地铁\n            </div>\n        </div>\n    </div>\n    <div id=\"transfer-panel\"></div>\n    <script>\n    var map = new AMap.Map(\"container\", {\n        resizeEnable: true,\n        zoomEnable: true,\n        center: [116.397428, 39.90923],\n        zoom: 11\n    });\n\n    var scale = new AMap.Scale();\n    map.addControl(scale);\n\n    var arrivalRange = new AMap.ArrivalRange();\n    var x, y, t, vehicle = \"SUBWAY,BUS\";\n    var workAddress, workMarker;\n    var rentMarkerArray = [];\n    var polygonArray = [];\n    var amapTransfer;\n\n    var infoWindow = new AMap.InfoWindow({\n        offset: new AMap.Pixel(0, -30)\n    });\n\n    var auto = new AMap.Autocomplete({\n        input: \"work-location\"\n    });\n    \n    AMap.event.addListener(auto, \"select\", workLocationSelected);\n\n\n    function takeBus(radio) {\n        vehicle = radio.value;\n        loadWorkLocation()\n    }\n\n    function takeSubway(radio) {\n        vehicle = radio.value;\n        loadWorkLocation()\n    }\n\n    function workLocationSelected(e) {\n        workAddress = e.poi.name;\n        loadWorkLocation();\n    }\n\n    function loadWorkMarker(x, y, locationName) {\n        workMarker = new AMap.Marker({\n            map: map,\n            title: locationName,\n            icon: 'http://webapi.amap.com/theme/v1.3/markers/n/mark_r.png',\n            position: [x, y]\n\n        });\n    }\n\n\n    function loadWorkRange(x, y, t, color, v) {\n        arrivalRange.search([x, y], t, function(status, result) {\n            if (result.bounds) {\n                for (var i = 0; i < result.bounds.length; i++) {\n                    var polygon = new AMap.Polygon({\n                        map: map,\n                        fillColor: color,\n                        fillOpacity: \"0.4\",\n                        strokeColor: color,\n                        strokeOpacity: \"0.8\",\n                        strokeWeight: 1\n                    });\n                    polygon.setPath(result.bounds[i]);\n                    polygonArray.push(polygon);\n                }\n            }\n        }, {\n            policy: v\n        });\n    }\n\n    function addMarkerByAddress(address, url) {\n        var geocoder = new AMap.Geocoder({\n            city: \"北京\",\n            radius: 1000\n        });\n        geocoder.getLocation(address, function(status, result) {\n            if (status === \"complete\" && result.info === 'OK') {\n                var geocode = result.geocodes[0];\n                rentMarker = new AMap.Marker({\n                    map: map,\n                    title: address,\n                    icon: 'http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png',\n                    position: [geocode.location.getLng(), geocode.location.getLat()]\n                });\n                rentMarkerArray.push(rentMarker);\n\n                rentMarker.content = \"<div>房源：<a target = '_blank' href='\" + url + \"'>\" + address + \"</a><div>\"\n                rentMarker.on('click', function(e) {\n                    infoWindow.setContent(e.target.content);\n                    infoWindow.open(map, e.target.getPosition());\n                    if (amapTransfer) amapTransfer.clear();\n                    amapTransfer = new AMap.Transfer({\n                        map: map,\n                        policy: AMap.TransferPolicy.LEAST_TIME,\n                        city: \"北京市\",\n                        panel: 'transfer-panel'\n                    });\n                    amapTransfer.search([{\n                        keyword: workAddress\n                    }, {\n                        keyword: address\n                    }], function(status, result) {})\n                });\n            }\n        })\n    }\n\n    function delWorkLocation() {\n        if (polygonArray) map.remove(polygonArray);\n        if (workMarker) map.remove(workMarker);\n        polygonArray = [];\n    }\n\n    function delRentLocation() {\n        if (rentMarkerArray) map.remove(rentMarkerArray);\n        rentMarkerArray = [];\n    }\n\n    function loadWorkLocation() {\n        delWorkLocation();\n        var geocoder = new AMap.Geocoder({\n            city: \"北京\",\n            radius: 1000\n        });\n\n        geocoder.getLocation(workAddress, function(status, result) {\n            if (status === \"complete\" && result.info === 'OK') {\n                var geocode = result.geocodes[0];\n                x = geocode.location.getLng();\n                y = geocode.location.getLat();\n                loadWorkMarker(x, y);\n                loadWorkRange(x, y, 60, \"#3f67a5\", vehicle);\n                map.setZoomAndCenter(12, [x, y]);\n            }\n        })\n    }\n\n    $(function()\n    {\n        $.get(\"/get_houses\", function(data) {\n            data.forEach(function(element, index) {\n                addMarkerByAddress(element.address, element.url);\n            });\n        });\n    })\n    </script>\n</body>\n\n</html>\nPython flask部分\nPython3环境,使用安装Flask,pymysql,BeautifulSoup\npip install Flask;\npip install pymysql;\npip install beautifulsoup4;\npip install requests;\n然后直接上代码咯.\n路径:/app.py\n\nfrom flask import Flask, request\nfrom flask import jsonify\nfrom flask import render_template\nfrom flask import Response\nimport requests\nfrom bs4 import BeautifulSoup\nimport pymysql\napp = Flask(__name__)\n\n\n@app.route(\"/get_houses_db/\")\ndef get_houses_db():\n    # 从数据库读出来的数据,url为房源url,address为房源定位地址\n    houses = []\n    # Connect to the database\n    connection = pymysql.connect(host='127.0.0.1',\n                                 user='root',\n                                 password='123',\n                                 db='你的数据库名字',\n                                 charset='utf8mb4',\n                                 cursorclass=pymysql.cursors.DictCursor)\n    try:\n        with connection.cursor() as cursor:\n            # Read a single record\n            sql = \"SELECT 你的URL字段,你的地址字段 FROM 你的房源数据表 where 1=1;\"\n            keyword = request.args.get('keyword')\n            if keyword is not None:\n                sql = sql + \"查询字段 like %%s%\" % keyword\n            cursor.execute(sql)\n            houses = cursor.fetchall()\n    finally:\n        connection.close()\n    return jsonify(houses)\n\n\n@app.route(\"/get_houses\", methods=['POST', 'GET'])\ndef get_houses():\n    # 直接从网页获取数据,url为房源url,address为房源定位地址\n    houses = []\n    city = request.args.get('city')\n    if city is None:\n        city = 'bj'\n    city_url = 'http://%s.58.com' % city\n    for page_num in range(1, 10):\n        url = \"%s/pinpaigongyu/pn/%d/\" % (city_url, page_num)\n        headers = {\n            'connection': \"keep-alive\",\n            'upgrade-insecure-requests': \"1\",\n            'user-agent': \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.181 Safari/537.36\",\n            'accept': \"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\",\n            'accept-encoding': \"gzip, deflate\",\n            'accept-language': \"zh-CN,zh;q=0.9,en;q=0.8,da;q=0.7\",\n            'cookie': \"f=n; f=n; id58=c5/njVsEqPqC7y9vB/RHAg==; 58tj_uuid=ac94c044-cbb8-451c-b6be-974f90197010; new_uv=1; utm_source=; spm=; init_refer=https%253A%252F%252Fcn.bing.com%252F; als=0; f=n; new_session=0; qz_gdt=; Hm_lvt_dcee4f66df28844222ef0479976aabf1=1527032264,1527032267,1527032270,1527032380; Hm_lpvt_dcee4f66df28844222ef0479976aabf1=1527032421; ppStore_fingerprint=3283C76981CCD1090B42ACBBF624A4C9613FE967CDC69C58%EF%BC%BF1527032420843\",\n            'cache-control': \"no-cache\",\n        }\n        response = requests.request(\"GET\", url, headers=headers)\n        htmlSoup = BeautifulSoup(response.text, \"html.parser\")\n        ul = htmlSoup.find(attrs={\"class\": \"list\"})\n        if ul is None:\n            continue\n        li_list = ul.find_all(\"li\")\n        if li_list is None:\n            continue\n        for li in li_list:\n            house = {}\n            house['url'] = '%s/%s' % (city_url, li.find(\"a\")['href'])\n            house['address'] = li.find(\"h2\").text\n            houses.append(house)\n    return jsonify(houses)\n\n\n@app.route('/')\ndef index():\n    return app.send_static_file('index.html')\n\n\nif __name__ == '__main__':\n    app.run(port=8888)\n\n\n# python3 安装flask之后,安装命令pip install Flask\n# 运行 python app.py\n\n效果图:\n\n然后...\n写完了...\n下次见...\n\n                ", "mainLikeNum": ["1 "], "mainBookmarkNum": "1"}