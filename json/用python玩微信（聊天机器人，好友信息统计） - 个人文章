{"title": "用python玩微信（聊天机器人，好友信息统计） - 个人文章 ", "index": "聊天机器人,微信,python", "content": "1.用 Python 实现微信好友性别及位置信息统计\n这里使用的python3+wxpy库+Anaconda(Spyder)开发。如果你想对wxpy有更深的了解请查看：wxpy: 用 Python 玩微信\n# -*- coding: utf-8 -*-\n\"\"\"\n微信好友性别及位置信息\n\"\"\"\n\n#导入模块\nfrom wxpy import Bot\n\n'''Q\n微信机器人登录有3种模式，\n(1)极简模式:robot = Bot()\n(2)终端模式:robot = Bot(console_qr=True)\n(3)缓存模式(可保持登录状态):robot = Bot(cache_path=True)\n'''\n#初始化机器人，选择缓存模式（扫码）登录\nrobot = Bot(cache_path=True)\n\n#获取好友信息\nrobot.chats()\n#robot.mps()#获取微信公众号信息\n\n#获取好友的统计信息\nFriends = robot.friends()\nprint(Friends.stats_text())\n效果图（来自笔主盆友圈）：\n2.用 Python 实现聊天机器人\n这里使用的python3+wxpy库+Anaconda(Spyder)开发。需要提前去图灵官网创建一个属于自己的机器人然后得到apikey。\n使用图灵机器人自动与指定好友聊天\n让室友帮忙测试发现发送表情发送文字还能回应，但是发送图片可能不会回复，猜应该是我们申请的图灵机器人是最初级的没有加图片识别功能。\n# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Tue Mar 13 19:09:05 2018\n\n@author: Snailclimb\n@description使用图灵机器人自动与指定好友聊天\n\"\"\"\n\nfrom wxpy import Bot,Tuling,embed,ensure_one\nbot = Bot()\nmy_friend = ensure_one(bot.search('郑凯'))  #想和机器人聊天的好友的备注\ntuling = Tuling(api_key='你申请的apikey')\n@bot.register(my_friend)  # 使用图灵机器人自动与指定好友聊天\ndef reply_my_friend(msg):\n    tuling.do_reply(msg)\nembed()\n使用图灵机器人群聊\n# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Tue Mar 13 18:55:04 2018\n\n@author: Administrator\n\"\"\"\n\nfrom wxpy import Bot,Tuling,embed\nbot = Bot(cache_path=True)\nmy_group = bot.groups().search('群聊名称')[0]  # 记得把名字改成想用机器人的群\ntuling = Tuling(api_key='你申请的apikey')  # 一定要添加，不然实现不了\n@bot.register(my_group, except_self=False)  # 使用图灵机器人自动在指定群聊天\ndef reply_my_friend(msg):\n    print(tuling.do_reply(msg))\nembed()\n3.用 Python分析朋友圈好友性别分布(图标展示)\n这里没有使用wxpy而是换成了Itchat操作微信，itchat只需要2行代码就可以登录微信。如果你想详细了解itchat，请查看：itchat入门进阶教程以及itchat github项目地址另外就是需要用到python的一个画图功能非常强大的第三方库：matplotlib。如果你想对matplotlib有更深的了解请查看我的博文：Python第三方库matplotlib（词云）入门与进阶\n# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Tue Mar 13 17:09:26 2018\n\n@author: Snalclimb\n@description 微信好友性别比例\n\"\"\"\n\nimport itchat\nimport matplotlib.pyplot as plt\nfrom collections import Counter\nitchat.auto_login(hotReload=True)\nfriends = itchat.get_friends(update=True)\nsexs = list(map(lambda x: x['Sex'], friends[1:]))\ncounts = list(map(lambda x: x[1], Counter(sexs).items()))\nlabels = ['Male','FeMale',   'Unknown']\ncolors = ['red', 'yellowgreen', 'lightskyblue']\nplt.figure(figsize=(8, 5), dpi=80)\nplt.axes(aspect=1)\nplt.pie(counts,  # 性别统计结果\n        labels=labels,  # 性别展示标签\n        colors=colors,  # 饼图区域配色\n        labeldistance=1.1,  # 标签距离圆点距离\n        autopct='%3.1f%%',  # 饼图区域文本格式\n        shadow=False,  # 饼图是否显示阴影\n        startangle=90,  # 饼图起始角度\n        pctdistance=0.6  # 饼图区域文本距离圆点距离\n)\nplt.legend(loc='upper right',)\nplt.title('%s的微信好友性别组成' % friends[0]['NickName'])\nplt.show()\n效果图（来自笔主盆友圈）：\n4.用 Python分析朋友圈好友的签名\n需要用到的第三方库：\nnumpy：本例结合wordcloud使用\njieba：对中文惊进行分词\nPIL： 对图像进行处理（本例与wordcloud结合使用）\nsnowlp：对文本信息进行情感判断\nwordcloud：生成词云matplotlib：绘制2D图形\n# -*- coding: utf-8 -*-\n\"\"\"\n朋友圈朋友签名的词云生成以及\n签名情感分析\n\"\"\"\nimport re,jieba,itchat\nimport jieba.analyse\nimport numpy as np\nfrom PIL import Image\nfrom snownlp import SnowNLP\nfrom wordcloud import WordCloud\nimport matplotlib.pyplot as plt\nitchat.auto_login(hotReload=True)\nfriends = itchat.get_friends(update=True)\ndef analyseSignature(friends):\n    signatures = ''\n    emotions = []\n    for friend in friends:\n        signature = friend['Signature']\n        if(signature != None):\n            signature = signature.strip().replace('span', '').replace('class', '').replace('emoji', '')\n            signature = re.sub(r'1f(\\d.+)','',signature)\n            if(len(signature)>0):\n                nlp = SnowNLP(signature)\n                emotions.append(nlp.sentiments)\n                signatures += ' '.join(jieba.analyse.extract_tags(signature,5))\n    with open('signatures.txt','wt',encoding='utf-8') as file:\n         file.write(signatures)\n\n    # 朋友圈朋友签名的词云相关属性设置\n    back_coloring = np.array(Image.open('alice_color.png'))\n    wordcloud = WordCloud(\n        font_path='simfang.ttf',\n        background_color=\"white\",\n        max_words=1200,\n        mask=back_coloring, \n        max_font_size=75,\n        random_state=45,\n        width=1250, \n        height=1000, \n        margin=15\n    )\n    \n    #生成朋友圈朋友签名的词云\n    wordcloud.generate(signatures)\n    plt.imshow(wordcloud)\n    plt.axis(\"off\")\n    plt.show()\n    wordcloud.to_file('signatures.jpg')#保存到本地文件\n\n    # Signature Emotional Judgment\n    count_good = len(list(filter(lambda x:x>0.66,emotions)))#正面积极\n    count_normal = len(list(filter(lambda x:x>=0.33 and x<=0.66,emotions)))#中性\n    count_bad = len(list(filter(lambda x:x<0.33,emotions)))#负面消极\n    labels = [u'负面消极',u'中性',u'正面积极']\n    values = (count_bad,count_normal,count_good)\n    plt.rcParams['font.sans-serif'] = ['simHei'] \n    plt.rcParams['axes.unicode_minus'] = False\n    plt.xlabel(u'情感判断')#x轴\n    plt.ylabel(u'频数')#y轴\n    plt.xticks(range(3),labels)\n    plt.legend(loc='upper right',)\n    plt.bar(range(3), values, color = 'rgb')\n    plt.title(u'%s的微信好友签名信息情感分析' % friends[0]['NickName'])\n    plt.show()\nanalyseSignature(friends)\n效果图（来自笔主盆友圈）：\n\n参考文献：\nitchat文档:http://itchat.readthedocs.io/zh/latest/tutorial/tutorial0/\nwxpy文档:http://wxpy.readthedocs.io/zh/latest/index.html\n基于Python实现的微信好友数据分析（签名，头像等等）：http://blog.csdn.net/qinyuanpei/article/details/79360703\nWindows环境下Python中wordcloud的使用——自己踩过的坑 ：http://blog.csdn.net/heyuexianzi/article/details/76851377\n欢迎关注我的微信公众号：“Java面试通关手册”（坚持原创，分享美文，分享各种Java学习资源，面试题，以及企业级Java实战项目回复关键字免费领取）：\ngithub项目地址（系列文章包含常见第三库的使用与爬虫，会持续更新）欢迎star和fork.\n\n                ", "mainLikeNum": ["4 "], "mainBookmarkNum": "9"}