{"title": "Python中鲜为人知的特性（一） - python每日练习 ", "index": "python", "content": "问题\nPython中鲜为人知的特性（一）\n讨论\n函数参数unpack\ndef foo(x, y):\n    print x, y\n\nalist = [1, 2]\nadict = {'x': 1, 'y': 2}\n\nfoo(*alist)  # 1, 2\nfoo(**adict)  # 1, 2\n链式比较操作符\n>>> x = 3\n>>> 1 < x < 5\nTrue\n>>> 4 > x >=3\nTrue\n注意函数的默认参数\n>>> def foo(x=[]):\n...     x.append(1)\n...     print x\n...\n>>> foo()\n[1]\n>>> foo()\n[1, 1]\n更安全的做法:\n>>> def foo(x=None):\n...     if x is None:\n...         x = []\n...     x.append(1)\n...     print x\n...\n>>> foo()\n[1]\n>>> foo()\n[1]\n>>>\n带关键字的格式化\n>>> print \"Hello {name} !\".format(name=\"James\")\nHello James !\nfor...else 语法\n>>> for i in (1, 3, 5):\n...     if i % 2 == 0:\n...         break\n... else:\n...     print \"var i is always an odd\"\n...\nvar i is always an odd\n>>>\ndict 的特殊方法__missing__\n当查找不到 key 的时候，会执行这个方法。\n>>> class Dict(dict):\n...   def __missing__(self, key):\n...     self[key] = []\n...     return self[key]\n...\n>>> dct = Dict()\n>>> dct[\"foo\"].append(1)\n>>> dct[\"foo\"].append(2)\n>>> dct[\"foo\"]\n[1, 2]\n切片操作的步长参数\n>>> a = [1, 2, 3, 4, 5]\n>>> a[::2]\n[1, 3, 5]\n>>> a[::-1]\n[5, 4, 3, 2, 1]\nPython解释器中的”_”\n_ 即Python解释器上一次返回的值\n>>> range(4)\n[0, 1, 2, 3]\n>>> _\n[0, 1, 2, 3]\nPython之禅\n>>> import this\nThe Zen of Python, by Tim Peters\n\nBeautiful is better than ugly.\nExplicit is better than implicit.\nSimple is better than complex.\nComplex is better than complicated.\nFlat is better than nested.\nSparse is better than dense.\nReadability counts.\nSpecial cases aren't special enough to break the rules.\nAlthough practicality beats purity.\nErrors should never pass silently.\nUnless explicitly silenced.\nIn the face of ambiguity, refuse the temptation to guess.\nThere should be one-- and preferably only one --obvious way to do it.\nAlthough that way may not be obvious at first unless you're Dutch.\nNow is better than never.\nAlthough never is often better than *right* now.\nIf the implementation is hard to explain, it's a bad idea.\nIf the implementation is easy to explain, it may be a good idea.\nNamespaces are one honking great idea -- let's do more of those!\n来源\nPyZh\n关注\n欢迎关注我的微信公众号：python每日一练\n\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "0"}