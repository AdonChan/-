{"title": "Python3操作Mongodb简明易懂教程 - 严颖专栏 ", "index": "pymongo,mongodb,pycharm,python", "content": "Pymongo是python的一个操作Mongodb的库。\n安装Pymongo的文章在此：https://www.weiya.me/item/68....\n下面我们直接简列出一些常用操作命令。\n博客文章地址：https://www.weiya.me/item/69....\n连接数据库\n链接数据库需要提供一个地址和接口即可。首先还是要导入包。\nfrom pymongo import MongoClient\nconn = MongoClient('localhost',27017)\n当然，你可以使用如下写法：\nconn = MongoClient('mongodb://localhost:27017/')\n创建数据库\nmongodb不需要提前创建好数据库，而是直接使用，如果发现没有则自动创建。\ndb = conn.testdb\n上面的语句，会创建一个testdb的数据库。但是，在没有插入数据的时候，该数据库在管理工具里面你是看不到的（不显示）。\n插入数据\n首先第一步我们先插入一条数据瞧瞧。\n单条记录插入\nfrom pymongo import MongoClient\nconn = MongoClient('mongodb://localhost:27017/')\ndb = conn.testdb\ndb.col.insert({\"name\":'yanying','province':'江苏','age':25})\n注意： 接下来的操作中会忽略掉数据库连接操作，直接写核心代码，请自行补上。\npython控制台什么都没有发生，这就是成功的意思。使用管理工具查看数据库记录，的确包含了一条数据。\n\n多条记录插入\nMongodb一次也可以插入多条数据\ndb.col.insert([\n    {\"name\":'yanying','province':'江苏','age':25},\n    {\"name\":'张三','province':'浙江','age':24},\n    {\"name\":'张三1','province':'浙江1','age':25},\n    {\"name\":'张三2','province':'浙江2','age':26},\n    {\"name\":'张三3','province':'浙江3','age':28},\n])\n查询数据\n下面我们将刚刚插入的数据查询出来。\n单条查询\n我们可以使用find_one()来查询一条记录。\ndb.col.find_one()\n上面的语句可以查询出一条mongodb记录。记录中多出来的_id是Mongodb自动生成的唯一值。\n{'_id': ObjectId('5925351ad92fac3250b9ae3f'), 'name': 'yanying', 'province': '江苏', 'age': 25}\n我们再随便插入点儿数据供下面操作使用。（省略几万字）\n查询所有\n如果我们需要查询出所有的记录，则可以使用db.col.find()但是查出来的是一个结果资源集。\n我们可以使用for来列出所有记录。\nfor item in db.col.find():\n    print(item)\n这样可以获取所有记录。\n{'_id': ObjectId('5925351ad92fac3250b9ae3f'), 'name': 'yanying', 'province': '江苏', 'age': 25}\n{'_id': ObjectId('592550e5d92fac0b8c449f87'), 'name': 'zhangsan', 'province': '北京', 'age': 29}\n{'_id': ObjectId('592550f6d92fac3548c20b1a'), 'name': 'lisi', 'province': '上海', 'age': 22}\n{'_id': ObjectId('59255118d92fac43dcb1999a'), 'name': '王二麻', 'province': '广东', 'age': 30}\n条件查询\n只要将查询条件当做参数塞入即可筛选数据。\nfor item in db.col.find({'name':\"yanying\"}):\n    print(item)\n查询结果\n{'_id': ObjectId('5925351ad92fac3250b9ae3f'), 'name': 'yanying', 'province': '江苏', 'age': 25}\n当然还可以查询小于某个值的记录\nfor item in db.col.find({\"age\":{\"$lt\":25}}):\n    print(item)\n或者大于某个值的记录\nfor item in db.col.find({\"age\":{\"$gt\":25}}):\n    print(item)\n统计查询\n上面的代码可以统计出所有的记录数量\ndb.col.find().count() // 4\n或者加点儿条件\ndb.col.find({\"age\":{\"$gt\":25}}).count() //2\n根据_id查询记录\n_id是mongodb自动生成的id，其类型为ObjectId，想要使用就需要转换类型。\npython3中提供了该方法，不过需要导入一个库。\nfrom bson.objectid import ObjectId\n这样就可以直接使用_id进行查询啦。\ncollection.find_one({'_id':ObjectId('592550e5d92fac0b8c449f87')})\n结果排序\n只要将需要排序的字段放入sort方法即可，Mongodb默认为升序\ndb.col.find().sort(\"age\")\n不过你也可以加一些参数去改变排序的方式。比如倒序，不过要记得先导入pymongo库\nimport pymongo\ndb.col.find().sort(\"UserName\",pymongo.DESCENDING)\n你还可以让他升序，尽管默认如此\nfor item in db.col.find().sort('age',pymongo.ASCENDING):\n    print(item)\n更新数据\n更新数据很简单，只需要一个条件和需要更新的数据即可\ndb.col.update({'_id':ObjectId('59255118d92fac43dcb1999a')},{'$set':{'name':'王二麻33333'}})\n结果如下：王二麻变成了王二麻33333\n{'_id': ObjectId('59255118d92fac43dcb1999a'), 'name': '王二麻33333', 'province': '广东', 'age': 30}\n删除数据\n删除数据使用remove()方法，如果方法带条件，则删除指定条件数据，否则删除全部\n删除name为王二麻33333的用户。\ndb.col.remove({'name':'王二麻33333'})\n删除全部数据（慎用）\ndb.col.remove()\n\n                ", "mainLikeNum": ["3 "], "mainBookmarkNum": "6"}