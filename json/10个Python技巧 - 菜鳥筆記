{"title": "10个Python技巧 - 菜鳥筆記 ", "index": "python", "content": "技巧1：字符串倒置\n>>> a =  \"codementor\"\n>>> print \"Reverse is\",a[::-1]\n倒置之后的结果是“rotnemedoc”。\n技巧2：转置矩阵（transposing a matrix）(把矩阵A的行换成相应的列，得到的新矩阵称为A的转置矩阵)\n>>> mat = [[1, 2, 3], [4, 5, 6]]\n>>> zip(*mat)\n[(1, 4), (2, 5), (3, 6)]\n技巧3\na = [1,2,3]\n将上述列表中的三个值分别存储在3个新变量中。\n>>> a = [1, 2, 3]\n>>> x, y, z = a \n>>> x\n1\n>>> y\n2\n>>> z\n3\n技巧4\na = [\"Code\", \"mentor\", \"Python\", \"Developer\"]\n利用上述列表中的所有元素，创建一个字符串。\n>>> print \" \".join(a)\nCode mentor Python Developer\n技巧5\nlist1 = ['a', 'b', 'c', 'd']\nlist2 = ['p', 'q', 'r', 's']\n编写可以打印出下面结果的代码apbqcrds\n>>> for x, y in zip(list1,list2):\n...    print x, y\n...\na p\nb q\nc r\nd s\n技巧6：一行代码交换两个变量的值\n>>> a=7\n>>> b=5\n>>> b, a =a, b\n>>> a\n5\n>>> b\n7\n技巧7：不使用循环打印出“codecodecodecode mentormentormentormentormentor”\n>>> print \"code\"*4+' '+\"mentor\"*5\ncodecodecodecode mentormentormentormentormentor\n技巧8\na = [[1, 2], [3, 4], [5, 6]]\n不使用任何循环，将上面的嵌套列表转换成单一列表（即组成元素不是列表）输出结果应为: [1, 2, 3, 4, 5, 6]\n>>> import itertools \n>>> list(itertools.chain.from_iterable(a))\n[1, 2, 3, 4, 5, 6]\n技巧9：判断两个单词是否是回文单词（anagram）\ndef is_anagram(word1, word2):\n    \"\"\"Checks whether the words are anagrams.\n    word1: string\n    word2: string\n    returns: boolean\n    \"\"\"\n完成上面的函数\nfrom collections import Counter\ndef is_anagram(str1, str2):\n     return Counter(str1) == Counter(str2)\n>>> is_anagram('abcd','dbca')\nTrue\n>>> is_anagram('abcd','dbaa')\nFalse\n技巧10：接受手动输入字符串，并返回一个列表例如，输入“1 2 3 4”，需要返回的列表是[1, 2, 3, 4]。记住，返回列表中的元素是整型数。代码不要超过一行。\n>>> result = map(lambda x:int(x) ,raw_input().split())\n1 2 3 4\n>>> result\n[1, 2, 3, 4]\n\n                ", "mainLikeNum": ["1 "], "mainBookmarkNum": "11"}