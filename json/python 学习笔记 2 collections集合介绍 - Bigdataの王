{"title": "python 学习笔记 2 collections集合介绍 - Bigdataの王 ", "index": "python", "content": "0.前置说明\n\n\n1.运行环境：Win7虚拟机、python2.7(anacoda版)\n2.本文大部分内容引用此参考文献并极力推荐根据此人博客学习python：http://www.liaoxuefeng.com/wiki/001374738125095c955c1e6d8bb493182103fa...\n\n\n1.namedtuple\n\n这个函数的意义在于创建一个容易让人理解的元组数据结构（tuple），\n\nIn [1]: from collections import namedtuple\n\nIn [2]: name = namedtuple('name',['first','second'])\n\nIn [3]: n = name(\"Mr\",\"ZONT\")\n\nIn [4]: n.first\nOut[4]: 'Mr'\n\nIn [5]: n.second\nOut[5]: 'ZONT'\n\n\n\n使用技巧以及注意事项\n\n\n注意namedtuple的第一个参数真的是表示这个结构的name(这个例子举的比较挫)，请看以下代码，能更好理解.\n\nIn [14]: name = namedtuple('wahaha',['first','second'])\nIn [15]: name.__name__\nOut[15]: 'wahaha'\n\n\n\n新建的tuple是原来tuple的子类\n\nIn [18]: n = name(\"Mr\",\"ZONT\")\nIn [19]: isinstance(n,name)\nOut[19]: True\nIn [20]: isinstance(n,tuple)\nOut[20]: True\n\n\n\ndeque\n\ndeque是list的进化版，可以在两头添加和删除元素，适合用于队列和栈。\n\nIn [21]: from collections import deque\nIn [22]: d = deque(['r', 'Z', 'O'])\nIn [24]: d.append('N')\nIn [25]: d.appendleft('M') #在最左侧添加元素\nIn [26]: d\nOut[26]: deque(['M', 'r', 'Z', 'O', 'N'])\nIn [27]: d.append('T')\nIn [28]: d\nOut[28]: deque(['M', 'r', 'Z', 'O', 'N', 'T'])\nIn [29]: d.pop()\nOut[29]: 'T'\nIn [30]: d\nOut[30]: deque(['M', 'r', 'Z', 'O', 'N'])\nIn [31]: d.popleft() #弹出左侧的元素\nOut[31]: 'M'\nIn [32]: d\nOut[32]: deque(['r', 'Z', 'O', 'N'])\n\n\ndefaultdict\n\n和传统的dict相比，当所选择的key不存在时,可以返回一个默认值。\n\nIn [33]: from collections import defaultdict\nIn [35]: d = defaultdict(lambda:'NOKEY')\nIn [36]: d['k'] = 1\nIn [37]: d['k']\nOut[37]: 1\nIn [38]: d['d']\nOut[38]: 'NOKEY'\n\n\n使用技巧以及注意事项\n\n\n注意defaultdict里面的参数必须是以函数形式传入的，除了用上文的匿名函数还可以用普通函数，如：\n\nIn [39]: def test():\n   ....:     return \"hello\"\n   ....:\nIn [41]: d = defaultdict(test)\nIn [43]: d['l']\nOut[43]: 'hello'\n\n\nOrderedDict\n\nOrderedDict比传统的dict的优越性在于，其key是有顺序的。\n\nIn [49]: o = OrderedDict([('100',0),('10',5),('X','Z')])\nIn [51]: o.keys()\nOut[51]: ['100', '10', 'X']\n\n\n使用技巧以及注意事项\n\n\n注意OrderedDict的排序是根据输入的key的顺序进行排序。\n\nCounter\n\nCounter是一个简单的计数器,可用于统计字符出现个数等。\n\nIn [52]: from collections import Counter\nIn [54]: c = Counter('sdugvikbvqerhasasdasds')\nIn [55]: c['a']\nOut[55]: 3\nIn [56]: c['d']\nOut[56]: 3\nIn [57]: c['s']\nOut[57]: 5\n\n\n                ", "mainLikeNum": ["1 "], "mainBookmarkNum": "6"}