{"title": "PyGame贪吃蛇的实现 - 个人文章 ", "index": "python,pygame", "content": "最近帮人做了个贪吃蛇的游戏（交作业用），很简单，界面如下：开始界面：\n\n游戏中界面：\n\n是不是很简单、朴素。（欢迎大家访问GitHub）\n\n游戏是基于PyGame框架制作的，程序核心逻辑如下：\n\n游戏界面分辨率是640*480，蛇和食物都是由1个或多个20*20像素的正方形块儿（为了方便，下文用点表示20*20像素的正方形块儿）组成，这样共有32*24个点，使用pygame.draw.rect来绘制每一个点；\n初始化时蛇的长度是3，食物是1个点，蛇初始的移动的方向是右，用一个数组代表蛇，数组的每个元素是蛇每个点的坐标，因此数组的第一个坐标是蛇尾，最后一个坐标是蛇头；\n游戏开始后，根据蛇的当前移动方向，将蛇运动方向的前方的那个点append到蛇数组的末位，再把蛇尾去掉，蛇的坐标数组就相当于往前挪了一位；\n如果蛇吃到了食物，即蛇头的坐标等于食物的坐标，那么在第2点中蛇尾就不用去掉，就产生了蛇长度增加的效果；食物被吃掉后，随机在空的位置（不能与蛇的身体重合）再生成一个；\n通过PyGame的event监控按键，改变蛇的方向，例如当蛇向右时，下一次改变方向只能向上或者向下；\n当蛇撞上自身或墙壁，游戏结束，蛇头装上自身，那么蛇坐标数组里就有和舌头坐标重复的数据，撞上墙壁则是蛇头坐标超过了边界，都很好判断；\n其他细节：做了个开始的欢迎界面；食物的颜色随机生成；吃到实物的时候有声音提示等。\n\n\n代码：\n#!/usr/bin/env python  \n# -*- coding:utf-8 -*- \n\n\"\"\" \n@version: v1.0 \n@author: Harp\n@contact: liutao25@baidu.com \n@software: PyCharm \n@file: MySnake.py \n@time: 2018/1/15 0015 23:40 \n\"\"\"\n\n\nimport pygame\nfrom os import path\nfrom sys import exit\nfrom time import sleep\nfrom random import choice\nfrom itertools import product\nfrom pygame.locals import QUIT, KEYDOWN\n\n\ndef direction_check(moving_direction, change_direction):\n    directions = [['up', 'down'], ['left', 'right']]\n    if moving_direction in directions[0] and change_direction in directions[1]:\n        return change_direction\n    elif moving_direction in directions[1] and change_direction in directions[0]:\n        return change_direction\n    return moving_direction\n\n\nclass Snake:\n\n    colors = list(product([0, 64, 128, 192, 255], repeat=3))[1:-1]\n\n    def __init__(self):\n        self.map = {(x, y): 0 for x in range(32) for y in range(24)}\n        self.body = [[100, 100], [120, 100], [140, 100]]\n        self.head = [140, 100]\n        self.food = []\n        self.food_color = []\n        self.moving_direction = 'right'\n        self.speed = 4\n        self.generate_food()\n        self.game_started = False\n\n    def check_game_status(self):\n        if self.body.count(self.head) > 1:\n            return True\n        if self.head[0] < 0 or self.head[0] > 620 or self.head[1] < 0 or self.head[1] > 460:\n            return True\n        return False\n\n    def move_head(self):\n        moves = {\n            'right': (20, 0),\n            'up': (0, -20),\n            'down': (0, 20),\n            'left': (-20, 0)\n        }\n        step = moves[self.moving_direction]\n        self.head[0] += step[0]\n        self.head[1] += step[1]\n\n    def generate_food(self):\n        self.speed = len(self.body) // 16 if len(self.body) // 16 > 4 else self.speed\n        for seg in self.body:\n            x, y = seg\n            self.map[x//20, y//20] = 1\n        empty_pos = [pos for pos in self.map.keys() if not self.map[pos]]\n        result = choice(empty_pos)\n        self.food_color = list(choice(self.colors))\n        self.food = [result[0]*20, result[1]*20]\n\n\ndef main():\n    key_direction_dict = {\n        119: 'up',  # W\n        115: 'down',  # S\n        97: 'left',  # A\n        100: 'right',  # D\n        273: 'up',  # UP\n        274: 'down',  # DOWN\n        276: 'left',  # LEFT\n        275: 'right',  # RIGHT\n    }\n\n    fps_clock = pygame.time.Clock()\n    pygame.init()\n    pygame.mixer.init()\n    snake = Snake()\n    sound = False\n    if path.exists('eat.wav'):\n        sound_wav = pygame.mixer.Sound(\"eat.wav\")\n        sound = True\n    title_font = pygame.font.SysFont('arial', 32)\n    welcome_words = title_font.render('Welcome to My Snake', True, (0, 0, 0), (255, 255, 255))\n    tips_font = pygame.font.SysFont('arial', 24)\n    start_game_words = tips_font.render('Click to Start Game', True, (0, 0, 0), (255, 255, 255))\n    close_game_words = tips_font.render('Press ESC to Close', True, (0, 0, 0), (255, 255, 255))\n    gameover_words = title_font.render('GAME OVER', True, (205, 92, 92), (255, 255, 255))\n    win_words = title_font.render('THE SNAKE IS LONG ENOUGH AND YOU WIN!', True, (0, 0, 205), (255, 255, 255))\n    screen = pygame.display.set_mode((640, 480), 0, 32)\n    pygame.display.set_caption('My Snake')\n    new_direction = snake.moving_direction\n    while 1:\n        for event in pygame.event.get():\n            if event.type == QUIT:\n                exit()\n            elif event.type == KEYDOWN:\n                if event.key == 27:\n                    exit()\n                if snake.game_started and event.key in key_direction_dict:\n                    direction = key_direction_dict[event.key]\n                    new_direction = direction_check(snake.moving_direction, direction)\n            elif (not snake.game_started) and event.type == pygame.MOUSEBUTTONDOWN:\n                x, y = pygame.mouse.get_pos()\n                if 213 <= x <= 422 and 304 <= y <= 342:\n                    snake.game_started = True\n        screen.fill((255, 255, 255))\n        if snake.game_started:\n            snake.moving_direction = new_direction  # 在这里赋值，而不是在event事件的循环中赋值，避免按键太快\n            snake.move_head()\n            snake.body.append(snake.head[:])\n            if snake.head == snake.food:\n                if sound:\n                    sound_wav.play()\n                snake.generate_food()\n            else:\n                snake.body.pop(0)\n            for seg in snake.body:\n                pygame.draw.rect(screen, [0, 0, 0], [seg[0], seg[1], 20, 20], 0)\n            pygame.draw.rect(screen, snake.food_color, [snake.food[0], snake.food[1], 20, 20], 0)\n            if snake.check_game_status():\n                screen.blit(gameover_words, (241, 310))\n                pygame.display.update()\n                snake = Snake()\n                new_direction = snake.moving_direction\n                sleep(3)\n            elif len(snake.body) == 512:\n                screen.blit(win_words, (33, 210))\n                pygame.display.update()\n                snake = Snake()\n                new_direction = snake.moving_direction\n                sleep(3)\n        else:\n            screen.blit(welcome_words, (188, 100))\n            screen.blit(start_game_words, (236, 310))\n            screen.blit(close_game_words, (233, 350))\n        pygame.display.update()\n        fps_clock.tick(snake.speed)\n\n\nif __name__ == '__main__':\n    main()\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "0"}