{"title": "#0001生成验证码 - 私密 ", "index": "python", "content": "**#0001\n#!/usr/bin/env python\n#coding: utf-8\nimport string, random\n\n#激活码中的字符和数字\nAll = string.letters + string.digits\n\n#获得四个字母和数字的随机组合\ndef Stepone():\n    return \"\".join(random.sample(All, 4))\n\n#生成的每个激活码中有几组\ndef Steptwo (group):\n    return \"-\".join([Stepone() for i in range(group)]) \n#python的列表解析，含义就是生成“group”组的Stepone()返回值，并用“-\"连接\n   \n#生成 n组激活码\ndef StepThree (n):\n    return \"\\n\".join([Steptwo(4) for i in range(n)])\n\nif __name__ == '__main__':\n    print StepThree(200)**\n\nif name == '__main__':“Make a script both importable and executable”意思就是说让你写的脚本模块既可以导入到别的模块中用，另外该模块自己也可执行。如果我们是直接执行某个.py文件的时候，那么该文件中”__name__ == '__main__'“是True,但是我们如果从另外一个.py文件通过import导入该文件的时候，这时__name__的值就是我们这个py文件的名字而不是__main__。这个功能还有一个用处：调试代码的时候，在”if name == '__main__'“中加入一些我们的调试代码，我们可以让外部模块调用的时候不执行我们的调试代码，但是如果我们想排查问题的时候，直接执行该模块文件，调试代码能够正常运行！\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "0"}