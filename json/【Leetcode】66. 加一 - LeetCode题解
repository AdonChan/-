{"title": " 【Leetcode】66. 加一 - LeetCode题解 ", "index": "缓存,linux,spring,java,python", "content": "作者: 码蹄疾毕业于哈尔滨工业大学。 小米广告第三代广告引擎的设计者、开发者；负责小米应用商店、日历、开屏广告业务线研发；主导小米广告引擎多个模块重构；关注推荐、搜索、广告领域相关知识;\n题目\n给定一个由整数组成的非空数组所表示的非负整数，在该数的基础上加一。\n最高位数字存放在数组的首位， 数组中每个元素只存储一个数字。\n你可以假设除了整数 0 之外，这个整数不会以零开头。\n示例 1:\n输入: [1,2,3]\n输出: [1,2,4]\n解释: 输入数组表示数字 123。\n示例 2:\n输入: [4,3,2,1]\n输出: [4,3,2,2]\n解释: 输入数组表示数字 4321。\n题解\n这个题目直接模拟就好，注意一下进位的情况：\n模拟[1,2,3,9]\n[1,2,3,9] 进位:0\n[1,2,3,0] 进位:1\n[1,2,4,0] 进位:0\n模拟[9,9]\n[9,9] 进位:0\n[9,0] 进位:1\n[0,0] 进位:1\n[1,0,0]\npython\nclass Solution:\n    def plusOne(self, digits):\n        \"\"\"\n        :type digits: List[int]\n        :rtype: List[int]\n        \"\"\"\n        carry = 1\n        res = []\n        for digit in reversed(digits):\n            sum = digit + carry\n            res.append(int(sum % 10))\n            carry = int(sum / 10)\n        if carry != 0:\n            res.append(carry)\n        res.reverse()\n        return res\njava\nclass Solution {\n    public int[] plusOne(int[] digits) {\n        int carry = 1;\n        for (int i = digits.length - 1; i >= 0; i--) {\n            int sum = digits[i] + carry;\n            digits[i] = sum % 10;\n            carry = sum / 10;\n        }\n        if (carry != 0) {\n            int[] b = new int[digits.length + 1];\n            b[0] = carry;\n            System.arraycopy(digits, 0, b, 1, digits.length);\n            return b;\n        }\n        return digits;\n    }\n}\n热门阅读\n相关阅读\n\n【Leetcode】65. 有效数字\n【工程】在线诊断系统设计与实现\n【Leetcode】64. 最小路径和\n【java】CyclicBarrier\n技术文章汇总\n\n\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "0"}