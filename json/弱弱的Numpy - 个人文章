{"title": "弱弱的Numpy - 个人文章 ", "index": "numpy,python", "content": "numpy的数组对象ndarray\n\nnp.array()生成一个ndarray数组\nnp.array()输出成[]形式，元素由空格分割\n轴(axis)：保存数据的维度\n秩(rank)：轴的数量\n\nndarray对象的属性\n\n\n属性\n说明\n\n\n\n.ndim\n秩，即轴的数量或维度的数量\n\n\n.shape\nndarray对象的尺度，对于矩阵，n行m列\n\n\n.size\nndarray对象元素的个数，相当于.shape中n*m的值\n\n\n.dtype\nndarray对象的元素类型\n\n\n.itemsize\nndarray对象中每个元素的大小，以字节为单位\n\n\n\n\nndarray的元素类型\n\n\n数据类型\n说明\n\n\n\nbool\n布尔类型，True或False\n\n\nintc\n与C语言中的int类型一致，一般是int32或int64\n\n\nintp\n用于索引的整数，与C语言中ssize_t一致，int32或int64\n\n\nint8\n字节长度的整数，取值:[-128, 127]\n\n\nint16\n16位字节长度的整数，取值:[-32768, 32767]\n\n\nint32\n32位字节长度的整数，取值:[-2^31, 2^31-1]\n\n\nint64\n64位字节长度的整数，取值:[-2^63, 2^63-1]\n\n\nuint8\n8位无符号整数，取值：[0,255]\n\n\nuint16\n16位无符号整数，取值：[0,65535]\n\n\nuint32\n32位无符号整数，取值：[0,2^32-1]\n\n\nuint64\n64位无符号整数，取值：[0,2^64-1]\n\n\nfloat16\n16位半精度浮点数：1位符号位，5位指数，10位尾数\n\n\nfloat32\n32位半精度浮点数：1位符号位，8位指数，23位尾数\n\n\nfloat64\n64位半精度浮点数：1位符号位，11位指数，52位尾数\n\n\ncomplex64\n复数类型，实部和虚部都是32位浮点数\n\n\ncomplex128\n复数类型，实部和虚部都是64位浮点数\n\n\n\nndarray数组的创建方法\n1.从python中的列表、元组等类型创建ndarray数组\nx = np.array(list/tuple)x = np.array(list/tuple, dtype = np.float32)当np.array()不指定dtype时，numpy将根据数据情况关联一个dtype类型\n\n2.使用numpy中函数创建ndarray数组，如：arange, ones, zeros等\n\n\n函数\n说明\n\n\n\nnp.arange(n)\n类似range()函数，返回ndarray类型，元素从0到n-1\n\n\nnp.ones(shape)\n根据shape生成一个全1数组，shape是元组类型\n\n\nnp.zeros(shape)\n根据shape类型生成一个全0数组，shape是元组类型\n\n\nnp.full(shape,val)\n根据shape生成一个数组，每个元素值都是val\n\n\nnp.eye(n)\n创建一个正方的n*n单位矩阵，对角线为1，其余为0\n\n\nnp.ones_like(a)\n根据数组a的形状生成一个全1数组\n\n\nnp.zeros_like(a)\n根据数组a的形状生成一个全0数组\n\n\nnp.full_like(a, val)\n根据数组a的形状生成一个数组，每个元素都是val\n\n\nnp.linspace()\n根据起止数据等间距地填充数据，形成数组\n\n\nnp.concatenate()\n将两个或多个数组合并成一个新的数组\n\n\n\n\nndarray数组的维度变换\n\n\n方法\n说明\n\n\n\n.reshape(shape)\n不改变数组元素，返回一个shape形状的数组，原数组不变\n\n\n.resize(shape)\n与.reshape()功能一致，但修改原数组\n\n\n.swapaxes(ax1,ax2)\n将数组n个维度中的两个维度进行调换\n\n\n.flatten()\n对数组进行降维，返回折叠后的一维数组，原数组不变\n\n\n\n\nndarray数组的类型变换\nnew_a = a.astype(new_type)astype()方法一定会创建新的数组（原始数据的一个拷贝），即使两个类型一致\n\nndarray数组向列表的转换\nls = a.tolist()\n\nNumpy一元函数\n对ndarray中的数据执行元素级运算的函数\n\n\n函数\n说明\n\n\n\nnp.abs(x) np.fabs(x)\n计算数组各元素的绝对值\n\n\nnp.sqrt(x)\n计算数组各元素的平方根\n\n\nnp.square(x)\n计算数组各元素的平方\n\n\nnp.log(x) np.log10(x) np.log2(x)\n计算数组各元素的自然对数、10底对数和2底对数\n\n\nnp.ceil(x) np.floor(x)\n计算数组各元素的ceiling值或floor值\n\n\nnp.rint(x)\n计算数组各元素的四舍五入值\n\n\nnp.modf(x)\n将数组各元素的小数和整数部分以两个独立数组的形式返回\n\n\nnp.cos(x) np.cosh(x) np.sin(x) np.sinh(x) np.tan(x) np.tanh(x)\n计算各元素的普通型和双曲型三角函数\n\n\nnp.exp(x)\n计算数组各元素的指数值\n\n\nnp.sign(x)\n计算数组各元素的符号值，1(+),0,-1(-)\n\n\n\nnumpy二元函数\n\n\n函数\n说明\n\n\n\n+ -* / **\n两个数组各元素进行对应运算\n\n\nnp.maximum(x,y) np.fmax()\n元素级的最大值计算\n\n\nnp.minimum(x,y) np.fmin()\n元素级的最小值计算\n\n\nnp.mod(x,y)\n元素级的模运算\n\n\nnp.copysign(x,y)\n将数组y中各元素值的符号赋值给数组x对应元素\n\n\n> < >= <= == !=\n算术比较，产生布尔型数组\n\n\n\n\n数据的CSV文件存取\n1.np.savetxt(frame, array, fmt='%.18e', delimiter=None)\n\nframe:文件、字符串或产生器，可以是.gz或.bz2的压缩文件\narray:存入文件的数组\nfmt:写入文件的格式， 例如：%d %.2f %.18e\ndelimiter:分割字符串，默认是任何空格\n\n2.np.loadtxt(frame, dtype=np.float, delimiter=None, unpack=False)\n\nframe:文件、字符串或产生器，可以是.gz或.bz2的压缩文件\ndtype:数据类型，可选\ndelimiter:分割字符串，默认是任何空格\nunpack:如果是True，读入属性将分别写入不同变量\n\n3.CSV文件的局限性\n\nCSV只能有效存储一维和二维数组\nnp.savetxt() np.loadtxt()只能有效存取一维和二维数组\n\n\n多维数据的存取\n1. a.tofile(frame, sep='', format='%s')\n\nframe:文件、字符串\nsep:数据分割字符串，如果是空串，写入文件为二进制\nformat:写入数据的格式\n\n2. np.fromfile(frame, dtype=float, count=-1, sep='')frame:文件、字符串dtype:读取的数据类型count:读取元素个数、-1表示读取整个文件sep:数据分割字符串，如果是空串，写入文件为二进制注意：该方法需要读取时知道存入文件时数组的维度和元素类型，a.tofile()和np.fromfile()需要配合使用\nnumpy的便捷文件存取\n1. np.save(fname, array)或np.savez(fname, array)\n\nfname:文件名，以.npy为拓展名，压缩拓展名为.npz\narray:数组变量\n\n 2.np.load(fname)\nfname:文件名，以.npy为拓展名，压缩拓展名为.npz\nNumpy的随机数函数(np.random)\n\n\n函数\n说明\n\n\n\nrand(d0,d1,...,dn)\n根据d0-dn创建随机数数组，浮点数，[0,1)，均匀分布\n\n\nrandn(d0,d1,...,dn)\n根据d0-dn创建随机数数组，标准正态分布\n\n\nrandint(low, high, shape)\n根据shape创建随机整数或整数数组，范围是[low,high)\n\n\nseed(s)\n随机数种子，s是给定的种子值\n\n\nshuffle(a)\n根据数组a的第一轴进行随机排列，改变数组x\n\n\npermutation(a)\n根据数组a的第一轴产生一个新的乱序数组，不改变数组x\n\n\nchoice(a,size,replace,p)\n从一维数组a中以概率p抽取元素，形成size形状新数组，replace表示是否可以重用元素，默认为False\n\n\nuniform(low,high, size)\n产生具有均匀分布的数组,low起始值,high结束值,size形状\n\n\nnormal(loc,scale,size)\n产生具有正态分布的数组,loc均值,scale标准差,size形状\n\n\npoisson(lam, size)\n产生具有泊松分布的数组,lam随机事件发生率,size形状\n\n\n\nNumpy的统计函数\n\n\n函数\n说明\n\n\n\nsum(a, axis=None)\n根据给定轴axis计算数组a相关元素之和，axis整数或元组\n\n\nmean(a, axis=None)\n根据给定轴axis计算数组a相关元素的期望，axis整数或元组\n\n\naverage(a, axis=None, weights=None)\n根据给定轴axis计算数组a相关元素的加权平均值\n\n\nstd(a, axis=None)\n根据给定轴axis计算数组a相关元素的标准差\n\n\nvar(a, axis=None)\n根据给定轴axis计算数组a相关元素的方差\n\n\nmin(a) max(a)\n计算数组a中元素的最小值、最大值\n\n\nargmin(a) argmax(a)\n计算数组a中元素最小值、最大值的降一维后的下标\n\n\nunravel_index(index, shape)\n根据shape将一维下标index转换成多维下标\n\n\nptp(a)\n计算数组a中元素最大值与最小值的差\n\n\nmedian(a)\n计算数组a中元素的中位数（中值）\n\n\n\n\nNumpy的梯度函数\n\n\n函数\n说明\n\n\nnp.gradient(f)\n计算数组f中元素的梯度，当f为多维时，返回每个维度的梯度\n\n\n\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "0"}