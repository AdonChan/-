{"title": "Holy Python - 掘金精选 ", "index": "后端,python", "content": "2015年十大最受关注的Python库\n10 Most Popular Python Libraries Started in 2015\nTornado x MVC\n灵活性的缺点在于缺乏良好的组织结构，往往是在开发过程中随着需求的增加而逐渐增加 router => Handler，导致项目结构混乱，非常不利于维护。为了解决这一问题，今天我将 PyHub 的代码进行简单的分离、重构，区分出 Model 和 Controller，加上原有的 Template(View)，形成 MVC 结构。为了方便以后重复利用，我将其基本结构抽取出来，新建了一个 tornado-MVC 的模板项目。\n异步任务神器 Celery 简明笔记\n在程序的运行过程中，我们经常会碰到一些耗时耗资源的操作，为了避免它们阻塞主程序的运行，我们经常会采用多线程或异步任务。比如，在 Web 开发中，对新用户的注册，我们通常会给他发一封激活邮件，而发邮件是个 IO 阻塞式任务，如果直接把它放到应用当中，就需要等邮件发出去之后才能进行下一步操作，此时用户只能等待再等待。更好的方式是在业务逻辑中触发一个发邮件的异步任务，而主程序可以继续往下运行。\nCelery 是一个强大的分布式任务队列，它可以让任务的执行完全脱离主程序，甚至可以被分配到其他主机上运行。我们通常使用它来实现异步任务（async task）和定时任务（crontab）。\n[[译] 来写一个 Python 说明文档生成器吧](https://juejin.im/entry/58554...\n\n还在为项目说明文档发愁？来试试这个，自动生成你想要的文档！\n用神经网络模型给你的照片打分（Part I）\n在上一篇《如何通过直方图判断照片的曝光》中，我试图以用户对照片的评分作为评判标准，找出照片直方图与其曝光好坏之间的关系，然而结果并不理想。一方面，曝光水平与最终的评分（点赞用户数量）之间未必相关；另一方面，直方图是对图像整体亮度水平的统计结果，这一粗略的统计损失了很多图像信息（…\nFlask 入门指南\n本文首发于Gevin的博客 原文链接：Flask 入门指南 未经 Gevin 授权，禁止转载 1. 初识Flask Flask 是一个微框架（Micro framework），其官方文档的前言部分对Flask做了很清楚的定性介绍： “微”（Micro）是什么意思？ “微”(mi…\n将 Jupyter 自动发布到 GitHub Pages\n本文介绍如何利用 MkDocs 将 Jupyter 文档发布到 GitHub Pages 上。Jupyter 既可以用作交互式展示科学计算、数据处理过程，也可以作为 Python 开发环境，甚至可以当做实时的 Markdown 编辑器。借助 nbconvert 工具可以将 Jupyter 文档转化为 Markdown 格式，并通过 MkDocs 将其发布到 GitHub Pages。\nPython 学习之豆瓣每日书单\n功能\n爬取豆瓣每日书单信息处理爬取后的信息，制作成 makedown 文件，方便浏览\nPython in 2017 - Whats next?\nPython 3.6 已经来了，3.7 还会远吗？\n[[译]神经网络的 \"Hello world\" --keras 入门](https://juejin.im/entry/57b82...\n\n今天我们将走进 Keras。Keras 是一个高层次的神经网络库，包含了许多东西，封装了与 scikit-learn 相似的 api，后端采用 Theano 或是 TensorFlow出于 Keras 与 scikit-learn 的相似性，并且神经网络的设计与测试都是对所有人开发的以及对所有人开放的，我将给你一个引导教程：通过与 scikit-learn 的比较来使用 Keras\n使用 Pdb 调试 Python\nPython 自带 Pdb 库，使用 Pdb 调试 Python 程序还是很方便的。但是远程调试、多线程，Pdb 是搞不定的。\n代码这样写更优雅 (Python 版)\nPython 这门语言最大的优点之一就是语法简洁，好的代码就像伪代码一样，干净、整洁、一目了然。但有时候我们写代码，特别是 Python 初学者，往往还是按照其它语言的思维习惯来写，那样的写法不仅运行速度慢，代码读起来也费尽，给人一种拖泥带水的感觉，过段时间连自己也读不懂。 《…\nPython函数式编程：从入门到走火入魔\n很多人都在谈论函数式编程（Functional Programming），只是很多人站在不同的角度看到的是完全不一样的风景。坚持实用主义的 Python 老司机们对待 FP 的态度应该更加包容，虽然他们不相信银弹，但冥冥中似乎能感觉到 FP 暗合了 Python 教义（The …\nPython: 熟悉又陌生的字符编码\n字符编码是计算机编程中不可回避的问题，不管你用 Python2 还是 Python3，亦或是 C++, Java 等，我都觉得非常有必要厘清计算机中的字符编码概念。\n十小时学习 CPython 3.6 内部实现\nCPython 3.6.1 Internals 学习笔记\n全栈数据科学家の技能树\n本文可以看做是诚实预告版的《如何成为一名全栈数据科学家》，有感于湾区日报推荐的一篇文章《全栈数据科学家》，并探索如何正确点亮 “数据科学家” 的技能树以及 Python 在这棵技能树中的位置。\n[[TLDR] Python 语言参考 I](https://juejin.im/entry/58366...\n\nTL;DR = too long; didn't read.\n【从入门到精通】Python 数据科学简洁教程      \n【从入门到精通】Python 数据科学简洁教程    http://click.aliyun.com/m/9013/\nTornado 与 WebSocket 实现实时聊天室\nWebSocket 是用于浏览器与服务器之间进行双相连接的协议，可以用于创建基于浏览器的实时聊天工具。Tornado 自身支持 WebSocket 协议，也可以用来接收网站管理员的编辑指令。\n下一代 Jupyter Notebook：JupyterLab\nJupyterLab 发布 alpha 版本\nPython 的过去，现在和未来—— Guido van Rossum 访谈\nTalk Python To Me 第 100 期请来了 Python 之父 Guido 老爹，讲述 Python 语言的由来、当下的情况以及未来的发展方向等。\n写个抓取网易云音乐精彩评论的爬虫\n被投诉，所以删掉了 我的知乎Live「Python 工程师的入门和进阶」 欢迎关注本人的微信公众号获取更多Python相关的内容（也可以直接搜索「Python之美」）：\nPython 类型检查\n众所周知， Python 是一门强类型、动态类型检查的语言。所谓动态类型，是指在定义变量时，我们无需指定变量的类型，Python 解释器会在运行时自动检查。与静态类型语言（如 C 语言）相比，这不仅仅是少写了几个类型声明字符： #include  #incl…\n一篇文章入门 Python 生态系统\n原文写于2011年末，虽然文中关于Python 3的一些说法可以说已经不成立了，但是作为一篇面向从其他语言转型到Python的程序员来说，本文对Python的生态系统还是做了较为全面的介绍。文中提到了一些第三方库，但是Python社区中强大的第三方库并不止这些，欢迎各位Pytonistas补充。\n一张图学 Python3\nJupyter Notebook\n使用 Python 进行并发编程 - asyncio 篇 (二)\n我们今天继续深入学习 asyncio。 同步机制 asyncio 模块包含多种同步机制，每个原语的解释可以看线程篇，这些原语的用法上和线程 / 进程有一些区别。 Semaphore（信号量） 并发的去爬取显然可以让爬虫工作显得更有效率，但是我们应该把抓取做的无害，这样既可以保证我们不容…\n一个更快的 Python Web 框架：Sanic\n和 Flask 一样的简练的语法，基于 Python 3.5，异步，更快。\nPython 爱好者专用技术头条\n又做了新玩具！在写公众号自动回复的时候就有想法进一步扩展这一平台的应用，中间断断续续写了几个爬虫，这两天把流程整理了一下，做了一个纯 Python 版本的 Hacker News ????，所谓纯 Python 是指只收集、分享与 Python 有关的链接！\n简明 TensorFlow 教程 —— 第一部分：基础知识\n深入浅出的 TF 介绍文章，第一部分主要是名词解释 :)\n一个更好的 Python 交互解释器\n支持语法高亮、自动补全、多行编辑、Vi/Emacs 键盘绑定等……\n[[TLDR] Python 语言参考 II](https://juejin.im/entry/583c1...\n\nPython 语言参考之数据模型\n八大排序算法的 Python 实现\n尝试使用 Python 来进行排序算法的实现。\nPython 程序员都该用的一个库\n本文的作者来自知名 Python 库 Twisted 开发团队，首先举例说明了在 Python 中定义类是多么的麻烦，然后给出了自己的解决方案：attrs 库。从介绍来看，确实方便很多。\nPython 日志功能详解\n本文首发于Gevin的博客 原文链接：Python 日志功能详解 未经 Gevin 授权，禁止转载 软件开发中通过日志记录程序的运行情况是一个开发的好习惯，对于错误排查和系统运维都有很大帮助。Python标准库自带日志模块，已经足够强大，大部分情况下，python程序的日志功能…\n[[译] Python 3.5 协程原理](https://juejin.im/entry/56ea2...\n\n掘金翻译计划，翻译掘金上优质的英文文章\npython 的模块加载和路径查找\nPython 执行时是如何查找包和模块的？\nPython 正则表达式 re 模块简明笔记\n简介 正则表达式（regular expression）是可以匹配文本片段的模式。最简单的正则表达式就是普通字符串，可以匹配其自身。比如，正则表达式'hello' 可以匹配字符串'hello'。 要注意的是，正则表达式并不是一个程序，而是用于处理字符串的一种模式，如果你想用…\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "1"}