{"title": "树莓派学习手记——使用Python录音 - 学习笔记 ", "index": "raspberry-pi,树莓派3,python,录音,pyaudio", "content": "有的时候我们想让树莓派能够录音，以实现语音控制等功能。所以今天我们总结一下用在树莓派上使用Python录音的过程。\n准备硬件\n树莓派上自带的3.5mm接口只能作为语音输出口，不能接麦克风。所以我们需要另外购买USB声卡，某宝上5元左右就能买到，当然你还需要一个麦克风。总费用应该在20元以内。\n\n检查硬件是否正常\n使用arecord -l可以列出所有录音设备，一般输出如下：\narecord -l\n\n List of CAPTURE Hardware Devices card 1: Device [USB Audio Device], device 0: USB Audio [USB Audio]  Subdevices: 1/1  Subdevice #0: subdevice #0\n同样地，aplay -l可以列出所有播放设备，输出中也能找到形如 Device [USB Audio Device] 的设备。\n我们可以直接在命令行执行Linux自带的录音/播放命令，测试硬件是否正常：\narecord -D hw:1,0 -t wav -c 1 -r 44100 -f S16_LE test.wav\naplay -D hw:0,0 test.wav\narecord 是录音命令，其中 hw:1,0 表示 card 1: Device [USB Audio Device], device 0: USB Audio [USB Audio] 的 card 1 , device 0 ，如果你的USB声卡录音设备不是 card 1 , device 0 ，还请进行相应修改。另外，录音过程需要手动按CTRL + C结束。\naplay 是播放命令，其中 hw:0,0 表示树莓派板载音频接口，如果你把耳机插在USB声卡接口，还请进行相应修改，如改成 hw:1,0 。\n*如果你发现录制的音频内没有声音，只有细微的杂音，但 arecord -l 和 aplay -l 列出的设备中确实有USB声卡。那么你可以尝试着把麦克风接口拔出来一些，只插进去2/3，或许能够解决你的问题。笔者不是很明白其中的缘由，如果你有什么想法恳请留言告知。\n安装pyaudio\n在Python中执行录音命令需要pyaudio模块，直接用pip命令安装：\npip install pyaudio\n如果你使用pip命令下载速度很慢，或许修改pip源可以帮到你。\n*如果你使用了virtualenv，一般会发现pyaudio安装失败。这种情况下你需要安装APT中的PortAudio开发头文件，然后安装PyAudio：\nsudo apt-get install portaudio19-dev\npip install pyaudio\n使用Python录音\n该例程修改自官方主页例程PyAudio。\nimport pyaudio\nimport wave\nimport os\nimport sys\n\nCHUNK = 512\nFORMAT = pyaudio.paInt16\nCHANNELS = 1\nRATE = 44100\nRECORD_SECONDS = 5\nWAVE_OUTPUT_FILENAME = \"output.wav\"\n\np = pyaudio.PyAudio()\n\nstream = p.open(format=FORMAT,\n                channels=CHANNELS,\n                rate=RATE,\n                input=True,\n                frames_per_buffer=CHUNK)\n\nprint(\"recording...\")\n\nframes = []\n\nfor i in range(0, int(RATE / CHUNK * RECORD_SECONDS)):\n    data = stream.read(CHUNK)\n    frames.append(data)\n\nprint(\"done\")\n\nstream.stop_stream()\nstream.close()\np.terminate()\n\nwf = wave.open(WAVE_OUTPUT_FILENAME, 'wb')\nwf.setnchannels(CHANNELS)\nwf.setsampwidth(p.get_sample_size(FORMAT))\nwf.setframerate(RATE)\nwf.writeframes(b''.join(frames))\nwf.close()\n执行后会录制一段5秒的音频，输出为同目录下的output.wav文件。\npython3 rec.py\n* 隐藏错误消息\n一般情况下，在树莓派上执行上述Python代码后，你会看到非常多的ALSA报错和JACK报错：\nALSA lib confmisc.c:1281:(snd_func_refer) Unable to find definition 'cards.bcm2835.pcm.front.0:CARD=0'......\n......\nconnect(2) call to /tmp/jack-1000/default/jack_0 failed (err=No such file or directory)attempt to connect to server failed\n\n但你会发现其实能够正常地录音。如果你不想看到这些错误消息，可以在代码中加入下述命令隐藏错误：\nos.close(sys.stderr.fileno())\n小结\n使用Python录音很简单，你还可以在GPIO口上接入一个按钮，修改例程，实现按下按钮自动开始录音的功能。下一步的目标是把Python录音和Cloud Speech API语音识别结合起来。\n感谢你阅读文章！\n\n                ", "mainLikeNum": ["1 "], "mainBookmarkNum": "0"}