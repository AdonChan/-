{"title": "阿里云平台发送短信 - Python ", "index": "短信服务,python,阿里云", "content": "1.获取阿里云访问密钥\n为了使用短信发送API-Python SDK，您必须申请阿里云的访问密钥。\n阿里云访问秘钥是阿里云为用户使用 API（非控制台）来访问其云资源设计的“安全口令”。您可以用它来签名 API 请求内容以通过服务端的安全验证。\n该访问秘钥成对（AccessKeyId 与 AccessKeySecret）生成和使用。每个阿里云用户可以创建多对访问秘钥，且可随时启用（Active）、禁用（Inactive）或者删除已经生成的访问秘钥对。\n您可以通过阿里云控制台的 秘钥管理页面 创建、管理所有的访问秘钥对，且保证它处于“启用”状态。由于访问秘钥是阿里云对 API 请求进行安全验证的关键因子，请妥善保管你的访问秘钥。如果某些秘钥对出现泄漏风险，建议及时删除该秘钥对并生成新的替代秘钥对。\n2.在控制台完成模板与签名的申请，获得调用接口必备的参数\n短信签名\n根据用户属性来创建符合自身属性的签名信息。企业用户需要上传相关企业资质证明，个人用户需要上传证明个人身份的证明。\n短信签名需要审核通过后才可以使用。\n短信模板\n短信模板，即具体发送的短信内容。\n短信模板可以支持验证码、短信通知、推广短信、国际/港澳台消息四种模式。验证码和短信通知，通过变量替换实现个性短信定制。推广短信不支持在模板中添加变量。国际/港澳台消息只能使用国际/港澳台短信模版发送短信。\n短信模板需要审核通过后才可以使用。\n3.参数列表\n入参列表\n\n\n参数名称\n参数类型\n必填与否\n样例取值\n参数说明\n\n\n\nPhoneNumbers\nString\n必须\n15000000000\n短信接收号码。支持以逗号分隔的形式进行批量调用，批量上限为1000个手机号码,批量调用相对于单条调用及时性稍有延迟,验证码类型的短信推荐使用单条调用的方式，发送国际/港澳台消息时，接收号码格式为00+国际区号+号码，如“0085200000000”\n\n\nSignName\nString\n必须\n云通信\n短信签名\n\n\nTemplateCode\nString\n必须\nSMS_0000\n短信模板ID，发送国际/港澳台消息时，请使用国际/港澳台短信模版\n\n\nTemplateParam\nString\n可选\n{“code”:”1234”,”product”:”ytx”}\n短信模板变量替换JSON串,友情提示:如果JSON中需要带换行符,请参照标准的JSON协议对换行符的要求,比如短信内容中包含rn的情况在JSON中需要表示成rn,否则会导致JSON在服务端解析失败\n\n\nOutId\nString\n可选\nabcdefgh\n外部流水扩展字段\n\n\n\n出参列表\n\n\n出参名称\n出参类型\n样例取值\n参数说明\n\n\n\nRequestId\nString\n8906582E-6722\n请求ID\n\n\nCode\nString\nOK\n状态码-返回OK代表请求成功,其他错误码详见错误码列表\n\n\nMessage\nString\n请求成功\n状态码的描述\n\n\nBizId\nString\n134523^4351232\n发送回执ID,可根据该ID查询具体的发送状态\n\n\n\n3.接口的下载\n\nSDK下载\n\n执行：\n\n安装依赖：进入根目录执行命令： python setup.py install #如果为python3，请执行：python3 setup.py install\n修改信息：从阿里云控制台上获取ACCESS_KEY_ID与ACCESS_KEY_SECRET，并填入文件const.py中\n运行程序：python demo_sms_send.py #如果为python3，请执行python3 demo_sms_send.pypip install aliyun-python-sdk-core-v3==2.8.6,2.9版本的region_provider没有add_endpoint属性\n注意：您还需要在控制台上申请短信模板，并将相关信息填入至文件demo_sms_send.py中\n\n\n\n错误码列表\n\n\nCode\n描述\n\n\n\nOK\n请求成功\n\n\nisp.RAM_PERMISSION_DENY\nRAM权限DENY\n\n\nisv.OUT_OF_SERVICE\n业务停机\n\n\nisv.PRODUCT_UN_SUBSCRIPT\n未开通云通信产品的阿里云客户\n\n\nisv.PRODUCT_UNSUBSCRIBE\n产品未开通\n\n\nisv.ACCOUNT_NOT_EXISTS\n账户不存在\n\n\nisv.ACCOUNT_ABNORMAL\n账户异常\n\n\nisv.SMS_TEMPLATE_ILLEGAL\n短信模板不合法\n\n\nisv.SMS_SIGNATURE_ILLEGAL\n短信签名不合法\n\n\nisv.INVALID_PARAMETERS\n参数异常\n\n\nisp.SYSTEM_ERROR\n系统错误\n\n\nisv.MOBILE_NUMBER_ILLEGAL\n非法手机号\n\n\nisv.MOBILE_COUNT_OVER_LIMIT\n手机号码数量超过限制\n\n\nisv.TEMPLATE_MISSING_PARAMETERS\n模板缺少变量\n\n\nisv.BUSINESS_LIMIT_CONTROL\n业务限流\n\n\nisv.INVALID_JSON_PARAM\nJSON参数不合法，只接受字符串值\n\n\nisv.BLACK_KEY_CONTROL_LIMIT\n黑名单管控\n\n\nisv.PARAM_LENGTH_LIMIT\n参数超出长度限制\n\n\nisv.PARAM_NOT_SUPPORT_URL\n不支持URL\n\n\nisv.AMOUNT_NOT_ENOUGH\n账户余额不足\n\n\n\n注：查询所有错误码及解决办法请点击短信接口调用错误码\n4.短信发送demo\n# -*- coding: utf-8 -*-\n# import sys\nfrom aliyunsdkdysmsapi.request.v20170525 import SendSmsRequest\nfrom aliyunsdkdysmsapi.request.v20170525 import QuerySendDetailsRequest\nfrom aliyunsdkcore.client import AcsClient\nimport uuid\nfrom aliyunsdkcore.profile import region_provider\nfrom aliyunsdkcore.http import method_type as MT\nfrom aliyunsdkcore.http import format_type as FT\nimport const\n\n\"\"\"\n短信业务调用接口示例，版本号：v20170525\n\nCreated on 2017-06-12\n\n\"\"\"\n# 这里setdefaultencoding为utf8设置默认编码为utf-8,但是现在可能由于版本原因会出错\n# try:\n#     reload(sys)\n#     sys.setdefaultencoding('utf8')\n# except NameError:\n#     pass\n# except Exception as err:\n#     raise err\n\n# 注意：不要更改\nREGION = \"cn-hangzhou\"\nPRODUCT_NAME = \"Dysmsapi\"\nDOMAIN = \"dysmsapi.aliyuncs.com\"\n\n#ACCESS_KEY_ID 和ACCESS_KEY_SECRET要传入\nacs_client = AcsClient(ACCESS_KEY_ID, ACCESS_KEY_SECRET, REGION)\nregion_provider.add_endpoint(PRODUCT_NAME, REGION, DOMAIN)\n\n#这里写入自己的签名和模板，后面调用就不用写了\ndef send_sms(business_id, phone_numbers,template_param=None,sign_name='***',template_code='***'):\n    smsRequest = SendSmsRequest.SendSmsRequest()\n    # 申请的短信模板编码,必填\n    smsRequest.set_TemplateCode(template_code)\n\n    # 短信模板变量参数\n    if template_param is not None:\n        smsRequest.set_TemplateParam(template_param)\n\n    # 设置业务请求流水号，必填。\n    smsRequest.set_OutId(business_id)\n\n    # 短信签名\n    smsRequest.set_SignName(sign_name)\n    \n    # 数据提交方式\n    # smsRequest.set_method(MT.POST)\n    \n    # 数据提交格式\n    # smsRequest.set_accept_format(FT.JSON)\n    \n    # 短信发送的号码列表，必填。\n    smsRequest.set_PhoneNumbers(phone_numbers)\n\n    # 调用短信发送接口，返回json\n    smsResponse = acs_client.do_action_with_exception(smsRequest)\n\n    # TODO 业务处理\n\n    return smsResponse\n\n\n\nif __name__ == '__main__':\n    __business_id = uuid.uuid1()\n    #print(__business_id)\n    params = \"{\\\"code\\\":\\\"12345\\\",\\\"product\\\":\\\"云通信\\\"}\"\n    #params = u'{\"name\":\"wqb\",\"code\":\"12345678\",\"address\":\"bz\",\"phone\":\"13000000000\"}'\n    print(send_sms(__business_id, \"13000000000\", params))\n\n阿里短信发送短信时返回这个信息，之前是可以发送的，现在阿里应该是做了限制的。如果你的短信模板类型为“验证码”，发送的短信内容只能是包含字母和数字\n\n所以当你的短信内容包含特殊符号和中文时，请把短信模板类型修改为“通知”，这里只能新增一个模板了，因为短信模板目前没有修改。\n5.接口的调用\nclass SmsCodeViewset(mixins.CreateModelMixin,viewsets.GenericViewSet):\n    '''\n        手机验证码\n    '''\n    serializer_class = SmsSerializer\n\n    def generate_code(self):\n        \"\"\"\n        生成四位数字的验证码\n        \"\"\"\n        str1 = \"\"\n        for i in range(4):\n            str1 += str(random.randint(0,9))\n        return str1\n\n    def create(self, request, *args, **kwargs):\n        serializer = self.get_serializer(data=request.data)\n        # 验证合法\n        serializer.is_valid(raise_exception=True)\n\n        mobile = serializer.validated_data[\"mobile\"]\n        code = self.generate_code()\n\n        params = {\"code\":code}\n        sms_status = demo_sms_send.send_sms(uuid.uuid1(),mobile,params)\n        #字节转字符串\n        sms_status = sms_status.decode()\n        #字符串转字典\n        sms_status = eval(sms_status)\n\n        if sms_status[\"Code\"] != \"OK\":\n            return Response({\n                \"mobile\": sms_status[\"Message\"]\n            }, status=status.HTTP_400_BAD_REQUEST)\n        else:\n            code_record = VerifyCode(code=code, mobile=mobile)\n            code_record.save()\n            return Response({\n                \"mobile\": mobile\n            }, status=status.HTTP_201_CREATED)\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "0"}