{"title": "Cobbler自动化安装系统（二） - 达龙 ", "index": "python,mysql,nginx,linux,centos", "content": "博文参考\nCobbler简介\n Cobbler是一个Linux服务器安装的服务，可以通过网络启动(PXE)的方式来快速安装、重装物理服务器和虚拟机，同时还可以管理DHCP，DNS等。\n\nCobbler可以使用命令行方式管理，也提供了基于Web的界面管理工具(cobbler-web)，还提供了API接口，可以方便二次开发使用。\n\nCobbler是较早前的kickstart的升级版，优点是比较容易配置，还自带web界面比较易于管理。\n\nCobbler内置了一个轻量级配置管理系统，但它也支持和其它配置管理系统集成，如Puppet，暂时不支持SaltStack。 \n装系统环境准备\n关闭防火墙firewalld\n[root@localhost ~]# getenforce\nDisabled\n[root@localhost ~]# systemctl status firewalld\n● firewalld.service - firewalld - dynamic firewall daemon\n   Loaded: loaded (/usr/lib/systemd/system/firewalld.service; disabled; vendor preset: enabled)\n   Active: inactive (dead)\n配置163的yum源和阿里云的epel源\n[root@localhost ~]# mv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup\n[root@localhost ~]# wget -O /etc/yum.repos.d/163.repo http://mirrors.163.com/.help/CentOS7-Base-163.repo\n[root@localhost ~]# wget -O /etc/yum.repos.d/epel.repo http://mirrors.aliyun.com/repo/epel-7.repo\n安装配置Cobbler\n安装Cobbler\n[root@localhost ~]# yum -y install dhcp tftp tftp-server cobbler cobbler-web pykickstart httpd\n[root@localhost ~]# rpm -ql cobbler  # 查看安装的文件，下面列出部分。\n/etc/cobbler                  # 配置文件目录\n/etc/cobbler/settings         # cobbler主配置文件，这个文件是YAML格式，Cobbler是python写的程序。\n/etc/cobbler/dhcp.template    # DHCP服务的配置模板\n/etc/cobbler/tftpd.template   # tftp服务的配置模板\n/etc/cobbler/rsync.template   # rsync服务的配置模板\n/etc/cobbler/iso              # iso模板配置文件目录\n/etc/cobbler/pxe              # pxe模板文件目录\n/etc/cobbler/power            # 电源的配置文件目录\n/etc/cobbler/users.conf       # Web服务授权配置文件\n/etc/cobbler/users.digest     # 用于web访问的用户名密码配置文件\n/etc/cobbler/dnsmasq.template # DNS服务的配置模板\n/etc/cobbler/modules.conf     # Cobbler模块配置文件\n/var/lib/cobbler              # Cobbler数据目录\n/var/lib/cobbler/config       # 配置文件\n/var/lib/cobbler/kickstarts   # 默认存放kickstart文件\n/var/lib/cobbler/loaders      # 存放的各种引导程序\n/var/www/cobbler              # 系统安装镜像目录\n/var/www/cobbler/ks_mirror    # 导入的系统镜像列表\n/var/www/cobbler/images       # 导入的系统镜像启动文件\n/var/www/cobbler/repo_mirror  # yum源存储目录\n/var/log/cobbler              # 日志目录\n/var/log/cobbler/install.log  # 客户端系统安装日志\n/var/log/cobbler/cobbler.log  # cobbler日志\n配置Cobbler\n启动httpd和Cobbler并设置为自启动\n[root@localhost ~]# systemctl start httpd\n[root@localhost ~]# systemctl enable httpd.service\n[root@localhost ~]# systemctl start cobblerd.service\n[root@localhost ~]# systemctl enable cobblerd.service\n\n检查cobbler环境: \n[root@localhost cobbler]# cobbler check\nThe following are potential configuration items that you may want to fix:\n\n1 : The 'server' field in /etc/cobbler/settings must be set to something other t         han localhost, or kickstarting features will not work.  This should be a resolva         ble hostname or IP for the boot server as reachable by all machines that will us         e it.\n2 : For PXE to be functional, the 'next_server' field in /etc/cobbler/settings m         ust be set to something other than 127.0.0.1, and should match the IP of the boo         t server on the PXE network.\n3 : change 'disable' to 'no' in /etc/xinetd.d/tftp\n4 : some network boot-loaders are missing from /var/lib/cobbler/loaders, you may          run 'cobbler get-loaders' to download them, or, if you only want to handle x86/         x86_64 netbooting, you may ensure that you have installed a *recent* version of          the syslinux package installed and can ignore this message entirely.  Files in t         his directory, should you want to support all architectures, should include pxel         inux.0, menu.c32, elilo.efi, and yaboot. The 'cobbler get-loaders' command is th         e easiest way to resolve these requirements.\n5 : enable and start rsyncd.service with systemctl\n6 : debmirror package is not installed, it will be required to manage debian dep         loyments and repositories\n7 : The default password used by the sample templates for newly installed machin         es (default_password_crypted in /etc/cobbler/settings) is still set to 'cobbler'          and should be changed, try: \"openssl passwd -1 -salt 'random-phrase-here' 'your         -password-here'\" to generate new one\n8 : fencing tools were not found, and are required to use the (optional) power m         anagement features. install cman or fence-agents to use them\n\nRestart cobblerd and then run 'cobbler sync' to apply changes.\n\n\n逐个解决以上问题: \n[root@localhost ~]# cd /etc/cobbler/\n[root@localhost cobbler]# vim settings\n\n问题1: ip修改为cobber本机ip\nserver: 172.16.0.11\n\n问题2: next-server修改为tftp-server\nnext_server: 172.16.0.11\n\n问题3: \n[root@localhost cobbler]# vim /etc/xinetd.d/tftp\ndisable                 = no\n\n问题4: 准备bootloader\n[root@localhost cobbler]# cp /usr/share/syslinux/{pxelinux.0,menu.c32} /var/lib/cobbler/loaders/\n\n问题5: 启动rsyncd\n[root@localhost cobbler]# systemctl start rsyncd.socket\n[root@localhost cobbler]# systemctl enable rsyncd.socket\n\n问题6: 可忽略\n\n问题7: 为系统设置复杂密码\n[root@localhost cobbler]# openssl passwd -1 -salt 'han' '123456'\n$1$han$BtNvGZePxwQMW5gC6IUep1\n[root@localhost cobbler]# vim /etc/cobbler/settings\ndefault_password_crypted: \"$1$han$BtNvGZePxwQMW5gC6IUep1\"\n\n问题8: 可忽略\n\n重新检查: \n[root@localhost ~]# systemctl restart cobblerd.service\n[root@localhost ~]# cobbler check\n[root@localhost ~]# cobbler check\nThe following are potential configuration items that you may want to fix:\n\n1 : some network boot-loaders are missing from /var/lib/cobbler/loaders, you may run 'cobbler get-loaders' to download them, or, if you only want to handle x86/x86_64 netbooting, you may ensure that you have installed a *recent* version of the syslinux package installed and can ignore this message entirely.  Files in this directory, should you want to support all architectures, should include pxelinux.0, menu.c32, elilo.efi, and yaboot. The 'cobbler get-loaders' command is the easiest way to resolve these requirements.\n2 : enable and start rsyncd.service with systemctl\n3 : debmirror package is not installed, it will be required to manage debian deployments and repositories\n4 : fencing tools were not found, and are required to use the (optional) power management features. install cman or fence-agents to use them\n\nRestart cobblerd and then run 'cobbler sync' to apply changes.\n\n以上均已处理或可以忽略\n\ncobbler配置同步\n[root@localhost ~]# cobbler sync\n\ncobbler的运行依赖于dhcp、tftp、rsync及dns服务。其中dhcp可由dhcpd(isc)提供，也可由dnsmasq提供；tftp可由tftp-server程序包提供，也可由cobbler自带的tftp功能提供；rsync由rsync程序包提供；dns可由bind提供，也可由dnsmasq提供。\ncobbler可自行管理这些服务中的部分甚至是全部，但需要配置/etc/cobbler/settings文件中的“manage_dhcp”、“manage_tftpd”、“manage_rsync”和“manage_dns”分别进行定义。另外，由于每种服务都有着不同的实现方式，如若需要进行自定义，需要通过修改/etc/cobbler/modules.conf配置文件中各服务的模块参数的值来实现。\n本文采用了独立管理的方式，即不通过cobbler来管理这些服务。\n\n配置dhcp\n[root@localhost ~]# cd /etc/dhcp/\n[root@localhost dhcp]# \\cp /usr/share/doc/dhcp*/dhcpd.conf.example dhcpd.conf\n[root@localhost dhcp]# grep -v '^#'  dhcpd.conf\n\noption domain-name \"magedu.com\";\noption routers 172.16.0.1;\noption domain-name-servers 202.106.0.20, 114.114.114.114;\n\ndefault-lease-time 600;\nmax-lease-time 7200;\n\nlog-facility local7;\n\nsubnet 172.16.0.0 netmask 255.255.0.0 {\n    range 172.16.100.200 172.16.100.230;\n    filename \"pxelinux.0\";\n    next-server 172.16.0.11;\n}\n\n\n[root@localhost dhcp]# systemctl start dhcpd.service\n[root@localhost dhcp]# systemctl enable dhcpd.service[root@localhost ~]# cd /etc/dhcp/\n[root@localhost dhcp]# \\cp /usr/share/doc/dhcp*/dhcpd.conf.example dhcpd.conf\n[root@localhost dhcp]# grep -v '^#'  dhcpd.conf\n\noption domain-name \"magedu.com\";\noption routers 172.16.0.1;\noption domain-name-servers 202.106.0.20, 114.114.114.114;\n\ndefault-lease-time 600;\nmax-lease-time 7200;\n\nlog-facility local7;\n\nsubnet 172.16.0.0 netmask 255.255.0.0 {\n    range 172.16.100.200 172.16.100.230;\n    filename \"pxelinux.0\";\n    next-server 172.16.0.11;\n}\n\n\n[root@localhost dhcp]# systemctl start dhcpd.service\n[root@localhost dhcp]# systemctl enable dhcpd.service\n配置tftp\n[root@localhost dhcp]# systemctl start tftp.socket\n[root@localhost dhcp]# systemctl enable tftp.socket\n[root@localhost dhcp]# ss -unl | grep 69\nUNCONN     0      0           :::69                      :::*\nCobbler命令管理\n查看命令帮助\n[root@localhost ~]# cobbler\nusage\n=====\ncobbler <distro|profile|system|repo|image|mgmtclass|package|file> ...\n        [add|edit|copy|getks*|list|remove|rename|report] [options|--help]\ncobbler <aclsetup|buildiso|import|list|replicate|report|reposync|sync|validateks|version|signature|get-loaders|hardlink> [options|--help]\n\n[root@localhost ~]# cobbler import --help  #导入镜像定义distro\nUsage: cobbler import [options]\n\nOptions:\n  -h, --help            show this help message and exit\n  --arch=ARCH           OS architecture being imported\n  --breed=BREED         the breed being imported\n  --os-version=OS_VERSION\n                        the version being imported\n  --path=PATH           local path or rsync location\n  --name=NAME           name, ex 'RHEL-5'\n  --available-as=AVAILABLE_AS\n                        tree is here, don't mirror\n  --kickstart=KICKSTART_FILE\n                        assign this kickstart file\n  --rsync-flags=RSYNC_FLAGS\n                        pass additional flags to rsync\n\ncobbler check    核对当前设置是否有问题\ncobbler list     列出所有的cobbler元素\ncobbler report   列出元素的详细信息\ncobbler sync     同步配置到数据目录,更改配置最好都要执行下\ncobbler reposync 同步yum仓库\ncobbler distro   查看导入的发行版系统信息\ncobbler system   查看添加的系统信息\ncobbler profile  查看配置信息\n导入镜像定义distro\n挂载系统镜像\n[root@localhost ~]# mkdir /media/cdrom\n[root@localhost ~]# mount -r /dev/cdrom /media/cdrom\n从光盘导入文件定义distro\n[root@localhost ~]# cobbler import --name=\"CentOS-7.2-x86_64\" --path=/media/cdrom\n# --path 镜像路径\n# --name 为安装源定义一个名字,distro名字\n# --arch 指定安装源是32位、64位、ia64, 目前支持的选项有: x86│x86_64│ia64\n# 安装源的唯一标示就是根据name参数来定义，本例导入成功后，安装源的唯一标示就是：CentOS-7.1-x86_64，如果重复，系统会提示导入失败。\n\n注意： import自动为导入的distro自动生成一个同名的profile, 并同时提供了一个最小化安装的kickstart文件，可以实现自动化安装,但可能并不符合需求\n\n列出当前的distro\n[root@localhost ~]# cobbler distro list\n   CentOS-7.2-x86_64\n\n# 镜像存放目录，cobbler会将镜像中的所有安装文件拷贝到本地一份，放在/var/www/cobbler/ks_mirror下的CentOS-7.2-x86_64目录下。因此/var/www/cobbler目录必须具有足够容纳安装文件的空间。\n[root@localhost ~]# cd /var/www/cobbler/ks_mirror/\n[root@localhost ks_mirror]# ls\nCentOS-7.2-x86_64  config\n[root@localhost ks_mirror]# ls CentOS-7.2-x86_64/\nCentOS_BuildTag  GPL       LiveOS    RPM-GPG-KEY-CentOS-7\nEFI              images    Packages  RPM-GPG-KEY-CentOS-Testing-7\nEULA             isolinux  repodata  TRANS.TBL\n\n列出当前的profile\n[root@localhost ~]# cobbler profile list\n   CentOS-7.2-x86_64\n自定义ks.cfg\n# Cobbler的ks.cfg文件存放位置\n[root@localhost ks_mirror]# cd /var/lib/cobbler/kickstarts/\n[root@localhost kickstarts]# ls\ndefault.ks    install_profiles  sample_autoyast.xml  sample_esxi4.ks  sample_old.seed\nesxi4-ks.cfg  legacy.ks         sample_end.ks(默认使用的ks文件)        sample_esxi5.ks  sample.seed\nesxi5-ks.cfg  pxerescue.ks      sample_esx4.ks       sample.ks\n\n使用pxe的kickstart文件,并修改\n[root@localhost kickstarts]# vim centos7.cfg\nurl --url=\"http://172.16.0.11/cobbler/ks_mirror/CentOS-7.2-x86_64/\"\n\n注意: 自定义的ks文件和模版的ks文件稍有不同, 某些变量无法从配置文件中获取,如 url --url=$tree, \nrootpw --iscrypted $default_password_crypted\n\n[root@localhost kickstarts]# cat centos7.cfg\n#platform=x86, AMD64, or Intel EM64T\n#version=DEVEL\n# Install OS instead of upgrade\ninstall\n# Keyboard layouts\n# old format: keyboard us\n# new format:\nkeyboard --vckeymap=us --xlayouts='us'\n# Root password\nrootpw --iscrypted $1$hgfvQffN$tXNj5mQldgQt4ziW1QhNF0\n# Use network installation\nurl --url=\"http://172.16.0.11/cobbler/ks_mirror/CentOS-7.2-x86_64/\"\n# System language\nlang en_US\n# Firewall configuration\nfirewall --disabled\n# System authorization information\nauth  --useshadow  --passalgo=sha512\n# Use graphical install\ngraphical\n# Run the Setup Agent on first boot\nfirstboot --enable\n# SELinux configuration\nselinux --disabled\n# Do not configure the X Window System\nskipx\n\n# System services\nservices --disabled=\"chronyd\"\nignoredisk --only-use=sda\n# Network information\nnetwork  --bootproto=dhcp --device=eno16777984\n# Reboot after installation\nreboot\n# System timezone\ntimezone Asia/Shanghai --ntpservers=3.centos.pool.ntp.org,0.centos.pool.ntp.org,2.centos.pool.ntp.org,1.centos.pool.ntp.org\n# System bootloader configuration\nbootloader --location=mbr --boot-drive=sda\n# Clear the Master Boot Record\nzerombr\n# Partition clearing information\nclearpart --all --initlabel\n# Disk partitioning information\npart /boot --asprimary --fstype=\"xfs\" --size=1000\npart swap --fstype=\"swap\" --size=8000\npart / --fstype=\"xfs\" --grow --size=1\n\n%packages\n@^minimal\n@core\n\n%end\n\n# 查看指定的profile设置\n[root@localhost kickstarts]# cobbler profile report --name=CentOS-7.2-x86_64\nName                           : CentOS-7.2-x86_64\nTFTP Boot Files                : {}\nComment                        :\nDHCP Tag                       : default\nDistribution                   : CentOS-7.2-x86_64\nEnable gPXE?                   : 0\nEnable PXE Menu?               : 1\nFetchable Files                : {}\nKernel Options                 : {}\nKernel Options (Post Install)  : {}\nKickstart                      : /var/lib/cobbler/kickstarts/sample_end.ks   默认ks文件\nKickstart Metadata             : {}\nManagement Classes             : []\nManagement Parameters          : <<inherit>>\nName Servers                   : []\nName Servers Search Path       : []\nOwners                         : ['admin']\nParent Profile                 :\nInternal proxy                 :\nRed Hat Management Key         : <<inherit>>\nRed Hat Management Server      : <<inherit>>\nRepos                          : []\nServer Override                : <<inherit>>\nTemplate Files                 : {}\nVirt Auto Boot                 : 1\nVirt Bridge                    : xenbr0\nVirt CPUs                      : 1\nVirt Disk Driver Type          : raw\nVirt File Size(GB)             : 5\nVirt Path                      :\nVirt RAM (MB)                  : 512\nVirt Type                      : kvm\n\n# 编辑profile，修改关联的ks文件\n[root@localhost kickstarts]# cobbler profile edit --name=CentOS-7.2-x86_64 --kickstart=/var/lib/cobbler/kickstarts/centos7.cfg\n\n[root@localhost kickstarts]# cobbler profile report --name=CentOS-7.2-x86_64             Name                           : CentOS-7.2-x86_64\nTFTP Boot Files                : {}\nComment                        :\nDHCP Tag                       : default\nDistribution                   : CentOS-7.2-x86_64\nEnable gPXE?                   : 0\nEnable PXE Menu?               : 1\nFetchable Files                : {}\nKernel Options                 : {}\nKernel Options (Post Install)  : {}\nKickstart                      : /var/lib/cobbler/kickstarts/centos7.cfg\nKickstart Metadata             : {}\nManagement Classes             : []\nManagement Parameters          : <<inherit>>\nName Servers                   : []\nName Servers Search Path       : []\nOwners                         : ['admin']\nParent Profile                 :\nInternal proxy                 :\nRed Hat Management Key         : <<inherit>>\nRed Hat Management Server      : <<inherit>>\nRepos                          : []\nServer Override                : <<inherit>>\nTemplate Files                 : {}\nVirt Auto Boot                 : 1\nVirt Bridge                    : xenbr0\nVirt CPUs                      : 1\nVirt Disk Driver Type          : raw\nVirt File Size(GB)             : 5\nVirt Path                      :\nVirt RAM (MB)                  : 512\nVirt Type                      : kvm\n每次修改完都要同步一次\n[root@localhost kickstarts]# cobbler sync\n安装CentOS 7系统\n新建一台虚拟机，启动\nlocal： 本地硬盘启动CentOS-7-x86_64 : profile名字\n图形化管理cobbler\n使用authn_configfile模块认证cobbler_web用户\n[root@localhost ~]# cd /etc/cobbler/\n[root@localhost cobbler]# cp modules.conf{,.bak}\n[root@localhost cobbler]# vim modules.conf\nmodule = authn_configfile\n\n创建认证文件\n[root@localhost cobbler]# htdigest -c /etc/cobbler/users.digest Cobbler cblradmin\nAdding password for cblradmin in realm Cobbler.\nNew password:\nRe-type new password:\n输入密码： 123456\n账号： cdlradmin\n\n[root@localhost cobbler]# systemctl restart cobblerd.service\n\n\n问题:\n访问http://172.16.0.12/cobbler_web提示没有权限Forbidden\nYou don't have permission to access /cobbler_web on this server.\npng](/img/bVRu9O)\n分析日志\n[Sun Jun 04 01:26:31.669590 2017] [ssl:error] [pid 5536] [client 172.16.0.10:52276] AH02219: access to /usr/share/cobbler/web/cobbler.wsgi failed, reason: SSL connection required\n解决方法:\n使用https地址访问: https://172.16.0.12/cobbler_web在浏览器上添加例外\n配置CentOS 6.6镜像\n挂载镜像\n卸载centos7镜像[root@localhost ~]# umount /media/cdrom[root@localhost ~]# mount -r /dev/cdrom /media/cdrom\n导入镜像\n\n添加kickstart文件\n\n指定kickstart文件\n\ncentos6.cfg\n[root@localhost ~]# cat centos6.cfg\n#platform=x86, AMD64, or Intel EM64T\n#version=DEVEL\n# Firewall configuration\nfirewall --disabled\n# Install OS instead of upgrade\ninstall\n# Use network installation\nurl --url=\"http://172.16.0.11/cobbler/ks_mirror/CentOS-6.6-x86_64/\"\n#repo --name=\"CentOS\" --baseurl=cdrom:sr0 --cost=100\n# Root password\nrootpw --iscrypted $1$cVdlAuSw$5tYu9Bx6iwKTgGvxTlarJ1\n# System authorization information\nauth  --useshadow  --passalgo=sha512\n# Use graphical install\ngraphical\n# System keyboard\nkeyboard us\n# System language\nlang en_US\n# SELinux configuration\nselinux --disabled\n# Do not configure the X Window System\nskipx\n# Installation logging level\n#logging --level=info\n# Reboot after installation\nreboot\n# System timezone\ntimezone  Asia/Shanghai\n# Network information\nnetwork  --bootproto=dhcp --device=eth0 --onboot=on\n#network  --bootproto=dhcp --device=eth1 --onboot=on\n# System bootloader configuration\nbootloader --append=\"crashkernel=auto rhgb quiet\" --location=mbr --driveorder=\"sda\"\n# Clear the Master Boot Record\nzerombr\n# Partition clearing information\nclearpart --all --initlabel\n# Disk partitioning information\npart /boot --asprimary --fstype=\"ext4\" --size=100\npart swap --fstype=\"swap\" --size=8000\npart / --fstype=\"ext4\" --grow --size=1\n\n%packages --nobase\n@core\n\n%end\n配置同步\n\n安装centos 6系统\n新建虚拟机,启动\n附加： ks.cfg文件(供参考)\n文件大部分参数含义见kickstart文章，此处只讲一些不同的地方。同时可以参考模板文件\n[root@linux-node1 kickstarts]# cat CentOS-7.1-x86_64.cfg\n# Cobbler for Kickstart Configurator for CentOS 7.1 by yao zhang\ninstall\nurl --url=$tree  # 这些$开头的变量都是调用配置文件里的值。\ntext\nlang en_US.UTF-8\nkeyboard us\nzerombr\nbootloader --location=mbr --driveorder=sda --append=\"crashkernel=auto rhgb quiet\"\n# Network information\n$SNIPPET('network_config')\ntimezone --utc Asia/Shanghai\nauthconfig --enableshadow --passalgo=sha512\nrootpw  --iscrypted $default_password_crypted\nclearpart --all --initlabel\npart /boot --fstype xfs --size 1024  # CentOS7系统磁盘默认格式xfs\npart swap --size 1024\npart / --fstype xfs --size 1 --grow\nfirstboot --disable\nselinux --disabled\nfirewall --disabled\nlogging --level=info\nreboot\n%pre\n$SNIPPET('log_ks_pre')\n$SNIPPET('kickstart_start')\n$SNIPPET('pre_install_network_config')\n# Enable installation monitoring\n$SNIPPET('pre_anamon')\n%end\n%packages\n@base\n@compat-libraries\n@debugging\n@development\ntree\nnmap\nsysstat\nlrzsz\ndos2unix\ntelnet\niptraf\nncurses-devel\nopenssl-devel\nzlib-devel\nOpenIPMI-tools\nscreen\n%end\n%post\nsystemctl disable postfix.service\n%end\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "3"}