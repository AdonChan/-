{"title": "Theano - 条件 - 数据分析 ", "index": "python3.x,python", "content": "IfElse vs Switch\n\nIfElse接收布尔型条件和两个变量作为输入。\nSwitch接收一个张量（Tensor）以及两个变量作为输入。\nSwitch进行元素级运算，因此比IfElse更常用。\nIfElse比较懒惰，只计算满足条件的相应输出变量， 而Switch计算所有的输出变量。\n\n即：\n\nifelse(condition, output1, output2): 如果condition:1(0),那么ifelse只计算output1(output2)并输出。\nswitch(condition, output1, output2): 如果condition:1(0),那么switch计算output1和output2，并输出output1(output2)\n\nfrom theano import tensor as T\nfrom theano.ifelse import ifelse\nimport theano, time, numpy\n\na, b = T.scalars('a', 'b')\nx, y = T.matrices('x', 'y')\n\nz_switch = T.switch(T.lt(a, b), T.mean(x), T.mean(y))\nz_ifelse = ifelse(T.lt(a, b), T.mean(x), T.mean(y))\n\nf_switch = theano.function([a, b, x, y], z_switch, mode=theano.Mode(linker='vm'))\nf_ifelse = theano.function([a, b, x, y], z_ifelse, mode=theano.Mode(linker='vm'))\n\nval1 = 0.\nval2 = 1.\nbig_mat1 = numpy.ones((10000, 1000))\nbig_mat2 = numpy.ones((10000, 1000))\nn_times = 10\n\ntic = time.clock()\nfor i in range(n_times):\n    f_switch(val1, val2, big_mat1, big_mat2)\nprint('time spent evaluating both values %f sec' % (time.clock() - tic))\n\ntic = time.clock()\nfor j in range(n_times):\n    f_ifelse(val1, val2, big_mat1, big_mat2)\nprint('time spent evaluating one value %f sec' % (time.clock() - tic))\n在这个例子中，IfElse比Switch花费更少的时间，因为他只计算输出变量中的一个。如果不使用linker='vm'或linker='cvm'，那么ifelse将会和switch一样计算两个输出变量，而且花费的时间和switch一样多。\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "0"}