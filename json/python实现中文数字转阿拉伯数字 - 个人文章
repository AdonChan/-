{"title": "python实现中文数字转阿拉伯数字 - 个人文章 ", "index": "python", "content": "情景分析\n(1) 零在中文数字串中起补位作用，处理的时候可以忽略掉(2) 一十通常直接缩减为十，意味着十前获取不到数字时为一十(3) 单位千、百、十前的数为单个数字(4) 单位万前的数可以由（3）复合而成(5) 单位亿前的数可以由（3）、（4）及亿本身复合而成\n代码实现\ndigit = {'一': 1, '二': 2, '三': 3, '四': 4, '五': 5, '六': 6, '七': 7, '八': 8, '九': 9}\ndef _trans(s):\n    num = 0\n    if s:\n        idx_q, idx_b, idx_s = s.find('千'), s.find('百'), s.find('十')\n        if idx_q != -1:\n            num += digit[s[idx_q - 1:idx_q]] * 1000\n        if idx_b != -1:\n            num += digit[s[idx_b - 1:idx_b]] * 100\n        if idx_s != -1:\n            # 十前忽略一的处理\n            num += digit.get(s[idx_s - 1:idx_s], 1) * 10\n        if s[-1] in digit:\n            num += digit[s[-1]]\n    return num\ndef trans(chn):\n    chn = chn.replace('零', '')\n    idx_y, idx_w = chn.rfind('亿'), chn.rfind('万')\n    if idx_w < idx_y:\n        idx_w = -1\n    num_y, num_w = 100000000, 10000\n    if idx_y != -1 and idx_w != -1:\n        return trans(chn[:idx_y]) * num_y + _trans(chn[idx_y + 1:idx_w]) * num_w + _trans(chn[idx_w + 1:])\n    elif idx_y != -1:\n        return trans(chn[:idx_y]) * num_y + _trans(chn[idx_y + 1:])\n    elif idx_w != -1:\n        return _trans(chn[:idx_w]) * num_w + _trans(chn[idx_w + 1:])\n    return _trans(chn)\n测试例子\nprint(trans('十') == 10) \nprint(trans('一百零一') == 101)\nprint(trans('九百二十一') == 921)\nprint(trans('五十六万零一十') == 560010)\nprint(trans('一万亿零二千一百零一') == 1000000002101)\nprint(trans('一万亿二千一百万零一百零一') == 1000021000101)\nprint(trans('一万零二百三十亿四千零七千八百九十') == 1023000007890)\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "0"}