{"title": "head first python（第四章）–学习笔记 - 线上猛如虎，线下怂如鼠（WhyNotBetter） ", "index": "python", "content": "\n\n其实持久存储不仅仅包含文件，还包括数据库等，本章先介绍一部分，先熟悉一下。\n\n熟悉python数据\n\n#!/usr/bin/python\n# -*- coding: utf-8 -*-\n\n\nman = []\nother = []\n\ntry:\n    data = open('sketch.txt')\n    for each_line in data:\n            try:\n                    (role,line_spoken) = each_line.split(':',1)\n                    line_spoken = line_spoken.strip()  #这里的解读是：这里不是直接处理line_spoken字符串,python 不会改变字符串，他会创建一个新的字符串出来然后执行类似如strip（）的方法，然后将返回值赋值到原来的字符串\n                    if role == 'Man':\n                            man.append(line_spoken)\n                    elif role == 'Other Man':\n                            other.append(line_spoken)\n            except ValueError:\n                    pass\n    data.close()\nexcept IOError:\n    print('The datafile is missing!')\n\nprint (man)\nprint (other)\n\n\nprint (\"Norwegian Blues XXXX\",file=out) 是python 3.0用法，如果旧版本的python就是用\n\ndata.write(result)\n\n\n需要注意的是，如果要写入文件，那么打开文件的时候要用w写入模式才行，读取的话是r。\n\n对于try：except无法处理的情况时候，使用finally\n\nfinally是代表总会执行而不论try：except的报错\n\n#!/usr/bin/python\n# -*- coding: utf-8 -*-\n\nman = []\nother = []\n\ntry:\n    data = open('sketch.txt')\n    for each_line in data:\n            try:\n                    (role,line_spoken) = each_line.split(':',1)\n                    line_spoken = line_spoken.strip()  #这里的解读是：这里不是直接处理line_spoken字符串,python 不会改变字符串，他会创建一个新的字符串出来然后执行类似如strip（）的方法，然后将返回值赋值到原来的字符串\n                    if role == 'Man':\n                            man.append(line_spoken)\n                    elif role == 'Other Man':\n                            other.append(line_spoken)\n            except ValueError:\n                    pass\n    data.close()\nexcept IOError:\n    print('The datafile is missing!')\n\nfinally:\n    data.close()\n\n\n详细打印捕获到的错误信息\n\n#!/usr/bin/python\n# -*- coding: utf-8 -*-\n\n\nman = []\nother = []\n\ntry:\n    data = open('sketch.txt')\n    for each_line in data:\n            try:\n                    (role,line_spoken) = each_line.split(':',1)\n                    line_spoken = line_spoken.strip()  #这里的解读是：这里不是直接处理line_spoken字符串,python 不会改变字符串，他会创建一个新的字符串出来然后执行类似如strip（）的方法，然后将返回值赋值到原来的字符串\n                    if role == 'Man':\n                            man.append(line_spoken)\n                    elif role == 'Other Man':\n                            other.append(line_spoken)\n            except ValueError:\n                    pass\n    data.close()\nexcept IOError as err:\n    print('The datafile is missing!' + str(err)) # 捕获详细的错误信息，这个信息需要str格式化\n\nfinally:\n    data.close()\n\n\n例如详细的错误信息会显示： File error： XXXX NO such file or directory：'sketch.txt'\n\n用with代替open\n\n因为with 会自动关闭文件，而不用像open那样要在结尾是用close关闭\n\nwith open('its.txt',\"w\") as data:\n    print data\n\n\n学习是用pickle\n\npickle的使用原因是它是python的专用持久存储方式，可以不用理会格式问题，直接保存，直接使用，这就是他的闪光之处。\n\n用dump保存，用load恢复\n\n#!/usr/bin/python\n# -*- coding: utf-8 -*-\n\nimport pickle\nwith open('mydata.pickle','w') as mysavedata:\n    pickle.dump([1,2,3],mysavedata)\n\na = []\nwith open('mydata.pickle','r') as myrestoredata:\n    a = pickle.load(myrestoredata)\nprint a\n\n\n\n原文链接：http://www.godblessyuan.com/2015/04/27/head_first_python_chapter_5_lea...\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "4"}