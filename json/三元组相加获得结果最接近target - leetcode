{"title": "三元组相加获得结果最接近target - leetcode ", "index": "算法,leetcode,python", "content": "三元组相加获得结果最接近target\n3SumClosest\n\n给定一个数组，选择三个元素相加，结果必须为所有三元组中最接近target的值，返回这个三元组的和。\nGiven an array S of n integers, find three integers in S such that the sum is closest to a given number: target.\nReturn the sum of the three integers. You may assume that each input would have exactly one solution.\n\nexample 1\nFor example, given array S = [-1, 2, 1, -4], and target = 1.\nThe sum that is closest to the target is 2. (-1 + 2 + 1 = 2).\n\ninput: [-1, 2, 1, -4], 1\noutput: 2\n思路\n\n思路参照三元组相加获得target\n只需要将上述文章思路2中换成：第二次循环找到 三元组的和 最接近target的组合即可。\n\n代码\nclass Solution(object):\n    def threeSumClosest(self, nums, target):\n        \"\"\"\n        :type nums: List[int]\n        :type target: int\n        :rtype: int\n        \"\"\"\n        nums.sort()\n        closest = nums[0] + nums[1] + nums[2]\n        for i in range(len(nums)):\n            j, k = i + 1, len(nums) - 1\n            while j < k:\n                value = nums[i] + nums[j] + nums[k]\n                closest = value if abs(target - value) < abs(target - closest) else closest\n                if value == target:\n                    return target\n                elif value > target:\n                    k -= 1\n                else:\n                    j += 1\n        return closest\n本题以及其它leetcode题目代码github地址: github地址\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "0"}