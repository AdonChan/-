{"title": "python  一些易错点整理 - 个人文章 ", "index": "python", "content": "这篇文章是抄抄写写得来的，纯粹是这个编辑器比笔记的好太多，才在这儿写。\n函数参数传递\nPython的函数参数传递\n对于变量（与对象相对的概念），其实，python函数参数传递可以理解为就是变量传值操作，用C++的方式理解，就是对void*赋值。如果这个变量的值不变，我们看似就是引用，如果这个变量的值改变，我们看着像是在赋值。\n自己的理解：传递的值都会复制一份，如果是可变值，函数体内变量值变动时，指针指向的值会改，则看起来像是引用；如果是不可变值，函数体内变量值变动时，会重新赋值，则看起来像赋值。\nglobal 与 nonlocal 比较\npython中global与nonlocal比较\nnonlocal only works in py3\nglobal关键字用来在函数或其他局部作用域中使用全局变量。如果不修改全局变量，也可以不使用global关键字\nnonlocal关键字用来在函数或其他作用域中使用外层（非全局）变量。亲自动手试后，发现使用了 nonlocal 只会读闭包内的变量，可以隔着多层\n\ninit new\n\nUse new when you need to control the creation of a new instance. Use init when you need to control initialization of a new instance.new is the first step of instance creation. It's called first, and is responsible for returning a new instance of your class. In contrast, init doesn't return anything; it's only responsible for initializing the instance after it's been created. [3]\n\nsf 上一哥们类比： new 看作为 alloc 步骤\nA metaclass is just the class of a class. a metaclass's call method controls what happens when call a class. allows you to redefine the instance-creation mechanism from start to finish\n\nclass Singleton(type):\n    def __init__(self, *args, **kwargs):\n        super(Singleton, self).__init__(*args, **kwargs)\n        self.__instance = None\n    def __call__(self, *args, **kwargs):\n        if self.__instance is None:\n            self.__instance = super(Singleton, self).__call__(*args, **kwargs)\n        return self.__instance\n\n__metaclass__ = Singleton\nsingleton [3]\ndef singleton(cls):\n    cls.__new_original__ = cls.__new__\n    \n    @functools.wraps(cls.__new__)\n    def singleton_new(cls, *args, **kw):\n        it = cls.__dict__.get('__it__')\n        if it is not None:\n            return it\n        \n        cls.__it__ = it = cls.__new_original__(cls, *args, **kw)\n        it.__init_original__(*args, **kw)\n        return it\n    \n    cls.__new__ = singleton_new\n    cls.__init_original__ = cls.__init__\n    cls.__init__ = object.__init__\n    \n    return cls\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "0"}