{"title": "Python每日一练0017 - python每日练习 ", "index": "python3.x,python", "content": "问题\n你有一些长字符串，想以指定的列宽将它们重新格式化。\n解决方案\n使用textwrap模块的fill或wrap函数\n假设有一个很长的字符串\ns = \"Look into my eyes, look into my eyes, the eyes, the eyes, \\\nthe eyes, not around the eyes, don't look around the eyes, \\\nlook into my eyes, you're under.\"\n如果直接输出的话，可读性会比较差\n>>> print(s)\nLook into my eyes, look into my eyes, the eyes, the eyes, the eyes, not around the eyes, don't look around the eyes, look into my eyes, you're under.\n我们可以使用fill函数来将这个长字符串自动切分为若干短字符串，只需要指定width即可\n>>> print(textwrap.fill(s, width=60))\nLook into my eyes, look into my eyes, the eyes, the eyes,\nthe eyes, not around the eyes, don't look around the eyes,\nlook into my eyes, you're under.\n也可以使用wrap函数，但是效果是一样的，只不过wrap函数返回的是一个列表而不是字符串\n我们也可以指定其他一些参数比如initial_indent来设置段落的缩进，更多参数见讨论部分的链接\n>>> print(textwrap.fill(s, width=60, initial_indent='    '))\n    Look into my eyes, look into my eyes, the eyes, the\neyes, the eyes, not around the eyes, don't look around the\neyes, look into my eyes, you're under.\n讨论\n如果希望能匹配终端的大小的话，我们可以使用os.get_terminal_size()来得到终端的宽度，然后传给width\n>>> textwrap.fill(s, width=os.get_terminal_size().columns)\n此外，当我们需要格式化的次数很多时，更高效的方法是先创建一个TextWrapper对象，设置好width、initial_indent等等参数，然后再调用fill或者wrap方法\n>>> wrap = textwrap.TextWrapper(width=60, initial_indent='    ')\n>>> print(wrap.fill(s))\n    Look into my eyes, look into my eyes, the eyes, the\neyes, the eyes, not around the eyes, don't look around the\neyes, look into my eyes, you're under.\n关于TextWrapper的其他参数见：\nhttps://docs.python.org/3/lib...\n来源\nPython Cookbook\n关注\n欢迎关注我的微信公众号：python每日一练\n\n\n                ", "mainLikeNum": ["1 "], "mainBookmarkNum": "0"}