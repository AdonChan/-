{"title": "6-django——admin站点管理 - Python全栈玩起来 ", "index": "python,django", "content": "概述\n负责添加、修改、删除内容，开发这些重复的功能是一件没有创造力的事情。因此Django会根据定义的模型自动生成管理模块\n配置Admin应用\n在settings.py文件中的INSTALL_APPS中添加'django.contrib.admin'\n默认已经配置\n创建管理员用户\npython manage.py createsuperuser\n按提示依次输入用户名、邮箱、密码\n登录\n浏览器中输入  127.0.0.1:8000/admin\n汉化\n修改settins.py文件中的配置：\nLANGUAGE_CODE = 'zh-Hans'\nTIME_ZONE = 'Asia/Shanghai'\n管理数据表\n引用目录下的admin.py文件中注册模型\nfrom django.contrib import admin\n\n# Register your models here.\nfrom myApp.models import Grade, Student\nadmin.site.register(Grade)\nadmin.site.register(Student)\n自定义管理界面\nModelAdmin类是模型在Admin界面中的表现形式，通过定义ModelAdmin的子类，来定义模型在Admin界面的显示方式\n属性说明\n\n关联对象\n在添加班级时可以直接添加几个学生\nclass StudentInline(admin.TabularInline):\n    model = Student\n    extra = 2  # 可以添加2个学生\n    \n    \nclass GradeAdmin(admin.ModelAdmin):\n    inlines = [StudentInline]\n    list_display = ['pk', 'name', 'boyNum', 'girlNum', 'isDelete']\n\nadmin.site.register(Grade, GradeAdmin)\n布尔值的显示问题\nclass StudentAdmin(admin.ModelAdmin):\n    def sex(self):\n        if self.sex:\n            return '男'\n        else:\n            return '女'\n\n    sex.short_description = '性别'\n\n    def content(self):\n        return self.content\n\n    content.short_description = '内容'\n\n    # 列表页属性\n    list_display = ['pk', 'name', 'age', sex, content,\n                    'grade', 'isDelete']\n执行动作的位置\nclass StudentAdmin(admin.ModelAdmin):\n    actions_on_bottom = True\n    actions_on_top = True\n\n使用装饰器注册\n@admin.register(Student)\nclass StudentAdmin(admin.ModelAdmin):\n    actions_on_bottom = True\n    actions_on_top = True\n    def sex(self):\n        if self.sex:\n            return '男'\n        else:\n            return '女'\n\n    sex.short_description = '性别'\n\n    def content(self):\n        return self.content\n\n    content.short_description = '内容'\n\n    # 列表页属性\n    list_display = ['pk', 'name', 'age', sex, content,\n                    'grade', 'isDelete']\n\n    list_filter = ['grade']\n    search_fields = ['content']\n    list_per_page = 15\n    # 添加，修改页属性\n    # fields = ['name','age','sex','content','grade', 'isDelete']\n    fieldsets = [\n        ('base', {'fields': ['name', 'age', 'grade']}),\n        ('more', {'fields': ['sex', 'content', 'grade', 'isDelete']}),\n    ]\n\n# admin.site.register(Student, StudentAdmin)\nXadmin自学\n安装\nhttps://github.com/sshwsfc/xa...\nGitHub上下载 xadmin安装包，由于安装会报错，编码问题，需要修改压缩包中的一个文件，将压缩包中的README.rst 替换为自己新建的同样名字的空文件。 然后cmd进入该目录 执行安装\npip install xadmin-master.zip\n配置\nsettings.py\nINSTALLED_APPS = [\n    'xadmin',\n    'crispy_forms',\n    'reversion',\n]\n主路由urls.py\nimport xadmin\nxadmin.autodiscover()\n\n# version模块自动注册需要版本控制的 Model\nfrom xadmin.plugins import xversion\nxversion.register_models()\nurlpatterns = [\n    url(r'xadmin/', include(xadmin.site.urls)),\n]\n如果出现no such table 是由于数据库中没有xadmin的表的问题，可以删除数据库，执行迁移。。\n7-django——文件上传_分页_ajax_富文本_celery\n\n                ", "mainLikeNum": ["2 "], "mainBookmarkNum": "2"}