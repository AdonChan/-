{"title": "两个list的对应元素操作 - python学习 ", "index": "python,List,数据结构", "content": "a=[1,2,3]\nb=[4,5,6]\n\n现将list a与 list b按位相加，其结果为[5,7,9]\n方法一：\nc=[a[i]+b[i] for i in range(min(len(a),len(b)))]\n\n方法二：\nc=list(map(lambda x :x[0]+x[1] ,zip(a,b)))\n方法三：\n调用numpy库\nimport numpy as np\nc = np.array(a) + np.array(b)\n\nmap()函数：\nmap()函数接受两个参数，一个是函数，一个是序列，map将传入的函数作用到序列的每个元素，并返回一个可以列表化的map对象。（python2直接返回列表）\nzip()函数：\nzip()是Python的一个内建函数，它接受一系列可迭代的对象作为参数，将对象中对应的元素打包成一个个tuple（元组），然后返回由这些tuples组成的可list化的zip对象。若传入参数的长度不等，则返回list的长度和参数中长度最短的对象相同。利用*号操作符，可以将list unzip（解压）\n>>> a = [1,2,3]\n>>> b = [4,5,6]\n>>> c = [4,5,6,7,8]\n>>> zipped = zip(a,b)\n<zip object at 0x02B01B48> #返回的是一个对象\n[(1, 4), (2, 5), (3, 6)]\n>>> list(zip(a,c))\n[(1, 4), (2, 5), (3, 6)]\n>>> list(zip(*zipped)) #解压也使用list进行转换\n[(1, 2, 3), (4, 5, 6)]\n参考网站：http://www.jb51.net/article/5...\n\n\n                ", "mainLikeNum": ["2 "], "mainBookmarkNum": "3"}