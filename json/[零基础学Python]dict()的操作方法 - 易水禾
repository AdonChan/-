{"title": "[零基础学Python]dict()的操作方法 - 易水禾 ", "index": "python", "content": "dict的很多方法跟list有类似的地方，下面一一道来，并且会跟list做一个对比\n\n嵌套\n\n嵌套在list中也存在，就是元素是list，在dict中，也有类似的样式：\n\n>>> a_list = [[1,2,3],[4,5],[6,7]]\n>>> a_list[1][1]\n5\n>>> a_dict = {1:{\"name\":\"qiwsir\"},2:\"python\",\"email\":\"qiwsir@gmail.com\"}\n>>> a_dict\n{1: {'name': 'qiwsir'}, 2: 'python', 'email': 'qiwsir@gmail.com'}\n>>> a_dict[1]['name']    #一个嵌套的dict访问其值的方法：一层一层地写出键\n'qiwsir'\n\n\n获取键、值\n\n在上一讲中，已经知道可以通过dict的键得到其值。例上面的例子。\n\n还有别的方法得到键值吗？有！python一般不是只有一个方法实现某个操作的。\n\n>>> website = {1:\"google\",\"second\":\"baidu\",3:\"facebook\",\"twitter\":4}\n\n>>>#用d.keys()的方法得到dict的所有键，结果是list\n>>> website.keys()\n[1, 'second', 3, 'twitter']\n\n>>>#用d.values()的方法得到dict的所有值，如果里面没有嵌套别的dict，结果是list\n>>> website.values()\n['google', 'baidu', 'facebook', 4]\n\n>>>#用items()的方法得到了一组一组的键值对，\n>>>#结果是list，只不过list里面的元素是元组\n>>> website.items()\n[(1, 'google'), ('second', 'baidu'), (3, 'facebook'), ('twitter', 4)]\n\n\n从上面的结果中，我们就可以看出，还可以用for语句循环得到相应内容。例如：\n\n>>> for key in website.keys():\n...     print key,type(key)\n... \n1 <type 'int'>\nsecond <type 'str'>\n3 <type 'int'>\ntwitter <type 'str'>\n\n>>>#下面的方法和上面的方法是一样的\n>>> for key in website:\n...     print key,type(key)\n... \n1 <type 'int'>\nsecond <type 'str'>\n3 <type 'int'>\ntwitter <type 'str'>\n\n\n以下两种方法等效：\n\n>>> for value in website.values():\n...     print value\n... \ngoogle\nbaidu\nfacebook\n4\n\n>>> for key in website:\n...     print website[key]\n... \ngoogle\nbaidu\nfacebook\n4\n\n\n下面的方法又是等效的：\n\n>>> for k,v in website.items():\n...     print str(k)+\":\"+str(v)\n... \n1:google\nsecond:baidu\n3:facebook\ntwitter:4\n\n>>> for k in website:\n...     print str(k)+\":\"+str(website[k])\n... \n1:google\nsecond:baidu\n3:facebook\ntwitter:4\n\n\n下面的方法也能得到键值，不过似乎要多敲键盘\n\n>>> website\n{1: 'google', 'second': 'baidu', 3: 'facebook', 'twitter': 4}\n>>> website.get(1)     \n'google'\n>>> website.get(\"second\")\n'baidu'\n\n\n其它几种常用方法\n\ndict中的方法在这里不做过多的介绍，因为前面一节中已经列出来类，看官如果有兴趣可以一一尝试。下面列出几种常用的\n\n>>> len(website)\n4\n>>> website\n{1: 'google', 'second': 'baidu', 3: 'facebook', 'twitter': 4}\n\n>>> new_web = website.copy()    #拷贝一份，这个拷贝也叫做浅拷贝，对应着还有深拷贝。\n>>> new_web　                   #两者区别，可以google一下。\n{1: 'google', 'second': 'baidu', 3: 'facebook', 'twitter': 4}\n\n\n删除键值对的方法有两个，但是两者有一点区别\n\n>>>#d.pop(key)，根据key删除相应的键值对，并返回该值\n>>> new_web.pop('second')\n'baidu'\n\n>>> del new_web[3]　    #没有返回值，如果删除键不存在，返回错误\n>>> new_web\n{1: 'google', 'twitter': 4}\n>>> del new_web[9]\nTraceback (most recent call last):\nFile \"<stdin>\", line 1, in <module>\nKeyError: 9\n\n\n用d.update(d2)可以把d2合并到d中。\n\n>>> cnweb\n{'qq': 'first in cn', 'python': 'qiwsir.github.io', 'alibaba': 'Business'}\n>>> website\n{1: 'google', 'second': 'baidu', 3: 'facebook', 'twitter': 4}\n\n>>> website.update(cnweb)   #把cnweb合并到website内\n>>> website　               #变化了\n{'qq': 'first in cn', 1: 'google', 'second': 'baidu', 3: 'facebook', 'python': 'qiwsir.github.io', 'twitter': 4, 'alibaba': 'Business'}\n>>> cnweb　                 #not changed\n{'qq': 'first in cn', 'python': 'qiwsir.github.io', 'alibaba': 'Business'}\n\n\n在本讲最后，要提醒看官，在python3中，dict有不少变化，比如能够进行字典解析，就类似列表解析那样，这可是非常有意思的东西哦。\n\n                ", "mainLikeNum": ["1 "], "mainBookmarkNum": "3"}