{"title": "#0000在一个图片上画一个数字 - 私密 ", "index": "python", "content": "#0000\nfrom PIL import Image,ImageFont,ImageDraw#从PIL库导入所需模块\n#######PIL：Python Imaging Library，已经是Python平台事实上的图像处理标准库了。PIL功能非常强大，但API（应用程序界面）却非常简单易用。\nimport sys \n#########sys能访问解释器联系紧密的变量和函数。\nreload(sys)   \n#########必须要reload   ///python中获得系统默认编码为import sys;print sys.setdefaultencoding()而修改系统默认编码要在两句之间加reload（sys）##这是因为python在运行的时候首先加载了site.py而site.py中有“ if hasattr(sys,\n\"setdefaultencoding\"): del sys.setdefaultencoding”，即sys加载后，setdefaultencoding方法被删除了，所以要重新导入sys重新设置系统编码\n###########\nsys.setdefaultencoding('utf-8')#字符编码改为utf8\n\n这两个作用不一样,\n1. # coding:utf-8\n作用是定义源代码的编码. 如果没有定义, 此源码中是不可以包含中文字符串的.\nPEP 0263 -- Defining Python Source Code Encodings\nhttps://www.python.org/dev/peps/pep-0263/\n2. sys.getdefaultencoding()\n是设置默认的string的编码格式\n\nheadPath=r\"C:\\\\github\\\\PythonExercise\\\\pictures\\\\\"     \n##字符串前加“r”是为了防止字符转义    \n#头像图片路径\n\noutputPath=r\"C:\\\\github\\\\PythonExercise\\\\pictures\\\\\"  \n#处理后输出路径\n\nfontPath=r\"C:\\\\Windows\\\\Fonts\\\\\" \n#字体路径\n\nheadFile=\"head.jpg\"           #头像文件\noutFile=\"output.jpg\"          #输出文件\n\n#打开图片，建立画布\nimage=Image.open(headPath+headFile, 'r')\ndraw=ImageDraw.Draw(image)\n\n#由图片大小确定字体大小\nfontsize=min(image.size)/ 4\n\n#增加文字   ##ImageFont.truetype(filename(字体绝对目录),size(字体大小),index=0,encoding=''，下述代码有误)\n\nfontobj=ImageFont.truetype(font=fontPath+\"AdobeHeitiStd-Regular.otf\",size=fontsize,index=0 ,encoding='',filename= None)\n# 实例字体对象\ndraw.text((image.size[0 ]-fontsize,0),text= \"5\",fill=(255 ,0, 0),font=fontobj,anchor=None )\n#用draw对象的text() 方法添加文字   \n##ImageDraw.text(xy,text=\"内容\",fill,font,anchor=None(XY坐标，以左上角为零点，fill为填充的颜色，font为包含字体地址，大小，编码方式等的变量，上述代码xy坐标有误))\nimage.save(outputPath+outFile)#保存图片\n\n使用PIL库要先安装，后出现问题The _imaging C module is not installed，后再安装一个额外的安装包，成功解决\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "0"}