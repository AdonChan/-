{"title": "SQLAlchemy对数据基本操作 - 个人文章 ", "index": "python,flask", "content": "先前在这篇文章有些创建操作介绍 Mysql安装和操作(flask)\n以下为读《深入理解Flask》\n对各种数据储存策略有四种基本功能类型：添加,读取,修改,删除\n增加数据\n\n读取数据\n读取数据也许是操作种类比较复杂的功能类型\n一个简单的例子\n>>> users=User.query.all()\n>>> users\n[<User 'test'>]\n一些常用语句(可以链式调用)\nUser.query.all ##查询User模型在数据库中所有行\nUser.query.h2mit(5).all ##指定行数返回\nUser.query.first() ##返回一行数据\nUser.query.filter(User.id == 2).first().name\nUser.query.get(2).name ##以主键获取,等效于上句\nPost.query.paginate(2,10) ##返回2-10的对象,这个设计为了分页\nUser.query.filter_by(username=\"test\").all() ##精确过滤\nUser.query.filter(User.id>1).all() ##user.id大于1的\n##filter参数接受任何python表达式\nUser.query.order_by(User.username).all() ##正向排序\nUser.query.order_by(User.username.desc()).all() ##反向排序\n##order_by控制排序方式\n\npaginate-Add：假如命令page=Post.query.paginate(2,10)\npage.items ##返回这一页包含数据\npage.page ##页数\npage.pages ##总页数\npage.has_prev OR page.has_next ##上一页或者下一页是否有数据\nfilter-Add: 一些复杂的SQL语句也可以转化\nUser.query.filter(\n        User.username.in_(['test','test1']),\n        User.password_hash==None\n    ).first()\nUser.query.filter(\n        not_(User.password_hash==None)\n    ).first() ##拥有密码的user\nUser.query.filter(\n        or_(not_(User.password_hash==None),User.id>1)\n    ).first() ##组合调用\nSQLAlchemy中与None的比较会被当成与NULL比较\n修改数据\n调用update方法更新数据\n>>> User.query.filter_by(username=\"test\").update({\n    'password_hash':'test'\n    })\n1\n>>> db.session.commit()\n删除数据\n>>> user=User.query.filter_by(username=\"test\").first()\n>>> db.session.delete(user)\n>>> db.session.commit()\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "2"}