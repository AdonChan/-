{"title": "PyQt5,  Label - pyqt5 ", "index": "python,pyqt", "content": "\n简介\n标签组件用于向用户显示文本，它可以是另一个组件的目的单词标签，单个句子，多行，多段的文本块。\n创建\n标签小部件是通过构造函数创建的:\nlabel = QLabel(text)\n\ntext 参数可以忽略，文本可以选择。稍后指定，或在构造时定义。\n方法\n在构造后设置或更改文字，使用下面方法:\nlabel.text()\n\n标签的对齐默认值是将文本放置在标签的左侧，垂直居中放置，可以这样使用:\nlabel.setAligment(alignment)\n\nalignment参数指定将文本水平和垂直的放置，水平的放置方式有:\nQt.AlignLeft\nQt.AlignHCenter\nQt.AlignRight\nQt.AlignJustify\n\n设置垂直对齐\nQt.AlignTop\nQt.AlignVCenter\nQt.AlignBoottom\nQt.AlignBaseline\n\n如果需要水平和垂直对齐，常量应该用管道分割:|。\n如果有多行，Label小部件还允许包装文本，可用以下方法启用:\nLabel.setWordWrap(word_wrap)\n\n当word_wrap设置为True时，文本将被包装到为该小部件分配的空间中。\nLabel上的边距大小初始为零，通过指定像素的大小自定义:\nlabel.setMargin(,argin)\n\n通过以像素为单位指定缩进量， 还可以将缩紧应用于标签文本:\nlabel.setIndent(indent)\n\n使用应用程序时， 记住键盘快捷键是提高操作性和速度的重要部分，它们通过标签下的字母下方的下划线标识。但是，某些小部件无法显示助记符，因此，Label可以与其他小部件配对。这可以在使用快捷键时将焦点从标签转移到其他小部件。\nlabel.setBuddy(widget)\n\nwidget参数是要与标签配对的小部件名称。\n示例\n# !/usr/bin/python3\n\nfrom PyQt5.QtCore import * \nfrom PyQt5.QtWidgets import * \nimport sys\n\nclass Window(QWidget):\n    def __init__(self):\n        QWidget.__init__(self)\n        \n        layout = QGridLayout()\n        self.setLayout(layout)\n        \n        label = QLabel(\"The story of Dale\")\n        layout.addWidget(label, 0, 0)\n        \n        label  = QLabel(\"Few people could understand Dale's motivation. It wasn't something that was great\")\n        label.setWordWrap(True)\n        layout.addWidget(label, 0, 1)\n\napp = QApplication(sys.argv)\n\nscreen = Window()\nscreen.show()\n\nsys.exit(app.exec_())\n\n\n\n                ", "mainLikeNum": ["2 "], "mainBookmarkNum": "1"}