{"title": "python计算大文件的md5、sha1值 - 辛巴 ", "index": "sha1,md5,python", "content": "版权声明：本文系作者原创。未经许可，不得转载。\n   \n    大文件如果一次性读入计算，会占用大量内存，可以分块读取、分块计算，效果与一次读取计算相同。代码如下：\n\nimport hashlib\nimport base64\n\n'''\nsha1 file with filename (SHA1)\n'''\ndef SHA1FileWithName(fineName, block_size=64 * 1024):\n  with open(fineName, 'rb') as f:\n    sha1 = hashlib.sha1()\n    while True:\n      data = f.read(block_size)\n      if not data:\n        break\n      sha1.update(data)\n    retsha1 = base64.b64encode(sha1.digest())\n    return retsha1\n\n'''\nmd5 file with filename (MD5)\n'''\ndef MD5FileWithName(fineName, block_size=64 * 1024):\n  with open(fineName, 'rb') as f:\n    md5 = hashlib.md5()\n    while True:\n      data = f.read(block_size)\n      if not data:\n        break\n      md5.update(data)\n    retmd5 = base64.b64encode(md5.digest())\n    return retmd5\n\n                ", "mainLikeNum": ["1 "], "mainBookmarkNum": "8"}