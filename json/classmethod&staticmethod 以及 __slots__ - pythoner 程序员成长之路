{"title": "classmethod&staticmethod 以及 __slots__ - pythoner 程序员成长之路 ", "index": "python", "content": "\n什么是python中的classmethod,它的用途是什么?\n\nclassmethod装饰器对应的函数不需要实例化，不需要 self 参数，但第一个参数需要是表示自身类的 cls 参数，可以来调用类的属性，类的方法，实例化对象等。\nclass Demo:\n    @classmethod\n    def klassmeth(*args):\n        return args\n    \"\"\"\n    Usage::\n    >>>Demo.klassmeth()\n    >>> (<class '__main__.Demo'>, 'span')\n    \"\"\"\n        \n\n\nklasssmeth 返回全部位置参数\n不管怎么样调用Demo.klassmenth,它的第一个参数始终是Demo类.\n\n\n什么是python中的staticmethod,它的用途是什么?\n\nstaticmethod是一个将类中的方法静态化,无需实例便可调用.\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\nclass C(object):\n@staticmethod\ndef f():\n    print('runoob');\n\nC.f();          # 静态方法无需实例化\ncobj = C()\ncobj.f()        # 也可以实例化后调用\n\n\n\n__slots__用于什么地方?\n\n首先我们要明白一个概念.默认情况下Python在各个实例中名为__dict__的字典里存储的实力属性,为了是底层的散列表提升访问速度,字典会消耗大量内存.\n通过__slots__类属性,能节省大量内存.方法事让解释器在元组中存储属性,而不是字典.\n继承自超类__slots__属性没有效果,Python只会使用各个类中定义的__slots__属性.\n定义__slots__属性之后,实例不能再有__slots__中所列名称之外的其他属性.\n如果把__dict__这个名称添加到__slots__中,是一个糟糕的选择.\n如果不把__weakref__加入__slots__,实例就不能作为弱引用的目标.\n\n\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "0"}