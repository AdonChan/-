{"title": "两个用链表表示的数字相加 - leetcode ", "index": "leetcode,算法,python", "content": "两个用链表表示的数字相加\nAdd Two Numbers\n\nYou are given two non-empty linked lists representing two non-negative integers. The digits are stored in reverse order and each of their nodes contain a single digit. Add the two numbers and return it as a linked list.\nYou may assume the two numbers do not contain any leading zero, except the number 0 itself.\n\nexample\nInput: (2 -> 6) + (3 -> 7)\nOutput: 1 -> 3 -> 5\n思路\n\n将链表整体转成str，再reverse\nreverse之后转成int相加，得到re\nre再次reverse之后，循环转成链表\n\n代码\n# Definition for singly-linked list.\nclass ListNode(object):\n    def __init__(self, x):\n        self.val = x\n        self.next = None\n\nclass Solution(object):\n    def addTwoNumbers(self, l1, l2):\n        \"\"\"\n        :type l1: ListNode\n        :type l2: ListNode\n        :rtype: ListNode\n        \"\"\"\n        s1 = self.genS(l1)\n        s2 = self.genS(l2)\n        re = str(int(s1) + int(s2))[::-1]\n        tmp = result = ListNode(int(re[0]))\n        for i in range(1, len(re)):\n            tmp.next = ListNode(int(re[i]))\n            tmp = tmp.next\n        return result\n\n    def genS(self, li):\n        s = ''\n        while li:\n            s += str(li.val)\n            li = li.next\n        return s[::-1]\n\n\n\n\na = ListNode(2)\na.next = ListNode(6)\nb = ListNode(3)\nb.next = ListNode(7)\nre =  Solution().addTwoNumbers(a, b)\nprint(re.next.val)\n本题以及其它leetcode题目代码github地址: github地址\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "0"}