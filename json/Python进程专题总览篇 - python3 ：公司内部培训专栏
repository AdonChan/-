{"title": "Python进程专题总览篇 - python3 ：公司内部培训专栏 ", "index": "python", "content": "上一篇文章：Python垃圾回收详解下一篇文章：Python进程专题1：fork():创建子进程、getpid()、getppid()\n\n多进程就是同时进行多项任务，一个程序就可以看成是一个程序。每个进程都有自己的系统状态，包括内存、计数器、调用栈等。一个进程，通常是从上往下逐条语句执行，这对正常人来说都比较好理解，但是当遇到多进程时，虽然在每个进程内还是逐句执行，但是这个应用程序，体现出出来的就不是逐句执行了，这也是多进程、多线程难以理解的原因。既然我们知道这个原因，只要把重点放到这个原因上，多进程、多线程也就非常简单了，那么多线程、多进程重点，也是唯一难点就是：\n任务同步与数据共享=>多任务同步、多任务同步、多任务同步（说三遍，重要吧）\n我们首先来简单体会一下多进程，不需要一下子理解，例子也是简单易懂的，正常人都能理解的，虽然我对正常人的定义是能看懂下面代码👇。(如果实在window平台下运行下面对面，最好在shell(cmd.exe)命令中运行，Python IDE很有可能不成功)\n跳转链接\nPython进程专题1：fork():创建子进程、getpid()、getppid()Python进程专题2：multiprocessing创建进程Python进程专题3：继承Process来创建进程Python进程专题4：进程池PoolPython进程专题5：进程间通信Python进程专题6：共享数据与同步Python进程专题7：托管对象Python进程专题8：分布集群的消息传递Python进程专题9：关于进程的实用工具函数Python进程专题10：GILPython进程专题完结篇：多进程处理的一般建议\n\n                ", "mainLikeNum": ["3 "], "mainBookmarkNum": "2"}