{"title": "PyQt5,  GridLayout - pyqt5 ", "index": "pyqt,python,python3.x", "content": "\n简介\n网格布局小部件提供了一个容器，它允许小部件在动态大小的网格中布局。\n创建方法\ngridlayout = QGridLayout()\n\n方法\n向项目中的网格布局添加小部件\ngridLayout.addWidget()\ngridLayout.addWidget(widget, row, column)\ngridLayout.addWidget(widget, row, column, columnspan, alignment)\n\nwidget参数表示该部件将被添加到GridLayout的row网格布局的row和\"column\"。 行和列的值在类似坐标系统上工作，0，0 表示左上角。rowspan和columnspan 的值表示小部件应该跨越多少行和列，最后，alignment参数必须设置为以下其中一个:\nQt.AlignmentLeft\nQt.AlignmentRight\nQt.AlignmentHCenter\nQT.AlignmentJustify\n\n使用以下其中一种方法向网格布局添加布局:\ngridlayout.addLayout(widget)\ngridlayout.addLayout(widget, row, column)\ngridlayout.addLayout(widget, row, column, rowspan, columnspan, alignment)\n\n给定位置检索项目通过以下方法实现:\ngridLayout.itemAtPosition(row, coulumn)\n\n默认情况下，行和列之间没有间距，可以通过以下以下方式调整:\nGridlayout.setSpacing(spacing)\n\n另外,垂直和水平间距可以单独指定使用:\ngridlayouot.setHorizontalSpacing(spacing)\ngridlayout.setVerticalSpacing(spacing)\n\nspacing参数应设置为一个整数，表示显示的像素间距数。行数和列数可以从容器中获得：\ngridlayout.rowCount()\ngridlayout.columenCount()\n\nExample\n# !/usr/bin/python3\n\nfrom PyQt5.QtWidgets import \\* import sys\n\nclass Window(QWidget):\n    def __init__(self):\n        QWidget.__init__(self)\n        \n        layout = QGridLayout()\n        self.setLayout(layout)\n        \n        label = QLabel(\"Label(0, 0)\")\n        layout.addWidget(label, 0, 0)\n        label = QLabel(\"Label(0, 1)\")\n        layout.addWidget(label, 0, 1)\n        label = QLabel(\"Label (1, 0) spanning 2 columns\")\n        layout.addWidget(label, 1, 0, 1, 2)\n        label = QLabel(\"Label (1, 0) soanning 2 rows\")\n        layout.addWidget(label, 0, 2, 2, 1)\n\napp = QApplication(sys.argv)\n\nscreen = Window()\nscreen.show()\n\nsys.exit(app.exec_())\n\n\n\n                ", "mainLikeNum": ["1 "], "mainBookmarkNum": "0"}