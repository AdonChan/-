{"title": "Anaconda 的安装与常用命令 - 欧阳松的博客 ", "index": "anaconda,python", "content": "Anaconda 自带 Python 解释器以及数据处理常用的第三方库，可以非常方便地搭建 Python 环境。同时还自带了 Conda 用来管理第三方库，类似 Pip ，但是比 Pip 方便。建议使用 Anaconda 替换自带的 Python ，并且全部用户都可以使用 Anaconda 。\n安装\n首先去官网下载对应操作平台的安装包，推荐使用国内的镜像源 Tuna 下载。如果觉得不喜欢 Anaconda 自带的第三方包，可以选择 Miniconda。\nLinux\n为了使所有用户都使用 Anaconda 自带的 Python ，不能把 Anaconda 安装到默认的当前用户的 Home 目录。推荐安装到/opt目录。\nbash Miniconda3-latest-Linux-x86_64.sh -p /opt/miniconda3\n接下来需要修改全局的环境变量，以 root 用户执行如下命令。\necho 'PATH=/opt/miniconda3/bin:$PATH' >> /etc/profile.d/miniconda.sh\nsource /etc/profile\nOSX\nMac安装Anaconda和Linux类似，但是还可以额外使用Brew命令安装。\n# 添加Homebrew-Cask源\nbrew tap caskroom/cask\nbrew cask install miniconda\n然后修改用户的环境变量，添加下面设置到.zshrc中。\nexport PATH=\"/usr/local/miniconda3/bin:$PATH\"\n# 如果使用的是Bash，相应的修改 .bashrc\nsource ~/.zshrc\n使用\n首先验证下Anaconda是否安装成功。\nwhich python\nwhich conda\n如果输入的路径就是上一步指定的路径，那么就是安装成功。\n虚拟环境管理\n针对不同的项目，建议给每个项目创建一个虚拟环境，以防相互影响。\n# 创建虚拟环境\nconda create --name mytest\n# 查看所有环境\nconda env list\n# 激活环境\nsource activate mytest\n# 取消环境\nsource deactivate mytest\n# 删除环境\nconda remove --name mytest --all\n第三方库管理\n之前说了 Conda 是类似 Pip 的包管理命令。不过自带的包比较少，所有很多包搜索不到，这里推荐添加第三方的源 Conda Forge。\nconda config --add channels conda-forge \nconda install <package-name>\n# -n 指定环境名字，-c 指定安装源\nconda install -n mytest jieba\nhttps://www.ouyangsong.com/po...\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "0"}