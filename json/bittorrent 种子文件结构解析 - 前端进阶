{"title": "bittorrent 种子文件结构解析 - 前端进阶 ", "index": "文件,python", "content": "原文链接：http://luoguochun.cn/2014/09/17/bt-file-structure/\n原文作者：buf1024\n\n\n估计 80% 以上接触互联网的人都知道 bt 是什么东西，任何一个用 bt 下载的人都知道这样一个概念，种子。bt 种子就是记录了 p2p 对等网络中 tracker, nodes, files 等信息，也就是说，这个种子告诉你，你要下载什么，到哪里下载。bt 种子文件有自己的文件格式，下面简单看看 bt 种子文件的结构。\n\n在开始之前，我们先介绍 bencode 这种编码格式，因为 bt 种子文件，包括以后的 DHT 网络中，都是用这种编码的。网上有很多介绍，这里简单再重复一遍。bencode 有 4 种数据类型: string, integer, list 和 dictionary。\n\n\n\nstring\n\n字符是以这种方式编码的: <字符串长度>:<字符串>。\n如 hell: 4:hell\n\n\ninteger\n\n整数是一这种方式编码的: i<整数>e。\n如 1999: i1999e\n\n\nlist\n\n列表是一这种方式编码的: l[数据1][数据2][数据3][…]e。\n如列表 [hello, world, 101]：l5:hello5:worldi101ee\n\n\ndictionary\n\n字典是一这种方式编码的: d[key1][value1][key2][value2][…]e，其中 key 必须是 string 而且按照字母顺序排序。\n如字典 {aa:100, bb:bb, cc:200}： d2:aai100e2:bb2:bb2:cci200ee\n\n\n很多语言都有 bencode 的实现，Python 版本可在 pypi 里面找到: bencode。\n\nbt 种子文件是使用 bencode 编码的，整个文件就 dictionary，包含以下键。\n\n\n\ninfo, dictinary, 必选, 表示该bt种子文件的文件信息。\n\n\n\n文件信息包括文件的公共部分\n\npiece length, integer, 必选, 每一数据块的长度pieces, string, 必选, 所有数据块的 SHA1 校验值publisher, string, 可选, 发布者publisher.utf-8, string, 可选, 发布者的 UTF-8 编码publisher-url, string, 可选, 发布者的 URLpublisher-url.utf-8, string, 可选, 发布者的 URL 的 UTF-8 编码\n\n\n如果 bt 种子包含的是单个文件，包含以下内容\n\nname, string, 必选, 推荐的文件名称name.utf-8, string, 可选, 推荐的文件名称的 UTF-8 编码length, int, 必选， 文件的长度单位是字节\n\n\n如果是多文件，则包含以下部分:\n\nname, string, 必选, 推荐的文件夹名称name.utf-8, string, 可选, 推荐的文件名称的 UTF-8 编码files, list, 必选, 文件列表，每个文件列表下面是包括每一个文件的信息，文件信息是个字典。\n\n\n文件字典\n\nlength, int, 必选， 文件的长度单位是字节path, string, 必选， 文件名称，包含文件夹在内path.utf-8, string, 必选， 文件名称 UTF-8 表示，包含文件夹在内filehash，string, 可选， 文件 hash。ed2k, string, 可选, ed2k 信息。\n\n\n\nannounce, string, 必选, tracker 服务器的地址\nannounce-list, list, 可选, 可选的 tracker 服务器地址\ncreation date， interger， 必选, 文件创建时间\ncomment， string, 可选, bt 文件注释\ncreated by， string， 可选， 文件创建者。\n\n上面列举的可能不是很完整的，但是大体上主要的字段没有重大的错误。\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "21"}