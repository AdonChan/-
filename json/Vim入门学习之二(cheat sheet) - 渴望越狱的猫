{"title": "Vim入门学习之二(cheat sheet) - 渴望越狱的猫 ", "index": "python,vim", "content": "有10种东西学了记不住，00是正则表达式，10就是Vim了。\n最近在用python写个side project，我一个按键盘的，又没什么太多的闲钱去购买高大上的IDE，不得已开始用上了学的好多遍都没学会的Vim。Vim有多牛X，随便问一个代码工程师便知，但其学习难度，实在是让很多人望而却步, 期间不知有多少次带开TextWrangler或者Xcode去写代码，实在是因为Vim连基本的用法都还不清楚，反而减少了效率\n以下列出最近常用的VIM技巧\n\n\n保存\n:x 保存并退出(:wq)\n\n\n移动\n//line\n^ 当前一行内容的起点(正则表达式用这个作为开头)\n$ 当前一行内容的终点(正则表达式用这个作为结尾)\ngg 文件第一行\nG  文件最后一行\n[行数]G 第n行(第n行)\n\n//word\nb 当前 或 上一个单词的第一个字母(back or beginning)\nw 下一个单词第一个字母(word)\ne 当前 或 下一个单词的最后一个字母(end)\n  \nW 下一个单词第一个字母(单词:只要没背空格分割即视为同一个单词,例如self.say(\"你好\", |单词分界线| \"hello_world\")\nB 当前或上一个单词的第一个字母(同上)\nE 当前或下一个单词的最后一个字母(同上)\n\n//paragraph\n{ 上一个段落开始\n} 下一个段落开始\n\n//parenthesis A.K.A () {} []\n% 找到下一组括号 或 跳到与当前必配的另一个括号\n\n\n设置行数\n//python经常抱怨说第几行代码出了问行，显示行数会让你觉得舒服一些\n:set nu  显示行数\n:set nu! 隐藏行数\n\n\n拷贝粘贴\n    /***\n        外部应用－>vim\n    ***/\n    \n    //经常好好的一段网络代码，粘贴到Vim又变成梯田了\n    :set paste //粘贴之前\n    //ctrl + v\n    :set nopaste //粘贴结束\n   /***\n       vim->外部应用\n   ***/\n\n   :set clipboard=unnamed //粘贴之前\n   //copy in vim\n   //⌘+v\n\n\n窗口切换\n:sv <文件名>      //垂直窗口打开新文件\n:vs <文件名>      //水平窗口打开新文件 \n    \n   crl h|j|k|l      //需要一下配置：\n   \n               map <C-j> <C-W>j\n               map <C-k> <C-W>k\n               map <C-h> <C-W>h\n               map <C-l> <C-W>l\n\n\n历史文件\n:ls        //浏览历史文件列表\n:b <数字>        //打开对应文件\n\n\n\n搜索\n   :noh 清理当次搜索高亮的部分\n\n\n\n参考文章：https://realpython.com/blog/python/vim-and-python-a-match-made-in-heaven/#vim-extensions\nhttps://github.com/amix/vimrc\nhttp://www.alexeyshmalko.com/2014/youcompleteme-ultimate-autocomplete-plugin-for-vim/\n\n                ", "mainLikeNum": ["1 "], "mainBookmarkNum": "0"}