{"title": " 5分钟教你学会Django系统错误监控 - 个人文章 ", "index": "tornado,flask,django,python", "content": "\n一、监控所有的request请求\n如何实现系统监控，自动发送错误日志的邮件呢？\n只需配置配置settings文件即可。\n1.设置发送邮件配置信息\n邮件会发送到ADMINS设定的邮件列表中。\nSERVER_EMAIL ='sender@qq.com'\n\nDEFAULT_FROM_EMAIL ='sender@qq.com'\n\nADMINS = (('receiver','receiver@qq.com'),)\n\nEMAIL_HOST ='smtp.exmail.qq.com'\n\nEMAIL_HOST_USER ='sender@qq.com'\n\nEMAIL_HOST_PASSWORD ='123456'\n\nEMAIL_BACKEND ='django.core.mail.backends.smtp.EmailBackend'\n2.配置LOGGING\n1）配置mail_admin的handler\nlevel为日志级别\ndjango.utils.log.AdminEmailHandler为django处理系统日志发送邮件的handler\n在没有配置filter参数情况下，默认发送系统5XX状态的错误日志\n'handlers': {\n\n    'mail_admin': {\n\n    'level':'ERROR',\n\n    'class':'django.utils.log.AdminEmailHandler',\n\n    'include_html':False,\n\n    }\n\n}\n2）配置django.request模块的logger将django的request模块配置如上的mail_admin handler\n'loggers': {\n\n    'django.request': {\n\n    'handlers': ['default','mail_admin'],\n\n    'propagate':True,\n\n    'level':'ERROR',\n\n    },\n\n}\n  在这里还是要推荐下我自己建的Python开发学习群：725479218，群里都是学Python开发的，如果你正在学习Python ，小编欢迎你加入,大家都是软件开发党，不定期分享干货（只有Python软件开发相关的），包括我自己整理的一份2018最新的Python进阶资料和高级开发教程，欢迎进阶中和进想深入Python的小伙伴\n二、监控非request请求\n如何监控例如系统的定时任务等非用户发起的功能模块，我们可以自定义一个decorator来解决这个问题。\nutils.send_exception_email(email_list,title,exc)为发送邮件的方法，可以自己实现，非常简单\ndef decorator_error_monitor(title):\n\n    def wrap(f):\n\n        def wrapped_f(*args,**kwargs):\n\n            try:\n\n                result = f(*args,**kwargs)\n\n                return result\n\n           except:\n\n               exc = traceback.format_exc()\n\n               utils.send_exception_email(email_list,title,exc)\n\n               raise Exception(exc)\n\n            return wrapped_f\n\n        return wrap\n对需要监控的方法使用decorator\n@decorator_error_monitor(\"清算错误\")\n\ndef do_settlement(users):\n\n    for user in users:\n\n        process_settlement_for_one_user(user)\n效果如下\n以上监控方法，简单实用，无需开发额外的日志监控系统，可以在第一时间发现系统的问题，并得知系统的错误日志，帮助快速的定位问题。\n\n                ", "mainLikeNum": ["1 "], "mainBookmarkNum": "2"}