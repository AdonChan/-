{"title": "python入门之一个简单记事本 - 我的python成长之路 ", "index": "python", "content": "最近在练习一个关于python项目的列表，拿到列表看到这是要实现一个记事本功能，刚开始拿到题目真有点懵。虽然用python实现excel的处理已经很熟悉了，且已经把python的知识点都学了一遍，但是用起来还是不顺手呐。尤其是试验之后发现一定要用类实现起来才简单一些，对于这1点 ---类，，要知道本人已经接触c语言多年，但对于面向对象还是一窍不通。好吧，再去翻python关于类的知识，终于给整出来一点门道了。还是代码中解释吧。  注意：这是基于Python3。\n#Python支持多种图形界面的库，为了不再麻烦去下载新的库，这里直接使用了python自带的tkinter库，记住本代码主要为了练习实现一个简单的GUI界面，顺便熟悉一下tkinter的使用\nfrom tkinter import *  \nimport os\nfrom tkinter import filedialog\n\ndef die():\n    root.destroy()\n     \nclass Create: \n    # init函数定义类的一些属性\n    def __init__(self,root):\n        self.root=(root) \n        #菜单控件；显示菜单栏,下拉菜单和弹出菜单，明显这里是要创建基于root的顶层菜单，记住名字self.menubar\n        self.menubar=Menu(root)   \n        #Text是tkinter中的文本控件，用于显示多行文本\n        self.textpad = Text(root)\n        self.textpad.pack(expand=YES,fill=BOTH)#expand 允许拉伸，fill允许（xy两个方向）填充\n    \n       #这里，是要创建基于顶层菜单的下拉菜单，记住它的名字self.filemenu\n        self.filemenu=Menu(self.menubar,tearoff=0)  \n        #好吧，开始添加命令吧，记得要把实现方法添加到command属性中，顺便提一下menu的属性：label,command,accelerator,underline\n        self.filemenu.add_command(label=\"新建\",accelerator=\"Ctrl+N\")  \n        self.filemenu.add_command(label=\"打开\",command=self.openfile)  \n        self.filemenu.add_separator()  \n        self.filemenu.add_command(label=\"保存\",command=self.save)\n        self.filemenu.add_command(label=\"另存为\",command=self.donothing)  \n        self.filemenu.add_separator()  \n        self.filemenu.add_command(label=\"页面设置\",accelerator=\"U\",command=self.donothing)  \n        self.filemenu.add_command(label=\"打印\",accelerator=\"Ctrl+P\",command=self.donothing)  \n        self.filemenu.add_separator()  \n        self.filemenu.add_command(label=\"退出\",accelerator=\"X\",command=die)\n        #好了，创建完毕就级联到顶层菜单上吧，顺便给它们起一个名字“文件”  \n        self.menubar.add_cascade(label=\"文件\",menu=self.filemenu)  \n        \n        self.editmenu = Menu(self.menubar, tearoff=0)  \n        self.editmenu.add_command(label=\"Undo\", command=self.donothing)  \n        self.editmenu.add_command(label=\"Cut\", command=self.donothing)  \n        self.editmenu.add_command(label=\"Copy\", command=self.donothing)  \n        self.menubar.add_cascade(label=\"edit\",menu=self.editmenu)\n\n        self.helpmenu = Menu(self.menubar, tearoff=0)  \n        self.helpmenu.add_command(label=\"Help Index\", command=self.donothing)  \n        self.helpmenu.add_command(label=\"About...\", command=self.donothing)  \n        self.menubar.add_cascade(label=\"Help\", menu=self.helpmenu)  \n        \n        self.root.config(menu=self.menubar)  \n          \n    def donothing(self):  \n        filewin=Toplevel(self.root)  \n        button=Button(filewin,text=\"hi，添加你的代码\")  \n        button.pack() \n\n    def openfile(self):\n        #这里，也是在网上搜了一下发现有如此好用的函数，看来要用python实现一个东西时，一定要先去了解一下有没有好用的库\n        filename = filedialog.askopenfilename(title = \"打开\",filetypes = [(\"文件\",\"*.txt\")])\n        if filename == '':\n            filename = None\n        else:\n            root.title('FileName:'+os.path.basename(filename))\n            self.textpad.delete(1.0,END)\n            f = open(filename,'r+')\n            self.textpad.insert(1.0,f.read())\n            f.close()\n    \n    def save(self):\n        sname = filedialog.asksaveasfilename(title = \"保存\",filetypes = [(\"保存文件\",\"*.txt\")])\n        f = open(sname,'w+')\n        msg = self.textpad.get(1.0,END)\n        f.write(msg)\n        f.close()\n\nif __name__ == \"__main__\":  \n\n    root = Tk() #定义一个主窗口\n    root.title('记事本') #看到title了吗？添加一个属性，名字叫记事本\n    root.geometry(\"800x500\") #几何布局，初始化主窗口的大小\n    window = Create(root) #从这里开始正式调用Create实现一个记事本\n    root.mainloop()\n好吧，就这样，抽空再完善\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "5"}