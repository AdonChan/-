{"title": "PyQt5+eric6之旅(二) - qt designer基本操作 - 终南山下 ", "index": "python", "content": "qt designer使用\n\n\n开始\n新建项目(eric6 项目)\n新建窗体(eric6 窗体)\n编辑界面(转到qt designer) 保存\n编译窗体(转到eric6 窗体)\n运行(查看页面效果)\n\n\n页面缩放效果(qt designer)\n为了窗口最大化时，布局能够按照自己的需求比例增长，最后所有布局好了后，在主窗口设置顶级布局\n主窗口空白处->右键\n选择layout -> (vertical / horizonal / grid)\n\n\n\n给按钮添加函数\n右击窗体(在eric6)\n生成对话框代码\n新建类名 文件名 保存\n绑定按钮动作 保存\n\n添加自定义slot(在qt designer)\n名称为绑定的按钮的那个动作名 (比如 on_pushButton_clicked())\n\n再次编译 打开生成的文件 (eric6)\n去掉from .Ui_04 的.\n在函数在下面加上\nif __name__ == '__main__':\n   import sys\n   from PyQt5.QtWidgets import  QApplication\n   app = QApplication(sys.argv)\n   window = ClassName() ## 类名,注意要和自己定义的类名一致。\n   window.show()\n   sys.exit(app.exec_())\n\n\n实时在文本框显示内容\n   @pyqtSlot()\n   def on_pushButton_clicked(self):\n       for n in range(10): \n           str_n='File index {0}'.format(n) \n           self.textEdit.setText(str_n) \n           QApplication.processEvents()  # 引入这个\n           time.sleep(1)  \n\n\n函数绑定定时器自动执行(Qtimer)\n   def __init__(self, parent=None):\n       super(Run, self).__init__(parent)\n       self.setupUi(self)\n        #在类中定义一个定时器,并在构造函数中设置启动及其信号和槽\n       self.timer = QTimer(self)\n       #设置计时间隔并启动(1000ms == 1s)\n       self.timer.start(1000)  \n       #计时结束调用timeout_slot()方法,注意不要加（）\n       self.timer.timeout.connect(self.on_pushButton_clicked) \n   \n   @pyqtSlot()\n   def on_pushButton_clicked(self):\n       for n in range(10): \n           # str_n='File index {0}'.format(n)\n           newMessage=\"new message\"+str(n) \n           messages = list()\n           messages.append( newMessage )\n           self.textEdit.setText( '\\n'.join(messages) )\n           # self.textEdit.setText(str_n) \n           QApplication.processEvents()  # 引入这个\n           # time.sleep(1) \n\n\n参考\nhttps://www.cnblogs.com/findu...\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "0"}