{"title": "从PEP-8学习Python编码风格 - Code Cabin ", "index": "python", "content": "关于空行\n\n\n类与顶级函数(top-level function)的定义之间应当空两行。\n类中的方法之间应当空一行。\n方法中的逻辑部分之间可以空一行。\n\n关于原文件编码\n\nPython3中应当总是使用UTF-8。（Python2使用ASCII。）在使用了规定编码后不需要再声明文件编码。\n\n关于命名风格\n\n\n模块使用小写字母和下划线，包名同样使用小写字母但不要使用下划线。\n类名使用驼峰命名法。\n异常的命名以Error结尾。\n函数名和方法名使用小写，用下划线分割单词。mixedCase只有在考虑兼容性的时候才使用。\n类方法的第一个参数总是cls，实例方法的第一个参数总是self。\n变量命名同函数和方法。如果名字与保留字有冲突，在最后加_。\n私有变量和方法在最前加_，此时外部无法访问，但子类可以访问。\n如果也不希望子类访问，可以以__开头。此时无法用ClassName.__var访问 。(但仍然可以通过ClassName._ClassName_a访问到。)\n\n关于公有和私有接口\n\n\n默认情况下，以_开头的变量和方法被认为是私有的。\n可以使用__all__列表指定公开的接口。它会覆盖上一条规则。\n\n关于Python中的下划线\n\nPython中的下划线用法有这么几种：\n\n\n\na_：避免名字与保留字等的冲突。\n\n_a：表示私有。只能在类内部和子类中访问。\n\n__a：只能在类内部使用。\n\n__a__：Python内魔法对象的命名。其他情况不要这样命名。\n\n关于getter(accessor)和setter(mutator)\n\nPython中不推荐使用类似于Java中的getX和setX。相反，应当直接对变量进行操作。\n如果要操作的对象不能或不适合直接操作，可以使用内建的property方法自定义功能。property有两种用法：\n\nclass C:\n    def __init__(self):\n        self._x = None\n\n    def getx(self):\n        return self._x\n    def setx(self, value):\n        self._x = value\n    def delx(self):\n        del self._x\n    x = property(getx, setx, delx, \"I'm the 'x' property.\")\n\n\n或者：\n\nclass C:\n    def __init__(self):\n        self._x = None\n\n    @property\n    def x(self):\n        \"\"\"I'm the 'x' property.\"\"\"\n        return self._x\n\n    @x.setter\n    def x(self, value):\n        self._x = value\n\n    @x.deleter\n    def x(self):\n        del self._x\n\n\n这样，当执行C.x，C.x = value和del C.x时就会分别调用这三个方法。\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "2"}