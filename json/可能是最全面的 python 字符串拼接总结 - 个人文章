{"title": "可能是最全面的 python 字符串拼接总结 - 个人文章 ", "index": "python", "content": "在 Python 中字符串连接有多种方式，这里简单做个总结，应该是比较全面的了，方便以后查阅。\n加号连接\n第一种，通过+号的形式：\n>>> a, b = 'hello', ' world'\n>>> a + b\n'hello world'\n逗号连接\n第二种，通过,逗号的形式：\n>>> a, b = 'hello', ' world'\n>>> print(a, b)\nhello  world\n但是，使用,逗号形式要注意一点，就是只能用于print打印，赋值操作会生成元组:\n>>> a, b\n('hello', ' world')\n直接连接\n第三种，直接连接中间有无空格均可:\nprint('hello'         ' world')\nprint('hello''world')\n%\n第四种，使用%操作符。\n在 Python 2.6 以前，% 操作符是唯一一种格式化字符串的方法，它也可以用于连接字符串。\nprint('%s %s' % ('hello', 'world'))\nformat\n第五种，使用format方法。\nformat 方法是 Python 2.6 中出现的一种代替 % 操作符的字符串格式化方法，同样可以用来连接字符串。\nprint('{}{}'.format('hello', ' world')\njoin\n第六种，使用join内置方法。\n字符串有一个内置方法join，其参数是一个序列类型，例如数组或者元组等。\nprint('-'.join(['aa', 'bb', 'cc']))\nf-string\n第七种，使用f-string方式。\nPython 3.6 中引入了 Formatted String Literals（字面量格式化字符串），简称 f-string，f-string 是 % 操作符和 format 方法的进化版，使用 f-string 连接字符串的方法和使用 %操作符、format 方法类似。\n>>> aa, bb = 'hello', 'world'\n>>> f'{aa} {bb}'\n'hello world'\n*\n第八种，使用*操作符。\n>>> aa = 'hello '\n>>> aa * 3\n'hello hello hello '\n小结\n连接少量字符串时\n推荐使用+号操作符。\n如果对性能有较高要求，并且python版本在3.6以上，推荐使用f-string。例如，如下情况f-string可读性比+号要好很多：\na = f'姓名：{name} 年龄：{age} 性别：{gender}'\nb = '姓名：' + name + '年龄：' + age + '性别：' + gender\n连接大量字符串时\n推荐使用 join 和 f-string 方式，选择时依然取决于你使用的 Python 版本以及对可读性的要求。\n参考链接\n你所不知道的 Python | 字符串连接的秘密\n\n                ", "mainLikeNum": ["6 "], "mainBookmarkNum": "8"}