{"title": "1. Two Sum - 个人文章 ", "index": "letcode,python", "content": "问题\nGiven an array of integers, return indices of the two numbers such that they add up to a specific target.\nYou may assume that each input would have exactly one solution, and you may not use the same element twice.\n给定一个整数数组,返回两个数的指数,他们加起来是一个具体的目标。你可能认为每个输入一个解决方案,你可能不会使用相同的元素两次。\nExample:\nGiven nums = [2, 7, 11, 15], target = 9,Because nums[0] + nums[1] = 2 + 7 = 9,return [0, 1].\n过程\n\n先将数组排序\n然后遍历数组，找到一个比他小的数\n确定另一个数的位置，如果不存在，继续寻找\n\n代码\nclass Solution:\n    def twoSum(self, nums, target):\n        \"\"\"\n        :type nums: List[int]\n        :type target: int\n        :rtype: List[int]\n        \"\"\"\n        b = sorted(nums)\n        for i in b:\n            o = target - i\n            if o not in nums:\n                continue\n            i_index = nums.index(i)\n            for idex, item in enumerate(nums):\n                if item == o and idex != i_index:\n                    return sorted([i_index, idex])\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "0"}