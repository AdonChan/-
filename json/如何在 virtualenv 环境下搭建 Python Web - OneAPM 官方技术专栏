{"title": "如何在 virtualenv 环境下搭建 Python Web - OneAPM 官方技术专栏 ", "index": "gunicorn,nginx,python", "content": "由于字数的限制，其实本篇文章的全标题为 《如何在 virtualenv 环境下 Django + Nginx + Gunicorn+ Supervisor 搭建 Python Web》\n\n在这篇文章里，我们将搭建一个简单的 Web 应用，在虚拟环境中基于 Flask 框架，用 Gunicorn 做 wsgi 容器，用 Supervisor 管理进程，然后使用 OneAPM Python 探针来监测应用性能，形成一个「闭环」 ！希望能对大家有所帮助，首先简单来介绍一下环境：\n\n系统环境：ubuntu 14.04  Python 2.7.6\n\n安装组件库\n\n第一步安装所需要的存储库，因为打算用到虚拟环境，用到 pip 安装和管理 Python 组件，所以先更新本地包，然后安装组件：\n\nsudo apt-get update\nsudo apt-get install python-pip python-dev nginx\n\n\n创建虚拟环境 virtualenv\n\n在一个系统中创建不同的 Python 隔离环境，相互之间还不会影响，为了使系统保持干净，遂决定用 virtualenv 跑应用程序，创建一个容易识别的目录，开始安装，再创建项目目录 super，然后激活环境：\n\nsudo pip install virtualenv\nmkdir ~/supervisor && cd ~/supervisor\nvirtualenv super\nsource super/bin/activate\n\n\n安装 Flask 框架\n\n好了，现在在虚拟环境里面，开始安装 Flask 框架，flask 依赖两个库 werkzeug 和 jinjia2, 采用 pip 方式安装即可, pip 是一个重要的工具，Python 用它来管理包：\n\npip install flask\n\n\n先用 Flask 写一个简单的 Web 服务 myweb.py ，因为后面要做一些测试，所以设置了几个请求：\n\nfrom flask import Flask\napp = Flask(__name__)\n@app.route('/')\ndef index():\n    return 'hello world  supervisor gunicorn '\n@app.route('/1')\ndef index1():\n    return 'hello world  supervisor gunicorn  ffffff'\n@app.route('/qw/1')\ndef indexqw():\n    return 'hello world  supervisor gunicorn fdfdfbdfbfb '\nif __name__ == '__main__':\n    app.debug = True\n    app.run()\n\n\n启动 Flask 看看！\n\npython myweb.py\n\n\n在浏览器中访问 http://127.0.0.1:5000 就可以看到了「几个路径都试一试」\n\n用 Gunicorn 部署 Python Web\n\n现在我们使用 Flask 自带的服务器，完成了 Web 服务的启动。生产环境下，Flask 自带的服务器，无法满足性能要求。所以我们这里采用 Gunicorn 做 wsgi 容器，用来部署 Python，首先还是安装 Gunicorn：\n\npip install gunicorn\n\n\n当我们安装好 Gunicorn 之后，需要用 Gunicorn 启动 Flask，Flask 用自带的服务器启动时，Flask 里面的 name 里面的代码启动了 app.run()。而这里我们使用 Gunicorn，myweb.py 就等同于一个库文件，被 Gunicorn 调用，这样启动：\n\ngunicorn -w 4 -b 0.0.0.0:8000 myweb:app\n\n\n其中 myweb 就是指 myweb.py，app 就是那个 wsgifunc 的名字，这样运行监听 8000 端口，原先的 5000 端口并没有启用，-w 表示开启多少个 worker，-b 表示 Gunicorn 开发的访问地址。\n\n想要结束 Gunicorn 只需执行 pkill Gunicorn，但有时候还要 ps 找到 pid 进程号才能 kill。可是这对于一个开发来说，太过于繁琐，因此出现了另外一个神器 ---supervisor，一个专门用来管理进程的工具，还可以管理系统的工具进程。\n\n安装 Supervisor\n\npip install supervisor\necho_supervisord_conf > supervisor.conf  # 生成 supervisor 默认配置文件\ngedit  supervisor.conf                   # 修改 supervisor 配置文件，添加 gunicorn 进程管理\n\n\n在 supervisor.conf 底部下添加 myweb.py 的配置 `/home/wang/supervisor/super` 是我的项目目录」\n\n\n[program:myweb]\ncommand=/home/wang/supervisor/super/bin/gunicorn -w 4 -b 0.0.0.0:8000 myweb:app                                                                     \ndirectory=/home/wang/supervisor                                             \nstartsecs=0                                                                   \nstopwaitsecs=0                                                                  \nautostart=false                                                                \nautorestart=false                                                                 \nuser=wang                                                                     \nstdout_logfile=/home/wang/supervisor/log/gunicorn.log                  \nstderr_logfile=/home/wang/supervisor/log/gunicorn.err\n\n\nsupervisor 的基本使用命令：\n\nsupervisord -c supervisor.conf    \nsupervisorctl -c supervisor.conf status                  查看supervisor的状态                                      \nsupervisorctl -c supervisor.conf reload                  重新载入 配置文件\nsupervisorctl -c supervisor.conf start [all]|[appname]   启动指定/所有 supervisor 管理的程序进程\nsupervisorctl -c supervisor.conf stop [all]|[appname]    关闭指定/所有 supervisor 管理的程序进程\n\n\nsupervisor 还有一个 web 的管理界面，可以激活。更改下配置：\n\n[inet_http_server]     ; inet (TCP) server disabled by default\nport=127.0.0.1:9001    ; (ip_address:port specifier, *:port for alliface)\nusername=wang          ; (default is no username (open server)\npassword=123           ; (default is no password (open server))\n\n[supervisorctl]\nserverurl=unix:///tmp/supervisor.sock ; use a unix:// URL  for a unix socket\nserverurl=http://127.0.0.1:9001       ; use an http:// url to specify an inet socket\nusername=wang                         ; should be same as http_username if set\npassword=123                          ; should be same as http_password if set\n;prompt=mysupervisor                  ; cmd line prompt (default \"supervisor\")\n;history_file=~/.sc_history           ; use readline history if available\n\n\n现在可以使用 supervsior 启动 gunicorn 啦。运行命令:\n\nsupervisord -c supervisor.conf\n\n\n浏览器访问 http://127.0.0.1:9001 可以得到 supervisor 的 web 管理界面，访问 http://127.0.0.1:8000 可以看见 gunicorn 启动的返回的页面。\n\n配置 Nginx\n\n前面我们已经在系统环境下安装了 Nginx, 安装好的 Nginx 二进制文件放在 /usr/sbin/ 文件夹下，接下来使用 Supervisor 来管理 Nginx。这里需要注意一个问题，权限问题。Nginx 是 sudo 的方式安装，启动的适合也是 root 用户，那么我们现在也需要用 root 用户启动 supervisor。在 supervisor.conf 下添加配置文件：\n\n[program:nginx]\ncommand=/usr/sbin/nginx\nstartsecs=0\nstopwaitsecs=0\nautostart=false\nautorestart=false\nstdout_logfile=/home/wang/supervisor/log/nginx.log\nstderr_logfile=/home/wang/supervisor/log/nginx.err \n\n\n好了，都配置完之后，启动 supervisor：\n\nsupervisord -c supervisor.conf\n\n\n访问页面，也可以用 ab 进行压力测试：\n\nab -c 100 -n 100 http://127.0.0.1:8000/qw/1\n\n\n-c 用于指定压力测试的并发数, -n 用于指定压力测试总共的执行次数。\n\n安装 Python 探针\n\n搭建好了 web，想实时监控应用数据，有什么好的工具，用 OneAPM 的 Python 探针试试，\n首先也是安装 Python 探针：\n\npip install -i http://pypi.oneapm.com/simple --upgrade blueware\n\n\n根据 License Key 生成配置文件：\n\nblueware-admin generate-config (License Key) = blueware.ini\n\n\n由于是在虚拟环境下，所以要特别注意路径，修改 supervisor.conf 里面两项：\n\n[program:myapp]\ncommand = /home/wang/supervisor/super/bin/blueware-admin run-program /home/wang/supervisor/super/bin/gunicorn -w 4 -b 0.0.0.0:8000 myapp:app\nenvironment = BLUEWARE_CONFIG_FILE=blueware.ini\n\n\n重启应用\n\nsupervisorctl    # 进入命令行\nsupervisor>  reload    # 重新加载\n\n\n向上面一样访问页面，也可以用 ab 进行压力测试\n几分钟后有下图，可以看到页面加载时间，web 事物，页面吞吐量，其中后面是设置自定义事物「Business Transaction」。\n\n\n\n参考文章\n\n\nHow To Serve Flask Applications with uWSGI and Nginx on Ubuntu 14.04\nOneAPM Python 探针安装\npython web 部署：nginx + gunicorn + supervisor + flask 部署笔记\nTornado+nginx+supervisor 在生产环境上部署\nsupervisor + Tornado + Nginx 使用详解\n\n本文系 OneAPM 工程师编译整理。想阅读更多技术文章，请访问 OneAPM 官方博客。\n\n                ", "mainLikeNum": ["3 "], "mainBookmarkNum": "25"}