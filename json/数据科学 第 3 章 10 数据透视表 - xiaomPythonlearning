{"title": "数据科学 第 3 章 10 数据透视表 - xiaomPythonlearning ", "index": "数据处理,python", "content": "本节学习数据透视表\n引用激励数据，连接数据库jili表，jili这几个太难打了，下文用df代表激励数据（代码省略）之前在excel中用烂了的透视表，终于用python来实现了，其实主要是讲pivot_table里面的参数怎么使用，但书中讲的不是详细，还是要自己找一些文档或者视频辅助学习。\npivot_table 官方文档连接像其他函数一样，官方文档中的参数有很多，具体如下：df.pivot_table(data, values=None, index=None, columns=None, aggfunc='mean', fill_value=None, margins=False, dropna=True, margins_name='All')\n写在前面，如果要对透视表中的字段进行计数，有时候用count会报错，可以用len\n实例运用：\n1、简单版透视表\ndf.pivot_table(index='dep',aggfunc='sum')\n#上面以部门为索引，下面有二级索引，部门、小组。  不知道是不是叫二级索引，暂且这么命名吧\ndf.pivot_table(index=['dep','group'],aggfunc='sum')\n\n2、升级版透视表\n对金额进行分组，然后再来透视表（看了就懂了）：\n#金额分组\namount = pd.cut(df['allbones'],[0,1000,5000,10000,20000,40000])\ndf.pivot_table(index=['dep',amount],values= 'allbones', aggfunc='count')\n因为指定了值values = 'allbones'，所以结果中只包含allbones的计算结果，如果不指定values，则会像上面一样计算满足条件的所有字段的count值。\n3、再升级版\n进行多个值的计算，并指定计算方法。 如果有需要，还可以增加计算值。为了方便查看每个参数的内容，所以换行了。\ndf.pivot_table(index =[ 'dep',amount],\n              values = ['allbones','oldrate'],\n              aggfunc = {'allbones':[np.sum,len,np.mean],  #一个字段进行3中运算\n                         'oldrate':np.sum})\n\n4、在透视表最后加一个汇总\ndf.pivot_table(index =[ 'dep',amount],\n              values = ['allbones','oldrate'],\n              aggfunc = [np.sum,np.mean,len],\n              margins = True)    #margins默认为false，改成True后在表的最后显示汇总\n5、大boss版，在每个部门下面进行分类汇总\n还没找到方法😁，现在这些差不多够用了，就这样，煮饭去了，拜拜。\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "0"}