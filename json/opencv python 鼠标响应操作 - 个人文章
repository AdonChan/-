{"title": "opencv python 鼠标响应操作 - 个人文章 ", "index": "opencv-python,python,opencv", "content": "Mouse as a Paint-Brush \n1回调函数\ncv2.setMouseCallback(windowName, onMouse [, param])\n\nwindowName：显示窗口名称\nonMouse：鼠标响应处理函数\n\n鼠标回调函数，该函数在鼠标事件发生时执行。 鼠标事件可以是与鼠标相关的任何内容，如左键向下，左键向上，左键双击等。它为我们提供了每个鼠标事件的坐标（x，y）。 通过这个活动和地点，我们可以做任何我们喜欢的事情。\n下面代码输出了鼠标事件的种类代码：\nimport cv2 \nevents = [i for i in dir(cv2) if 'EVENT' in i]\nprint( events )\n\n输出\n['EVENT_FLAG_ALTKEY', 'EVENT_FLAG_CTRLKEY', 'EVENT_FLAG_LBUTTON', 'EVENT_FLAG_MBUTTON', 'EVENT_FLAG_RBUTTON', 'EVENT_FLAG_SHIFTKEY', 'EVENT_LBUTTONDBLCLK', 'EVENT_LBUTTONDOWN', 'EVENT_LBUTTONUP', 'EVENT_MBUTTONDBLCLK', 'EVENT_MBUTTONDOWN', 'EVENT_MBUTTONUP', 'EVENT_MOUSEHWHEEL', 'EVENT_MOUSEMOVE', 'EVENT_MOUSEWHEEL', 'EVENT_RBUTTONDBLCLK', 'EVENT_RBUTTONDOWN', 'EVENT_RBUTTONUP']\n\n\n参数\n \n含义\n\n\n\nCV_EVENT_MOUSEMOVE\n0\n滑动\n\n\nEVENT_LBUTTONDOWN\n1\n左键点击\n\n\nEVENT_RBUTTONDOWN\n2\n右键点击\n\n\nEVENT_MBUTTONDOWN\n3\n中间点击\n\n\nEVENT_LBUTTONUP\n4\n左键释放\n\n\nEVENT_RBUTTONUP\n5\n右键释放\n\n\nEVENT_MBUTTONUP\n6\n中间释放\n\n\nEVENT_LBUTTONDBLCLK\n7\n左键双击\n\n\nEVENT_RBUTTONDBLCLK\n8\n右键双击\n\n\nEVENT_MBUTTONDBLCLK\n9\n中间双击\n\n\n\n应用一\n创建了一个简单的应用程序，只要我们双击它就可以在图像上绘制一个圆圈.代码：\nimport numpy as np\nimport cv2\n\n# mouse callback function\ndef draw_circle(event,x,y,flags,param):\n    if event == cv2.EVENT_LBUTTONDBLCLK:\n        cv2.circle(img,(x,y),100,(255,0,0),-1)\n\n# Create a black image, a window and bind the function to window\nimg = np.zeros((512,512,3), np.uint8)\ncv2.namedWindow('image')\ncv2.setMouseCallback('image',draw_circle)\n\nwhile(1):\n    cv2.imshow('image',img)\n    if cv2.waitKey(20) & 0xFF == 27:\n        break\ncv2.destroyAllWindows()\n\n\n双击鼠标左键：\n\n应用二\n通过拖动鼠标绘制矩形或圆形（取决于我们选择的模式），就像在Paint应用程序中一样。 所以我们的鼠标回调函数有两个部分，一个用于绘制矩形，另一个用于绘制圆形.在主循环中，设置键'm'设置键盘绑定以在矩形和圆之间切换.\n代码：\nimport numpy as np\nimport cv2\n\ndrawing = False # true if mouse is pressed\nmode = True # if True, draw rectangle. Press 'm' to toggle to curve\nix,iy = -1,-1\n\n# mouse callback function\ndef draw_circle(event,x,y,flags,param):\n    global ix,iy,drawing,mode\n\n    if event == cv2.EVENT_LBUTTONDOWN:\n        drawing = True\n        ix,iy = x,y\n\n    elif event == cv2.EVENT_MOUSEMOVE:\n        if drawing == True:\n            if mode == True:\n                cv2.rectangle(img,(ix,iy),(x,y),(0,255,0),-1)\n            else:\n                cv2.circle(img,(x,y),5,(0,0,255),-1)\n\n    elif event == cv2.EVENT_LBUTTONUP:\n        drawing = False\n        if mode == True:\n            cv2.rectangle(img,(ix,iy),(x,y),(0,255,0),-1)\n        else:\n            cv2.circle(img,(x,y),5,(0,0,255),-1)\n\nimg = np.zeros((512,512,3), np.uint8)\ncv2.namedWindow('image')\ncv2.setMouseCallback('image',draw_circle)\n\nwhile(1):\n    cv2.imshow('image',img)\n    k = cv2.waitKey(1) & 0xFF\n    if k == ord('m'):\n        mode = not mode\n    elif k == 27:\n        break\n\ncv2.destroyAllWindows()\n按住鼠标左键滑动按“m”键，再次按住鼠标左键滑动\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "0"}