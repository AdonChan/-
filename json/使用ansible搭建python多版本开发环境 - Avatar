{"title": "使用ansible搭建python多版本开发环境 - Avatar ", "index": "python,ansible", "content": "背景\n在学习python过程中，centos系统自带的python版本比较滞后。在测试过程中，往往需要多个版本，但又不想影响系统自带的版本；尤其是在学习django过程中，python版本切换更加频繁，因此有了多版本切换需求。\n在网上查了相关的文档，起初写了几个脚本，完成多版本的部署和切换，最终效果不太理想。\n恰好最近在学习ansible，决定使用ansible来部署python的多版本环境。\n更新说明\nv1.0 基本实现了python多环境的部署；  v1.1 使用role重新组织了playbook，增加了卸载功能pyuninstall  v1.1.1 由于网络问题，安装python往往过慢，增加使用本地安装包进行安装，默认并没有启用，可以修改use_local_python_targz: true启用。\n快速使用\n克隆并配置好对应主机的ip后，直接运行playbook，默认会安装python3.6.0；在命令行运行py360即可启动虚拟环境，运行pyd即可关闭虚拟环境；\n部署方法\n1 确保你所使用的环境已经安装的ansible，并可以正常使用；远程执行的密钥已经添加；\n2 下载playbook\ngit clone https://git.coding.net/echohiyang/pyinstall.git\n或者下载指定的版本\nwget https://coding.net/u/echohiyang/p/pyinstall/git/archive/v1.1.1.zip\n3 修改hosts文件，在pythonserver组中加入你的主机ip\n4 修改变量 python版本 roles/pyinstall/vars/main.yml\npython_version_to_install: 3.6.0\npython_version: 3.6.0\npython_alias: py360\npython_version_to_install 将要安装的python版本，所要安装的版本已经存在时，安装步骤会跳过；python_version_to_deploy 指向的python_version_to_install已经存在或者正在被安装，则会创建python的虚拟环境，别名为python_alias；实际上就是用哪个版本创建python虚拟开发环境；python_alias：创建虚拟环境的别名\n5 运行playbook进行安装\nansible-play pyinstall.yml\n6 运行playbook进行卸载\nansible-play pyuninstall.yml\n部署结束\n使用方法\n前面部署过程中已经添加了python_alias别名，可以直接使用别名来启动python虚拟环境。\n说明\n这里一个只能建立一个开发环境，多个开发环境需要执行多次；由于ansible具有幂等性，多次相同的执行并不会导致覆盖。\n目录说明(默认)\n/usr/local/pyenv            主目录\n/usr/local/pyenv/path.d/    自定义的PATH变量\n声明\n此项目直接引用了以下两个开源项目  https://github.com/yyuu/pyenv...  https://github.com/yyuu/pyenv...\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "1"}