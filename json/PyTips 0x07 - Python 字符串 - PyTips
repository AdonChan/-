{"title": "PyTips 0x07 - Python 字符串 - PyTips ", "index": "pytips,python3.5,python", "content": "项目地址：https://git.io/pytips\n所有用过 Python (2&3)的人应该都看过下面两行错误信息：\n\nUnicodeEncodeError: 'ascii' codec can't encode characters in position 0-1: ordinal not in range(128)\nUnicodeDecodeError: 'utf-8' codec can't decode bytes in position 0-1: invalid continuation byte\n\n这就是 Python 界的\"锟斤拷\"！\n今天和接下来几期的内容将主要关注 Python 中的字符串（str）、字节（bytes）及两者之间的相互转换（encode/decode）。也许不能让你突然间解决所有乱码问题，但希望可以帮助你迅速找到问题所在。\n定义\nPython 中对字符串的定义如下：\nTextual data in Python is handled with str objects, or strings. Strings are immutable sequences of Unicode code points.\nPython 3.5 中字符串是由一系列 Unicode 码位（code point）所组成的不可变序列：\n('S' 'T' 'R' 'I' 'N' 'G')\n'STRING'\n\n不可变是指无法对字符串本身进行更改操作：\ns = 'Hello'\nprint(s[3])\ns[3] = 'o'\nl\n\n---------------------------------------------------------------------------\n\nTypeError                                 Traceback (most recent call last)\n\n<ipython-input-2-ce8cf24852f9> in <module>()\n      1 s = 'Hello'\n      2 print(s[3])\n----> 3 s[3] = 'o'\n\n\nTypeError: 'str' object does not support item assignment\n\n而序列（sequence）则是指字符串继承序列类型（list/tuple/range）的通用操作：\n[i.upper() for i in \"hello\"]\n['H', 'E', 'L', 'L', 'O']\n\n至于 Unicode 暂时可以看作一张非常大的地图，这张地图里面记录了世界上所有的符号，而码位则是每个符号所对应的坐标（具体内容将在后面的几期介绍）。\ns = '雨'\nprint(s)\nprint(len(s))\nprint(s.encode())\n雨\n1\nb'\\xe9\\x9b\\xa8'\n\n常用操作\n\nlen：字符串长度；\nsplit & join\nfind & index\nstrip\nupper & lower & swapcase & title & capitalize\nendswith & startswith & is*\nzfill\n\n# split & join\ns = \"Hello world!\"\nprint(\",\".join(s.split())) # 常用的切分 & 重组操作\n\n\"https://github.com/rainyear/pytips\".split(\"/\", 2) # 限定切分次数\nHello,world!\n\n['https:', '', 'github.com/rainyear/pytips']\n\ns = \"coffee\"\nprint(s.find('f'))    # 从左至右搜索，返回第一个下标\nprint(s.rfind('f'))   # 从右至左搜索，返回第一个下表\n\nprint(s.find('a'))    # 若不存在则返回 -1\nprint(s.index('a'))   # 若不存在则抛出 ValueError，其余与 find 相同\n2\n3\n-1\n\n---------------------------------------------------------------------------\n\nValueError                                Traceback (most recent call last)\n\n<ipython-input-6-59556fd9319f> in <module>()\n      4 \n      5 print(s.find('a'))    # 若不存在则返回 -1\n----> 6 print(s.index('a'))   # 若不存在则抛出 ValueError，其余与 find 相同\n\n\nValueError: substring not found\n\nprint(\" hello world    \".strip())\nprint(\"helloworld\".strip(\"heo\"))\nprint(\"[\"+\"          i         \".lstrip() +\"]\")\nprint(\"[\"+\"          i         \".rstrip() +\"]\")\nhello world\nlloworld\n[i         ]\n[          i]\n\nprint(\"{}\\n{}\\n{}\\n{}\\n{}\".format(\n    \"hello, WORLD\".upper(),\n    \"hello, WORLD\".lower(),\n    \"hello, WORLD\".swapcase(),\n    \"hello, WORLD\".capitalize(),\n    \"hello, WORLD\".title()))\nHELLO, WORLD\nhello, world\nHELLO, world\nHello, world\nHello, World\n\nprint(\"\"\"\n{}|{}\n{}|{}\n{}|{}\n{}|{}\n{}|{}\n{}|{}\n\"\"\".format(\n    \"Python\".startswith(\"P\"),\"Python\".startswith(\"y\"),\n    \"Python\".endswith(\"n\"),\"Python\".endswith(\"o\"),\n    \"i23o6\".isalnum(),\"1 2 3 0 6\".isalnum(),\n    \"isalpha\".isalpha(),\"isa1pha\".isalpha(),\n    \"python\".islower(),\"Python\".islower(),\n    \"PYTHON\".isupper(),\"Python\".isupper(),\n))\n\nTrue|False\nTrue|False\nTrue|False\nTrue|False\nTrue|False\nTrue|False\n\n\n\"101\".zfill(8)\n'00000101'\n\nformat / encode\n格式化输出 format 是非常有用的工具，将会单独进行介绍；encode 会在 bytes-decode-Unicode-encode-bytes 中详细介绍。\n\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "2"}