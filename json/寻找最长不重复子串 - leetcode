{"title": "寻找最长不重复子串 - leetcode ", "index": "leetcode,python", "content": "寻找最长不重复子串\nLongest Substring Without Repeating Characters\n\nGiven a string, find the length of the longest substring without repeating characters.\nExamples:\nGiven \"abcabcbb\", the answer is \"abc\", which the length is 3.\nGiven \"bbbbb\", the answer is \"b\", with the length of 1.\nGiven \"pwwkew\", the answer is \"wke\", with the length of 3. Note that the answer must be a substring, \"pwke\" is a subsequence and not a substring.\n\n思路(时间复杂度为O(n))\n\n遍历字符串，过程中将出现过的字符存入字典，key为字符，value为字符下标\n用maxLength保存遍历过程中找到的最大不重复子串的长度\n用start保存最长子串的开始下标\n如果字符已经出现在字典中，更新start的值\n如果字符不在字典中，更新maxLength的值\nreturn maxLength\n\n代码\nclass Solution(object):\n    def lengthOfLongestSubstring(self, s):\n        \"\"\"\n        :type s: str\n        :rtype: int\n        \"\"\"\n        start = maxLength = 0\n        usedChar = {}\n\n        for i in range(len(s)):\n            if s[i] in usedChar and start <= usedChar[s[i]]:\n                start = usedChar[s[i]] + 1\n            else:\n                maxLength = max(maxLength, i - start + 1)\n            usedChar[s[i]] = i\n\n        return maxLength\n本题以及其它leetcode题目代码github地址: github地址\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "0"}