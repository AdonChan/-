{"title": "【自动化测试】Python 读取.yaml格式文件 - python学习+自动化测试实践 ", "index": "yaml,python", "content": "yaml，Yet Another Markup Language，另一种标记语言。专门用来写配置文件的语言，简洁、强大。\n\n一、安装\n命令：pip install pyyaml\n\n\n二、基本语法规则\n\n\n大小写敏感。\n与Python类似，使用缩进来表示层级关系。\n注意，缩进时不允许使用<tab>键，只允许空格。 ？？（ps我尝试使用了<tab>，但是只要对齐了也没有报错啊）\n缩进的空格数目没关系，只需保证相同层级的元素左对齐\n注释使用“#”，注释掉一行\n\n三、 yaml支持的数据结构\n\n\n对象：键值对的集合，又称为映射（mapping）/ 哈希（hashes） / 字典（dictionary）\n\n数组：一组按次序排列的值，又称为序列（sequence） / 列表（list）\n\n纯量（scalars）：单个的、不可再分的值。字符串、布尔值、整数、浮点数、Null、时间、日期\n\n（1）dict类型\nkey:value\nuser: admin\npwd: 111111\n（2） dict套dict类型\n如下：\ninfo1:\n      user:admin\n      pwd:111111\n（3）list类型\n前面加上‘-’符号，且数字读出来的是int 或者float\n-admin: 111111\n-host : 222222\n（4） 纯量\n\n纯量：最基本、不可再分的值。\n1、数值直接以字面量的形式表示number: 12.30   # {'number': 12.3}\n2、布尔值用true和false表示isSet: true      # {'isSet': True}isSet1: false  # {'isSet1': False}\n3、null用~表示parent: ~   # {'parent': None}\n4、时间采用 ISO8601 格式time1: 2001-12-14t21:59:43.10-05:00     # {'time1': datetime.datetime(2001, 12, 15, 2, 59, 43, 100000)}\n5、日期采用复合 iso8601 格式的年、月、日表示date: 2017-07-31     # {'date': datetime.date(2017, 7, 31)}\n6、YAML 允许使用两个感叹号，强制转换数据类型int_to_str: !!str 123     bool_to_str: !!str true   # {'bool_to_str': 'true'}\n\n（5）数组\n\n1、数组可以采用行内表示法animal: [Cat, Dog]       # 打印结果：{'animal': ['Cat', 'Dog']}\n2、一组连词线开头的行，构成一个数组animal1:  - Cat - Dog - Goldfish        # 打印结果：{'animal1': ['Cat', 'Dog', 'Goldfish']}\n\n（6）复合类型\nlist嵌套dict：\n- user : admin\n  pwd  : '123456'\n- user : host\n  pwd  : '111111'\n其打印结果：\ndict 嵌套list：\ngroup1:\n    - admin\n    - '123456'\ngroup2:\n    - host \n    - '1111111'\n其打印结果：\n（7）字符串\n\n默认不使用引号表示，也可以用单引号和双引号进行表示。\nbut双引号不会对特殊转义字符进行转义。\n单引号中若还有单引号，必须连续使用两个单引号转义\n1、字符串默认不使用引号表示str1: 这是一个字符串\n\n2、如果字符串之中包含空格或特殊字符，需要放在引号之中。str2: '内容：*字符串'\n\n3、单引号和双引号都可以使用，双引号不会对特殊字符转义。str3: '内容\\n字符串'str4: \"content\\n string\"\n\n4、单引号之中如果还有单引号，必须连续使用两个单引号转义。s3: 'labor''s day'\n\n5、字符串可以写成多行，从第二行开始，必须有一个单空格缩进。换行符会被转为空格\n\nstrline: 这是一段\n            多行\n            字符串\n6、多行字符串可以使用|保留换行符，也可以使用>折叠换行\nthis: |\n  Foo\n  Bar\nthat: >\n  Foo\n  Bar\n7、+表示保留文字块末尾的换行，-表示删除字符串末尾的换行。\ns4: |\n  Foo4\ns5: |+\n  Foo5\ns6: |-\n  Foo6\ns7: |\n  Foo7\n（8）对象\n\n1、对象的一组键值对，使用冒号结构表示。animal: pets                                  # 打印结果：{'animal': 'pets'}\n2、Yaml 也允许另一种写法，将所有键值对写成一个行内对象dict1: { name: Steve, foo: bar }     # 打印结果：{'dict1': {'foo': 'bar', 'name': 'Steve'}}\n\n四、读取yaml文件内容\n示例\n\n五、写入yaml文件内容\n示例\n\n\n❤ thanks for watching, keep on updating...\n\n                ", "mainLikeNum": ["1 "], "mainBookmarkNum": "0"}