{"title": "Python常用标准模块相关的笔记 - michael翔的IT私房菜 ", "index": "python", "content": "apscheduler\nConfigParser\nConfigParser – Work with configuration files\n读取配置文件，例如配置文件maps.cfg：\n[PERCENT]\n#配置文件对应的系统文件夹名\nsystem_dir                     =C:\\Users\\michaelxiang\\Desktop\\get_report0906\\get_report\\maps\n#请输入占总交易的百分比值（小数）\npercent                         = 0.8\n#决定是否只是筛选占交易比重大的交易（y or n）\ndecision                     =y\n\n[SUCC_VALUE]\n#请输入成功率阈值（1以内的小数）\ndefault_succ_value   = 0.8\n缴费                        =0.8\n消费                        =0.8\n行业账单                   =0.8\n行业信息查询             =0.8\n\n[KEEP_TIME]\ndefault_keep_time    =60\n缴费_持续时间        =60\n消费_持续时间        =60\n行业账单_持续时间    =60\n行业信息查询_持续时间  =60\ncf = configparser.ConfigParser()\n# 读取配置文件变量config，并指定编码格式\ncf.read(config, encoding='gb2312')\nsystem_dir = cf.get('PERCENT', 'system_dir')\npercent = float(cf.get('PERCENT', 'percent'))\ndecision = cf.get('PERCENT', 'decision')\n\n# cf.options获得元祖对的列表[(,),(,)……]\nsucc_value_list = cf.options('SUCC_VALUE')\nkeep_time_dic = {x[0]: float(x[1]) for x in cf.items('KEEP_TIME')}\nsys\nsys.argv\nRuntime Environment\n# 读取配置文件中的参数\ntry:\n    config = sys.argv[1]\nexcept IndexError as e:\n    print(u'运行脚本时，请加上cfg参数！', e)\n    sys.exit(-1)\nprint(config)\n可以读取命令窗口的参数，例如python get_report.py maps.cfg那么，这里sys.argv[1]获得的值就是maps.cfg。\nshutil\npymotw-copy\nshutil.copyfile( src, dst)    从源src复制到dst中去。当然前提是目标地址是具备可写权限。抛出的异常信息为IOException. 如果当前的dst已存在的话就会被覆盖掉\nshutil.move( src, dst)        移动文件或重命名\nshutil.copymode( src, dst)    只是会复制其权限其他的东西是不会被复制的\nshutil.copystat( src, dst)    复制权限、最后访问时间、最后修改时间\nshutil.copy( src, dst)        复制一个文件到一个文件或一个目录\nshutil.copy2( src, dst)        在copy上的基础上再复制文件最后访问时间与修改时间也复制过来了，类似于cp –p的东西\nshutil.copy2( src, dst)        如果两个位置的文件系统是一样的话相当于是rename操作，只是改名；如果是不在相同的文件系统的话就是做move操作\nshutil.copytree( olddir, newdir, True/Flase)\n把olddir拷贝一份newdir，如果第3个参数是True，则复制目录时将保持文件夹下的符号连接，如果第3个参数是False，则将在复制的目录下生成物理副本来替代符号连接\nshutil.rmtree( src )    递归删除一个目录以及目录内的所有内容\nshutil.copy2\nprint('*'*20+u'转存源数据文件到结果日期文件夹'+'*'*20)\nshutil.copy2(data_source_path, result_file_path)\nshutil.copy2(case_source_path, result_file_path)\nprint('*'*20+u'存储成功！'+'*'*20)\n用来拷贝文件，复制到目标文件夹。\nshutil.rmtree\nshutil.rmtree('maps',ignore_errors=True)\n只有机上后边的参数，空目录才会删除，否则会报错。\n参考：\n\n复制或者移动文件和目录\nPython默认模块 os和shutil 实用函数\n\ncsv\ncollections\ndatetime\nfunctools\nglob\nos\nos.walk\npymotw-os.walk\nfor root, dirs, files in os.walk(system_dir):\n    i += 1\n    print(i)\n    print(root)\n    print('dirs')\n    print(dirs)\n    print('files')\n    print(files)\n1\nC:\\Users\\michaelxiang\\Desktop\\get_report0906\\get_report\n['maps']\n['a.py', 'b.py', 'get_report.py', 'judge_succ.py', 'maps.cfg']\n2\nC:\\Users\\michaelxiang\\Desktop\\get_report0906\\get_report\\maps\n['2016-09-06-16-18-40']\n['case.csv', 'data.csv', 'judge_succ.py', 'percent-2016-09-06-16-18-40.csv', 'report-2016-09-06-16-18-40.csv']\n3\nC:\\Users\\michaelxiang\\Desktop\\get_report0906\\get_report\\maps\\2016-09-06-16-18-40\n['PIT多渠道脱机并行测试']\n['case.csv', 'data.csv']\n4\nC:\\Users\\michaelxiang\\Desktop\\get_report0906\\get_report\\maps\\2016-09-06-16-18-40\\PIT多渠道脱机并行测试\n[]\n['消费（传统）-TPS消费（传统）-成功率时间段2016-08-10 13-03-25-2016-08-10 13-06-25.png', '行业信息查询-TPS行业信息查询-成功率\n时间段2016-08-10 13-03-25-2016-08-10 13-06-25.png', '行业账单查询-TPS行业账单查询-成功率时间段2016-08-10 13-03-25-2016-08-10 1\n3-06-25.png']\n可以看到：\n\nroot：执行os.walk时的每次的目录，会改变，因为会遍历目录下的每一层文件夹；\ndirs： 目录下有几个文件夹，以列表存储文件夹名；\nfiles: 目录下的文件，以列表存储文件名；\n\nos.listdir\npymotw-directories\nsystem_dir=os.getcwd()\nfor fname in os.listdir(system_dir):\n    if fname.startswith('report'):\n        os.remove(os.path.join(system_dir, fname))\n这个的作用就是删除该目录下，以report开头的文件，\nos.path\nos.path.join\n主要用到了将两个路径合并为一个路径，为什么不能用路径A+路径B呢？因为，os.path.join(A,B)会自动根据系统环境，改变两个路径的连接符。Windows系统路径之间是\\，而Linux系统路径是/，因此用os.path.join写出的程序兼容性就更好了。\ntypes\n类似dict/int等一些内置的类型，types模块已不再提供了，例如tyopes.IntType已经提供了。\n参考：\nsof-python 3.1 - DictType not part of types module?\n参考\n\n推荐-pymotw\n小明-Python不能不知的模块\n\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "4"}