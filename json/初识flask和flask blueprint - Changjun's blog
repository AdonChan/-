{"title": "初识flask和flask blueprint - Changjun's blog ", "index": "python", "content": "Flask\npython轻量级的web应用框架\n一个简单的Flask应用程序\nfrom flask import Flask\n\napp = Flask(__name__)\n\n@app.route(\"/\")\ndef index():\n    return '<div>Hello Flask</div>'\n\nif __name__ == \"__main__\":\n   app.run()\nflask Blueprint(蓝图)\n参考文档：蓝图之旅\nflask Blueprint让你的应用可以组件化,提高代码的松耦性,提高复用性,他的作用主要有几点\n\n让你的应用可以组件化，不用仅仅写在一个py文件里。\nBlueprint对象不是app全局对象,因此你可以进行一些操作\n可以给url给定前缀。\n根据url来加载视图函数。\nBlueprint的使用\n\nfrom flask import Blueprint\n\n# 实例化一个蓝图对象\nadmin = Blueprint(\"admin\",__name__)\n# 导入该对象的视图\nimport app.admin.views\n# 在web应用的初始化里\nfrom flask import Flask\n\napp = Flask(__name__)\napp.debug = True\n\n# 导入蓝图\nfrom app.admin from admin as admin_blueprint\n\n# 注册蓝图\napp.register_blueprint(admin)\n# 如果指定url前缀\napp.register_blueprint(admin, url_prefix=\"/admin\")\nflask-sqlalchemy\n实例化sqlalchemy对象,通过Model类定义flask-sqlalchemy的使用\nform flask import Flask\nfrom flask-sqlalchemy import SQLAlchemy\nimport datetime\n\napp = Flask(__name__)\n# 配置连接数据库地址\napp.config['SQLALCHEMY_DATABASE_URL'] = ''\napp.config[\"SQLALCHEMY_TRACK_MODIFICATIONS\"] = True\n\n实例化一个SqlAlchemy对象\ndb = SQLAlchemy(app)\n\nclass User(db.Model):\n    __tablename__ = \"user\"   #表名\n    id = db.Column(db.Integer,primary_key = True)\n    name = db.Column(db.String(200),unique = True)\n    info = db.Column(db.text)\n    addtime = db.Column(db.DateTime,index = True, default = datetime.utcnow \n定义路由\n@home.route('/')\ndef index():\n    return render_template('home/index.html')\n\n# 路由指向\nurl_for('static',filename)\n\n{% entends \"home/home.html\" %}\n\n{% block content %}\n\n{% endblock %}\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "0"}