{"title": "一种新的 RESTful 权限设计讨论 - 修仙 ", "index": "后端开发,node.js,python", "content": "请求权限映射\n根据RESTful的相关风格规范, 我们将请求映射为以下几种操作\nGET     /users/                ----->  `list.users` \nGET     /users/:id/            ----->  `retrieve.users`\nPOST    /users/                ----->  `create.users`\nPUT     /users/:id/password/   ----->  `replace.users`\nPATCH   /users/:id/            ----->  `update.users`\nDELETE  /users/:id/            ----->  `destroy.users`\n权限控制器映射\n如果后端以MVC模式进行开发, 那么我们可以映射如下控制器\n`list.users`        ----->  list(users) \n`retrieve.users`    ----->  retrieve(user,id)  \n`create.users`      ----->  create(users)       \n`replace.users`     ----->  replace(users,id,field)   \n`update.users`      ----->  update(users,id)           \n`destroy.users`     ----->  destroy(users,id)           \n鉴权流程\n权限的管理采用传统的RBAC模式\n\n身份验证,返回具体user或者anonymous,接下来我们把这一步返回的user都作为正常user\n验证请求权限,即上述验证请求权限映射\n\n验证资源存在性与所属权, 这里存在争议．\n\n如果放到控制器之前, 那么可能会出现格外数据库查询,同时会增加代码上的复杂性, 但是可以把所有鉴权过程放到一起．\n如果放到控制器中，鉴权过程分开了，由于不同的资源可能有不同的所属权判断标准，这样可以增加灵活性．\n\n\n\n讨论点\n\n资源存在性与所属权放到控制器里还是作为中间件放到控制器之前？\n请求权限映射有哪些需要改进的地方？\n能否将整个认证鉴权流程规范化？\n\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "2"}