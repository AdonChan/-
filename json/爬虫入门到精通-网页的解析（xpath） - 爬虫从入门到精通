{"title": "爬虫入门到精通-网页的解析（xpath） - 爬虫从入门到精通 ", "index": "网页爬虫,python爬虫,python", "content": "本文章属于爬虫入门到精通系统教程第六讲\n在爬虫入门到精通第五讲中，我们了解了如何用正则表达式去抓取我们想要的内容.这一章我们来学习如何更加简单的来获取我们想要的内容.\nxpath的解释\nXPath即为XML路径语言（XML Path Language），它是一种用来确定XML文档中某部分位置的语言。XPath基于XML的树状结构，提供在数据结构树中找寻节点的能力。起初XPath的提出的初衷是将其作为一个通用的、介于XPointer与XSL间的语法模型。但是XPath很快的被开发者采用来当作小型查询语言。\nXPath的基本使用\n要使用xpath我们需要下载lxml，在爬虫入门到精通-环境的搭建这一章也说明怎么装，如果还没有安装的话，那就去下载安装吧\n直接看代码实战吧。\nfrom lxml import etree\n# 定义一个函数，给他一个html，返回xml结构\ndef getxpath(html):\n    return etree.HTML(html)\n\n# 下面是我们实战的第一个html\nsample1 = \"\"\"<html>\n  <head>\n    <title>My page</title>\n  </head>\n  <body>\n    <h2>Welcome to my <a href=\"#\" src=\"x\">page</a></h2>\n    <p>This is the first paragraph.</p>\n    <!-- this is the end -->\n  </body>\n</html>\n\"\"\"\n# 获取xml结构\ns1 = getxpath(sample1)\n\n# 获取标题(两种方法都可以)\n#有同学在评论区指出我这边相对路径和绝对路径有问题，我搜索了下\n#发现定义如下图\ns1.xpath('//title/text()')\ns1.xpath('/html/head/title/text()')\n\n相对路径与绝对路径\n\n总结及注意事项\n\n获取文本内容用 text()\n获取注释用 comment()\n\n获取其它任何属性用@xx，如\n\n@href\n@src\n@value\n\n\n\nsample2 = \"\"\"\n<html>\n  <body>\n    <ul>\n      <li>Quote 1</li>\n      <li>Quote 2 with <a href=\"...\">link</a></li>\n      <li>Quote 3 with <a href=\"...\">another link</a></li>\n      <li><h2>Quote 4 title</h2> ...</li>\n    </ul>\n  </body>\n</html>\n\"\"\"\ns2 = getxpath(sample2)\n\n总结及注意事项\n\n上面的li 可以更换为任何标签，如 p、div\n位置默认以1开始的\n最后一个用 li[last()] 不能用 li[-1]\n这个一般在抓取网页的下一页，最后一页会用到\n\nsample3 = \"\"\"<html>\n  <body>\n    <ul>\n      <li id=\"begin\"><a href=\"https://scrapy.org\">Scrapy</a>begin</li>\n      <li><a href=\"https://scrapinghub.com\">Scrapinghub</a></li>\n      <li><a href=\"https://blog.scrapinghub.com\">Scrapinghub Blog</a></li>\n      <li id=\"end\"><a href=\"http://quotes.toscrape.com\">Quotes To Scrape</a>end</li>\n      <li data-xxxx=\"end\" abc=\"abc\"><a href=\"http://quotes.toscrape.com\">Quotes To Scrape</a>end</li>\n    </ul>\n  </body>\n</html>\n\"\"\"\ns3 = getxpath(sample3)\n\n\n总结及注意事项\n\n根据html的属性或者文本直接定位到当前标签\n文本是 text()='xxx'\n其它属性是@xx='xxx'\n\n这个是我们用到最多的，如抓取知乎的xsrf(见下图)\n\n我们只要用如下代码就可以了\n `//input[@name=\"_xsrf\"]/@value `\n\n\n\n\n    sample4 = u\"\"\"\n    <html>\n      <head>\n        <title>My page</title>\n      </head>\n      <body>\n        <h2>Welcome to my <a href=\"#\" src=\"x\">page</a></h2>\n        <p>This is the first paragraph.</p>\n        <p class=\"test\">\n        编程语言<a href=\"#\">python</a>\n        <img src=\"#\" alt=\"test\"/>javascript\n        <a href=\"#\"><strong>C#</strong>JAVA</a>\n        </p>\n        <p class=\"content-a\">a</p>\n        <p class=\"content-b\">b</p>\n        <p class=\"content-c\">c</p>\n        <p class=\"content-d\">d</p>\n        <p class=\"econtent-e\">e</p>\n        <p class=\"heh\">f</p>\n        <!-- this is the end -->\n      </body>\n    </html>\n    \"\"\"\n    s4 = etree.HTML(sample4)\n\n总结及注意事项\n\n\n想要获取某个标签下所有的文本（包括子标签下的文本），使用string\n如 <p>123<a>来获取我啊</a></p>，这边如果想要得到的文本为123来获取我啊\"，则需要使用string\n\nstarts-with 匹配字符串前面相等\ncontains 匹配任何位置相等\n当然其中的(@class,\"content\")也可以根据需要改成(text(),\"content\")或者其它属性(@src,\"content\")\n\n最后再次总结一下\n看完本篇文章后，你应该要\n\n能学会基本所有的xpath的使用\n\ncss和这个的原理一样，所以就不介绍了，可以参考\nCSS 选择器参考手册\n\n所有代码在kimg1234/pachong\n\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "8"}