{"title": "Python 全栈开发 -- 监控篇 - OneAPM 官方技术专栏 ", "index": "python", "content": "如果你已经玩转了 Python 编程语言语法，肯定想用这些知识，开发一款应用程序，它可以是在网上，可以炫耀或出售，那就需要全栈式开发 Python。具体如何创建，部署和运行生产 Python Web 应用程序，参考 Full Stack Python，本文主要介绍一点，监控。\n\n为什么要监控？\nWeb 应用程序在执行时，监控工具收集分析并显示其相关信息，每个有问题的应用程序都有网络堆栈。通过监控工具提供的堆栈信息，开发和运营团队能够响应并解决问题。\n收集和分析生产环境的数据在保持稳定性，维持高性能方面是十分重要的，尤其对错误的 Web 应用程序进行优化很有必要。\n监控和​​日志的区别\n监控和日志都旨在帮助应用程序诊断问题，在调试过程中他们的目的非常相似。唯一的差别是，日志数据只会根据明确的事件而进行记录，而监控数据则集合数据背景进行分析。\n例如，当错误发生时，该事件被记录在日志中。同时，监控应用的代码还要收集数据，不仅是异常 log，还包括函数的性能数据。\n其实，俩两者之间的区别也不是那么明显，毕竟解决问题不是只有一条路径。只要对 Web 生产应用程序有用都是可以用的。\n监控项目\n在操作系统和网络堆栈方面有以下几个重要的资源需要监控\n\nCPU 使用率\n内存利用率\n持久性存储消耗与空闲\n网络带宽和延迟\n\n应用级监控包括以下几个方面，不同应用程序因不同的读写程度，或受流量波动影响而需要不同的响应时间，有不同的资源占用情况。\n\n应用程序的警告和错误（例如 500 HTTP 错误）\n应用程序代码的性能\n模板渲染时间\n浏览器为应用程序所需的渲染时间\n数据库的查询性能\n\n开源监控项目\n\nstatsd 监听和汇总指标转移到其他的服务的 Node.js 的网络守护进程，如到 Graphite。\nGraphite 存储时间序列数据，并通过一个 Django web 应用显示图形。\nBucky  测量来自最终用户的浏览器 web 应用程序的性能，并发送该数据回服务器。\nSensu 是用 Ruby 编写的开源监控框架，但适用于任何编程语言的 Web 应用程序。\nGraph Explorer  是基于 Graphite 的仪表盘，添加了一些功能和亮眼设计。\nPacketBeat Elasticsearch 允许开发人员搜索收集的数据并通过 Kibana 用户界面的 Web 应用程序可视化事件。\nMunin 是客户端基于插件来监控系统发送监控流量到 Munin 节点，进行数据分析和可视化。注意，此项目是用 Perl 编写的，所以需要在 Node 上安装 Perl 5。\n\n托管监控服务\n\nOneAPM 监控终端的用户体验，服务器性能，支持追踪数据库、第三方 API 和 Web 服务器的各种问题，打造 ITOA 一站式 IT 管理解决方案。\nStatus.io 专注于 Web 应用程序的正常运行时间和指标响应时间。\nStatusPage.io 提供了只要简单设置状态页面即可监控应用运行时间的方法。\nAppdynamics 致力于应用程序性能管理和 IT 运营分析。专注于管理的整个云计算环境应用的性能和可用性，以及数据中心内部可视化。\nNew Relic 用于获取和分析堆栈有关的数据应用和数据库监控以及插件。\nCopperEgg 是监控服务器和基础设施等较低级别的监控。在 DevOps 商店中因为改变生产环境能够将修改的结果即时反馈而受到欢迎。\nPagerDuty 对于指定的个人或团队在稳定性，性能，或运行时间有问题的应用程序进行报警。\nApp Enlight 提供了性能，异常和错误监控，目前针对 Python We应用程序。\n\n监控学习清单\n\n回顾一下 SaaS 开源监视工具，第三方服务往往更容易建立和托管数据为您服务。开源项目给你更多的控制权，但你需要准备额外的服务器。\n建议使用第三方监控工具，看看它是如何监控你的应用程序。当然可以自己测试不同第三方监测工具对你应用级的监控能力。\n\n参考：Full Stack Python\nOneAPM 能够帮你查看 Python 应用程序的方方面面，不仅能够监控终端的用户体验，还能监控服务器性能，同时还支持追踪数据库、第三方 API 和 Web 服务器的各种问题。想阅读更多技术文章，请访问 OneAPM 官方技术博客。本文转自 OneAPM 官方博客\n\n                ", "mainLikeNum": ["1 "], "mainBookmarkNum": "14"}