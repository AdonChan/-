{"title": "编程零基础应当如何开始学习 Python？ - 造数科技 ", "index": "flask,django,python", "content": "提前说一下，这篇福利多多，别的不说，直接让你玩回最有手感的怀旧游戏，参数贴图很方便自己可以根据喜好修改哦。\n本篇通过以下四块展开，提供大量资源对应。\n\n选一个好版本\n有没有看过《在下坂本，有何贵干？》那个坂本可以装B，Python的版本则是你的工作环境。\n\n首先，在学习之前一定会考虑一个问题——Python版本选择对于编程零基础的人来说，选择Python3。\n\n1、学习基础知识\n首先，Python 是一个有条理的、强大的面向对象的程序设计语言。建议从下面课程开始：\n\nPython 教程\nPython 标准库\n\n官方文档 （非常贴心地提供中文翻译）\n\n\n首先需要学习Python的基础知识，下载、安装、导入库、字符串处理、函数使用等等。\na、查看文章 BeginnersGuide/Download，按步骤下载正确的Python版本。b、接下来，阅读教程，并尝试用你的新Python编译器做一些简单的练习。\n\n如果你之前没有编程经验，读一下 [[BeginnersGuide/NonProgrammers]， 里面有适合你的教程列表。\n如果你之前有编程经验，参考 BeginnersGuide/Programmers, 里面列出了更多高级教程。\n如果英语不是你的母语，阅读翻译好的教程更适合你。参考 python.org's 非英语资源列表.\n\nc、当你读完教程后，可以浏览Python在线文档d、在准备写第一个程序前，你需要一个文本编辑器 PythonEditors\nps：有一个超赞的网站，提供很多文档的中文翻译，有Python、pandas、numpy、NLTk、Django等等，值得收藏。一译中文文档\n\n如果你更喜欢看视频\n\n\n零基础学Python语言 嵩天老师的课程，非常全面细致\n\n零基础入门学习Python 小甲鱼的入门视频，讲课十分有趣\n\nPython for Everybody Course上非常经典的Python教学视频\n\n2、确定学习方向\nPython职业学习方向很多，大体上分为这四个\n\n针对各个方向，造数君提供了需要了解的标准库：\n\n\n后端开发：Django**、Flask**、Tornado**\n\n\n数据科学：NumPy**、Pandas**、Matplotlib**\n\n\n网络爬虫、Requests**、Scrapy**、threading**\n\n\n机器学习：scikit-learn**、TensorFlow**\n\n\n\n后端开发学习图\n同时，你也可以用Python来写游戏http://www.pygame.org/tags/all\n\n除了文档，还有这些地方可以学习：\n\n后端开发_Python入门基础到高级教程\nPython研发工程师学习路线\nFull Stack Python\nThink Python\nawesome-python\n\n\n举个例子，以前学习Django的时候，看到全英文的文档，当时一脸懵逼。后来找到一译，看完了文档，又找到了一些博客：\n\n\n前言_Django博客教程 学光的教程\n\nDjango 模板  自强学堂的分享\n\nDjango从入门到实战 实验楼的路径学习\n\npython web 入坑指南  知乎后端工程师所著\n\n3、项目练手\n只会埋头敲代码肯定不行的，需要自己动手写写具体的项目，那么去哪里找呢？造数君以前曾经提供了一些：Python 有哪些一千行左右的经典练手项目？\n\nTips：如果你想寻找某个项目，可以去Github上找。\n例如，我想写一个知乎爬虫，搜索“知乎”，选择Python分类Github\n\n新世界啊，有没有。\n同时，自己的项目可以分享出来，例如最大的同性交友网站 Github 、真实的网络问答社区 知乎 、 如果觉得不爽，还可以自己搭建一个博客 教你免费搭建个人博客 。\n4、商业化协作\n等到了这个阶段，你已经找到了一份Python相关的工作。你需要更好的与同事配合，了解更多语言特性。\n例如 有人曾经写到 ：\n需要扩展Python语言的理由：\n\n添加/额外的（非Python）功能，提供Python核心功能中没有提供的部分，比如创建新的数据类型或者将Python嵌入到其它已经存在的应用程序中，则必须编译。\n性能瓶颈的效率提升， 解释型语言一般比编译型语言慢，想要提高性能，全部改写成编译型语言并不划算，好的做法是，先做性能测试，找出性能瓶颈部分，然后把瓶颈部分在扩展中实现，是一个比较简单有效的做法。\n保持专有源代码的私密，脚本语言一个共同的缺陷是，都是执行的源代码，保密性便没有了。把一部分的代码从Python转到编译语言就可以保持专有源代码私密性。不容易被反向工程，对涉及到特殊算法，加密方法，以及软件安全时，这样做就显得很重要。\n\npython扩展实现方法--python与c混和编程\n这里给出一个闯关网站：The Python Challenge ， 非常好玩，大家可以再评论中给出答案\n最后，我们看看Python的薪资情况\n\npython工程师工资收入多少\nPython酷不酷、你想不想学？\n欢迎关注，定会有更多精彩，更多精彩内容关注造数科技\n\n                ", "mainLikeNum": ["4 "], "mainBookmarkNum": "21"}