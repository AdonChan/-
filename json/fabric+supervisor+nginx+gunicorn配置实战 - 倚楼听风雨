{"title": "fabric+supervisor+nginx+gunicorn配置实战 - 倚楼听风雨 ", "index": "python,fabric,supervisor,nginx,gunicorn", "content": "以ubuntu为例：\n系统初始化步骤\n#!/bin/bash\n\n#初始化用户\nsudo useradd -rm -s /bin/bash demo\nsudo adduser demo sudo\nsudo passwd demo\n\nsudo apt-get install build-essential python-software-properties software-properties-common -y\nsudo apt-get install vim nano -y\nsudo apt-get install supervisor -y\n\nsudo add-apt-repository ppa:nginx/stable \nsudo add-apt-repository -y ppa:rwky/redis\nsudo apt-get update\n\nsudo apt-get install nginx aria2 axel wget curl -y\nsudo apt-get install  redis-server -y\n\nsudo apt-get install build-essential libssl-dev libffi-dev python-dev python3-dev -y\nsudo apt-get install python3-pip -y\nsudo apt-get install  convmv libevent-dev libssl-dev libffi-dev libsasl2-dev libpq-dev  libxml2-dev libxslt1-dev libldap2-dev  -y\n\nvim ~/.pip/pip.conf\n#[global]\n#index-url = https://pypi.douban.com/simple #豆瓣源，可以换成其他的源\n#disable-pip-version-check = true          #取消pip版本检查，排除每次都报最新的pip\n#timeout = 120\n\nsudo pip3 install virtualenv\nmkdir venv && cd venv \nvirtualenv mdwiki\nsource mdwiki/bin/activate\n\npip3 install gunicorn\n\n#具体配置文件后续说明\nsudo vim  mdwiki/gunicorn.conf.py\nsudo vim /etc/supervisor/conf.d/default.conf\nsudo vim /etc/nginx/conf.d/default.conf\n\n#添加开机自启\nsudo vim /etc/rc.local\n#/usr/bin/supervisord -c /etc/supervisor/supervisord.conf\n\nsudo update-rc.d nginx disable\nsupervisor配置\ncelery+virtualenv+supervisor的情形，其实只要指定celery程序为virtaulenv下面的那个即可，例如/home/xby/venv/mdwiki/bin/celery\n如果在gunicorn下出现'ascii' codec can't encode...报错，那么请在supervisor加入environment如下\nenvironment=LANG=\"en_US.utf8\", LC_ALL=\"en_US.UTF-8\", LC_LANG=\"en_US.UTF-8\"\n\n[program:nginx]\ncommand=/usr/sbin/nginx -g \"daemon off;\"\nstopsignal=QUIT\npriority=1\n;user=www-data\n[program:celeryworker]\ndirectory=/opt/www/mdwiki\ncommand=/path/to/celery worker -A app.util.tasks.celery_app  -f celery.worker.log -l info \npriority=5\nautostart=true\nautorestart=true\nstartsecs=10\nuser=www-data\n[program:celerybeat]\ndirectory=/opt/www/mdwiki\ncommand=/path/to/celery beat -A app.util.tasks.celery_app  -f celery.beat.log -l info \npriority=6\nautostart=true\nautorestart=true\nstartsecs=10\nuser=www-data\n\n[program:mdwiki]\n;environment=SECRET_KEY=value,aliyun_api_key=value,aliyun_secret_key=value,MAIL_PASSWORD=value\n;command=/usr/bin/gunicorn -n mdwiki -w 4 -b 127.0.0.1:4000 -k gevent app:app\nenvironment=LANG=\"en_US.utf8\", LC_ALL=\"en_US.UTF-8\", LC_LANG=\"en_US.UTF-8\"\ncommand=/path/to/gunicorn app:app -c /path/to/gunicorn.conf.py\ndirectory=/opt/www/mdwiki\n;user=www-data\nautostart=true\nautorestart=true\npriority=10\nredirect_stderr = true  \nstdout_logfile_maxbytes = 20MB  \nstdout_logfile_backups = 20 \nstdout_logfile = /var/log/mdwiki/mdwiki.log\n\n; environment=PYTHONPATH=$PYTHONPATH:/path/to/somewhere\nnginx配置\nserver {\n    listen              80;\n    listen              443 ssl;\n    server_name         demo.com;\n    ssl_certificate     /etc/nginx/ssl/nginx.crt;\n    ssl_certificate_key /etc/nginx/ssl/nginx.key;\n    server_tokens off;\n    charset utf-8;\n    client_max_body_size 20M;\n    set $projdir \"/opt/www/mdwiki\";\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_redirect off;\n        proxy_pass http://127.0.0.1:4000;\n    }\n    location ~ ^/[^static].*\\.(jpg|png|gif|bmp|zip|docx)$ {\n        expires 30d;\n        root $projdir;\n    }\n    location ~ ^/static.*\\.(js|css|png|jpg|gif|bmp|map|ico|eot|svg|ttf|woff)$ {\n        expires 30d;\n        root $projdir/app;\n    }\n\n}\n\ngunicorn.conf.py配置\n#!/bin/bash\n\nimport multiprocessing\n\nbind = \"127.0.0.1:4000\"\nworkers = multiprocessing.cpu_count() * 2 + 1\nworker_class='gevent'\nproc_name = \"mdwiki\"\nuser = \"www-data\"\nchdir='/opt/www/mdwiki'\n#daemon=False\n#group = \"nginx\"\nloglevel = \"info\"\nerrorlog = chdir+\"/log/gunicorn/error.log\"\naccesslog= chdir+\"/log/gunicorn/access.log\"\nraw_env = [\n   r'MAIL_PASSWORD=pass',\n   r'SECRET_KEY=\\xe6'\n]\n#ssl\n#keyfile=\n#certfile=\n#ca_certs=\n\nfabric远程发布\nfab -f fabfile.py deploy\n\nfabfile.py文件\nfrom fabric.api import *\nimport os,sys\nimport tarfile\nfrom contextlib import contextmanager\nfrom fabric.contrib.files import exists\n\n#$ fab -f fabfile.py -H localhost,remote host_type\ndef host_type():\n    run('uname -s')\n\nenv.user= os.environ.get('USER','')\nenv.hosts= os.environ.get('HOST','').split(',')\nenv.password= os.environ.get('PASSWORD','')\nenv.sudo_password= os.environ.get('PASSWORD','')\n\nactive='source /home/xby/venv/mdwiki/bin/activate'\n\nsrcPath=r'C:\\Users\\taojw\\Desktop\\pywork\\mdwiki'\ndistPath=r'C:\\Users\\taojw\\Desktop\\pywork\\mdwiki\\dist'\ndistFile=distPath+os.sep+'mdwiki.tar.gz'\n\n#用于处理virtualenv环境,将其包装成with上下文\n@contextmanager\ndef virtualenv():\n    with prefix(active):\n        yield\n\n\nif not os.path.exists(distPath):\n    os.mkdir(distPath)\n\n#本地打包分发文件\ndef pack():\n    def ecludefiles(path):\n        for name in ['venv','node_modules','websrc','__pycache__','.git','.idea','dist']:\n            if path.find(os.sep+name)>0:\n                return True\n        return False\n\n    if os.path.exists(distFile):\n        os.remove(distFile)\n    #压缩成tar.gz格式\n    with tarfile.open(distFile,'w:gz') as f:\n        f.add(srcPath,arcname='mdwiki',exclude=ecludefiles)\n\n#部署\ndef deploy():\n    #local pack dist file\n    pack()\n    \n    remote_tmp='/tmp/mdwiki.tar.gz'\n\n    localsize=os.path.getsize(distFile)\n    remotesize=0\n    #check if should upload again if there is a same file\n    if exists(remote_tmp):\n        remotesize=int(run(\"stat -c '%s' {0}\".format(remote_tmp)))\n        print(str(localsize)+\":\"+str(remotesize))\n    if localsize!=remotesize:\n        sudo('rm -f %s' % remote_tmp)\n        # upload dist file\n        put(distFile,remote_tmp)\n    if not exists('/opt/www'):\n        sudo('mkdir /opt/www')\n        sudo('chown www-data:www-data /opt/www')\n\n    #stop app and bak now\n    with settings(warn_only=True):\n        #delete previous bak\n        sudo('rm -rf /opt/www/mdwiki_bak')\n        sudo('supervisorctl stop all')\n        if exists('/opt/www/mdwiki'):\n            sudo('mv /opt/www/mdwiki /opt/www/mdwiki_bak')\n\n    sudo('tar -zxvf /tmp/mdwiki.tar.gz -C /opt/www/')\n\n    with cd('/opt/www/'):\n        #replace data dir\n        if exists('mdwiki_bak/data'):\n            sudo('rm -rf mdwiki/data')\n            sudo('cp -R mdwiki_bak/data mdwiki/')\n        if exists('mdwiki_bak/app.db'):\n            sudo('cp mdwiki_bak/app.db mdwiki/')\n\n        sudo('chown -R www-data:www-data mdwiki')\n\n        with virtualenv():\n            run('pip3 install -r  mdwiki/requirements.txt')\n\n    sudo('rm -f %s' % remote_tmp)\n    sudo('supervisorctl start all')\n\n#in your local shell run 'fab deploy' command\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "3"}