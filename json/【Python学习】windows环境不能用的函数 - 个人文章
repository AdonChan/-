{"title": "【Python学习】windows环境不能用的函数 - 个人文章 ", "index": "python,windows", "content": "一、Before\nPython学习过程中，经常发现教程上讲的函数在本机上会报错：\nAttributeError: 'module' object has no attribute '***'\n作为一个初学者，就会很懵逼的检查：    1、有没有写错函数名；2、是不是忘记引用这个函数了？3、检查下这个插件模块是否安装了？...（如果你很认同，就说明你找对地方了）\n本篇文章将为大家介绍学习Python过程中windows环境的“坑”。\n二、正文\n由于和操作系统相关，所以这些“坑”来源于Python中的os模块~~~\n1、os.uname()\npython提供了查看当前操作系统的函数：\n    os.name()\n    #output:\n    #nt--Windows系统\n    #posix--Linux、Unix或Mac OS X\npython还提供了一个查看操作系统详细信息的函数，就是os.uname(),在mac环境下执行输出如下结果。\nos.uname()\n#output:(sysname, nodename, release, version, machine)\n#('Darwin', 'iMac.local', '13.3.0', 'Darwin Kernel Version 13.3.0: Tue Jun  3 21:27:35 PDT 2014; root:xnu-2422.110.17~1/RELEASE_X86_64', 'x86_64')\n但是在windows上，就会报错没有这个模块。解决方案：   (1)获取hostname：socket.gethostname() 或 socket.gethostbyaddr(socket.gethostname())   (2)使用platform.uname()\nimport platform\nprint platform.uname()\n#output:\n#(system='Windows', node='hongjie-PC',release='7', version='6.1.7601', machine='x86', processor='x86 Family 16 Model 6 Stepping 3, AuthenticAMD')\n\n2、os.fork()\n  os.fork()  #新建进程\n  #output:pid\nUnix/Linux操作系统提供了一个fork()系统调用，它非常特殊。普通的函数调用，调用一次，返回一次，但是fork()调用一次，返回两次，因为操作系统自动把当前进程（称为父进程）复制了一份（称为子进程），然后，分别在父进程和子进程内返回。   子进程永远返回0，而父进程返回子进程的ID。这样做的理由是，一个父进程可以fork出很多子进程，所以，父进程要记下每个子进程的ID，而子进程只需要调用getppid()就可以拿到父进程的ID。\n解决方案：   1、使用Python的multiprocessing模块的Process来创建进程\n    import multiprocessing\n    import os\n\ndef runChildProcess(name):\n    print \"Run Child Process,pname = {} , pid = {}\".format(name,os.getpid())\n\nif __name__ == '__main__':\n    print \"Run Parent Process,pid = {}\".format(os.getpid())\n    child = multiprocessing.Process(target=runChildProcess,args=('test',))\n    print \"+\"*20\n    child.start()\n    child.join()\n    print \"-\"*20\n执行结果：\nRun Parent Process,pid = 5540\n++++++++++++++++++++\nRun Child Process,pname = test , pid = 712\n--------------------\n\n三、After\n本文持续更新...如果有错误、或建议，请务必联系我，我会在看到消息后的第一时间改进！！！\n\n                ", "mainLikeNum": ["2 "], "mainBookmarkNum": "0"}