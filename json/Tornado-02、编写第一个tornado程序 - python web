{"title": "Tornado-02、编写第一个tornado程序 - python web ", "index": "ubuntu,tornado,python", "content": "1.Tornado简介\ntornado是使用Python编写的一个强大的、可扩展的Web服务器。它在处理严峻的网络流量时表现得足够强健，但却在创建和编写时有着足够的轻量级，并能够被用在大量的应用和工具中。\ntornado的安装也很简单，直接使用pip安装即可：pip install tornado\n2.Tornado路由映射\n我们已经知道了Tornado是什么了，现在让我们看看它能做什么吧。我们首先从使用Tornado编写一个简单的Web应用开始。\nTornado是一个编写对HTTP请求响应的框架。作为程序员，你的工作是编写响应特定条件HTTP请求的响应的handler。下面是一个全功能的Tornado应用的基础示例：新建一个python file 命名为start1 往文件里加入一下代码\nstart1.py\n\n\n\nimport tornado.ioloop\nimport tornado.web\n\nclass MainHandler(tornado.web.RequestHandler):\n    def get(self):\n        self.write(\"hello \")\n\napplication = tornado.web.Application([\n    (r\"/\",MainHandler),\n])\n\nif __name__ == \"__main__\":\n    application.listen(8000) #在这里需要设置端口转发，把主机的8000端口转发到虚拟机的8000端口\n    tornado.ioloop.IOLoop.instance().start()\n\n\n\n点击tool--> start SSH session在pycharm 下方的terminal中输入以下命令执行这个py文件\n\nworkon py3env\ncd tornado_1\nls\npython start1.py\n\n\n\n\n然后在浏览器地址栏中键入相应的ip地址与路由*注意地址栏内填入ip地址（就是ubuntu里面ifconfig显示的那个地址）再在后面加上':'再加上端口号如：你的ip为 192.43.22.132 端口为9000那么地址栏就该这么填 192.43.22.132:9000*\n\n\n\n这是一个简单，基础的示例，接下来看一个更加复杂一点的示例。\nstart2.py\n\nimport tornado.httpserver  #帮助启动tornado服务器\nimport tornado.ioloop      #开启tornado循环，后台等待\nimport tornado.options       #命令行中读取设置\nimport tornado.web         #RequestHandler 和 Application 在这个模块里面\n\nfrom tornado.options import define, options   #define用来定义默认端口号\n\n# 定义一个默认端口\ndefine(\"port\", default=9000, help=\"run on the given port\", type=int)\n\n\n# 定义一个事件处理的类\nclass IndexHandler(tornado.web.RequestHandler):\n    def get(self):  # 这是get方法\n        self.write('abc')  # 往页面中写入字符串abc  \n\n\nif __name__ == \"__main__\":\n    tornado.options.parse_command_line()\n\n    app = tornado.web.Application(  \n        handlers=[  \n        (r\"/\", IndexHandler),  # 路由映射 当访问路由/的时候 调用IndexHandler类来处理\n        ]\n    )\n    http_server = tornado.httpserver.HTTPServer(app)\n    http_server.listen(options.port)  # 监听这个端口\n    tornado.ioloop.IOLoop.instance().start()  # 启动这个服务\n\n\n关掉上执行中的start1.py  （Ctrl + C）将这个新建的文件更新到ubuntu中 再执行start2.py文件然后在浏览器地址栏中输入ip:9000 （我们刚才换了一下port的值）显示如下\n\n\n\n在端口后面加上不同的路径，可以通过路由映射来做不同的事情。\n在start2.py中添加以下代码\n\n#添加路由映射\n(r\"/aaa\", AaaHandler),\n\n#写对应的类\nclass AaaHandler(tornado.web.RequestHandler):\n    def get(self):\n        self.write('aaa')\n    \n#有了不同的映射之后就可以实现各种需求\n\n\n\n\n在上面的代码中，self.write()就是输出，可以把内容输出到浏览器。注意 write输出的内容 是python对象序列化的对象 即json对象\n3.Tornado的项目结构的输入与输出\n在上面的代码中，self.write()就是输出，可以把内容输出到浏览器。\n但是如果想得到输入，可以使用查询字符串。在start2.py中加入一下代码\n#添加路由映射\n(r\"/gre\", GreHandler),\n\n#添加处理类\nclass GreHandler(tornado.web.RequestHandler):\n    def get(self):\n        gre = self.get_argument('aaa','hello') #得到网页上aaa的值 默认为hello\n        self.write(gre + ',frindely user!')\n\n这里的get_argument可以得到浏览器地址栏中的参数输入。\n默认的情况\n\n\n有参数的情况\n参数改为123参数输入的格式为路由后+?+变量赋值\n\n\n使用get_arguments来获取查询字符串列表。\n注意：write不能序列化一个列表，但是字典是可以的。\n\n                ", "mainLikeNum": ["1 "], "mainBookmarkNum": "2"}