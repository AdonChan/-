{"title": "11.保存登录状态与注销功能 - 后端开发——Flask初体验 ", "index": "flask,python", "content": "目前我们的demo已经完成了注册和登录功能，当登录成功之后，页面跳转到首页，此时我们需要保存用户的登录状态，不管页面如何跳转，除非用户自己注销登录。\n\n如之前所说，我们可以用session来保存用户登录的这个状态，当登录验证成功的时候，将当前登录的username存入session，并设置session的permanent属性为True（这样下次打开浏览器仍然是登录的状态），这一步很简单，login函数修改如下：\n@app.route('/login/', methods=['GET', 'POST'])\ndef login():\n    #...省略...\n        if '成功' in message:\n            session['username'] = username\n            session.permanent = True\n            return redirect(url_for('home'))\n    #...省略...\n登录成功之后，发现导航条右边的文字还是这个鬼样子：\n\n我们需要修改它，设计成登录成功之后，这一部分显示用户名和注销按钮。用 9.注册和登录功能实现（2）—— 注册与登录的错误提示 提到的@app.context_processor上下文管理器，把当期登录的用户名传递给html:\n@app.context_processor\ndef my_context_processor():\n    user = session.get('username')\n    if user:\n        return {'login_user': user}\n    return {}\n然后在base.html中修改导航条原先登录和注册的部分如下：\n{% if login_user %}\n    <li><a href=\"#\">用户：{{ login_user }}</a></li>\n    <li><a href=\"{{ url_for('logout') }}\">注销</a></li>\n{% else %}\n    <li><a href=\"{{ url_for('login') }}\">登录</a></li>\n    <li><a href=\"{{ url_for('register') }}\">注册</a></li>\n{% endif %}\n此时，登录成功后，导航条就变成如下样式了：\n\n上面的代码，我们把注销关联到了一个logout视图函数，这个也很好写，用session的clear方法清除session中的内容，然后跳转回首页：\n@app.route('/logout/')\ndef logout():\n    session.clear()\n    return redirect(url_for('home'))\n用户名的那部分，我们后续设计一个可以更改头像和修改密码的页面，点击用户名跳转过去，这里就先写一个#。\n\n                ", "mainLikeNum": ["3 "], "mainBookmarkNum": "1"}