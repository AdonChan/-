{"title": "Python GUI库wxPython官网Hello World示例的逐行解释 - 个人文章 ", "index": "python,wxpython,gui", "content": "这篇文章是对wxPython官网第二个\"Hello World\"的demo代码的逐行解释，不过为方便初学者做了小部分改动，勉强算对wxPython的入门了解。\n一、环境与工具\n\n本机：Windows10 64位\nPython 3.5.2\nwxPython 4.0.0b2\nIDE：Pycharm Professional 2017.2.3\n\n二、代码解释\n# !/usr/bin/env python\n# _*_ coding:utf-8 _*_\n\nimport wx\n'''\nframe(窗口)：带标题和边框的最顶层窗体\npanel(面板)：容器类，提供空间放其他组件，包括其他panel\n'''\n\nclass HelloFrame(wx.Frame):\n    def __init__(self, *args, **kw):\n        super(HelloFrame, self).__init__(*args, **kw)\n\n        # 创建一个Panel实例\n        pn1 = wx.Panel(self)\n        \n        # 在pn1上创建一个静态文本组件(StaticText)\n        # +label表示要显示的文本内容\n        # +pos表示文本显示位置\n        st = wx.StaticText(pn1, label=\"A simple wxPython demo!\", pos=(25, 25))\n        \n        # 设置文本内容字号并粗体显示\n        font = st.GetFont()\n        font.PointSize += 10\n        font = font.Bold()\n        st.SetFont(font)\n        \n        # 创建菜单栏\n        self.makeMenuBar()\n        # 创建状态栏\n        self.CreateStatusBar()\n        # 设置状态栏要显示的文本内容\n        self.SetStatusText(\"Ready to update to Hello World v3.0!\")\n\n    def makeMenuBar(self):\n        # 创建菜单对象fileMenu(菜单栏主选项1)\n        fileMenu = wx.Menu()\n        \n        # 在fileMenu中添加子项createItem\n        # +item表示子项\n        # +helpString表示对子项的说明，当鼠标移动到子项上时，会在状态栏显示\n        # \\t...语法允许用户键盘操作触发子项\n        createItem = fileMenu.Append(wx.ID_ANY, item=u\"新建文件(N)...\\tCtrl-H\", helpString=\"创建一个新的文件\")\n        \n        # 在各子项中添加起分隔作用的横线\n        fileMenu.AppendSeparator()\n        \n        # 在fileMenu中添加子项exitItem\n        exitItem = fileMenu.Append(wx.ID_EXIT, item=u\"退出\")\n\n        # 创建菜单对象helpMenu(菜单栏主选项2)\n        helpMenu = wx.Menu()\n        # 在fileMenu中添加子项aboutItem\n        aboutItem = helpMenu.Append(wx.ID_ABOUT, item=u\"关于\")\n\n        # 创建菜单栏\n        menuBar = wx.MenuBar()\n        # 添加各个菜单栏主选项到菜单栏中\n        # \"&\"后的首字母+\"alt\"键触发菜单选项。该首字母会以下划线着重显示，按住alt键即能看见。\n        menuBar.Append(fileMenu, u\"文件(&F)\")\n        menuBar.Append(helpMenu, u\"帮助(&H)\")\n        # 添加菜单栏到窗口\n        self.SetMenuBar(menuBar)\n\n        # 将主菜单的所有子项绑定动作\n        self.Bind(wx.EVT_MENU, self.OnCreate, source=createItem)\n        self.Bind(wx.EVT_MENU, self.OnAbout, source=aboutItem)\n        self.Bind(wx.EVT_MENU, self.OnExit, source=exitItem)\n\n    def OnExit(self, event):\n        # 关闭窗口\n        self.Close(True)\n\n    def OnCreate(self, event):\n        wx.MessageBox(u\"创建文件成功\")\n\n    def OnAbout(self, event):\n        # MessageBox(message, caption=MessageBoxCaptionStr, style=OK|CENTRE, parent=None, x=DefaultCoord, y=DefaultCoord)\n        # +调用message()方法将会弹出一个对话窗口\n        # +message表示对话窗口显示的正文信息\n        # +caption表示对话窗口的标题\n        # +style表示对话窗口的按钮和图标样式\n        wx.MessageBox(\"Hello World v2.0\\r\\nproducted by wxPython.\",\n                      \"About\",\n                      wx.OK | wx.ICON_INFORMATION)\n\n\nif __name__ == \"__main__\":\n    app = wx.App()\n    frame = HelloFrame(None, title=\"Hello World v2.0\")\n    frame.Show()\n    app.MainLoop()\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "0"}