{"title": "Python每日一练0024 - python每日练习 ", "index": "python", "content": "问题\n如何执行外部命令，如ls -l\n解决方案\n使用subprocess库\n在Python 3.5之前，使用subprocess.call()函数\n>>> import subprocess\n>>> subprocess.call(['ls', '-l'])\ntotal 4\ndrwxrwxr-x 4 root root 4096 Apr 18 02:46 test-rs\n0\n在Python3.5及之后，使用subprocess.run()函数\n>>> import subprocess\n>>> subprocess.run(['ls', '-l'])\ntotal 4\ndrwxrwxr-x 4 root root 4096 Apr 18 02:46 test-rs\nCompletedProcess(args=['ls', '-l'], returncode=0)\n讨论\n命令的执行默认不需要shell环境，所以当你使用ls -l作为参数时，需要将shell置位True，否则会报错误\n>>> import subprocess\n>>> subprocess.run('ls -l', shell=True)\ntotal 4\ndrwxrwxr-x 4 root root 4096 Apr 18 02:46 test-rs\nCompletedProcess(args=['ls', '-l'], returncode=0)\n通常来说对于执行系统命令，我们会想到os.system，但在官方文档中已经建议了使用更高级的subprocess库\nThe subprocess module provides more powerful facilities for spawning new processes and retrieving their results; using that module is preferable to using this function. See the Replacing Older Functions with the subprocess Module section in the subprocess documentation for some helpful recipes.\nsubprocess提供了更高级的用法，比如run可以指定stdin、stdout、stderr，并且可以指定编码、超时时间等等选项，还可以获取到命令的返回结果\n更多关于subprocess库见：https://docs.python.org/3/lib...\n来源\nStack Overflow\n关注\n欢迎关注我的微信公众号：python每日一练\n\n\n                ", "mainLikeNum": ["1 "], "mainBookmarkNum": "0"}