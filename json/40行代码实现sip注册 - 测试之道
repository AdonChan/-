{"title": "40行代码实现sip注册 - 测试之道 ", "index": "sip,python", "content": "最近一段时间一直在学习python，并且用python编写了一个基于sipp工具的自动化测试平台，基本功能良好。对python的兴趣也与日俱增，因此决定每周练手使用python实现一个测试功能。既然对sip熟悉，那就先从sip开始吧。\n话说socket真是一个万能的消息收发机制，尤其是对于测试人员来说，学会一门语言，并且把socket玩6，也许会给你的测试工作带来很大的便利。python 的socket机制很强大，使用也很简单，如下代码就是通过简单的socket交互，实现sip消息的发送和接收。\nimport os\nimport socket\nimport time\n\nhost = '172.31.225.220'\nsport = '5060'\n\n# 创建socket对象\ns = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)\n\n# 进行socekt配置，使其支持端口复用，否则发送方绑定5066，则无法使用该端口进行接收\ns.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)\ns.bind(('172.31.225.112', 5066))\n\ntry:\n    port = int(sport)\nexcept ValueError:\n    port = socket.getservbyname(sport, 'udp')\ns.connect((host, port))\n\n# 获取当前路径，并读取当前目录下的reg.msg文件内，作为发送的data。\n# 本例子中的reg.msg为完整的REGISTER消息\npath = os.getcwd()\nfile = os.path.join(path, 'reg.msg')\n\n# 由于python在进行明文读取，默认会将回车换行强制转换为/n，为了防止sip server解析错误，\n# 在读取时增加了newline参数，并设置为空，则不进行转换，windows下读取为/r/n\nwith open(file, \"r+\", newline='') as sm:\n    data = sm.read()\n    \n# 进行循环收发，需要将reg.msg中的[users]字段替换为1001-1005\nfor i in range(1001, 1006):\n    data = data.replace(r\"[users]\", str(i))\n    print(data)\n    s.sendall(data.encode(encoding='utf-8'))\n    while 1:\n        buf = s.recv(2048)\n        print(buf.decode('utf-8'))\n        break\n    time.sleep(1) \n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "4"}