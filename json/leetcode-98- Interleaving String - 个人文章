{"title": "leetcode-98- Interleaving String - 个人文章 ", "index": "python", "content": "\"\"\"97. Interleaving StringDescriptionHintsSubmissionsDiscussSolutionGiven s1, s2, s3, find whether s3 is formed by the interleaving of s1 and s2.\nFor example,Given:s1 = \"aabcc\",s2 = \"dbbca\",\nWhen s3 = \"aadbbcbcac\", return true.When s3 = \"aadbbbaccc\", return false.\n\"\"\"\n\n\nclass Solution:\n    # BFS\n    def isInterleave(self, s1, s2, s3):\n        lx, ly, lz = len(s1), len(s2), len(s3)\n        if lx + ly != lz:\n            return False\n        haved = [(0, 0)]\n        visitedx = set()\n        visitedy = set()\n        while haved:\n            x, y = haved.pop(0)\n            if x + y == lz:\n                return True\n            # print(x,y)\n            # if  x<lx and s1[x]==s3[x+y] and (x,y) not in visited :\n            if x < lx and s1[x] == s3[x + y] and (x, y) not in visitedx:\n                haved.append((x + 1, y))\n                visitedx.add((x, y))\n                # print('x',x,y)\n            # if y<ly and s2[y]==s3[x+y] and (x,y) not in visited:\n            if y < ly and s2[y] == s3[x + y] and (x, y) not in visitedy:\n                haved.append((x, y + 1))\n                visitedy.add((x, y))\n                # print('y',x,y)\n        return False\n\n\nif __name__ == '__main__':\n    s1 = \"a\"\n    s2 = \"\"\n    s3 = \"a\"\n    # s1 = \"aabcc\"\n    # s2 = \"dbbcc\"\n    # aabc\n    # dbbc\n    # s3 = \"aadbbcbcac\"\n    # s3 = \"aadbbbaccc\",\n    s1 = \"a\"\n    s2 = \"b\"\n    s3 = \"a\"\n    s1 = \"abbbbbbcabbacaacccababaabcccabcacbcaabbbacccaaaaaababbbacbb\"\n    s2 = \"ccaacabbacaccacababbbbabbcacccacccccaabaababacbbacabbbbabc\"\n    s3 = \"cacbabbacbbbabcbaacbbaccacaacaacccabababbbababcccbabcabbaccabcccacccaabbcbcaccccaaaaabaaaaababbbbacbbabacbbacabbbbabc\"\n    s1 = \"aa\"\n    s2 = \"ab\"\n    s3 = \"aaba\"\n    st = Solution()\n    out = st.isInterleave(s1, s2, s3)\n    print(out)\n\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "0"}