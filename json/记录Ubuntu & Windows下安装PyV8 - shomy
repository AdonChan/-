{"title": "记录Ubuntu & Windows下安装PyV8 - shomy ", "index": "python,ubuntu14.04,pyv8", "content": "源自我的博客\n\n\n注：原文有更新\n这几天需要在使用PyV8来进行python与javascript的交互。之前在window下安装过，也没有遇到什么问题。\n\n结果这次在Ubuntu安装遇到了不少坑--主要是网上的办法都不可行，不知道为啥。最终折腾了一晚上，终于好了。\nwindows下的安装\n在windows下安装要简单很多，如果有了c++环境之后，只需要在pyv8下载适合自己系统以及适合自己python版本的exe文件即可，然后直接安装就好了，相对来说简单一些\n在Ubuntu下安装\n安装依赖\n首先安装依赖:Boost, 这一步网上的大部分教程都差不多，也是必须的;\nsudo apt-get install scons\nsudo apt-get install libboost-dev libboost-thread-dev\nsudo apt-get install libboost-system-dev libboost-python-dev\n\n安装PyV8\n网上的大部分教程均是使用svncheckout出V8,PyV8的代码，然后再设置什么V8的目录为V8_HOME最后在编译PyV8;先不说能不能使用svn迁出，（反正我翻墙都没有迁出来），后来去google.code网站上， 下载了源代码，结果编译期间出各种错误，根本没办法执行。 还有一些直接使用pip安装的教程，也是报各种错，缺少这个啦，缺少那个啦。于是就想直接找到二进制文件，直接拷到python的包目录得了。结果这条路还算顺畅！最终比较轻松的安装成功了。二进制文件googlecode官网有，有人在github上也提供了很全面的二进制安装文件https://github.com/emmetio/pyv8-binaries 找到适合你机器的版本下载.解压出来应该有如下两个文件:一个源码，一个二进制文件。一般Python的第三方包有这俩文件就够了.\nPyV8.py\n_PyV8.so\n然后把这两个文件拷到你的python第三方包的目录里面就好，比如我的是:\ncd pyv8 //进入解压后的目录\nsudo cp * /usr/lib/python2.7/dist-packages/ \n之后尝试导入import PyV8结果报以下的一个错误:\nImportError: libboost_python_py27.so.1.54.0: cannot open shared object file: No such file or directory\n当时看到这个错误，然后想到我之前已经安装好了依赖呢，为啥还会报这个错误呢。大致查了一下，有的说是链接库路径设置问题,之后检查了一下libboost_python_py27.so.1.54.0\nshomy@LiuPC:blog$ find /usr/lib/ -name libboost_python-py27.so.1.54.0\n/usr/lib/x86_64-linux-gnu/libboost_python-py27.so.1.54.0\n果然有这个链接库，那为啥检测不到呢，问题就出在环境变量LD_LIBRARY_PATH上，因为python寻找链接库的时候，是从该路径里面找的。然而我echo $LD_LIBRARY_PATH却啥都没有,只要把上面的路径加入到环境变量就可以吧。--于是在.bashrc最后加入了一行：(路径可能不一致，请根据自己的实际情况添加)\nexport LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/lib/x86_64-linux-gnu\n保存退出之后，再用source ~/.bashrc 重载一下就好了。再一次import PyV8 正常!执行下面的测试代码:\nimport PyV8\n\nctxt = PyV8.JSContext()\nctxt.enter()\nfunc = ctxt.eval(\"\"\"\n    (function(){\n        function hello(){\n            return \"Hello world.\";\n        }\n        return hello();\n    })\n\"\"\")\nprint func()\n执行输出Hello World 就说明安装成功了。可以去模拟登录了～～～\n\n                ", "mainLikeNum": ["1 "], "mainBookmarkNum": "2"}