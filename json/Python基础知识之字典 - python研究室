{"title": "Python基础知识之字典 - python研究室 ", "index": "python", "content": "字典的表现形式为：{key:value}，键和值之间用冒号分隔，每个键值对儿之间用逗号分隔，比如{‘name’:’超人’,’age’:500}，要注意key的类型必须是不可变的类型，python对key进行哈希函数运算，根据计算结果决定value的存储地址，所以字典是无序存储的。字典的增删改查如下：\n增\n可以通过直接赋值的方式对字典进行修改，当指定的键不存在时则会在末尾增加一对儿键值\ndic = {'name':'刘先生','age':'39','job':'工程师','marr':'已婚'}\ndic['age'] = 20\ndic['lover'] = '小昭'\nprint(dic)\n输出：\n{'name': '刘先生', 'age': 20, 'job': '工程师', 'marr': '已婚', 'lover': '小昭'}\n还可以使用setdefaultv(key,value)方法来增加键值对儿如果key存在则不错任何改动，如果key不存在，则会在末尾添加新的键值,并且如果不给定value的话默认为None一句话概括就是“有就不管他，没有就增加”，这在循环中可以利用这一点\ndic = {'name':'刘先生','age':'39','job':'工程师','marr':'已婚'}\ndic.setdefault('name','超人')\ndic.setdefault('lover','小姐姐')\nprint(dic)\n输出：\n{'name': '刘先生', 'age': '39', 'job': '工程师', 'marr': '已婚', 'lover': '小姐姐'}\n删: pop() clear del\npop 删除指定的key对应的value,并且返回删除的value，如果key不存在则会报错。\ndic = {'name':'刘先生','age':'39','job':'工程师','marr':'已婚'}\nres = dic.pop('name')\nprint(dic,'返回值：',res)\n输出：\n{'age': '39', 'job': '工程师', 'marr': '已婚'} 返回值： 刘先生\n在使用pop()时还可以增加一个参数来指定返回值，如果给定的key不存在则会返回给定的返回值.这种方式非常好用，可以防止key不存在时报错，如果存在则删除，不存在则返回指定的字符串。\ndic = {'name':'刘先生','age':'39','job':'工程师','marr':'已婚'}\nres = dic.pop('小三儿','查无此人')\nprint('返回值：',res)\n输出：\n返回值： 查无此人\nclear 用于清空字典。\ndic = {'name':'刘先生','age':'39','job':'工程师','marr':'已婚'}\ndic.clear()\nprint(dic)\n输出：\n{}\ndel 用于删除指定的键值，如果只给出字典名字时则会删除整个字典对象\ndic = {'name':'刘先生','age':'39','job':'工程师','marr':'已婚'}\ndel dic['name']\n#del dic\nprint(dic)\n输出：\n{'age': '39', 'job': '工程师', 'marr': '已婚'}\n改: 见“增”\n查：\n可以直接指定键来访问字典,有则返回对应的值，没有则报错：\ndic = {'name':'刘先生','age':'39','job':'工程师','marr':'已婚'}\na = dic['name']\nprint(a)\n输出：\n刘先生\n可以通过字典的三个方法keys(),values(),items()分别查询所有的键、值、键值对儿。\ndic = {'name':'刘先生','age':'39','job':'工程师','marr':'已婚'}\na = dic.keys()\nb = dic.values()\nc = dic.items()\nprint('keys():',a)\nprint('values():',b)\nprint('items():',c)\n输出：\nkeys(): dict_keys(['name', 'age', 'job', 'marr'])\nvalues(): dict_values(['刘先生', '39', '工程师', '已婚'])\nitems(): dict_items([('name', '刘先生'), ('age', '39'), ('job', '工程师'), ('marr', '已婚')])\n还可以用for循环遍历这三个方法来分别获得键值。\ndic = {'name':'刘先生','age':'39','job':'工程师','marr':'已婚'}\nfor k in dic.keys():\n    print(k)\n输出：\nname\nage\njob\nmarr\ndic = {'name':'刘先生','age':'39','job':'工程师','marr':'已婚'}\nfor v in dic.values():\n    print(v)\n输出：\n刘先生\n39\n工程师\n已婚\ndic = {'name':'刘先生','age':'39','job':'工程师','marr':'已婚'}\nfor k,v in dic.items():\n    print(k,v)\n输出：\nname 刘先生\nage 39\njob 工程师\nmarr 已婚\n字典的其他方法\nlen(dict)计算字典元素个数。str(dict)把字典专户为字符串，如：\ndic = {'name':'刘先生','age':'39','job':'工程师','marr':'已婚'}\na = str(dic)\nimport re\nres = re.search(r'name',a)\nprint(res)\n输出：\n<_sre.SRE_Match object; span=(2, 6), match='name'>\n\n因为把dic转化为字符串并赋值给a，所以可以对a进行正则匹配\n而如果直接对dic进行正则匹配则报错，因为dic不是字符串类型。\ncopy()返回一个字典的浅复制\ndict.fromkeys(seq,'value')以序列seq中的元素作为字典的键,value为初始值 创建字典,如果不给参数value的话则每个键对应的值为Non，注意：这是一个“类方法”，所以使用时前面要加dict.\nseq = ['a',1,'b']\na = dict.fromkeys(seq,'value')\nprint(a)\n输出：\n{'a': 'value', 1: 'value', 'b': 'value'}\nget(key, default=None)返回指定键的值，如果键不存在则返回default值。\npopitem()删除并返回字典的一个键值对，如果字典为空则会报错。\ndic = {'name':'刘先生','age':'39','job':'工程师','marr':'已婚'}\nres1 = dic.popitem()\nres2 = dic.popitem()\nres3 = dic.popitem()\nprint(res1,res2,res3,dic)\n输出：\n('marr', '已婚') ('job', '工程师') ('age', '39') {'name': '刘先生'}\nupdate([other])用键值对儿更新字典，如果键已经存在则会替换对应的值，参数为另外一个字典或者可迭代的键值对儿，比如：\ndic = {'name':'刘先生','age':'39','job':'工程师','marr':'已婚'}\nit = ((i,i**2) for i in range(1,4))\ndic.update(it)\nprint(dic)\n输出：\n{'name': '刘先生', 'age': '39', 'job': '工程师', 'marr': '已婚', 1: 1, 2: 4, 3: 9}\n也可以用下面的方式指定键对应的值，比如\ndic.update(name = '李小姐',age = 22)\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "0"}