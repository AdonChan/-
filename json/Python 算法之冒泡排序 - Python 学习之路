{"title": "Python 算法之冒泡排序 - Python 学习之路 ", "index": "python", "content": "冒泡排序\n冒泡排序（英语：Bubble Sort）是一种简单的排序算法。它重复地遍历要排序的数列，一次比较两个元素，如果他们的顺序错误就把他们交换过来。遍历数列的工作是重复地进行直到没有再需要交换，也就是说该数列已经排序完成。这个算法的名字由来是因为越小的元素会经由交换慢慢“浮”到数列的顶端。\n冒泡排序算法的运作如下： \n1、比较相邻的元素。如果第一个比第二个大（升序），就交换他们两个。\n2、对每一对相邻元素作同样的工作，从开始第一对到结尾的最后一对。这步做完后，最后的元素会是最大的数。\n3、针对所有的元素重复以上的步骤，除了最后一个。\n4、持续每次对越来越少的元素重复上面的步骤，直到没有任何一对数字需要比较。\n冒泡排序动态图\n\n代码实现\n我们来逐行分析下。\ndef bubble_sort(list):\n  n = len(list):\n  for j in range(n - 1):\n一至三行都是常规操作，定义函数，获取数据长度，循环遍历。\ndef bubble_sort(list):\n  n = len(list):\n  for j in range(n - 1):\n    count = 0\n第四行定义一个 count 变量，用来记录交换的次数。\ndef bubble_sort(list):\n  n = len(list):\n  for j in range(n - 1):\n    count = 0\n    for i in range(1, n - 1 - j)\n第五行在定义一个 for 循环，用来遍历剩下的数据，注意 range 第二个参数是 n - 1 - j。这里的减 j 是为了不在遍历之前排序好的元素。\ndef bubble_sort(list):\n  n = len(list):\n  for j in range(n - 1):\n    count = 0\n    for i in range(1, n - 1 - j)\n      if list[i] > list[i + 1]\n        list[i], list[i + 1] = list[i + 1], list[i]\n第六，七行比较相邻两个元素的大小，如果当前元素（list[i]）大于下一个元素（list[i + 1]），则交换两个元素的值。\ndef bubble_sort(list):\n    n = len(list)\n    for j in range(n - 1):\n        count = 0\n        for i in range(0, n - 1 - j):\n            if list[i] > list[i + 1]:\n                list[i], list[i + 1] = list[i + 1], list[i]\n                count += 1\n        if count == 0:\n            break\n第八，九，十行。记录交换的次数，但 count == 0 代表没有交换，序列已经有序。\n写在最后\n欢迎大家关注我的公众号「痴海」，每天分享 Python 知识。后台回复「python爬虫」，免费领取最新 python 教学视频。\n\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "2"}