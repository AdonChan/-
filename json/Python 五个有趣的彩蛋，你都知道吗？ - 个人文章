{"title": "Python 五个有趣的彩蛋，你都知道吗？ - 个人文章 ", "index": "python", "content": "阅读文本大概需要 6.6 分钟。\n当一门编程语言是开源的时候，往往会有产生一些搞笑和有趣的东西。通常，这意味着社区的贡献者会为该语言添加一些有趣和特别的彩蛋以及隐藏的特性（当然前提是不会增加在生产环境中使用的风险）。\nPython 就是一个很好的例子。作为一门开源的语言，它的社区为其贡献了一些十分幽默的东西。\n旁注：如果您想观察彩蛋，请注意，它们只能在第一次工作。如果希望重新运行它们，需要重新启动 Python shell。\n0. Hello World\n程序员们都熟悉 Hello World 的概念。在大多数情况下，它指的是使用该编程语言编写的最小程序，它会将“Hello World”打印到屏幕。这可能是在学习新的编程语言时首先要做的。\nPython 有一个酷酷的隐藏的库，做了一些有点与众不同的事：\n>>> import __hello__\nHello World... \n1. April Fool\n下面的 April fool 玩笑是由 Barry Warsaw 提出的，与他的退休有关。他是一位著名的 Python 开发者，在他宣布正式退休的时候，就诞生了下面这个彩蛋：\n>>> from __future__ import barry_as_FLUFL\n>>> 1 <> 2\nTrue \n2. 由 C++ 转换到 Python\n'braces'库也是一个具有浓厚程序员风格的玩笑，它在其文档中提到，当在编写 Python 代码时使用这个库可提供使用 C++ 花括号的功能。但当你尝试使用它的时候，你将会看到社区对此的看法：\n>>> from __future__ import braces\nSyntaxError: not a chance \n哈哈哈，以为导入 braces 就可以使用花括号来结束代码块？Python 的答案是：没门儿！\n3. 经典的 Python 之禅\nimport this \n运行此命令将显示由 Tim Peters 编写的\"Zen Of Python（Python 之禅）\"。据传这是 Python 中的『八荣八耻』，每个有追求的 Python 程序员都应该谨记于心。\nimport this\nThe Zen of Python, by Tim Peters\nBeautiful is better than ugly.\nExplicit is better than implicit.\nSimple is better than complex.\nComplex is better than complicated.\nFlat is better than nested.\nSparse is better than dense.\nReadability counts.\nSpecial cases aren't special enough to break the rules.\nAlthough practicality beats purity.\nErrors should never pass silently.\nUnless explicitly silenced.\nIn the face of ambiguity, refuse the temptation to guess.\nThere should be one-- and preferably only one --obvious way to do it.\nAlthough that way may not be obvious at first unless you're Dutch.\nNow is better than never.\nAlthough never is often better than *right* now.\nIf the implementation is hard to explain, it's a bad idea.\nIf the implementation is easy to explain, it may be a good idea.\nNamespaces are one honking great idea -- let's do more of those! \n参考翻译：\n优美胜于丑陋。 显式胜于隐式。 简单胜于复杂。 复杂胜于难懂。 扁平胜于嵌套。 分散胜于密集。 可读性应当被重视。 尽管实用性会打败纯粹性，特例也不能凌驾于规则之上。 除非明确地使其沉默，错误永远不应该默默地溜走。 面对不明确的定义，拒绝猜测的诱惑。 用一种方法，最好只有一种方法来做一件事。 虽然一开始这种方法并不是显而易见的，但谁叫你不是 Python 之父呢。 做比不做好，但立马去做有时还不如不做。 如果实现很难说明，那它是个坏想法。 如果实现容易解释，那它有可能是个好想法。 命名空间是个绝妙的想法，让我们多多地使用它们吧！\n4. “反重力”漫画\nimport antigravity \n输入这行代码，会直接跳转到漫画网页 xkcd。漫画很有意思，一个人漂浮在天空中，他的一位朋友好奇的问他是怎么飞起来的。\n\n对话内容大致翻译：\n上图：\n“你在飞！怎么做到的？”\n“Python!”\n下左：\n“我昨晚学习了 Python，一切都是那么简单”\n“运行 HELLO WORLD 只需要 print \"Hello World!\"”\n下中：\n“我还是不明白……动态类型，还是空格？”\n“来加入我们吧，编程又再次变得有趣起来了，Python 是一个全新的世界”\n“但你是怎么飞起来的？”\n下右：\n“我只是输入了 import antigravity”\n“就这样？”\n“我还对药品柜中的所有东西进行了采样比较”（暗指他对比过多种编程语言，但还是觉得 Python 最简单）\n“但我想这就是 Python.”\n文章转载自 ：开源中国社区 [http://www.oschina.net]\n本文地址：https://www.oschina.net/news/...\n欢迎关注我的微信公众号「痴海」，后台回去「1024」，领取最新 Python 教程。\n\n                ", "mainLikeNum": ["1 "], "mainBookmarkNum": "1"}