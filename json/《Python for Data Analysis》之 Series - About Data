{"title": "《Python for Data Analysis》之 Series - About Data ", "index": "python,pandas,numpy,data-analysis", "content": "pandas的主要数据结构：Series\n\n\nPandas所能满足的需求:\n\n具备按轴自动或显式数据对齐功能的数据结构。这可以防止许多由于数据未对齐以及来自不同数据源(索引方式不同)的数据而导致的常见错误。\n集成时间序列功能\n既能处理时间序列数据也能处理非时间序列的数据\n数据运算和约简(比如对某个轴求和)可以根据不同的元数据(轴)编号执行。\n灵活处理缺失数据\n合并及其他出现在常见数据库中的关系型运算\n\n\n\nSeries是一种类似一维数组的对象，它由一组数据(各种Numpy数据类型)以及一组与之相关的数据标签(即索引)组成\nSeries的组成要素为两点：1.一组数据  2.与之对应的索引创建：Series([data],index=[index])\n\"Data可以是列表（省略index)\"\nobj = Series([3,4,-5,6])\n\n\"通过Python字典创建:键值自动作为索引\"\nsdata = {'a':3,'b':4,'c':-5,'d':6}\nobj = Series(sdata)\n\n\"自定义索引\"\nobj = Series([3,4,-5,6],index=['a','b','c','d'])\n应用:Series的方法\n\"通过索引选取单个值\"\nIn [7]: obj['a']\nOut[7]: 3\n\"通过索引选取一组值\"\nIn [8]: obj[['a','c','d']]\nOut[8]: \na    3\nc   -5\nd    6\n\"数据组运算(Series可以看作一维数组)，保留索引和值之间的链接\"\nobj[obj > 0]\nobj[obj*2]\nnp.exp(obj2)\n\"还可以将Series当作一个定长的有序字典\"\nIn [9]: \"b\" in obj\nOut[9]: True\n\nIn [10]: \"e\" in obj\nOut[10]: False\n\n\"Series实例方法\"\nIn [10]: obj.isnull()  #检测缺失数据\n\n\"Series的索引可以通过赋值的方式就地修改\"\n\nIn [11]: obj.index = ['Bob','Steve','Jeff','Ryan']\n\nOut[12]: \nBob      3\nSteve    4\nJeff    -5\nRyan     6\ndtype: int64\n\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "1"}