{"title": "Python-Virtualenv - ormsf ", "index": "python", "content": "注释\n在使用virtualenv前ubuntu默认的解释器是python2.7，而且/usr/lib/python3里面已经安装好了ipython3和requests\n$ python\nPython 2.7.12 (default, Nov 19 2016, 06:48:10) \n[GCC 5.4.0 20160609] on linux2\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>>\n$ ipython3    \nPython 3.5.2 (default, Nov 17 2016, 17:05:23) \nType \"copyright\", \"credits\" or \"license\" for more information.\n\nIPython 5.1.0 -- An enhanced Interactive Python.\n?         -> Introduction and overview of IPython's features.\n%quickref -> Quick reference.\nhelp      -> Python's own help system.\nobject?   -> Details about 'object', use 'object??' for extra details.\n\nIn [1]: import requests\n\nIn [2]:\n使用\n由于一些兼容性问题，电脑上默认的python版本只能只能使用python2.7，所以创建命令要另外使用-p指定解释器\n$ mkdir my_project_folder; cd my_project_folder\n\n# 创建虚拟环境\n$ virtualenv -p /usr/bin/python3 venv\nRunning virtualenv with interpreter /usr/bin/python3\nUsing base prefix '/usr'\nNew python executable in /home/ormsf/my_project_folder/venv/bin/python3\nAlso creating executable in /home/ormsf/my_project_folder/venv/bin/python\nInstalling setuptools, pkg_resources, pip, wheel...done.\n激活虚拟环境\n$ source venv/bin/activate\n现在可以看到提示符前面多了一个venv，代表虚拟环境创建成功\n(venv) ~/my_project_folder $ ipython3\n实践一下，虚拟环境和实际的环境隔离的\n# 无法使用ipython3\n(venv) ~/my_project_folder $ ipython3  \nTraceback (most recent call last):\n  File \"/usr/bin/ipython3\", line 4, in <module>\n    from IPython import start_ipython\nImportError: No module named 'IPython'\n\n# 默认的解释器已经变成了python3\n(venv) ~/my_project_folder $ python\nPython 3.5.2 (default, Nov 17 2016, 17:05:23) \n[GCC 5.4.0 20160609] on linux\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n\n# 无法使用requests\n>>> import requests\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\nImportError: No module named 'requests'\n注意不需要使用pip3\n(venv) ~/my_project_folder $ pip install requests\nCollecting requests\n  Downloading requests-2.13.0-py2.py3-none-any.whl (584kB)\n    100% |████████████████████████████████| 593kB 1.3MB/s \nInstalling collected packages: requests\nSuccessfully installed requests-2.13.0\n现在request已经能够正确使用了\n(venv) ~/my_project_folder $ python\nPython 3.5.2 (default, Nov 17 2016, 17:05:23) \n[GCC 5.4.0 20160609] on linux\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> import requests\n>>> \n(venv) ~/my_project_folder $ pip install ipython\n现在ipython也已经能够正确使用了\n(venv) ~/my_project_folder $ ipython\nPython 3.5.2 (default, Nov 17 2016, 17:05:23) \nType \"copyright\", \"credits\" or \"license\" for more information.\n\nIPython 5.1.0 -- An enhanced Interactive Python.\n?         -> Introduction and overview of IPython's features.\n%quickref -> Quick reference.\nhelp      -> Python's own help system.\nobject?   -> Details about 'object', use 'object??' for extra details.\n\nIn [1]: \n退出\n(venv) ~/my_project_folder $ deactivate\n原理很简单，就是把系统Python复制一份到virtualenv的环境，用命令source venv/bin/activate进入一个virtualenv环境时，virtualenv会修改相关环境变量，让命令python和pip均指向当前的virtualenv环境。\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "0"}