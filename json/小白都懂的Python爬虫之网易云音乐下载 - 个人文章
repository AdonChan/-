{"title": "小白都懂的Python爬虫之网易云音乐下载 - 个人文章 ", "index": "selenium,网易云音乐,python", "content": "首发知乎：https://zhuanlan.zhihu.com/p/...\n\n目标\n偶然的一次机会听到了房东的猫的《云烟成雨》，瞬间迷上了这慵懒的嗓音和学生气的歌词，然后一直去循环听她们的歌。然后还特意去刷了动漫《我是江小白》，好期待第二季...\n我多想在见你，哪怕匆匆一眼就别离...\n好了，不说废话了。这次的目标主要是根据网易云中歌手的ID，下载该歌手的热门音乐的歌词和音频，并保存到本地的文件夹中。\n配置基础\n\nPython\nSelenium(配置方法参照：Selenium配置)\nChrome浏览器(其它的也可以，需要进行相应的修改)\n\n分析\n如果爬取过网易云的网站的小伙伴都应该知道网易云是有反爬取机制的，POST时需要对一些信息的参数进行加密函数的模拟。但是这里为了简便，小白也能理解。直接使用了Selenium来模拟登录，然后使用接口来直接下载音乐和歌词。\n实验步骤：\n\n根据歌手ID获取该歌手的热门歌曲列表，歌曲名称和链接，并保存到csv文件中；\n读取csv文件，根据歌曲链接，提取歌曲ID，然后利用相应的接口，下载音乐和歌词；\n将音乐和歌词保存到本地。\n\n\nPython实现\n该部分将对几个关键的函数进行介绍...\n获取歌手信息\n利用Selenium我们就不需要看对网页的请求了，直接可以从网页源码中提取相应的信息。查看歌手页面源码可以发现，我们需要的信息在iframe框架内，所以我们先需要切换到iframe：\nbrowser.switch_to.frame('contentFrame')\n继续往下看，发现我们需要的歌曲名字和链接是在id=\"hotsong-list\"的标签中，然后每一行对应的是一个tr标签。所以先获取所有的tr内容，然后遍历单个tr。\ndata = browser.find_element_by_id(\"hotsong-list\").find_elements_by_tag_name(\"tr\")\n注意：前一个是find_element，后一个是find_elements，后者返回一个列表。\n接下来就是解析单个tr标签的内容，获取歌曲名字和链接，可以发现两者在class=\"txt\"标签中，而且链接是href属性，名字是title属性，可以直接通过get_attribute()函数获取。\n\nfor i in range(len(data)):\n    content = data[i].find_element_by_class_name(\"txt\")\n    href = content.find_element_by_tag_name(\"a\").get_attribute(\"href\")\n    title = content.find_element_by_tag_name(\"b\").get_attribute(\"title\")\n    song_info.append((title, href))\n\n下载歌词\n网易云有个获取歌词的接口，链接为：http://music.163.com/api/song...\n链接中的数字就是歌曲的id，所以我们拥有歌曲id后，可以直接从该链接下载歌词，歌词文件是json格式，所以我们需要用到json包。\n\n而且直接获取的歌词中，每行有一个时间轴，需要用正则表达式来剔除，完整代码如下：\ndef get_lyric(self):\n    url = 'http://music.163.com/api/song/lyric?' + 'id=' + str(self.song_id) + '&lv=1&kv=1&tv=-1'\n    r = requests.get(url)\n    json_obj = r.text\n    j = json.loads(json_obj)\n    lyric = j['lrc']['lyric']\n    # 利用正则表达式去除时间轴\n    regex = re.compile(r'\\[.*\\]')\n    final_lyric = re.sub(regex, '', lyric)\n    return final_lyric\n\n下载音频\n网易云也提供了音频文件的接口，链接为：http://music.163.com/song/med...\n链接中的数字为歌曲的id，可以直接根据歌曲的id来下载音频文件。完整代码如下：\ndef get_mp3(self):\n    url = 'http://music.163.com/song/media/outer/url?id=' + str(self.song_id)+'.mp3'\n    try:\n        print(\"正在下载：{0}\".format(self.song_name))\n        urllib.request.urlretrieve(url, '{0}/{1}.mp3'.format(self.path, self.song_name))\n        print(\"Finish...\")\n    except:\n        print(\"Fail...\")\n\nReference\n\npython 根据网易云歌曲的ID 直接下载歌曲\nWindows上安装Selenium爬取网易云歌曲\n\n源码地址\nGithub：Link\n\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "0"}