{"title": "字符串数组最长公共前缀 - leetcode ", "index": "leetcode,算法,python", "content": "字符串数组最长公共前缀\nLongest Common Prefix\n\n给出字符串数组，查找这个数组中所有字符串的最长公共前缀\nWrite a function to find the longest common prefix string amongst an array of strings.\n\nexample 1\ninput: ['asdqowi','asdb', 'asdmnc']\noutput: 'asd'\n思路\n\ni从0开始自增，判断每个字符串 i 位置的字符是否一致，不一致则 i 之前的串为最长公共字符串。\n利用python zip函数的特点：\n\na = [1, 2, 3]\nb = [4, 5, 6]\nc = [7, 8, 9, 10]\nzip(a, b, c) is =>\n(1, 4, 7)\n\n(2, 5, 8)\n\n(3, 6, 9)\nset((1, 1, 1)) = {'1'}\nset((1, 1, 2)) = {'1', '2'}\nzip(*strs)返回可迭代的zip对象，只要判断set(item)长度大于0，则表明此元素非公共字符。\n下面给出两种算法的代码。\n代码\nclass Solution(object):\n    def longestCommonPrefix(self, strs):\n        \"\"\"\n        :type strs: List[str]\n        :rtype: str\n        \"\"\"\n        prefix = ''\n        i = 0\n        while True:\n            try:\n                tmp = strs[0][i]\n                for item in strs:\n                    if item[i] != tmp:\n                        return prefix\n            except: #out of index range，表明遍历最短字符串完毕\n                return prefix\n            prefix += tmp\n            i += 1\n        return prefix\n\n\n    def longestCommonPrefix_use_zip(self, strs):\n        \"\"\"\n        :type strs: List[str]\n        :rtype: str\n        \"\"\"\n        prefix = ''\n        for _, item in enumerate(zip(*strs)):\n            if len(set(item)) > 1:\n                return prefix\n            else:\n                prefix += item[0]\n        return prefix\n本题以及其它leetcode题目代码github地址: github地址\n\n                ", "mainLikeNum": ["1 "], "mainBookmarkNum": "0"}