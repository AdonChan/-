{"title": "爬虫爬取微信小程序 - 个人文章 ", "index": "小程序,python", "content": "之前打算做个微信小程序的社区，所以写了爬虫去爬取微信小程序，后面发现做微信小程序没有前途，就把原来的项目废弃了做了现在的网站观点,不过代码放着也是放着，还不如公开让大家用，所以我把代码贴出来，有需要的复制了使用就是了。\n#coding:utf-8\n__author__ = 'haoning'\n#!/usr/bin/env python\nimport time\nimport urllib2\nimport datetime\nimport requests\nimport json\nimport random\nimport sys\nimport platform\nimport uuid\nreload(sys)\nsys.setdefaultencoding( \"utf-8\" )\nimport re\nimport os\nimport MySQLdb as mdb\nfrom bs4 import BeautifulSoup\n\nDB_HOST = '127.0.0.1'\nDB_USER = 'root'\nDB_PASS = 'root'\n#init database\nconn = mdb.connect(DB_HOST, DB_USER, DB_PASS, 'pybbs-springboot', charset='utf8')\nconn.autocommit(False)\ncurr = conn.cursor()\n\ncount=0\nhow_many=0\n\nbase_url='http://www.wechat-cloud.com'\nurl=base_url+\"/index.php?s=/home/article/ajax_get_list.html&category_id={category_id}&page={page}&size={size}\"\n\nuser_agents = [\n    'Mozilla/5.0 (Windows; U; Windows NT 5.1; it; rv:1.8.1.11) Gecko/20071127 Firefox/2.0.0.11',\n    'Opera/9.25 (Windows NT 5.1; U; en)',\n    'Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR 1.1.4322; .NET CLR 2.0.50727)',\n    'Mozilla/5.0 (compatible; Konqueror/3.5; Linux) KHTML/3.5.5 (like Gecko) (Kubuntu)',\n    'Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.0.12) Gecko/20070731 Ubuntu/dapper-security Firefox/1.5.0.12',\n    'Lynx/2.8.5rel.1 libwww-FM/2.14 SSL-MM/1.4.1 GNUTLS/1.2.9',\n    \"Mozilla/5.0 (X11; Linux i686) AppleWebKit/535.7 (KHTML, like Gecko) Ubuntu/11.04 Chromium/16.0.912.77 Chrome/16.0.912.77 Safari/535.7\",\n    \"Mozilla/5.0 (X11; Ubuntu; Linux i686; rv:10.0) Gecko/20100101 Firefox/10.0 \",\n]\n\ndef fake_header():\n    agent=random.choice(user_agents)\n    cookie='PHPSESSID=p5mokvec7ct1gqe9efcnth9d44; Hm_lvt_c364957e96174b029f292041f7d822b7=1487492811,1487556626; Hm_lpvt_c364957e96174b029f292041f7d822b7=1487564069'\n    req_header = {\n        'Accept':'application/json, text/javascript, */*; q=0.01',\n        #'Accept-Encoding':'gzip, deflate, sdch',\n        'Accept-Language':'zh-CN,zh;q=0.8',\n        'Cache-Control':'max-age=0',\n        'Connection':'keep-alive',\n        'Host':'www.wechat-cloud.com',\n        #'Cookie':cookie,\n        'Referer':'http://www.wechat-cloud.com/index.php?s=/home/index/index.html',\n        'Upgrade-Insecure-Requests':'1',\n        'User-Agent':agent,\n        'X-Requested-With':'XMLHttpRequest',\n    }\n    return req_header\n\ndef gethtml(url):\n    try:\n        header=fake_header()\n        req = urllib2.Request(url,headers=header)\n        response = urllib2.urlopen(req, None,15)\n        html = response.read()\n        return html\n    except Exception as e:\n        print \"e\",e\n    return None\n\n\ndef get_img_data(url):\n    try:\n        #添加头信息，模仿浏览器抓取网页，对付返回403禁止访问的问题\n        req = urllib2.Request(url)\n        response = urllib2.urlopen(req, None,15)\n        dataimg = response.read()\n        return dataimg\n    except Exception as e:\n        print \"image data\",e\n    return None\n\ndef makeDateFolder(par,classify):\n    try:\n        if os.path.isdir(par):\n            newFolderName=par + '//' + str(classify)+ \"//\" +GetDateString() \n            if not os.path.isdir( newFolderName ):\n                os.makedirs( newFolderName )\n            return newFolderName\n        else:\n            return par \n    except Exception,e:\n        print \"kk\",e\n    return par  \n\ndef map_folder(what):\n    return what\n\ndef GetDateString():\n    when=time.strftime('%Y-%m-%d',time.localtime(time.time()))\n    foldername = str(when)\n    return foldername \n\ndef get_extension(name):  \n    where=name.rfind('.')\n    if where!=-1:\n        return name[where:len(name)]\n    return \"#\"\n\ndef download_img(url,what):\n    try:\n        #print url\n        extention=get_extension(url)\n        dataimg=get_img_data(url)\n        name=str(uuid.uuid1()).replace('-','')+\"-www.weixinapphome.com\"\n        #print \"name\",name\n        classfiy_folder=map_folder(what)\n        top=\"E://wxapp_store\"\n        filename  =makeDateFolder(top,classfiy_folder)+\"//\"+name+extention\n        try:\n            if not os.path.exists(filename):\n                file_object = open(filename,'w+b')\n                file_object.write(dataimg)\n                file_object.close()\n                return classfiy_folder+\"/\"+GetDateString()+\"/\"+name+extention\n            else:\n                print \"file exist\"\n                return None\n        except IOError,e1:\n            print \"e1=\",e1\n            #pass\n        return None #如果没有下载下来就利用原来网站的链接\n    except Exception,e:\n        print \"problem\",e\n        pass\n    return None\n    \n    \ndef work():\n    page=0\n    global how_many\n    while 1:\n        try:\n            page=page+1\n            begin_url=url.format(category_id=0, page=page,size=12).encode('utf-8')\n            html=gethtml(begin_url)\n            if html is not None:\n                #print html\n                json_results=json.loads(html)\n                is_end=json_results['isEnd']\n                if str(is_end)==\"True\":\n                    break\n                results=json_results['list']\n                for result in results:\n                    href=result['href']\n                    detail_url=base_url+href\n                    #print detail_url\n                    detail_html=gethtml(detail_url)\n                    if detail_html is not None:\n                        soup = BeautifulSoup(detail_html)\n                        icon_url=base_url+soup.find('div',{'class':'icon fl'}).find('img').get('src')\n                        name=soup.find('div',{'class':'cont fl'}).find('h2').text\n                        classify=soup.find('div',{'class':'tab'}).find('span').text\n                        classify=str(classify).replace(\"分类: \",\"\")\n                        #print classify\n                        barcode_path=base_url+soup.find('div',{'id':'install-code'}).find('img').get('src')\n                        view_num=soup.find('span',{'class':'views'}).text\n                        #view_num=filter(str.isalnum,str(view_num))\n                        pic_path=base_url+soup.find('div',{'class':'img-box'}).find('img').get('src')\n                        temp = time.time()\n                        x = time.localtime(float(temp))\n                        acq_time = time.strftime(\"%Y-%m-%d %H:%M:%S\",x) # get time now\n                        curr.execute('select id from pybbs_wxapp_store where `from`=%s',(detail_url))\n                        y= curr.fetchone()\n                        if not y:\n                            y1=download_img(icon_url,\"icon\")\n                            y2=download_img(barcode_path,\"barcode\")\n                            y3=download_img(pic_path,\"pic\")\n                            if (y1 is not None) and (y2 is not None) and (y3 is not None):\n                                name=name\n                                author=None\n                                classify=classify\n                                describe=None\n                                view_num=view_num\n                                #print view_num\n                                logo=y1\n                                _from=detail_url\n                                barcode=y2\n                                acq_time=acq_time\n                                hot_weight=-9999\n                                pic_uuid=str(uuid.uuid1()).replace('-','')\n                                pic_path=y3\n                                #print name,author,classify,describe,view_num,logo,_from,barcode,acq_time,hot_weight,pic_uuid\n                                curr.execute('INSERT INTO pybbs_wxapp_store(name,author,classify,`describe`,view_num,logo,`from`,barcode,acq_time,hot_weight,pic_path)VALUES(%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s)',(name,author,classify,describe,view_num,logo,_from,barcode,acq_time,hot_weight,pic_path))\n                                curr.execute('select id from pybbs_wxapp_classify where `classify_name`=%s',(classify))\n                                yx= curr.fetchone()\n                                if not yx:\n                                    describe=None\n                                    temp = time.time()\n                                    x = time.localtime(float(temp))\n                                    record_time = time.strftime(\"%Y-%m-%d %H:%M:%S\",x) # get time now\n                                    curr.execute('INSERT INTO pybbs_wxapp_classify(classify_name,`describe`,record_time)VALUES(%s,%s,%s)',(classify,describe,record_time))\n                                how_many+=1\n                                print \"new comer:\",pic_uuid,\">>\",how_many\n                                if how_many % 10==0:\n                                    conn.commit()\n                conn.commit()\n        except Exception as e:\n            print \"while error\",e\n\nif __name__ == '__main__':\n    i=3\n    while i>0:\n        work()\n        i=i-1\n其中有些参数请改成自己的，比如说数据库密码了，图片存储到哪个盘，数据库表格自己建立，因为这些实在太简单了，所以没啥可以唠叨的。\n\n                ", "mainLikeNum": ["2 "], "mainBookmarkNum": "1"}