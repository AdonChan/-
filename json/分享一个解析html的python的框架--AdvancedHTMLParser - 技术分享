{"title": "分享一个解析html的python的框架--AdvancedHTMLParser - 技术分享 ", "index": "html,python", "content": "最近在研究python爬虫,这方面的库也不少,但大多都用不顺手.今天在github上搜索时发现了这个框架,其用法很简单,和javascript操作DOM几乎一样,刚使用了下,感觉很好用,框架也不大,不算文档70多k,安装也很方便.所以就分享给大家.地址:https://github.com/kata198/AdvancedHTMLParser下载后,运行 python setup.py install使用列子\n#coding=utf-8\nimport AdvancedHTMLParser\nht = '''\n<!DOCTYPE HTML>\n<html>\n<head>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=gb2312\">\n<title>网页标题</title>\n</head>\n<body>\n<div class=\"link\">\n    <a class=\"sf\" href=\"http://segmentfault.com/\" >Segmentfault</a><br>\n    <a href=\"http://segmentfault.com/u/missyou\" >我的主页</a>\n</div>\n<div  id=\"testid\" >div#testid</div>\n<p>测试段落一</p>\n<p>测试段落二</p>\n<p>测试段落三</p>\n<p>测试段落四</p>\n</body>\n</html>\n'''\nparser = AdvancedHTMLParser.AdvancedHTMLParser()\nparser.parseStr(ht.decode('gbk').encode('utf-8'))\n#我在windows下写的,所以这里转换了编码\n#网页编码\nprint parser.encoding\n#根据标签名获取元素\nitems = parser.getElementsByTagName(\"p\")\nfor item in items:\n    print item.innerHTML\n#根据类名获取\nitems = parser.getElementsByClassName(\"link\")\n#获取a连接的文本和链接\nprint items[0].getElementsByClassName(\"sf\")[0].innerHTML\nprint items[0].getElementsByClassName(\"sf\")[0].getAttribute(\"href\")\n#根据id获取\nprint parser.getElementById(\"testid\").innerHTML\n输出如下:utf-8测试段落一测试段落二测试段落三测试段落四Segmentfaulthttp://segmentfault.com/div#testid\n是不是很方便呢.本文同步发表在CSDN,转载请注明作者!\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "1"}