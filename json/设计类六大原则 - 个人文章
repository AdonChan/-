{"title": "设计类六大原则 - 个人文章 ", "index": "python", "content": "对于OOP编程语言来说，设计一个好的借口是至关重要的，如何写一个优秀的借口呢？一、单一原则：这个原则主要针对于职责问题。即一个类只负责一项职责二、里氏替换原则：面向对象三大特性，封装、继承、多态。那么里氏替换原则则为良好的继承定义了一个原则三、依赖倒置原则：高级模块不应该依赖于低级模块。两者都应该依赖于抽象。抽象不应该依赖于细节。细节应该依赖于抽象四、接口隔离原则：接口分为两种。类接口、实例接口。类接口就是定义的类，实例接口是实例化的对象，实例接口不依赖于不需要的接口，而是依赖建立于最小的家口上五、迪米特发原则：迪米特发原则对类的耦合提出了明确要求六、开闭原则：对扩展开放，对修改关闭。开闭原则是最基础的原则，如果开闭原则是一个抽象类那么上边五大原则的是具体实现的对象。那么就是说都要遵循开闭原则基础上实现其他原则。是重中之重。\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "0"}