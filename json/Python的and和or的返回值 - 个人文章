{"title": "Python的and和or的返回值 - 个人文章 ", "index": "python", "content": "一直以来，我以为python中and和or的返回值是True或False。\n看 《Dive into Python》这本书时，发现他们并不返回布尔值，而是返回他们实际进行比较的值之一。\nand\n根据自己已经掌握的知识，设想下如下代码的运算结果：\n'a' and 'b'\n'' and 'b'\n'a' and 'b' and 'c'\n根据python的定义，在没有看这部分内容之前，我认为答案分别为True，False，True。其实运行之后才发现应该是这样的：\nPython 2.7.13+ (default, Jul 19 2017, 18:15:03)\n[GCC 6.4.0 20170704] on linux2\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> 'a' and 'b'\n'b'\n>>> '' and 'b'\n''\n>>> 'a' and 'b' and 'c'\n'c'\n>>>\n原因如下：\n\nand运算时，从左到右演算表达式的值。0, '', [], {}, None在布尔表达式环境下为假，其他任何东西都为真\n如果and运算中，所有的值都为真，那么and返回最后一个值。如：'a' and 'b'\n\n如果某个值为假，那么and立即返回该假值（短路运算），如：'' and 'b'\n\n\nor\n类似的。or的规则如下：\n\n从左到右演算\n如果有一个值为真，立即返回该值\n所有所有的值都为假，返回最后一个假值\n\n本文作者： Yarving Liu本文链接： http://yarving.historytale.co...版权声明： 本博客所有文章除特别声明外，均采用 CC BY-NC-SA 4.0 许可协议。转载请注明出处！\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "1"}