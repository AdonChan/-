{"title": "关于 Django 开发的 11 件事 - yexiaoxiaobai ", "index": "redis,celery,supervisor,python,django", "content": " \n\n\n  本文原文是 11 Things I Wish I Knew About Django Development Before I Started My Company\n\n\n\n\n以正确的目录结构开始：开始，我看一些不同的开源项目作为指导（ 1 和 2），读一些博客，但是依然没有一个最佳的方式来开始一个 Django 项目。这是我当前使用的：\n\n\n\napps 目录存储所有你的定制 django app，vendor   目录存储了你不想使用 pip 或 easy_install   安装（或者是不能安装）的 app。bin 目录存储了所有的 bash 脚本帮助你自动化你的开发。在这里的脚本有，部署到预发布&生产服务器，清理目录，压缩 assets，备份数据库，start/stop celery（在本地），等等。config 目录存储了所有数据库，webservers，munin，celery，supervisor 等等的配置文件。media 目录存储了所有静态 assets，比如 javascript， css， images， fonts 等等。 template 目录存储了所有使得你的站点更漂亮的 html 模板。最后，static 目录是你为了放进生产环境压缩了的 assets。我甚至为你在 github 上创建了一个模板，去给它加❤吧。\n\n异步任务和定时任务（不需要使用 unix crontab）使用 Celery：开发的头两个星期，你可能不需要把一些事情推送到异步进程，但是当你的非技术合作伙伴开始问网站为什么挂掉了，就是时候使用 celery 了（如果你想要更轻量的解决方案，有另外的选项）。任何的不需要同步的调用都可以放进队列，并最终被一个 celery worker 消费。我推荐使用 redis 作为 celery 后端（看下面） - 不要浪费你的时间使用 RabbitMQ，除非你有一个更好的原因。我使用 celery 做所有的排序任务，从发送邮件到从 Facebook API 拉取数据。使用 celery 的另一个兴趣点是你可以设置周期性的任务来作为一个定时任务。当我第一次开始开发 Math 和 Pencil 的时候，我使用 UNIX crontab ，但是已经把所有事情移植进了 celery。\n\n使用 Gunicorn 代替你 webserver 的 Apache： 我知道 -  Apache 是经过实战检验的（加上它在世界范围内是最受欢迎的），但是两年前，当我不知道的时候，就已经是非常复杂的设置了。我仅仅想让网站运行并忘记我代码中的打印语句 - 哎哟 - 就让我的网站出现了 500。Apache 有大量的配置设置需要时间去弄懂。Gunicorn 是非常简单的，并且能很好的工作。大量的网站大规模使用它，因此如果你仅仅创建下一个 Instagram，你会明白你的服务器不会让你失败。\n\n\n  更新：假设 NGINX 是管理所有的请求和服务静态内容\n\n\n\n不要害怕使用 MongoDB 作为你的主要数据存储：\n使用命名的 URLs，reverse，和 url template tag\n设置正确的 settings.py 文件\n使用 supervisor 做进程监控\n挑选正确的  AJAX/JSON 方法\n使用 Redis - 因为它最终将变成你最好的朋友\n使用 munin 和 statds 做进程监控\n使用 jammit 压缩静态的 asset\n\n\n                ", "mainLikeNum": ["6 "], "mainBookmarkNum": "13"}