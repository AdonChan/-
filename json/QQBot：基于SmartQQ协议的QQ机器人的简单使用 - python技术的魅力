{"title": "QQBot：基于SmartQQ协议的QQ机器人的简单使用 - python技术的魅力 ", "index": "python", "content": "一、介绍\nQQBot 是一个用 python 实现的、基于腾讯 SmartQQ 协议的简单 QQ 机器人，可运行在 Linux 和 Windows 平台下，所有代码集成在一个 qqbot.py 文件中。\nQQBot 可以实现：监控、收集 QQ 消息自动消息推送聊天机器人通过 QQ 远程控制电脑、智能家电\n二、安装方法\n可用 pip 安装，安装命令：\npip install qqbot\n也可以直接下载 qqbot.py 运行，但需先安装 requests 库。\n三、使用方法\n1. 启动 QQBot在命令行输入： qqbot ，或直接运行qqbot.py： python qqbot.py 。启动过程中会自动弹出二维码图片（Linux下需安装有 gvfs ，否则需要手动打开图片），需要用手机 QQ 客户端扫码并授权登录。启动成功后，会将本次登录信息保存到本地文件中，下次启动时，可以输入： qqbot qq号码，或：python qqbot.py qq号码 ，则会先尝试从本地文件中恢复会话信息（不需要手动扫码），只有恢复不成功或登录信息已过期时才会需要手动扫码登录。\n2. 操作 QQBotQQ 机器人启动后，用另外一个 QQ 向本 QQ 发送消息即可操作 QQBot 。目前提供以下命令：\n1） 列出 好友/群/讨论组:\n    -List buddy/group/discuss\n\n2） 向 好友/群/讨论组 发送消息:\n    -SendTo buddy/group/discuss message\n\n3） 停止 QQBot ：\n    -Stop()\n四、登录 QQ 机器人\nfrom qqbot import QQBot\nimport qqbot\n\n# QQBot 就是一个qq登录的类\nmyqqbot = QQBot()   #实例化一个qq实例\nmyqqbot.Login()  #进行登录，执行这条命令，系统会弹出一个二维码，我们扫码登录\nmyqqbot.pollForever()\n五、 QQ机器人使用\n1.获取好友列表和群组列表\nfrom qqbot import QQBot\nimport qqbot\n\nmyqqbot = QQBot()   #实例化一个qq实例\nmyqqbot.Login('385395438')  # 扫码登录过后会在本地保存一个session信息，加上QQ号即可调用本地session进行登录\n# 1.使用脚本来查看好友和群\nuser_list = myqqbot.List(\"buddy\") # 获得的是所有的好友\nfor user in user_list:\n    print(user)\ngroup_list = myqqbot.List(\"group\") # 获得的是所有的群组\nfor group in group_list:\n    print(group)\n运行：4262139-a682bd21b9f5f799.png\n\n2.给某一个好友发送信息\n# 2.给某一个好友发送信息\nuser = myqqbot.List(\"buddy\", \"LOL\")[0]\nmyqqbot.SendTo(user, \"LOL, 在吗\")\n运行：\n3.给群组发送消息\n# 3.给某一个群组发送信息\ngroup = myqqbot.List(\"group\", \"谷歌中国\")[0]\nmyqqbot.SendTo(group, \"大家好，这是君惜的机器人\")\n# group_list = myqqbot.List(\"group\")\n# for group in group_list:\n#    myqqbot.SendTo(group, \"大家好，这是君惜的机器人\")\n运行：\n4.退出QQ\n# 4.退出QQ\nmyqqbot.Stop()   # 退出qq\n5.自动回复\n# 5.自动回复\n# 自动回复部分我们需要调用一个监听的方法\n\n\n@qqbot.QQBotSlot\ndef onQQMessage(bot, contact, member, content):\n    \"\"\"\n    :param bot:  qq对象\n    :param contact: 发信人\n    :param member: 发消息的对象，只对群组有作用\n    :param content: 内容\n    \"\"\"\n    if content == \"-hello\":\n        bot.SendTo(contact, \"你也好啊, /龇牙\")\n    elif \"@ME\" in content and \"签到\" in content:\n        \"\"\"\n            当满足此条件就\n            判断该成员是否已经签到过 调用数据库查看用户的信息 判断条件 签到时间\n            进行签到\n                签到时间 当前时间\n                签到次数 +1\n                签到积分 +2\n            你已经签到多少天，积分多少\n        \"\"\"\n        bot.SendTo(contact, \"/菜刀 咋地了？\")\n    elif \"@ME\" in content and \"兑换\" in content:\n        \"\"\"\n            返回资源列表\n        \"\"\"\n        bot.SendTo(contact,\"/菜刀 咋地了？\")\n\nif __name__ == \"__main__\":\n    qqbot.RunBot()\n运行：\n\n                ", "mainLikeNum": ["1 "], "mainBookmarkNum": "2"}