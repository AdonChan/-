{"title": "Python更快的解析JSON大文件 - 捕蛇者说 ", "index": "大文件,json,cjson,python", "content": "提出问题\n今天用python的simplejson库解析一个 >200MB 的JSON文件，发现一次decode/encode都得要 >10s，这个在我开来，实在太慢了，有没有更快的库了？\n先给出我的简单测试结果\n\njson大小：245MB\n测试方法：read文件内容，然后一次decode, 一次encode\n\n\n\n解释器\nsimplejson\njson\nujson\n\n\n\npypy\n40s多\n10s\n无\n\n\ncpython\n12s多\n17s多\n10s多\n\n\n\n不成熟的结论： pypy+json最快\n方法一：pypy+json\npython自带的JSON库是用纯python代码实现的，而pypy对纯python代码的加速效果比较好。至于为什么，大家可以去google吧，很多文章解释的很好。\n方法二：UltraJson\n\n我首先想到的用C库来做JSON的解析，原因你懂的，而C语言有个JSON库叫CJSON，于是用python+cjson在google里找到了UltraJson\nUltraJson是作者用C语言实现的JSON库，实际测试的效果是，整个encode的效率提升了2倍多。\n\n使用方法：\n\n安装：pip instal ujson\n    >>> import ujson\n    >>> ujson.dumps([{\"key\": \"value\"}, 81, True])\n    '[{\"key\":\"value\"},81,true]'\n    >>> ujson.loads(\"\"\"[{\"key\": \"value\"}, 81, true]\"\"\")\n    [{u'key': u'value'}, 81, True]\n    \n\n并不是所有情况下都适合\n根据下面的BenchMark，在double数组的情况下，yajl的encode速度是比UltraJson的，所以，如果你的JSON文件较小的话，其实无所谓哪个库，如果是像我这样的大JSON文件，可以根据下面的表选择合适的JSON库。\nBenchMark\n下面是作者给出的benchmark：表格中的数字是每秒的调用次数，也就是说，数字越大，表示效率越高。\nVersions:\n\nCPython 2.7.6 (default, Jun 22 2015, 17:58:13) [GCC 4.8.2]\nblist     : 1.3.6\nsimplejson: 3.8.1\nujson     : 1.34 (0c52200eb4e2d97e548a765d5f089858c41967b0)\nyajl      : 0.3.5\n\n\n\n \nujson\nyajl\nsimplejson\njson\n\n\n\nArray with 256 doubles\n \n \n \n \n\n\nencode\n3508.19\n5742.00\n3232.38\n3309.09\n\n\ndecode\n25103.37\n11257.83\n11696.26\n11871.04\n\n\nArray with 256 UTF-8 strings\n \n \n \n \n\n\nencode\n3189.71\n2717.14\n2006.38\n2961.72\n\n\ndecode\n1354.94\n630.54\n356.35\n344.05\n\n\nArray with 256 strings\n \n \n \n \n\n\nencode\n18127.47\n12537.39\n12541.23\n20001.00\n\n\ndecode\n23264.70\n12788.85\n25427.88\n9352.36\n\n\nMedium complex object\n \n \n \n \n\n\nencode\n10519.38\n5021.29\n3686.86\n4643.47\n\n\ndecode\n9676.53\n5326.79\n8515.77\n3017.30\n\n\nArray with 256 True values\n \n \n \n \n\n\nencode\n105998.03\n102067.28\n44758.51\n60424.80\n\n\ndecode\n163869.96\n78341.57\n110859.36\n115013.90\n\n\nArray with 256 dict{string, int} pairs\n \n \n \n \n\n\nencode\n13471.32\n12109.09\n3876.40\n8833.92\n\n\ndecode\n16890.63\n8946.07\n12218.55\n3350.72\n\n\nDict with 256 arrays with 256 dict{string, int} pairs\n \n \n \n \n\n\nencode\n50.25\n46.45\n13.82\n29.28\n\n\ndecode\n33.27\n22.10\n27.91\n10.43\n\n\nDict with 256 arrays with 256 dict{string, int} pairs, outputting sorted keys\n \n \n \n \n\n\nencode\n27.19\n \n7.75\n2.39\n\n\nComplex object\n \n \n \n \n\n\nencode\n577.98\n \n387.81\n470.02\n\n\ndecode\n496.73\n234.44\n151.00\n145.16\n\n\n\nVersions:\n\nCPython 3.4.3 (default, Oct 14 2015, 20:28:29) [GCC 4.8.4]\nblist     : 1.3.6\nsimplejson: 3.8.1\nujson     : 1.34 (0c52200eb4e2d97e548a765d5f089858c41967b0)\nyajl      : 0.3.5\n\n\n\n \nujson\nyajl\nsimplejson\njson\n\n\n\nArray with 256 doubles\n \n \n \n \n\n\nencode\n3477.15\n5732.24\n3016.76\n3071.99\n\n\ndecode\n23625.20\n9731.45\n9501.57\n9901.92\n\n\nArray with 256 UTF-8 strings\n \n \n \n \n\n\nencode\n1995.89\n2151.61\n1771.98\n1817.20\n\n\ndecode\n1425.04\n625.38\n327.14\n305.95\n\n\nArray with 256 strings\n \n \n \n \n\n\nencode\n25461.75\n12188.64\n13054.76\n14429.81\n\n\ndecode\n21981.31\n17014.22\n23869.48\n22483.58\n\n\nMedium complex object\n \n \n \n \n\n\nencode\n10821.46\n4837.04\n3114.04\n4254.46\n\n\ndecode\n7887.77\n5126.67\n4934.60\n6204.97\n\n\nArray with 256 True values\n \n \n \n \n\n\nencode\n100452.86\n94639.42\n46657.63\n60358.63\n\n\ndecode\n148312.69\n75485.90\n88434.91\n116395.51\n\n\nArray with 256 dict{string, int} pairs\n \n \n \n \n\n\nencode\n11698.13\n8886.96\n3043.69\n6302.35\n\n\ndecode\n10686.40\n7061.77\n5646.80\n7702.29\n\n\nDict with 256 arrays with 256 dict{string, int} pairs\n \n \n \n \n\n\nencode\n44.26\n34.43\n10.40\n21.97\n\n\ndecode\n28.46\n23.95\n18.70\n22.83\n\n\nDict with 256 arrays with 256 dict{string, int} pairs, outputting sorted keys\n \n \n \n \n\n\nencode\n33.60\n \n6.94\n22.34\n\n\nComplex object\n \n \n \n \n\n\nencode\n432.30\n \n351.47\n379.34\n\n\ndecode\n434.40\n221.97\n149.57\n147.79\n\n\n\n请移步我的博客了解更多\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "5"}