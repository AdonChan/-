{"title": "50 行代码，实现中英文翻译 - Python 学习之路 ", "index": "python", "content": "阅读文本大概需要 4.2 分钟。\n现在的时代，越来越看重英语能力。如果你懂得英语，你会接触到更大的世界，你会发现更多的信息。尤其是对于程序员来说，好的编程资料都是来自英文文档。那些国内的翻译的版本，有很多内容跟原版相差的太多，甚至牛头不对马嘴。\n虽然现在有非常多的翻译软件，但通过自己动手写个 python 小程序，是非常的有成就感。甚至你借助今天的代码，也可以自己开发个小型翻译软件。\n有道词典接口\n今天的翻译程序是借用有道翻译的接口来实现的。程序的逻辑很简单，就是利用有道翻译 ，把需要翻译的内容做为参数，传到相应的 url 里。然后通过有道的服务器返回一个 json 数据，我们就可以获得相应的翻译结果。\n程序调用结果\n启动程序在终端输入你想要翻译的内容，可以中译英，也可以英译中。比如输入「Koc 最帅！」。\n\n相应的输入英文也可以翻译成中文。\n\n程序代码\n程序代码很简单，在相应的代码里我都有注释。\nimport json\n\nimport requests\n\n# 翻译函数，word 需要翻译的内容\ndef translate(word):\n    # 有道词典 api\n    url = 'http://fanyi.youdao.com/translate?smartresult=dict&smartresult=rule&smartresult=ugc&sessionFrom=null'\n    # 传输的参数，其中 i 为需要翻译的内容\n    key = {\n        'type': \"AUTO\",\n        'i': word,\n        \"doctype\": \"json\",\n        \"version\": \"2.1\",\n        \"keyfrom\": \"fanyi.web\",\n        \"ue\": \"UTF-8\",\n        \"action\": \"FY_BY_CLICKBUTTON\",\n        \"typoResult\": \"true\"\n    }\n    # key 这个字典为发送给有道词典服务器的内容\n    response = requests.post(url, data=key)\n    # 判断服务器是否相应成功\n    if response.status_code == 200:\n        # 然后相应的结果\n        return response.text\n    else:\n        print(\"有道词典调用失败\")\n        # 相应失败就返回空\n        return None\n\ndef get_reuslt(repsonse):\n    # 通过 json.loads 把返回的结果加载成 json 格式\n    result = json.loads(repsonse)\n    print (\"输入的词为：%s\" % result['translateResult'][0][0]['src'])\n    print (\"翻译结果为：%s\" % result['translateResult'][0][0]['tgt'])\n\ndef main():\n    print(\"本程序调用有道词典的API进行翻译，可达到以下效果：\")\n    print(\"外文-->中文\")\n    print(\"中文-->英文\")\n    word = input('请输入你想要翻译的词或句：')\n    list_trans = translate(word)\n    get_reuslt(list_trans)\n\nif __name__ == '__main__':\n    main()\n本文首发于公众号「痴海」，公众号回复「1024」，免费领取 2018 最新 python 教程。\n\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "1"}