{"title": "opencv python 图像金字塔 - 个人文章 ", "index": "opencv-python,opencv,python", "content": "Image Pyramids \n图像金字塔\n通常，我们曾经使用恒定大小的图像.但在某些情况下，我们需要使用不同分辨率的（相同）图像.例如，在搜索图像中的某些内容时，如脸部，我们不确定该对象在所述图像中的大小.\n具有不同分辨率的图像被称为图像金字塔（因为当它们保持在堆叠中，底部具有最高分辨率图像而顶部具有最低分辨率图像时，它看起来像金字塔）.\n图像金字塔有两种:\n\n高斯金字塔和\n拉普拉斯金字塔\n\n高斯金字塔的顶部是通过将底部图像中的连续的行和列去除得到的.顶部图像中的每个像素值等于下一层图像中 5 个像素的高斯加权平均值.这样操作一次一个 MxN 的图像就变成了一个 M/2xN/2 的图像。所以这幅图像的面积就变为原来图像面积的四分之一.这被称为an Octave（一个八度）。连续进行这样的操作就会得到一个分辨率不断下降的图像金字塔.\n函数cv2.pyrDown()从一个高分辨率大尺寸的图像向上构建一个金子塔 （尺寸变小，分辨率降低）.代码：\nimport cv2\n\nimg = cv2.imread('img.jpg')\n\nlower_reso = cv2.pyrDown(img)\n\ncv2.imshow('src',img)\ncv2.imshow('HigherReso',lower_reso)\n\ncv2.waitKey()\n\n继续使用函数cv2.pyrUp()从一个低分辨率小尺寸的图像向下构建一个金子塔（尺寸变大，但分辨率不会增加）代码：\nimport cv2\n\nimg = cv2.imread('img.jpg')\n\nlower_reso = cv2.pyrDown(img)\nhigher_reso2 = cv2.pyrUp(lower_reso)\n\ncv2.imshow('show',higher_reso2)\n\ncv2.waitKey()\n\nNOTE：当用 cv2.pyrDown()，图像的分辨率就会降低，信息就会被丢失.如果先cv2.pyrDown()产生的中间图像再使用函数cv2.pyrUp()得到图像，与原图像相比分辨率差了很多.可以修改代码：\nimport cv2\n\nimg = cv2.imread('img.jpg')\n\nhigher_reso2 = cv2.pyrUp(img)\nlower_reso = cv2.pyrDown(higher_reso2)\n\n\ncv2.imshow('show',lower_reso)\n\ncv2.waitKey()\n拉普拉斯金字塔由高斯金字塔形成，大部分元素都是零，用于图像压缩.代码：\nimport cv2\n\nimg = cv2.imread('img.jpg')\nimg = cv2.Canny(img, 100, 200)\n\nhigher_reso2 = cv2.pyrUp(img)\nlower_reso = cv2.pyrDown(higher_reso2)\n\ncv2.imshow('src',img)\ncv2.imshow('higher_reso2',higher_reso2)\ncv2.imshow('lower_reso',lower_reso)\n\ncv2.waitKey()\n\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "0"}