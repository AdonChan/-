{"title": "2-Python list操作 - Python全栈玩起来 ", "index": "python", "content": "列表的重复\nlist9 = [0]\nprint(list9 * 10)\n列表反转\nprint(list10[::-1]\n增删改查\n增加\n            \nappend()     #非迭代添加\narr1 = [1, 2, 3, 4, 5]\narr1.append([100, 200, 300])\nprint(arr1) #[1, 2, 3, 4, 5, [100, 200, 300]]\n            \nextend(iter) #迭代添加\narr1.extend([100, 200, 300]) \nprint(arr1)  #[1, 2, 3, 4, 5, 100, 200, 300]\n            \narr1.insert(index, obj) #在指定的index下标位置新增元素，不会覆盖原来的元素，原数据的下标向后顺    \n移obj为任意类型\n\n# 切片添加 为迭代添加 在指定位置添加 \narr1[0:0] = [1]   # [1, 1, 2, 3, 4, 5]\narr1[2:2] = [7, 8 , 9]  #[1, 2, 7, 8, 9, 3, 4, 5]\n\n\n删\npop(index) #默认最后位置，返回删除元素\nremove(obj) #移除匹配项\nlist.clear() #清空\n查\nin  not in\nlist.index(obj[,begin,end]) #找不到Error\n# list 没有find方法，而string有\nlist.count()\nlist的一些方法\nlist1.reverse() #反转\nlist1.sort() #排序 参数reverse=False默认\narr1 = [1, 3, 2, 5, 4]\narr1.sort(reverse=True) #改变了arr1\nprint(arr1)    \n拷贝\n\n浅拷贝\n深拷贝 .copy()\n\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "0"}