{"title": "Tytorn - A simple MVC framework based on tornado - 开发小记 ", "index": "rest-api,tornado,python", "content": "Tytorn - A simple MVC framework based on tornado\n一个基于tornado的简单MVC框架\n框架特点\n\n友好的中文注释\n足够轻量，高度可定制\n实现了子域名的配置\n封装了日志记录，postgresql，session等web开发基本功能，让您更专注业务逻辑\n集成了restful api 接口\n实现了postgre sql的异步数据库操作\n更多...\n\n适用者\n正在学习tornado，并尝试用tornado搭建项目的python开发者，虽然官方提供很多demo，但是那些demo都只是作为参考，不能应付实际开发需要。本项目可以直接部署并作为开发的基本框架。\n快速上手\n1.安装tornado\n了解tornado\npip install tornado\n2.克隆本项目\n如果你已经安装了git作为你的版本控制系统,可以执行下面的命令\ngit clone https://github.com/tianyuwu/tytorn.git\n如果没有安装git,可以下载本项目的压缩包\n3.安装项目包依赖\npip install -r requirements.txt\n4.配置数据库连接\n修改config.py目录里的对应项\nDB_HOST = '127.0.0.1'\nDB_PORT = 5432\nDB_DATABASE = 'your database'\nDB_USER = 'tytorn'\nDB_PASSWORD = '123456'\nDB_ASYNC_MAXCONN = 33  # 最大异步连接数\nDB_SYNC_MAXCONN = 10  # 最大同步连接数\n5.运行项目\n在命令行下进入本项目，执行下面的命令\npython server.py\nIt is ok, so easy!\n目录结构\n├── README.md\n├── requirements.txt   //包依赖\n├── handlers           //处理网站请求的handler模块\n│   ├── api              //rest api 模块\n│   ├── main.py          //主域名下的handlers\n│   ├── admin.py         //后台模块\n│   ├── ...\n├── models         // 模型\n├── libs            //常用第三方库\n├── static          //静态资源\n├── utils           //项目底层库\n│   ├── log.py           //日志操作类\n│   ├── postgredb        //数据库操作类\n│   ├── session.py       //session操作类\n│   ├── tools.py         //工具库\n│   ├── httpresponse.py  //rest api响应数据规范\n├── server.py       //入口文件\n├── urls.py         //路由配置文件\n├── config.py         //项目配置文件\n└── app.py          //application实例\nCredit\n项目综合了guthub其他同仁的一些代码然后加以改进完成的，在此鸣谢比如session模块是采用的REDIS -TORNADO -SESSIONrestful方案是采用的tornado-rest\n项目源码\ntytorn-A simple MVC framework based on tornado\n代码写的不够好，欢迎提供建议ps:本文属于作者原创，转载请注明出处，谢谢！\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "4"}