{"title": "Django搭建个人博客：教程的开发环境 - Django搭建个人博客 ", "index": "django,python", "content": "教程的开发环境\n本教程的开发环境为：\n\nWin 10（64位）\nPython 3.7.0\nDjango 2.1\n\n为了避免开发环境不同而导致的错误，建议读者使用相同的版本。\n安装Python\npython的安装为比较简单，首先找到Python官方网站，选择python3.7的windows版本，下载并安装。\n安装时注意勾选添加python到环境变量中。如果没有或者漏掉这一步，请安装完毕后自行添加。\n若实在不知道怎么弄的，看这篇文章：\nwindows上安装python3教程以及环境变量配置\n安装完成后打开命令行，输入python -V，系统打印出python的版本号，说明安装成功了：\nC:\\Users\\dusai> python -V\nPython 3.7.0\n配置虚拟环境\n虚拟环境（virtualenv，或venv ）是 Python 多版本管理的利器，可以使每个项目环境与其他项目独立开来，保持环境的干净，解决包冲突问题。你可以将虚拟环境理解为一个隔绝的小系统。\n从Python3.3版本开始就自带了虚拟环境，不需要安装，配置一下就可以用了。\n新建一个文件夹，教程中为django_project。进入此文件夹：\nE:\\>cd django_project\nE:\\django_project>\n输入配置venv的命令，其中的env为虚拟环境的放置目录：\nE:\\django_project> python -m venv env  \n创建完成后，输入env\\Scripts\\activate.bat，即可进入虚拟环境：\nE:\\django_project> env\\Scripts\\activate.bat\n(env) E:\\django_project>\n盘符前有(env)标识说明进入venv成功。\n安装Django\n在虚拟环境下，输入命令pip install django==2.1：\n(env) E:\\django_project> pip install django==2.1\n\nCollecting django==2.1\n  Using cached \n  ...\n  ...\nSuccessfully installed django-2.1\n\n(env) E:\\django_project>\n通过指令pip install django==2.1来安装和教程相同版本的Django。\n系统打印出以上文字表示Django安装成功了。\n创建Django项目\n还是在虚拟环境下，在django_project文件夹中创建Django项目：\n(env) E:\\django_project>django-admin startproject my_blog\n查看django_project文件夹，发现多了my_blog文件夹，其结构应该是这样：\nmy_blog\n│  db.sqlite3\n│  manage.py\n│\n└─my_blog\n    │  settings.py\n    │  urls.py\n    │  wsgi.py\n    └─ __init__.py\n这就是我们刚创建出来的项目了。\n注意Python3.7和Django<=1.11是不兼容的。如果报错请尝试安装新版本的Django，或者回退Python<=3.6版本。\n运行Django服务器\n非常幸运，Django自带一个轻量的Web开发服务器，也被叫做“runserver”。\n开发服务器是为了让你快速开发Web程序，通过它可以避开配置生产环境的服务器的繁琐环节。\n开发服务器会自动的检测代码的改变，并且自动加载它，因此在修改代码后不需要手动去重启服务器，非常的方便。\n要运行这个django服务器，首先要进入my_blog文件夹，即含有manage.py文件的那个：\n(env) E:\\django_project>cd my_blog\n(env) E:\\django_project\\my_blog>\n输入命令python manage.py runserver：\n(env) E:\\django_project\\my_blog>python manage.py runserver\nPerforming system checks...\n\nSystem check identified no issues (0 silenced).\n\nYou have 15 unapplied migration(s). Your project may not work properly until you apply the migrations for app(s): admin, auth, contenttypes, sessions.\nRun 'python manage.py migrate' to apply them.\nAugust 20, 2018 - 17:32:34\nDjango version 2.1, using settings 'my_blog.settings'\nStarting development server at http://127.0.0.1:8000/\nQuit the server with CTRL-BREAK.\n系统打印出这些信息，说明服务器启动成功了，打开chrome浏览器，输入http://127.0.0.1:8000/，即倒数第2排信息提示我们的服务器地址。看到下面的界面：\n\n恭喜你，小火箭起飞，django运行起来了！\n代码编辑器的选择\ndjango运行起来后，我们还需要一款代码编辑器或者集成开发环境（IDE）来编辑python文件，以达到开发需求。\n市面上有很多Python的代码编辑器或者集成开发环境可以选择。\n教程使用了代码编辑器Sublime Text 3。\n进入Sublime Text 3官网，下载对应版本的安装文件安装即可使用了。\n当然你也可以根据喜好选择其他的编辑器或者开发环境：\n\n10大Python集成开发环境和代码编辑器（指南）\n写python程序什么编辑器最好用？\n\n总结\n经过以上一番折腾，总算是把趁手的工具都准备齐了。\n准备好迎接正式的挑战吧。\n\n有疑问请留言，我会尽快回复。\n或Email私信我：dusaiphoto@foxmail.com\n项目完整代码：Django_blog_tutorial\n\n\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "0"}