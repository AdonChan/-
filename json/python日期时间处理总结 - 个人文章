{"title": "python日期时间处理总结 - 个人文章 ", "index": "datetime,python", "content": "用了一段时间的django开发web项目，也是第一次用python来开发项目，所有有许多相关的知识点需要总结，本文所介绍的python的日期时间处理就是最近用到的，希望对各位有所帮助，也同时作为自己的笔记储存。\nPython 提供了time、 calendar、datetime 等模块用于处理日期和时间，较为常用的还是datetime模块。\n时间间隔是以秒为单位的浮点小数。\n每个时间戳都以自从1970年1月1日午夜（历元）经过了多长时间来表示。\npython中时间日期格式化符号：\n\n%y 两位数的年份表示（00-99）\n%Y 四位数的年份表示（000-9999）\n%m 月份（01-12）\n%d 月内中的一天（0-31）\n%H 24小时制小时数（0-23）\n%I 12小时制小时数（01-12）\n%M 分钟数（00=59）\n%S 秒（00-59）\n%a 本地简化星期名称\n%A 本地完整星期名称\n%b 本地简化的月份名称\n%B 本地完整的月份名称\n%c 本地相应的日期表示和时间表示\n%j 年内的一天（001-366）\n%p 本地A.M.或P.M.的等价符\n%U 一年中的星期数（00-53）星期天为星期的开始\n%w 星期（0-6），星期天为星期的开始\n%W 一年中的星期数（00-53）星期一为星期的开始\n%x 本地相应的日期表示\n%X 本地相应的时间表示\n%Z 当前时区的名称\n%% %号本身\n\ncalendar\n获取年历\n# 返回一个多行字符串格式的year年年历，3个月一行，间隔距离为c\ncalendar.calendar(2017)\n\n获取日历\n# 获取2017年11月日历\n>>> print calendar.month(2017, 11)\n   November 2017\nMo Tu We Th Fr Sa Su\n       1  2  3  4  5\n 6  7  8  9 10 11 12\n13 14 15 16 17 18 19\n20 21 22 23 24 25 26\n27 28 29 30\n\n获取一周一行的月日历\n# 获取2017年11月周日历集合\n>>> print calendar.monthcalendar(2017,11)\n[[0, 0, 1, 2, 3, 4, 5], [6, 7, 8, 9, 10, 11, 12], [13, 14, 15, 16, 17, 18, 19], [20, 21, 22, 23, 24, 25, 26], [27, 28, 29, 30, 0, 0, 0]]\n\n获取日期为星期几\n# 获取2017年11月11日是星期几(0-6代表星期一到星期日)\n>>> print calendar.weekday(2017,11,11)\n5\n\ndatetime\n获取当前日期时间\n# 获取当前时间(datetime类型)\n>>> print datetime.datetime.now()\n2017-11-11 17:21:56.076882\n# 获取当前日期\n>>> print datetime.datetime.now().date()\n2017-11-11\n>>> print datetime.date.today()\n2017-11-11\n# 获取当前时间的字符串\n>>> print datetime.datetime.now().strftime(\"%Y-%m-%d %H:%M:%S\")\n'2017-11-11 17:21:56'\n\n获取当前日期的后几天/前几天\n# 获取明天\n>>> print datetime.date.today() + datetime.timedelta(days=1)\n2017-11-12\n>>> print datetime.date.today() + datetime.timedelta(1)\n2017-11-12\n# 获取昨天\n>>> print datetime.date.today() - datetime.timedelta(days=1)\n2017-11-10\n>>> print datetime.date.today() - datetime.timedelta(1)\n2017-11-10\n\n\n获取本周/本月最后一天及第一天\n>>> today = datetime.date.today()\n# 获取本周第一天\n>>> print today - datetime.timedelta(today.weekday())\n2017-11-06\n# 获取本周最后一天\n>>> print today + datetime.timedelta(6-today.weekday())\n2017-11-12\n# 获取本月第一天\n>>> print datetime.date(today.year, today.month, 1)\n2017-11-01\n# 获取本月最后一天\n>>> first_day_weekday, last_day_num = calendar.monthrange(today.year, today.month)\n>>> print datetime.date(today.year, today.month, last_day_num)\n2017-11-30\n\n获取当天最小时间/最大时间\n# 获取当天最小时间\n>>> print datetime.datetime.combine(datetime.date.today(), datetime.time.min)\n2017-11-11 00:00:00\n# 获取当天最大时间\n>>> print datetime.datetime.combine(datetime.date.today(), datetime.time.max)\n2017-11-11 23:59:59.999999\n\ntime\n获取当前时间戳\n>>> print time.time()\n1510396655.7\n\n获取本地时间\n>>> print time.localtime(time.time())\ntime.struct_time(tm_year=2017, tm_mon=11, tm_mday=11, tm_hour=18, tm_min=13, tm_sec=57, tm_wday=5, tm_yday=315, tm_isdst=0)\n\n获取格式化时间\n# 格式化成%Y-%m-%d %H:%M:%S形式\n>>> print time.strftime(\"%Y-%m-%d %H:%M:%S\", time.localtime()) \n2017-11-11 18:58:39\n# 格式化成%a %b %d %H:%M:%S %Y形式\n>>> print time.strftime(\"%a %b %d %H:%M:%S %Y\", time.localtime()) \nMon Nov 11 18:58:40 2017\n# 将格式字符串转换为时间戳\n>>> format_time = time.strptime(\"2017-11-11 18:58:39\", \"%Y-%m-%d %H:%M:%S\") \n>>> print time.mktime(format_time)\n1510396712.0\n\n\n\n各个之间格式之间的转换\n\n\ndatetime  <=> date\n# datetime=> date\n>>> print datetime.datetime.now().date()\n2017-11-11\n# date => datetime\n>>> today = datetime.date.today()\n>>> print datetime.datetime.combine(today, datetime.time.min)\n2017-11-11 00:00:00\n\n\ndatetime  <=> timestamp\n# datetime => timestamp\n>>> print time.mktime(datetime.datetime.now().timetuple())\n1510396755.0\n# timestamp => datetime\n>>> print datetime.datetime.fromtimestamp(1510396755.0)\n2017-11-11 18:39:15\n\n\ndatetime  <=> string\n# datetime => string\n>>> print datetime.datetime.now().strftime(\"%Y-%m-%d %H:%M:%S\")\n2017-11-11 18:39:15\n# string => datetime\n>>> print datetime.datetime.strptime(\"2017-11-11 18:39:15\", \"%Y-%m-%d %H:%M:%S\")\n2017-11-11 18:39:15\n\n\ndatetime  <=> timetuple\n# datetime => timetuple\n>>> print datetime.datetime.now().timetuple()\ntime.struct_time(tm_year=2017, tm_mon=11, tm_mday=11, tm_hour=18, tm_min=50, tm_sec=57, tm_wday=5, tm_yday=315, tm_isdst=0)\n# timetuple => datetime\n>>> time_tuple = datetime.datetime.now().timetuple()\n>>> print datetime.datetime.fromtimestamp(time.mktime(time_tuple))\n2017-11-11 18:50:35\n\n\n\n\n\n                ", "mainLikeNum": ["2 "], "mainBookmarkNum": "3"}