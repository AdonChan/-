{"title": " 【Leetcode】82. 删除排序链表中的重复元素 II - LeetCode题解 ", "index": "面试,数据结构,python,java", "content": "题目\n给定一个排序链表，删除所有含有重复数字的节点，只保留原始链表中 没有重复出现 的数字。\n示例 1:\n输入: 1->2->3->3->4->4->5\n输出: 1->2->5\n示例 2:\n输入: 1->1->1->2->3\n输出: 2->3\n题解\n在所有题目中，我觉得链表题目是最简单的。具体画图模拟一道题就可以了。\n\n这时候cur看到和下一个节点重复，直接跳过直到和下一个节点不一样\n\n这个时候执行pre.next = cur.next;\n\n这个时候不存在重复的，继续走就好了直到cur到末尾\n\njava\npublic class Solution {\n    public ListNode deleteDuplicates(ListNode head) {\n        if (head == null) return null;\n        ListNode fakeHead = new ListNode(0);\n        fakeHead.next = head;\n        ListNode pre = fakeHead;\n        ListNode cur = head;\n        while (cur != null) {\n            while (cur.next != null && cur.val == cur.next.val) {\n                cur = cur.next;\n            }\n            if (pre.next == cur) {\n                pre = pre.next;\n            } else {\n                pre.next = cur.next;\n            }\n            cur = cur.next;\n        }\n        return fakeHead.next;\n    }\n}\npython\n# Definition for singly-linked list.\n# class ListNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.next = None\n\nclass Solution:\n    def deleteDuplicates(self, head):\n        \"\"\"\n        :type head: ListNode\n        :rtype: ListNode\n        \"\"\"\n        if head is None:\n            return None\n        fakeHead = ListNode(0)\n        fakeHead.next = head\n        pre = fakeHead\n        cur = head\n        while cur is not None:\n            while cur.next is not None and cur.val == cur.next.val:\n                cur = cur.next\n            if pre.next == cur:\n                pre = pre.next\n            else:\n                pre.next = cur.next\n            cur = cur.next\n        return fakeHead.next\n热门文章\n\n【Leetcode】81. 搜索旋转排序数组 II\n【Leetcode】80. 删除排序数组中的重复项 II\n【Leetcode】79.单词搜索\n\n\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "0"}