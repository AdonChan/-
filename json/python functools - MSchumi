{"title": "python functools - MSchumi ", "index": "python", "content": "共6个方法：\npartial\n    固化部分参数\n    如 fun(x1,x2,x3,x4):\n        print x1,x2,x3,x4\n    f=partial(fun,1,2)\n    f(3，4) 输出 1,2,3,4\n    f=partial(fun,x1=1,x2=2)\n    要以命名参数方式调用 f(x3=3,x4=4) 输出 1,2,3,4 f(3,4) 异常\n    可以这样理解 使用partial 对参数赋值后，参数性质取决于赋值方式，不论是位置参数\n    还是命名参数其顺序不变\nreduce\n    和内建方法一样\nupdate_wrapper\n    update_wrapper(wrapper,wrapped,assigned = WRAPPER_ASSIGNMENTS,updated\n    =WRAPPER_UPDATES)\n    将wrapped中的WRAPPER_ASSIGNMENTS = ('module', 'name', 'doc')\n    赋值给wrapper\n    将wrapped中的WRAPPER_UPDATES = ('dict',)update 到 wrapper\n\nwraps\n    wraps(wrapped,assigned = WRAPPER_ASSIGNMENTS,updated = WRAPPER_UPDATES)\n    实质是封装了update_wrapper 固化了参数\n    return partial(update_wrapper, wrapped=wrapped,\n                   assigned=assigned, updated=updated)\n\ntotal_ordering\n     这个装饰器在特定的场合有一定用处，它的作用是为实现了至少lt、le、gt、ge其中一个的类加上其他的比较方法，这是一个类装饰器\n\ncmp_to_key\n    Convert a cmp= function into a key= function\n\ncmp(self,other) 有三种返回值\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "1"}