{"title": "[零基础学python]有容乃大的list(1) - 易水禾 ", "index": "零基础,python", "content": "前面的学习中，我们已经知道了两种python的数据类型：int和str。再强调一下对数据类型的理解，这个世界是由数据组成的，数据可能是数字（注意，别搞混了，数字和数据是有区别的），也可能是文字、或者是声音、视频等。在python中（其它高级语言也类似）把状如2,3这样的数字划分为一个类型，把状如“你好”这样的文字划分一个类型，前者是int类型，后者是str类型（这里就不说翻译的名字了，请看官熟悉用英文的名称，对日后编程大有好处，什么好处呢？谁用谁知道！）。\n\n前面还学习了变量，如果某个变量跟一个int类型的数据用线连着（行话是：赋值），那么这个变量我们就把它叫做int类型的变量；有时候还没赋值呢，是准备让这个变量接收int类型的数据，我们也需要将它声明为int类型的变量。不过，在python里面有一样好处，变量不用提前声明，随用随命名。\n\n这一讲中的list类型，也是python的一种数据类型。翻译为：列表。下面的黑字，请看官注意了：\n\nLIST在python中具有非常强大的功能。\n\n定义\n\n在python中，用方括号表示一个list，[ ]\n\n在方括号里面，可以是int，也可以是str类型的数据，甚至也能够是True/False这种布尔值。看下面的例子，特别注意阅读注释。\n\n>>> a=[]        #定义了一个变量a，它是list类型，并且是空的。\n>>> type(a)\n<type 'list'>   #用内置函数type()查看变量a的类型，为list\n>>> bool(a)     #用内置函数bool()看看list类型的变量a的布尔值，因为是空的，所以为False\nFalse\n>>> print a     #打印list类型的变量a\n[]\n\n\n不能总玩空的，来点实的吧。\n\n>>> a=['2',3,'qiwsir.github.io']\n>>> a\n['2', 3, 'qiwsir.github.io']\n>>> type(a)\n<type 'list'>\n>>> bool(a)\nTrue\n>>> print a\n['2', 3, 'qiwsir.github.io']\n\n\n用上述方法，定义一个list类型的变量和数据。\n\n本讲的标题是“有容乃大的list”，就指明了list的一大特点：可以无限大，就是说list里面所能容纳的元素数量无限，当然这是在硬件设备理想的情况下。\n\nlist索引\n\n尚记得在《玩转字符串(3)》中，曾经给字符串进行编号，然后根据编号来获取某个或者某部分字符，这样的过程，就是“索引”(index)。\n\n>>> url = \"qiwsir.github.io\"\n>>> url[2]\n'w'\n>>> url[:4]\n'qiws'\n>>> url[3:9]\n'sir.gi'\n\n\n在list中，也有类似的操作。只不过是以元素为单位，不是以字符为单位进行索引了。看例子就明白了。\n\n>>> a\n['2', 3, 'qiwsir.github.io']\n>>> a[0]    #索引序号也是从0开始\n'2'\n>>> a[1]\n3\n>>> [2]\n[2]\n>>> a[:2]   #跟str中的类似，切片的范围是：包含开始位置，到结束位置之前\n['2', 3]    #不包含结束位置\n>>> a[1:]\n[3, 'qiwsir.github.io']\n>>> a[-1]   #负数编号从右边开始\n'qiwsir.github.io'\n>>> a[-2]\n3\n>>> a[:]\n['2', 3, 'qiwsir.github.io']\n\n\n对list的操作\n\n任何一个行业都有自己的行话，如同古代的强盗，把撤退称之为“扯乎”一样，纵然是一个含义，但是强盗们愿意用他们自己的行业用语，俗称“黑话”。各行各业都如此。这样做的目的我理解有两个，一个是某种保密；另外一个是行外人士显示本行业的门槛，让别人感觉这个行业很高深，从业者有一定水平。\n\n不管怎么，在python和很多高级语言中，都给本来数学角度就是函数的东西，又在不同情况下有不同的称呼，如方法、类等。当然，这种称呼，其实也是为了区分函数的不同功能。\n\n前面在对str进行操作的时候，有一些内置函数，比如s.strip()，这是去掉左右空格的内置函数，也是str的方法。按照一贯制的对称法则，对list也会有一些操作方法。\n\n追加元素\n\n>>> a = [\"good\",\"python\",\"I\"]      \n>>> a\n['good', 'python', 'I']\n>>> a.append(\"like\")        #向list中添加str类型\"like\"\n>>> a\n['good', 'python', 'I', 'like']\n>>> a.append(100)           #向list中添加int类型100\n>>> a\n['good', 'python', 'I', 'like', 100]\n\n\n官方文档这样描述list.append()方法\n\n\n  list.append(x)\n\n\n\n  Add an item to the end of the list; equivalent to a[len(a):] = [x].\n\n\n从以上描述中，以及本部分的标题“追加元素”，是不是能够理解list.append(x)的含义呢？即将新的元素x追加到list的尾部。\n\n列位看官，如果您注意看上面官方文档中的那句话，应该注意到，还有后面半句： equivalent to a[len(a):] = [x]，意思是说list.append(x)等效于：a[len(a):]=[x]。这也相当于告诉我们了另外一种追加元素的方法，并且两种方法等效。\n\n>>> a\n['good', 'python', 'I', 'like', 100]\n>>> a[len(a):]=[3]      #len(a),即得到list的长度，这个长度是指list中的元素个数。\n>>> a\n['good', 'python', 'I', 'like', 100, 3]\n>>> len(a)\n6\n>>> a[6:]=['xxoo']\n>>> a\n['good', 'python', 'I', 'like', 100, 3, 'xxoo']\n\n\n顺便说一下len()，这个是用来获取list,str等类型的数据长度的。在字符串讲解的时候也提到了。\n\n>>> name = 'yeashape'\n>>> len(name)       #str的长度，是字符的个数\n8\n>>> a=[1,2,'a','b'] #list的长度，是元素的个数\n>>> len(a)\n4\n>>> b=['yeashape']   \n>>> len(b)\n1\n\n\n下一讲继续list，有容乃大。\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "2"}