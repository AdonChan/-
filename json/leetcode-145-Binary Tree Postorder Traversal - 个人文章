{"title": "leetcode-145-Binary Tree Postorder Traversal - 个人文章 ", "index": "python", "content": "stack 栈的意义价值： 具有时间性，先进后出。 所以具有时间关联顺序的元素可以通过这个时间。 比如递归的后序遍历，先序遍历，\n        二叉树的按层次打印。  根据需求不同，在stack中暂时储存的元素单元也不同，元素的先后顺序也不同。\n应用：对顺序有要求的数据。二叉树的处理。\nGiven a binary tree, return the postorder traversal of its nodes' values.Example:\nInput: [1,null,2,3]   1\n\\\n 2\n/\n3\nOutput: [3,2,1]\nclass TreeNode:\n    def __init__(self, x):\n        self.val = x\n        self.left = None\n        self.right = None\n\nclass Solution:\n    def postorderTraversal(self, root):\n        \"\"\"\n        :type root: TreeNode\n        :rtype: List[int]\n        \"\"\"\n        if not root:\n            return []\n        stack=list()\n        ans=list()\n        stack.append(root)\n        while stack:\n            node_cur=stack.pop()\n            if node_cur.val:\n                ans.append(node_cur.val)\n            if node_cur.left:\n                stack.append(node_cur.left)\n            if node_cur.right:\n                stack.append(node_cur.right)\n        return ans[::-1]\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "0"}