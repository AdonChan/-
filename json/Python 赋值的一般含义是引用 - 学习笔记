{"title": "Python 赋值的一般含义是引用 - 学习笔记 ", "index": "python", "content": "在困惑的查找答案过程中发现了id()   id() 表示的是对应的内存地址\n案例1：\n>>> a=1\n>>> b=2\n>>> id(1)\n39355320\n>>> id(a)\n39355320\n>>> id(b)\n39355308\n>>> b=3\n>>> id(b)\n39355296\n>>> \n请输入id(2)和id(3),比较输出的结果\n比较发现： a=1     id(a)和id(1)是同一个  同理id（b）和id(2)是一样的b=3 此处赋值改变了id(b)的值，不再指向 2  而是指向 3 a或者b，在Python中都只是一个名字，来指向一个值 比如1 2（不论字符类型）\n>>> a=1\n>>> b=2\n>>> list1=[a,b]\n>>> print list1\n[1, 2]\n>>> b=3\n>>> print list1\n[1, 2]\n>>>\n此处代码中 b=2 指向39355308 打印出来是2  所以print list[1]或者print b以及print 2 效果是等同的但是print list1[1]是直接指向2的这个值 39355308print b 是间接指向2的这个值 39355308    b是一个名字 引用这个值 所以当重新赋值 b=3print b  b作为一个名字 引用的是3的值   b指向一个新的值——3的值print list1[1]得到的依旧是 39355308 \n而print list1 是print list1[0] 和print list1[1] 的合集所以输出结果依旧是[1,2]  而不是 [1,3]\n重新定义 list1=[a,b] 才会输出[1,3]\n\n                ", "mainLikeNum": ["1 "], "mainBookmarkNum": "0"}