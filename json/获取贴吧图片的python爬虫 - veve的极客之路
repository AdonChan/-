{"title": "获取贴吧图片的python爬虫 - veve的极客之路 ", "index": "xpath,文件存储,网页爬虫,python", "content": "经过前两篇文章 http://segmentfault.com/a/1190000004288204 和 http://segmentfault.com/a/1190000004269037的测试，决定实现以下功能：\n\n给定感兴趣的贴吧首页，自动获取帖子的链接\n进入获取到的链接中，将帖子内的图片链接提取出来\n按照帖子的ID建文件夹，将帖子内图片的链接下载为图片保存到文件夹中\n\n实现过程：\n获取帖子列表以百度贴吧“壁纸吧”为例http://tieba.baidu.com/f?kw=%E5%A3%81%E7%BA%B8&ie=utf-8，通过分析该网页源代码，发现：\n\n每一个帖子的链接都是\nhref=\"/p/xxxxxxxxxx\"\n\n再打开对应帖子的链接，发现该帖子正是\nhttp://tieba.baidu.com/p/xxxxxxxxx\n所以获取文章链接的思路很简单：获取到标题的href这个属性的内容，前面加上http://tieba.baidu.com/就是最终的帖子链接：\nLinkSelector = AirticleFilter.xpath('//div[@class=\"threadlist_lz clearfix\"]/div/a/@href')\n\n获取帖子中每个楼层所包含的图片链接：这里会有一个坑，如果你直接从chrome中审查元素，定位到图片所在的xpath，有可能是获取不到真正的链接的，而有可能获取到“loading.gif”！这是因为，图片在加载时比较慢，网页先下载一个小的动画图片显示loading，待下载完成之后再显示真正的图片。不过好在在每一个包含图片的楼层中的头部信息中都包含了文件的类型，图片的大小，图片的链接地址，以及图片是否为用户上传的图片等信息：\n\n经过摸索，我们要提取的是包含有<img class=\"BDE_Image\">的节点信息，该节点中有图片的实际链接src=\"http:\\\\XXXXXXXX\"\nBackGroundLink = BackGroundFilter.xpath('//div[@class=\"l_post l_post_bright j_l_post clearfix  \"]')\nImgSrc = etree.HTML(reply_info['content']['content'])\nImgLink = ImgSrc.xpath('//img[@class=\"BDE_Image\"]/@src')\n以上xpath首先获取到楼层，然后获取到楼层中的content信息，然后将content信息作为html文件再次分析，获取到包含class=\"BDE_Image\"的图片的src。\n根据帖子ID建立文件夹建立文件夹可以使用os库的mkdirs方法，注意，如果是mkdir方法则只能创建一层目录。\ndef MakeDir(TargetDir,FolderName):\n    new_path = os.path.join(TargetDir,FolderName)\n    if(not os.path.isdir(new_path)):\n        os.makedirs(new_path)\n    os.chdir(new_path)\n\n最终代码：\n#-*-coding:utf8-*-\nfrom lxml import etree\nimport SaveLinkIntoFile\nimport requests\nimport re\nimport os\nimport GetTiebaImg\n\ndef GetArticleLinks(url):\n    TiebaUrlprefix = 'http://tieba.baidu.com'\n    html = requests.get(url)\n    html = re.sub(r'charset=(/w*)', 'charset=UTF-8', html.text)\n    AirticleFilter = etree.HTML(html)\n    #print(html)\n    LinkSelector = AirticleFilter.xpath('//div[@class=\"threadlist_lz clearfix\"]/div/a/@href')\n    for i in range(len(LinkSelector)):\n        foldername = LinkSelector[i].strip().lstrip().rstrip('/').replace('/','')\n        print(foldername)\n        MakeDir(\"D:\\Python_Cache\",foldername)\n        LinkSelector[i] = TiebaUrlprefix + LinkSelector[i]\n        GetTiebaImg.GetTiebaImg([LinkSelector[i]])\n        os.chdir(\"../\")\n\n    print(LinkSelector)\n    return LinkSelector\n    # print(\"the number of links:{0}\".format(len(LinkSelector)))\n    # for each in LinkSelector:\n    #     print(\"The links:{0}\".format_map(each[0]))\n\ndef MakeDir(TargetDir,FolderName):\n    new_path = os.path.join(TargetDir,FolderName)\n    if(not os.path.isdir(new_path)):\n        os.makedirs(new_path)\n    os.chdir(new_path)\n    # print(\"the Current dir is:{0}\".format(os.getcwd()))\n    # os.chdir(\"../\")\n    # print(\"the Current dir is:{0}\".format(os.getcwd()))\n\n\nif __name__ == '__main__':\n    MakeDir(\"D:\\Python_Cache\",\"Cache1\")\n    TiebaUrl = 'http://tieba.baidu.com/f?kw=%E5%A3%81%E7%BA%B8&ie=utf-8'\n    GetArticleLinks(TiebaUrl)\n    \n运行效果：\n\n\n\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "7"}