{"title": "python3入门与进阶(一) - icessun ", "index": "python", "content": "最近学习了python3的语法，整理记录一下；语法是编程的先决条件，精通语法是编好程序的必要条件；\n导语\n给我最大的感觉是：这个语言的编写，居然不使用  { }来控制代码块的区域，而是使用缩进来分割代码块，所以使用python语言编写的代码不能压缩混淆。能够简写就简写，绝不拖泥带水\n在python编程的世界里面，广为传颂的名言：Life is Simple ，I Use Python；python语言相对于其他语言来说，最大的特点是：简洁。为什么呢？来看一个变量交互的例子：\n# 很多语言中，需要一个临时变量来交换\ntemp = x\nx = y\ny = temp\n\n#  在python中\nx，y = y，x\npython的功能很强大，可以做爬虫，自动化运维与自动化测试，大数据与数据分析（Spark），AI（机器学习 Tensor Flow），Web开发（Flask，Django），脚本处理。还可以跨平台运行，是面向对象的语言，又有动态脚本的特性（和Javascript一样，属于解释型语言，不用编译成二进制文件；编译型语言会编译成二进制文件供机器执行，相对而言运行效率高）。\npython语言也被称作为：胶水语言，可以混合其他如C++，Java等来编程；可以把其他语言制作的各种模块（尤其是C/C++）很轻松的联结在一起。\n很喜欢的两句话：\n#  python 之禅\nSimple is better than complex.\n简洁胜于复杂；\n这和Steve Jobs的苹果系列产品的理念是一致的\n\nNow is better than never. Although never is often better than right now.\n做也许好过不做，但不假思索就动手还不如不做；\n勤于思考，分析导致问题的原因，不做无用功\n\n编程是为了解决我们的问题而存在的一个工具。\n当遇到问题的时候，随手拿起python，编写一个工具，这才是python正确的打开方式\n什么是扎实的编程功底：数据结构才是基础\n\n基础语法\n代码：是现实世界事物在计算机世界中的映射；写代码：是将现实世界中的事物用计算机语言来描述\n在计算机中，怎么样来表示现实世界的事物？\n基本数据类型\n基本数据类型\n\n\n\nNumber（数字）\n\n整数：int\n浮点数：float\n布尔：bool\n复数：complex\n\n\nStr（字符串）\nList（列表）\nTuple（元组）\nSets（集合）\nDict（字典）\n\npython3中的浮点数不分精度（单/双），整型不分短和长（short / long）；布尔值一定是大写的True / False；列表使用[ ]，元组使用( )，集合使用{ }，字典使用{ k:v }\ntype(1+1.0)  # 1.1 float\ntype(2 / 2) #  1.0  float\ntype(2 // 2)  #  1  int\n\na = 123 # 不需要写变量的类型\nisinstance(a，int) # True\n上面代码里面，type()函数来检查变量的数据类型，也可以使用isinstance来判断一个变量是否属于这个类型；区别在于：\ntype()不会认为子类是一种父类类型。\n\nisinstance()会认为子类是一种父类类型。\n / ：表示除法，结果自动转为float类型； // ：表示整除，求的是整数部分，不会四舍五入；声明变量不需要在前面写上变量的类型，直接写一个变量名就行，不像其他语言要标明数据类型，或者是写上var/ let/ const\n字符串，元组，列表\n字符串是不可变的；这三种都是有序的\n重复表示\nprint(\"icessun\"*3)\n>>> 'icessunicessunicessun'\n\n# 元组的重复 元组里面可以有不同的数据类型  （1，‘1’，True，[1,2,4]）\n（1，2，3）*3\n>>> (1,2,3,1,2,3,1,2,3)\n\n# 在元组后面添加元素 使用append()方法\nb = [1,2,3]\nb.append(4)\nprint(b)\n>>> [1,2,3,4]\n\n# 元组使用+相加\n(1,2,3)+(2,3,4)\n>>> (1,2,3,2,3,4)\n\n# 列表的重复\n['ice','icess']*3\n>>> ['ice','icess','ice','icess','ice','icess']\n切片操作\n[起始位置，长度]；截取从起始位置，长度个字符；长度负数表示删除从字符串末尾往前数的字符个数；长度省略表示到末尾；长度要是超过可截取的位数，以可截取的位数为标准；\n\na = 'icessun'\n\nprint(a[0:4])\n>>> 'ices'\n\nprint(a[0:-2])\n>>> 'icess'\n\nprint(a[0:])\n>>> 'icessun'\n\nprint(a[1:-0])\n>>> '  '   # 表示截取了一个空字符串\n\nprint(a[1:0])\n>>> '  '   # 表示截取了一个空字符串\n\nprint(a[:-4])\n>>> 'ice'  \n\nprint(a[-4:])\n>>> 'ssun'   # 起始位置为负数是表示从末尾开始数（从1开始数）到末尾，要是起始位置是负数，那么步长一定省略，否者得到的是空字符串\n内部元素的访问\n# 都是通过索引来访问的\n\"icessun\"[0]\n>>>  'i'\n\n['a','b','c'][0]\n>>>  'a'\n\n('a',2,True)[2]\n>>> True \n\n# 都可以使用len（）这个函数来求长度\n单一的字符串索引操作得到的是字符串，但是一个列表的切片操作得到的是一个列表\na = 'icessun'\n\ntype(a[0:4])\n>>>  <class 'str'>\n\n[\"ice\",\"icess\",\"icessun\"][0]\n>>> 'ice'  # 是字符串\n\n[\"ice\",\"icess\",\"icessun\"][0:2]\n>>> [\"ice\",\"icess\"]  # 是列表\n注意\ntype( (1) )  \n>>> <class 'int'>\n\ntype( ('a') )  \n>>> <class 'str'>\n一般来说：( )可以表示元组，也可以表示数学运算的优先级；所以当想表示一个只有一个元素的元组，应该这样：( (1,) )；在元素的 后面加上一个逗号；表示一个空的元组：( ( ) )\n集合\n无序的，不能通过索引访问，里面的元素不重复\n判断一个元素是否在集合里面，这个方法也适合上面的数据类型\n1 in {1,2}\n>>> True\n\n3 not in {1,2,3,4}\n>>> False\n集合的操作\n# 集合的差集  去掉相同的元素，以前面集合为标准，从一个集合里面去掉后面集合特有的元素\n｛1，2，3｝-｛2，3｝\n>>> {1}\n｛1，2，3｝-｛4｝\n>>> {1，2，3}\n｛1｝-｛4，2，3｝\n>>> {1}\n\n# 集合的交集 找两个集合的公有元素\n｛1，2，3｝&｛2，3｝\n>>> {2，3}\n｛1，3｝&｛2｝\n>>> set( )  # 表示空集  len（set()） -----> 0\n\n# 集合的并集 把两个集合合并在一起，按照从前往后的顺序，去掉相同的元素\n｛1，2，4｝|｛2，3｝\n>>> {1,2,4,3}\n注意\n# 空集合的表示\nset（）\n字典\n{ key : value}，键值对的形式，类似于Javascript中的对象\n\nkey的取值是不可变的类型：int，str，元组\n\n空的字典：{ }\n\n\n\n                ", "mainLikeNum": ["2 "], "mainBookmarkNum": "3"}