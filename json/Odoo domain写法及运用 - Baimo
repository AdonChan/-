{"title": "Odoo domain写法及运用 - Baimo ", "index": "odoo,python", "content": "Domain的写法\nDomain是一个元组，由3个元素组成 (字段名, 操作符， 值)\n字段名\n如果是Many2one/Many2Many/One2many字段，可以通过'.'取出对应的属性，如：\n('routing_id.operation_ids.workcenter_id','=', active_id)\n操作符\n\n\n符号\n说明\n\n\n\n=,>.<,>=,<=,!=\n比较运算，等于，不等于，大于，大于等于，小于，小于等于\n\n\nlike\n模糊匹配，通过%value%匹配\n\n\n=like\n可以使用模式匹配，下划线-匹配一个字符，百分号%匹配零或者多个字符\n\n\nilike\n类似like，但是忽略大小写\n\n\n=ilike\n类似=like，但是忽略大小写\n\n\nnot like\n通过%value%不匹配的\n\n\nnot ilike\n类似not like，但是忽略大小写\n\n\n=?\n未设置或者等于，未设置表示当值是None或者是False，其余和=一样\n\n\nin\n判断value是否在元素的列表里面\n\n\nnot in\n判断value是否不再元素的列表里面\n\n\nchild_of\n判断是否value的子记录\n\n\n\n示例：\n('company_id','child_of',[user.company_id.id])\n('company_level','not in',('common_company'))\n有一个要注意的地方,'in'可以反向表示，比如：\n('user_ids', 'in', user.id)\n应用场景是当一个model中的字段是user_ids = field.Many2many('res.users')，我们可以将这个model的权限赋给这些用户，只有这些用户可以访问\n<record id=\"mrp_dashboard_rule\" model=\"ir.rule\">\n     <field name=\"name\">mrp_dashboard_rule</field>\n     <field name=\"model_id\" ref=\"model_mrp_workcenter\"/>\n     <field name=\"global\" eval=\"True\"/>\n     <field name=\"domain_force\">[('user_ids', 'in', user.id)]</field>\n</record>\n值\n包括字符串，True或False，数字等在xml中，能取出当前登录用户user对象，你可以取出user.id,user.company_id.id等\n条件间的逻辑前缀\n\n\n符号\n说明\n\n\n\n&\n'AND'或者'与',表示后面2个条件同时满足。默认关系，可以省略\n\n\n|\n'OR'或者'或'，表示后面2个条件满足一个就行\n\n\n！\n'NOT'或者'非'，将后面一个条件反转，如果是True，就变成False\n\n\n\n示例：\n[('name', '=', 'Allen'), '|', ('language.code', '!=', 'en_US'), ('company_id', '=', user.company_id.id)]\nDomain的使用场景\n1.关联字段\n(Many2one/One2many/Many2many)过滤出不同的选择结果\ndefault_debit_account_id = fields.Many2one('account.account', string='Default Debit Account', domain=[('deprecated', '=', False)])\n如上：只有当account.account中字段deprecated=False的记录才能被选择显示\n2.过滤出想要显示的记录\n在ir.actions.act_windon中添加Domain，当某个地方调用这个动作时，只显示符合domain条件的记录\n<record id=\"relate_partner_opportunities\" model=\"ir.actions.act_window\">\n    <field name=\"name\">Opportunities</field>\n    <field name=\"res_model\">crm.lead</field>\n    <field name=\"view_mode\">kanban,tree,form,graph,calendar</field>\n    <field name=\"domain\">[('type','=','opportunity')]</field>\n    <field name=\"context\">{\n        'search_default_partner_id': active_id,\n        'default_type': 'opportunity'\n    }</field>\n    <field name=\"view_id\" eval=\"False\"/>\n    <field name=\"search_view_id\" ref=\"crm.view_crm_case_opportunities_filter\"/>\n</record>\n3.权限过滤\n<record id=\"account_move_comp_rule\" model=\"ir.rule\">\n    <field name=\"name\">Account Entry</field>\n    <field name=\"model_id\" ref=\"model_account_move\"/>\n    <field name=\"global\" eval=\"True\"/>\n    <field name=\"domain_force\">['|',('company_id','=',False),('company_id','child_of',[user.company_id.id])]</field>\n</record>\n4.搜索过滤\n<record id=\"view_crossovered_budget_search\" model=\"ir.ui.view\">\n   <field name=\"name\">crossovered.budget.search</field>\n   <field name=\"model\">crossovered.budget</field>\n   <field name=\"arch\" type=\"xml\">\n       <search string=\"Budget\">\n            <field name=\"name\" filter_domain=\"[('name','ilike',self)]\" string=\"Budget\"/>\n            <field name=\"date_from\"/>\n            <field name=\"date_to\"/>\n            <filter string=\"Draft\" domain=\"[('state','=','draft')]\" help=\"Draft Budgets\"/>\n            <filter string=\"To Approve\" domain=\"[('state','=','confirm')]\" help=\"To Approve Budgets\" />\n            <field name=\"state\"/>\n        </search>\n    </field>\n</record>\nDomain的使用场景还有许多，我就不一一列举了。Domain的介绍就到此结束了，有什么问题，请大家多多指教。\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "0"}