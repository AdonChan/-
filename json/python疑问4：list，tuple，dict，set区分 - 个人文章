{"title": "python疑问4：list，tuple，dict，set区分 - 个人文章 ", "index": "python", "content": "1.List定义一个列表，列表内容数据类型可以不同，元素可以更改，可以嵌套list\n//定义\nname = ['Tom','Jack','Marry']\n//长度计算\nlen(name) // Out:3\n//访问列表内元素\nname[0]//Tom\nname[1]//Jack\nname[2]//Marry\n//追加元素\nname.append('Jim') //['Tom','Jack','Marry','Jim']\n//插入元素\nname.insert(1,'pengyu') //['Tom','pengyu','Jack','Marry','Jim']\n//删除末尾元素\nname.pop() //['Tom','pengyu','Jack','Marry']\n//删除指定位置\nname.pop(2) //['Tom','pengyu','Marry']\n//替换元素\nname[0] = 'haha' //['haha','pengyu','Marry']\n\n\n2.tuple定义一个元组，一旦初始化不能修改\n//定义\nphone = ('iphone','ipad','huawei')\n//特殊，定义一个元素的tuple,记得加逗号，消除与括号运算符的歧义\nphone = ('ipad',)\n//tuple元素内含list\nphone = ('iphone','ipad',['huawei','oppo'])\nphone[2][0]='iwatch'\nphone[2][1]='vivo'\nprint(phone) // ('iphone','ipad',['iwatch','vivo'])\n//定义一个不变的tuple，必须保证其内部元素也是不变的\n3.dict定义一个字典，内含键值对。需要注意的是dict的key必须是不可变对象。因为dict根据key来计算value的存储位置，如果每次计算相同的key得出的结果不同，那dict内部就完全混乱了。这个通过key计算位置的算法称为哈希算法（Hash）。\n要保证hash的正确性，作为key的对象就不能变。在Python中，字符串、整数等都是不可变的,可以作为key,而list是可变的，就不能作为key\n//定义\nsalary = {'xiaoming':2000,'Jim':5000,'Wang':4600}\n//访问\nsalary['Wang'] //4600\n//修改\nsalary['Jim'] = 3200// {'xiaoming':2000,'Jim':3200,'Wang':4600}\n//判断key是否在字典里\n'Jack' in salary //False\n//删除key\nsalary.pop('Wang') //{'xiaoming':2000,'Jim':3200}\n//如果key可变？\nlist = ['a','b','c']\nsalary[list] = 'pengyu' //报错\n4.setset定义一个key的集合，跟dict相似，但不储存value，key不能重复，其元素内部必须为不可变对象\n//定义\ncolor = set(['red','yellow','blue']) // {'red','yellow','blue'}\ncolor = set(['red','yellow','blue','red','yellow']) //{'red','yellow','blue'}\n//添加元素\ncolor.add('black') // {'red','yellow','blue','black'}\n//删除元素\ncolor.remove('red') // {'yellow','blue','black'}\n//并集,交集\ncolor1 = set(['red','blue','black'])\ncolor2 = set(['yellow','black','red'])\ncolor1 & color2 // {'red','black'}\ncolor1 | color2 // {'red','yellow','blue','black'}\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "0"}