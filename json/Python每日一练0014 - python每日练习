{"title": "Python每日一练0014 - python每日练习 ", "index": "python3.x,python", "content": "问题\n你想使用 Unix Shell 中常用的通配符(比如 *.py , Dat[0-9]*.csv 等)去匹配文本字符串\n解决方案\n使用fnmatch模块的fnmatch或fnmatchcase函数\n>>> import fnmatch\n>>> print(fnmatch.fnmatch('hello.py', '*.py'))\nTrue\n>>> print(fnmatch.fnmatch('hello.py', 'hell?.py'))\nTrue\n>>> print(fnmatch.fnmatchcase('hello.py', '*.py'))\nTrue\n>>> print(fnmatch.fnmatchcase('hello.py', 'hell?.py'))\nTrue\n其中fnmatch和fnmatchcase的区别是\n\n\nfnmatch(filename, pattern)对大小写的敏感依赖于系统，意思是在判断匹配之前，会对两个参数调用os.path.normcase(path)，然后再进行匹配。关于os.path.normcase(path)见：https://docs.python.org/3/lib...\n\n\nfnmatchcase(filename, pattern)对大小写的敏感不依赖于系统\n\n讨论\nfnmatch支持的通配符如下：\n\n\nPattern\nMeaning\n\n\n\n*\n匹配任意字符串\n\n\n?\n匹配任意一个字符\n\n\n[seq]\n匹配在seq里的任意一个字符\n\n\n[!seq]\n匹配不在seq里的任意一个字符\n\n\n\nfnmatch() 匹配能力介于简单的字符串方法和强大的正则表达式之间。 如果在数据处理操作中只需要简单的通配符就能完成的时候，这通常是一个比较合理的方案。\n来源\nPython Cookbook\n关注\n欢迎关注我的微信公众号：python每日一练\n\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "1"}