{"title": "Python数据可视化模块：Seaborn（一） - 数据科学 ", "index": "数据可视化,python,seaborn", "content": "原文链接：http://web.stanford.edu/~mwaskom/software/seaborn/tutorial/aesthetics....\n\n管理图表的艺术\n\n画一个吸引人注意的图表相当重要。当你探索一个数据集，需要画图表，图表看起来令人愉悦是件很高兴的事。在与你的观众交流观点时，可视化同样重要，同时，也很有必要去让图表吸引注意力和印入脑海里。Matplotlib自动化程度非常高，但是，掌握如何设置系统以便获得一个吸引人的图是相当困难的事。为了控制matplotlib图表的外观，Seaborn模块自带许多定制的主题和高级的接口。\n\n%matplotlib inline\n\nimport numpy as np\nimport matplotlib as mpl\nimport matplotlib.pyplot as plt\nnp.random.seed(sum(map(ord, \"aesthetics\")))\n\n\n让我们先定义一个函数用来画正弦函数，这将帮助我们了解我们可以控制的不同风格的参数\n\ndef sinplot(flip=1):\n    x = np.linspace(0, 14, 100)\n    for i in range(1, 7):\n        plt.plot(x, np.sin(x + i * .5) * (7 - i) * flip)\n\n\n默认情况下matplotlib的画的图是这样的：\n\n转换成Seaborn模块，只需要引入seaborn模块。\n\nimport seaborn as sns\nsinplot()\n\n\n\n\nseaborn默认浅灰色背景与白色网络线的灵感来源于matplotlib，却比matplotlib的颜色更多柔和。我们发现，网络线对于传播信息很有用，几乎在所有情况下，人们喜欢图甚于表。默认情况下白灰网格的形式可以避免过于刺眼。在多面作图的情况下，网络形式显得相当的有利，提供了一种作图结构，这对模块中的一些复杂工具非常重要。\n\nseaborn将matplotlib的参数划分为两个组。第一组控制图表的样式和图的度量尺度元素，这样就可以轻易在纳入到不同的上下文中。\n\n操控这些参数由两个函数提供接口。控制样式，用axes_style()和set_style()这两个函数。度量图则用plotting_context()和set_context()这两个函数。在这两种情况下，第一组函数返回一系列的参数，第二组则设置matplotlib的默认属性。\n\n图样式函数axes_style()和set_style()\n\n                ", "mainLikeNum": ["1 "], "mainBookmarkNum": "15"}