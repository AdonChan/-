{"title": "MySQL数据库管理（一） - 达龙 ", "index": "linux,nginx,docker,python", "content": "博文参考\nhttp://www.178linux.com/79462\nhttp://iceyao.blog.51cto.com/9426658/1571865\nhttp://blog.csdn.net/taochangchang/article/details/16919289\n\n什么是数据库\n 数据库(Database)是按照数据结构来组织、存储和管理数据的建立在计算机存储设备上的仓库。\n\n简单来说是本身可视为电子化的文件柜——存储电子文件的处所，用户可以对文件中的数据进行新增、截取、更新、删除等操作。\n\n在经济管理的日常工作中，常常需要把某些相关的数据放进这样的“仓库”，并根据管理的需要进行相应的处理。\n\n例如， 企业或事业单位的人事部门常常要把本单位职工的基本情况(职工号、姓名、年龄、性别、籍贯、工资、简历等)存放在表中，这张表就可以看成是一个数据库。有了这个“数据仓库“我们就可以根据需要随时查询某职工的基本情况，也可以查询工资在某个范围内的职工人数等等。这些工作如果都能在计算机上自动进行，那我们的人事管理就可以达到极高的水平。此外，在财务管理、仓库管理、生产管理中也需要建立众多的这种“数据库“，使其可以利用计算机实现财务、仓库、生产的自动化管理。\n\n严格来说，数据库是长期储存在计算机内、有组织的、可共享的数据集合。数据库中的数据指的是以一定的数据模型组织、描述和储存在一起、具有尽可能小的冗余度、较高的数据独立性和易扩展性的特点并可在一定范围内为多个用户共享。\n\n这种数据集合具有如下特点：尽可能不重复，以最优方式为某个特定组织的多种应用服务，其数据结构独立于使用它的应用程序，对数据的增、删、改、查由统一软件进行管理和控制。从发展的历史看，数据库是数据管理的高级阶段，它是由文件管理系统发展起来的。 \n数据管理模型\n层次模型：用树状<层次>结构来表示实体类型和实体间联系的数据模型。\n网状模型：用有向图表示实体和实体之间的联系的数据结构模型称为网状数据模型。\n关系模型：使用表格表示实体和实体之间关系的数据模型称之为关系数据模型。\n数据分类\n结构化数据\n能够用数据或统一的结构加以表示，我们称之为结构化数据，如数字、符号。传统的关系数据模型、行数据，存储于数据库，可用二维表结构表示。\n半结构化数据\n介于完全结构化数据（如关系型数据库、面向对象数据库中的数据）和完全无结构的数据（如声音、图像文件等）之间的数据，XML、HTML文档就属于半结构化数据。它一般是自描述的，数据的结构和内容混在一起，没有明显的区分。\n非结构化数据\n指其字段长度可变，并且每个字段的记录又可以由可重复或不可重复的子字段构成的数据库，用它不仅可以处理结构化数据（如数字、符号等信息）而且更适合处理非结构化数据（全文文本、图象、声音、影视、超媒体等信息）。非结构化数据,包括所有格式的办公文档、文本、图片、XML、HTML、各类报表、图像和音频/视频信息等等\n关系模型：\n数据库：一个方案、一个项目\n二维关系：表：row, column 索引：index 视图：view\n结构化查询语言包含6个部分\n结构化查询语言；简称SQL，是一种特殊目的的编程语言，是一种数据库查询和程序设计语言，用于存取数据以及查询、更新和管理关系数据库系统；同时也是数据库脚本文件的扩展名。 \n数据查询语言（DQL:Data Query Language）\n 其语句，也称为“数据检索 语句”，用以从表中获得数据，确定数据怎样在应用程序给出。保留字 SELECT是DQL（也是所有SQL）用得最多的动词，其他DQL常用的保留字有WHERE，ORDER BY，GROUP BY和HAVING。这些DQL保留字常与其他类型的SQL语句一起使用。 \n数据操作语言（DML：Data Manipulation Language）\n 其语句包括动词 INSERT， UPDATE和 DELETE。它们分别用于添加，修改和删除表中的行。也称为动作查询语言。   \n事务处理语言（TPL：Dransaction Processing Language）\n它的语句能确保被DML语句影响的表的所有行及时得以更新。TPL语句包括BEGIN TRANSACTION，COMMIT和ROLLBACK\n数据控制语言（DCL：DataBase Control Language）\n 它的语句通过GRANT或REVOKE获得许可，确定单个用户和用户组对数据库对象的访问。某些RDBMS可用GRANT或REVOKE控制对表单个列的访问。   \n数据定义语言（DDL：Data Definition Language）\n 其语句包括动词CREATE和DROP。在数据库中创建新表或删除表（CREAT TABLE 或 DROP TABLE）；为表加入索引等。DDL包括许多与人数据库目录中获得数据有关的保留字。它也是动作查询的一部分。   \n指针控制语言（CCL）\n DDL：Data Defined Language（数据定义）\n\nCREATE, ALTER, DROP、SHOW （增删改查）\n\nDML: Data Manapulating Language（数据操作）\n\nINSERT, DELETE, UPDATE, SELECT  （增删改查）\nSQL代码：\n存储过程：procedure\n\n存储函数：function\n\n触发器：trigger\n\n事件调度器：event scheduler\n\n例程：routine  \nSQL语言\nCREATE建 ALTER改 DROP删\n创建数据库\n\nmysql> SHOW DATABASES;                    #查看MySQL中的数据库\n+--------------------+\n| Database     |\n+--------------------+\n| information_schema|\n| mysql       |\n| test       |\n+--------------------+\n3 rows in set (0.00 sec)\n \nmysql> CREATE DATABASE Oracle;            #创建数据库Oracle        \nQuery OK, 1 row affected (0.00 sec)\n \nmysql> SHOW DATABASES;                    #查看是否创建成功\n+--------------------+\n| Database           |\n+--------------------+\n| information_schema |\n| Oracle             |\n| mysql              |\n| test               |\n+--------------------+\n4 rows in set (0.00 sec)\n创建表\nmysql> SELECT DATABASE();                  #查看当前所在数据库位置DATABASE()为MySQL内置函数\n+------------+\n| DATABASE() |\n+------------+\n| NULL       |\n+------------+\n1 row in set (0.00 sec)\n     \nmysql> USE Oracle                           #切换到我们之前创建的Oracle数据库中\nDatabase changed    \nmysql> SELECT DATABASE();                   #查看是否切换到Oracle\n+------------+\n| DATABASE() |\n+------------+\n| Oracle     |\n+------------+\n1 row in set (0.00 sec)\nmysql> CREATE table BranchTab(              #创建表\n    -> Id INT,\n    -> Name CHAR(30)\n    -> );\nQuery OK, 0 rows affected (0.09 sec)\n \nmysql> SHOW TABLES;                         #查看BranchTab表是否创建成功\n+------------------+\n| Tables_in_Oracle|\n+------------------+\n| BranchTab    |\n+------------------+\n1 row in set (0.00 sec)\n修改表\nmysql> SELECT DATABASE();                   #查看当前所在数据库为准\n+------------+\n| DATABASE() |\n+------------+\n| Oracle     |\n+------------+\n1 row in set (0.00 sec)\n \nmysql> SHOW TABLES;                          #查看当前所在数据库位置中的表\n+------------------+\n| Tables_in_Oracle |\n+------------------+\n| BranchTab        |\n+------------------+\n1 row in set (0.00 sec)\n \nmysql> ALTER TABLE BranchTab RENAME branchtab;    #修改表BranchTab为branchtab\nQuery OK, 0 rows affected (0.00 sec)\n \nmysql> SHOW TABLES;                            #查看是否修改成功\n+------------------+\n| Tables_in_Oracle |\n+------------------+\n| brannhtab        |\n+------------------+\n1 row in set (0.00 sec)\n删除表\nmysql> SELECT DATABASE();                                    #查看当前所在数据库位置\n+------------+\n| DATABASE() |\n+------------+\n| Oracle     |\n+------------+\n1 row in set (0.00 sec)\n \nmysql> SHOW TABLES;                                       #查看当前所在数据库位置中的表\n+------------------+\n| Tables_in_Oracle |\n+------------------+\n| branchtab        |\n+------------------+\n1 row in set (0.00 sec)\nmysql> DROP TABLE bracnhtab;                                 #DROP掉branchtab表\nQuery OK, 0 rows affected (0.00 sec)\nmysql> SHOW TABLES;                                       #查看branchtabs是否被删除\nEmpty set (0.00 sec)\n\n删除数据库\nmysql> SHOW DATABASES;                         #查看MySQL中的所有库，发现Oracle库\n+--------------------+\n| Database           |\n+--------------------+\n| information_schema |\n| Oracle             |\n| mysql              |\n| test               |\n+--------------------+\n4 rows in set (0.00 sec)\n \nmysql> DROP DATABASE Oracle;                          #DROP掉Oracle数据库\nQuery OK, 0 rows affected (0.00 sec)\n \nmysql> SHOW DATABASES;                           #查看Oracke是否被删\n+--------------------+\n| Database           |\n+--------------------+\n| information_schema |\n| mysql              |\n| test               |\n+--------------------+\n3 rows in set (0.00 sec)\nDML操作语言命令\nINSERT增 DELETE删 SELECT查 UPDATE改\nmysql> CREATE DATABASE oracle;                        #创建oracle数据库\nQuery OK, 1 row affected (0.00 sec)\n \nmysql> use oracle                               #切换到oracle数据库\nDatabase changed\nmysql> CREATE TABLE branch(\n    -> Id INT,\n    -> Name CHAR(30)\n    -> );\nQuery OK, 0 rows affected (0.16 sec)\n \nmysql> DESC branch;                             #查看表结构，简要增加数据最好看下别弄错\n+-------+----------+------+-----+---------+-------+\n| Field | Type     | Null | Key | Default | Extra |\n+-------+----------+------+-----+---------+-------+\n| Id    | int(11)  | YES  |     | NULL    |       |\n| Name  | char(30) | YES  |     | NULL    |       |\n+-------+----------+------+-----+---------+-------+\n2 rows in set (0.00 sec)\n \nmysql> SELECT * FROM branch;                       #查看表结构明细\nEmpty set (0.00 sec)\nmysql> SHOW CREATE TABLE branch\\G\n*************************** 1. row ***************************\n       Table: branch\nCreate Table: CREATE TABLE `branch` (\n  `Id` int(11) DEFAULT NULL,\n  `Name` char(30) DEFAULT NULL\n) ENGINE=MyISAM DEFAULT CHARSET=latin1                   #可以看出我们使用的是MyISMA\n1 row in set (0.00 sec)\nmysql> SELECT @@version;                    \n+-----------+\n| @@version |\n+-----------+\n| 5.1.73    |\n+-----------+\n1 row in set (0.00 sec)\n插入数据\nmysql> SELECT DATABASE();                                                      #查看自己所在数据库位置是否正确\n+------------+\n| DATABASE() |\n+------------+\n| oracle     |\n+------------+\n1 row in set (0.00 sec)\nmysql> DESC branch;                                                            #查看表结构\n+-------+----------+------+-----+---------+-------+\n| Field | Type     | Null | Key | Default | Extra |\n+-------+----------+------+-----+---------+-------+\n| Id    | int(11)  | YES  |     | NULL    |       |\n| Name  | char(30) | YES  |     | NULL    |       |\n+-------+----------+------+-----+---------+-------+\n2 rows in set (0.00 sec)\nmysql> INSERT INTO branch VALUES                                               #插入数据到branch表中                                 \n    -> (1,'Tom'),\n    -> (2,'Sunshine');\nQuery OK, 2 rows affected (0.00 sec)\nRecords: 2  Duplicates: 0  Warnings: 0\n \nmysql> SELECT * FROM branch;                                                   #查看是否插入成功\n+------+----------+\n| Id   | Name     |\n+------+----------+\n|    1 | Tom      |\n|    2 | Sunshine |\n+------+----------+\n2 rows in set (0.00 sec)\n删除数据\nmysql> SELECT DATABASE();                                                       #查看所在数据库位置\n+------------+\n| DATABASE() |\n+------------+\n| oracle     |\n+------------+\n1 row in set (0.00 sec)\n \nmysql> DESC branch;                                                             #查看branch表结构\n+-------+----------+------+-----+---------+-------+\n| Field | Type     | Null | Key | Default | Extra |\n+-------+----------+------+-----+---------+-------+\n| Id    | int(11)  | YES  |     | NULL    |       |\n| Name  | char(30) | YES  |     | NULL    |       |\n+-------+----------+------+-----+---------+-------+\n2 rows in set (0.00 sec)\n \nmysql> DELETE FROM branch;                                                      #删除表数据，没加WHERE条件就是删除这张表里面的所有内容\nQuery OK, 2 rows affected (0.00 sec)\n \nmysql> SELECT * FROM branch;                                                    #查看是否删除成功\nEmpty set (0.00 sec)\n \nmysql> INSERT INTO branch VALUES                                                #插入新的数据\n    -> (1,'Alis'),\n    -> (2,'jeery');\nQuery OK, 2 rows affected (0.00 sec)\nRecords: 2  Duplicates: 0  Warnings: 0\n \nmysql> SELECT * FROM branch;                                                    #查看是否插入成功\n+------+-------+    \n| Id   | Name  |\n+------+-------+\n|    1 | Alis  |\n|    2 | jeery |\n+------+-------+\n2 rows in set (0.00 sec)\n \nmysql> DELETE FROM branch WHERE Id=1;                                            #删除branch表里面的内容加了条件判断WHERE Id=1\nQuery OK, 1 row affected (0.00 sec)\n \nmysql> SELECT * FROM branch;                                                     #查看是否删除我们指定的数据\n+------+-------+\n| Id   | Name  |\n+------+-------+\n|    2 | jeery |\n+------+-------+\n1 row in set (0.00 sec)\n \nmysql> DELETE FROM branch WHERE Name=jeery;                                     #删除branch表里面的内容加了条件判断 WHERE Name=jeery;但是jeery没加单引号报错\nERROR 1054 (42S22): Unknown column 'jeery' in 'where clause'\nmysql> DELETE FROM branch WHERE Name='jeery';                                   #删除branch表里面的内容加了条件判断 WHERE Name='jeery';加了单引号成功\nQuery OK, 1 row affected (0.00 sec)\nmysql> SELECT * FROM branch;                                                    #查看是否删除我们指定你的数据\nEmpty set (0.00 sec)\n查看数据\nmysql> DESC branch;                                                             #查看表结构\n+-------+----------+------+-----+---------+-------+\n| Field | Type     | Null | Key | Default | Extra |\n+-------+----------+------+-----+---------+-------+\n| Id    | int(11)  | YES  |     | NULL    |       |\n| Name  | char(30) | YES  |     | NULL    |       |\n+-------+----------+------+-----+---------+-------+\n2 rows in set (0.00 sec)\n \nmysql> INSERT INTO branch VALUES                                                 #插入一些数据\n    -> (1,'Sunshine'),\n    -> (2,'jeery'),\n    -> (3,'Alis'),\n    -> (4,'Tom');\nQuery OK, 4 rows affected (0.00 sec)\nRecords: 4  Duplicates: 0  Warnings: 0\n \nmysql> SELECT * FROM branch;                                                    #查看branch表中的数据\n+------+----------+\n| Id   | Name     |\n+------+----------+\n|    1 | Sunshine |\n|    2 | jeery    |\n|    3 | Alis     |\n|    4 | Tom      |\n+------+----------+\n4 rows in set (0.00 sec)\n \nmysql> SELECT * FROM branch WHERE Id=1;                                        #查看branch表中的数据，以条件 \"WHERRE Id=1\"\n+------+----------+\n| Id   | Name     |\n+------+----------+\n|    1 | Sunshine |\n+------+----------+\n1 row in set (0.00 sec)\nmysql> SELECT Name FROM branch;                                                #查看branch表中Name字段的数据\n+----------+\n| Name     |\n+----------+\n| Sunshine |\n| jeery    |\n| Alis     |\n| Tom      |\n+----------+\n4 rows in set (0.00 sec)\n \nmysql> SELECT Name FROM branch WHERE Id=1;                                    #查看branch表中Name字段的数据，以条件 \"WHERRE Id=1\"\n+----------+\n| Name     |\n+----------+\n| Sunshine |\n+----------+\n1 row in set (0.00 sec)\n \n \nmysql> SELECT count(*) FROM branch;                                          #使用count内置函数查看branch表中有多少行\n+----------+\n| count(*) |\n+----------+\n|        4 |\n+----------+\n1 row in set (0.00 sec)\n \nmysql> SELECT count(*) FROM bransh where Id=1;                               #使用count内置函数查看branch表中有多少行，以条件 \"WHERE Id=1\"                                                             \nERROR 1146 (42S02): Table 'oracle.bransh' doesn't exist\nmysql> SELECT count(*) FROM bransh;\nERROR 1146 (42S02): Table 'oracle.bransh' doesn't exist\nmysql> SELECT count(*) FROM branch WHERE Id=1;\n+----------+\n| count(*) |\n+----------+\n|        1 |\n+----------+\n1 row in set (0.00 sec)\n更改数据\nmysql> DESC branch;                                                          #查看表结构\n+-------+----------+------+-----+---------+-------+\n| Field | Type     | Null | Key | Default | Extra |\n+-------+----------+------+-----+---------+-------+\n| Id    | int(11)  | YES  |     | NULL    |       |\n| Name  | char(30) | YES  |     | NULL    |       |\n+-------+----------+------+-----+---------+-------+\n2 rows in set (0.00 sec)\n \nmysql> UPDATE branch SET Id=5;                                               #更改数据,Id=5，生产环境中最好加条件，不然就呵呵了~\nQuery OK, 4 rows affected (0.00 sec)\nRows matched: 4  Changed: 4  Warnings: 0\n \nmysql> SELECT * FROM branch;                                                 #不加条件就变成这样了，不是我们想要的\n+------+----------+\n| Id   | Name     |\n+------+----------+\n|    5 | Sunshine |\n|    5 | jeery    |\n|    5 | Alis     |\n|    5 | Tom      |\n+------+----------+\n4 rows in set (0.00 sec)\n \nmysql> UPDATE branch SET Id=1 WHERE Name='Sunshine';                         #更改数据Id=1，加了条件 \"WHERE Name='Sunshine'\"\nQuery OK, 1 row affected (0.00 sec)\nRows matched: 1  Changed: 1  Warnings: 0\n \nmysql> SELECT * FROM branch;                                                 #查看是否是更改成我们所想要的\n+------+----------+\n| Id   | Name     |\n+------+----------+\n|    1 | Sunshine |\n|    5 | jeery    |\n|    5 | Alis     |\n|    5 | Tom      |\n+------+----------+\n4 rows in set (0.00 sec)\nDCL控制语言命令\nGRANT REVOKE权限级别：管理权限，数据库，表，字段，存储例程\n权限管理 GRANT\nmysql> CREATE TABLE branchone(                                              #为了区别，我们这里在创建一个表\n    -> Id INT,\n    -> Name CHAR(30)\n    -> );\nQuery OK, 0 rows affected (0.06 sec)\nmysql> SHOW TABLES;                                                          #查看oracle库有几张表\n+------------------+\n| Tables_in_oracle |\n+------------------+\n| branch           |\n| branchone        |\n+------------------+\n2 rows in set (0.00 sec)\nmysql> GRANT SELECT ON oracle.branch TO 'sunshine'@'192.168.11.28' IDENTIFIED BY 'sunshine';            #授权sunshine用户只能通过192.168.11.28这个IP访问数据库，而且只有oracle数据库branch的查看权限\nQuery OK, 0 rows affected (0.00 sec)\nmysql> SHOW GRANTS FOR 'sunshine'@'192.168.11.28';                                                      #查看是否授权成功，我们看到GRANT SELECT ON `oracle`.`branch` TO 'sunshine'@'192.168.11.28'\n+---------------------------------------------------------------------------------------------------------------------+\n| Grants for sunshine@192.168.11.28                                                                                   |\n+---------------------------------------------------------------------------------------------------------------------+\n| GRANT USAGE ON *.* TO 'sunshine'@'192.168.11.28' IDENTIFIED BY PASSWORD '*D6B63C1953E7F096DB307F8AC48C4AD703E57001' |\n| GRANT SELECT ON `oracle`.`branch` TO 'sunshine'@'192.168.11.28'                                                     |\n+---------------------------------------------------------------------------------------------------------------------+\n2 rows in set (0.00 sec)\n \n[root@redis_master ~]# ifconfig | grep \"inet addr:192.168\"                                             #使用Linux系统，查看本机IP，为192.168.11.28\n          inet addr:192.168.11.28  Bcast:192.168.11.255  Mask:255.255.255.0\n[root@redis_master ~]# mysql -h192.168.11.28 -usunshine -psunshine                                     #使用sunshine用户连接数据库\nWelcome to the MySQL monitor.  Commands end with ; or \\g.\nYour MySQL connection id is 4\nServer version: 5.1.73 Source distribution\n \nCopyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.\n \nOracle is a registered trademark of Oracle Corporation and/or its\naffiliates. Other names may be trademarks of their respective\nowners.\n \nType 'help;' or '\\h' for help. Type '\\c' to clear the current input statement.\n \nmysql> \nmysql> SHOW DATABASES;                                                                                #查看数据库\n+--------------------+\n| Database           |\n+--------------------+\n| information_schema |\n| oracle             |\n| test               |\n+--------------------+\n3 rows in set (0.00 sec)\n \nmysql> USE oracle                                                                                    #进入oracle数据库\nReading table information for completion of table and column names\nYou can turn off this feature to get a quicker startup with -A\n \nDatabase changed\nmysql> SHOW TABLES;                                                                                  #查看自己是否只能看到我们设定branch表\n+------------------+\n| Tables_in_oracle |\n+------------------+\n| branch           |\n+------------------+\n1 row in set (0.00 sec)\nmysql> DESC branch;                                                                                  #查看表结构\n+-------+----------+------+-----+---------+-------+\n| Field | Type     | Null | Key | Default | Extra |\n+-------+----------+------+-----+---------+-------+\n| Id    | int(11)  | YES  |     | NULL    |       |\n| Name  | char(30) | YES  |     | NULL    |       |\n+-------+----------+------+-----+---------+-------+\n2 rows in set (0.00 sec)\n \nmysql> INSERT INTO branch VALUES                                                                     #插入数据，提示权限拒绝command denied\n    -> (10,'Test');\nERROR 1142 (42000): INSERT command denied to user 'sunshine'@'gitlab.jinr.com' for table 'branch'\nmysql> DELETE FROM branch;                                                                           #删除数据，提示权限拒绝 command denied\nERROR 1142 (42000): DELETE command denied to user 'sunshine'@'gitlab.jinr.com' for table 'branch'\nmysql> UPDATE branch SET Id=1;                                                                       #更改数据，提示权限拒绝 command denied\nERROR 1142 (42000): UPDATE command denied to user 'sunshine'@'gitlab.jinr.com' for table 'branch'\nmysql> SELECT * FROM branch;                                                                         #查看数据，正常\n+------+----------+\n| Id   | Name     |\n+------+----------+\n|    1 | Sunshine |\n|    5 | jeery    |\n|    5 | Alis     |\n|    5 | Tom      |\n+------+----------+\n4 rows in set (0.00 sec)\n \n[root@jroa ~]# ifconfig  | grep \"inet addr:192.168\"                                                  #使用另外一台Linux系统，查看IP，为192.168.11.21                                         \n          inet addr:192.168.11.21  Bcast:192.168.11.255  Mask:255.255.255.0\n[root@jroa ~]# mysql -h192.168.11.28 -usunshine -psunshine                                           #尝试连接，提示需'192.168.11.28' (113) 才能登入\nERROR 2003 (HY000): Can't connect to MySQL server on '192.168.11.28' (113)\n回收授权 REVOKE\nmysql> SHOW GRANTS FOR 'sunshine'@'192.168.11.28';                                                    #查看权限，发现 GRANT SELECT ON `oracle`.`branch` TO 'sunshine'@'192.168.11.28' \n+---------------------------------------------------------------------------------------------------------------------+\n| Grants for sunshine@192.168.11.28                                                                                   |\n+---------------------------------------------------------------------------------------------------------------------+\n| GRANT USAGE ON *.* TO 'sunshine'@'192.168.11.28' IDENTIFIED BY PASSWORD '*D6B63C1953E7F096DB307F8AC48C4AD703E57001' |\n| GRANT SELECT ON `oracle`.`branch` TO 'sunshine'@'192.168.11.28'                                                     |\n+---------------------------------------------------------------------------------------------------------------------+\n2 rows in set (0.00 sec)\n \nmysql> REVOKE SELECT ON oracle.branch FROM  'sunshine'@'192.168.11.28';                                #收回授权\nQuery OK, 0 rows affected (0.00 sec)\nmysql> SHOW GRANTS FOR 'sunshine'@'192.168.11.28';                                                    #查看权限，没发现 GRANT SELECT ON `oracle`.`branch` TO 'sunshine'@'192.168.11.28'\n+---------------------------------------------------------------------------------------------------------------------+\n| Grants for sunshine@192.168.11.28                                                                                   |\n+---------------------------------------------------------------------------------------------------------------------+\n| GRANT USAGE ON *.* TO 'sunshine'@'192.168.11.28' IDENTIFIED BY PASSWORD '*D6B63C1953E7F096DB307F8AC48C4AD703E57001' |\n+---------------------------------------------------------------------------------------------------------------------+\n1 row in set (0.00 sec)\n \n[root@redis_master ~]# !if                                                                             #查看本机IP，为192.168.11.28\nifconfig | grep \"inet addr:192.168\"\n          inet addr:192.168.11.28  Bcast:192.168.11.255  Mask:255.255.255.0\n[root@redis_master ~]# !mys                                                                            #连接mysql，因为第一次授权了，就算收回，公共库的权限还是有的\nmysql -h192.168.11.28 -usunshine -psunshine\nWelcome to the MySQL monitor.  Commands end with ; or \\g.\nYour MySQL connection id is 5\nServer version: 5.1.73 Source distribution\n \nCopyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.\n \nOracle is a registered trademark of Oracle Corporation and/or its\naffiliates. Other names may be trademarks of their respective\nowners.\n \nType 'help;' or '\\h' for help. Type '\\c' to clear the current input statement.\n \nmysql> show databases;                                                                                 #查看数据库，发现oracle数据不见啦\n+--------------------+\n| Database           |\n+--------------------+\n| information_schema |\n| test               |\n+--------------------+\n2 rows in set (0.00 sec)\n\n                ", "mainLikeNum": ["3 "], "mainBookmarkNum": "4"}