{"title": "验证大小中括号是否成对闭合匹配 - leetcode ", "index": "算法,leetcode,python", "content": "验证大小中括号是否成对闭合匹配\nValid Parentheses\n\n验证大小中括号是否成对闭合匹配。\nGiven a string containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid.\nThe brackets must close in the correct order, \"()\" and \"()[]{}\" are all valid but \"(]\" and \"([)]\" are not..\n\nexample 1\ninput: '{{()}}'\noutput: True\nexample 2\ninput: '(([)])'\noutput: False\nexample 3\ninput: ''\noutput: True\n思路\n\n使用栈（先进后出）\n如果遇到左边符号{，[，(，则将其对应的右边符号}，]，)入栈，如果遇到右边符号，则判断栈顶元素是否匹配，不匹配则返回False\n最后栈空，则完全闭合匹配，返回True\n\n代码\nclass Solution(object):\n    def isValid(self, s):\n        \"\"\"\n        :type s: str\n        :rtype: bool\n        \"\"\"\n        brackets = {\n            '(': ')',\n            '[': ']',\n            '{': '}'\n        }\n        stack = []\n        for i in s:\n            if i in brackets:\n                stack.append(brackets[i])\n            elif i in brackets.values():\n                if len(stack) == 0 or stack.pop(-1) != i:\n                    return False\n        return len(stack) == 0\n本题以及其它leetcode题目代码github地址: github地址\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "0"}