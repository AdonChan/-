{"title": "[译][Tkinter 教程11] 对话框和消息框 - 个人文章 ", "index": "python,tkinter", "content": "已获原作者授权. 原系列地址: Python Tkinter\n\n简介\nTkinter 提供了一系列的对话框, 可以用来显示文本消息, 提示警告信息和错误信息, 选择文件或颜色. 其他一些简单的对话框还可以请求用户输入文本, 整数或数字.下面是一个典型的对话框使用场景. 在应用程序中经常会有 \"退出\" 按钮, 如下:\n点击 \"quit\" 按钮会弹出一个确认退出对话框:\n我们假设 \"退出\" 功能还没有最终完成, 这时我们会弹出一个只带 OK 按钮的消息对话框, 提示用户该功能还不可用:\n如果用户点击了 \"NO\" 按钮, 我们可以弹出以下消息框:\n让我们回到第一个窗口, 就是那个带有 \"quit\" 和 \"answer\" 按钮的对话框. 如果点击 \"answer\" 按钮, 我们可以弹出一个错误对话框, 告诉用户 \"Answer\" 功能还不可用:\n上面描述的逻辑可用如下代码实现:\nfrom Tkinter import *\nfrom tkMessageBox import *\n\ndef answer():\n    showerror(\"Answer\", \"Sorry, no answer available\")\n\ndef callback():\n    if askyesno('Verify', 'Really quit?'):\n        showwarning('Yes', 'Not yet implemented')\n    else:\n        showinfo('No', 'Quit has been cancelled')\n\nButton(text='Quit', command=callback).pack(fill=X)\nButton(text='Answer', command=answer).pack(fill=X)\nmainloop()\n消息框\n消息框功能由 tkMessageBox 包提供, 其中包含了如下消息框类型:\naskokcancel(title=None, message=None, **options)询问用户操作是否继续. 选择 ok 则返回 True\naskquestion(title=None, message=None, **options)显示一个问题\naskretrycancel(title=None, message=None, **options)询问用户是否要重试操作. 选择 ok 则返回 True\naskyesno(title=None, message=None, **options)显示一个问题. 选择 ok 则返回 True\naskyesnocancel(title=None, message=None, **options)显示一个问题. 选择 ok 则返回 True; 选择 cancel 则返回 None\nshowerror(title=None, message=None, **options)给出一条错误信息\nshowinfo(title=None, message=None, **options)给出一条提示信息\nshowwarning(title=None, message=None, **options)给出一条警告信息\n文件选择对话框\n几乎所有实用的桌面应用都有 打开文件以读取/写入 的功能. 有些程序还需要提供选择目录功能. Tkinter 中的 tkFileDialog 包提供了这个功能.\nfrom Tkinter import *\nfrom tkFileDialog   import askopenfilename      \n\ndef callback():\n    name= askopenfilename() \n    print name\n    \nerrmsg = 'Error!'\nButton(text='File Open', command=callback).pack(fill=X)\nmainloop()\n上面的代码运行后, 会显示一个带有 \"File Open\" 字样的按钮, 点击这个按钮则显示如下文件选择对话框:\n对话框的样式依赖于运行程序的操作系统平台. 上面的窗口是在一部装有 gnome 桌面系统的 linux 操作系统中的显示结果. 如果我们在 Windows7 下运行这段程序, 则会得到如下窗口:\n颜色选择对话框\n有些应用需要用户选择颜色. Tkinter 提供了这样一种对话框. tkColorChooser 包中包含了这个功能:\nresult = tkColorChooser.askColor ( color, option=value, ...)\n如果用户点击颜色选择对话框的确认按钮, askColor() 方法会返回一个二元组, 其中的元素都可以用来表示所选择的颜色: ((106, 150, 98), '#6a9662') . 第一个元素是一个代表三原色 RGB 的三元组, 每种原色的取值范围为 0-255. 第二个元素是一种16进制表示颜色的方法. 如果用户点击取消按钮, askColor() 方法同样会返回一个二元组: (None, None).askColor() 方法中的 options 参数可以是以下选项:\ncolor:用以为颜色选择对话框设置一个默认选择的颜色. 如果未指定 color 选项, 则默认选择颜色为灰色.\ntitle:显示在对话框顶部标题栏的标题文本. 默认的标题为 \"Color\".\nparent:设置后, 颜色选择对话框会在 parent 这个窗口之上显示. 默认行为是在 root 窗口之上显示.\n让我们看一个例子:\nfrom Tkinter import *\nfrom tkColorChooser import askcolor                  \n\ndef callback():\n    result = askcolor(color=\"#6A9662\", \n                      title = \"Bernd's Colour Chooser\") \n    print result\n    \nroot = Tk()\nButton(root, \n       text='Choose Color', \n       fg=\"darkgreen\", \n       command=callback).pack(side=LEFT, padx=10)\nButton(text='Quit', \n       command=root.quit,\n       fg=\"red\").pack(side=LEFT, padx=10)\nmainloop()\n颜色选择对话框的样式同样取决于运行程序的操作系统及窗口系统. 在 gnome 窗口系统下, 这个对话框显示如下:\n\n在 Windows7 系统下, 颜色选择对话框显示如下:\n\n全系列:[译][Tkinter 教程01] 入门: Label 控件[译][Tkinter 教程02] Message 控件[译][Tkinter 教程03] Button 控件[译][Tkinter 教程04] Variable 类[译][Tinkter 教程05] Radiobutton 控件[译][Tkinter 教程06] Checkbox 控件[译][Tkinter 教程07] Entry 控件[译][Tkinter 教程08] Canvas 图形绘制[译][Tkinter 教程09] Scale 控件[译][Tkinter 教程10] Text 控件[译][Tkinter 教程11] 对话框和消息框[译][Tkinter 教程12] 布局管理 (Pack Place Grid)[译][Tkinter 教程13] Mastermind 游戏[译][Tkinter 教程14] menu 菜单[译][Tkinter 教程15] event 事件绑定\n\n译者水平有限, 如有疏漏, 欢迎指正.已获得原作者授权. 原文地址: Dialogs.\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "0"}