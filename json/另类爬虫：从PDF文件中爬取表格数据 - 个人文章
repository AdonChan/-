{"title": "另类爬虫：从PDF文件中爬取表格数据 - 个人文章 ", "index": "python", "content": "简介\n  本文将展示一个稍微不一样点的爬虫。  以往我们的爬虫都是从网络上爬取数据，因为网页一般用HTML,CSS,JavaScript代码写成，因此，有大量成熟的技术来爬取网页中的各种数据。这次，我们需要爬取的文档为PDF文件。本文将展示如何利用Python的camelot模块从PDF文件中爬取表格数据。  在我们的日常生活和工作中，PDF文件无疑是最常用的文件格式之一，小到教材、课件，大到合同、规划书，我们都能见到这种文件格式。但如何从PDF文件中提取其中的表格，这却是一个大难题。因为PDF中没有一个内部的表示方式来表示一个表格。这使得表格数据很难被抽取出来做分析。那么，我们如何做到从PDF中爬取表格数据呢？  答案是Python的camelot模块！  camelot是Python的一个模块，它能够让任何人轻松地从PDF文件中提取表格数据。可以使用以下命令安装camelot模块（安装时间较长）：\npip install camelot-py\ncamelot模块的官方文档地址为：https://camelot-py.readthedoc...。  下面将展示如何利用camelot模块从PDF文件中爬取表格数据。\n例1\n  首先，让我们看一个简单的例子：eg.pdf，整个文件只有一页，这一页中只有一个表格，如下：\n\n使用以下Python代码就可以提取该PDF文件中的表格：\nimport camelot\n\n# 从PDF文件中提取表格\ntables = camelot.read_pdf('E://eg.pdf', pages='1', flavor='stream')\n\n# 表格信息\nprint(tables)\nprint(tables[0])\n# 表格数据\nprint(tables[0].data)\n输出结果为：\n<TableList n=1>\n<Table shape=(4, 4)>\n[['ID', '姓名', '城市', '性别'], ['1', 'Alex', 'Shanghai', 'M'], ['2', 'Bob', 'Beijing', 'F'], ['3', 'Cook', 'New York', 'M']]\n分析代码，camelot.read_pdf()为camelot的从表格中提取数据的函数，输入的参数为PDF文件的路径，页码（pages）和表格解析方法（有stream和lattice两个方法）。对于表格解析方法，默认的方法为lattice，而stream方法默认会把整个PDF页面当做一个表格来解析，如果需要指定解析页面中的区域，可以使用table_area这个参数。  camelot模块的便捷之处还在于它提供了将提取后的表格数据直接转化为pandas，csv，JSON，html的函数，如tables[0].df，tables[0].to_csv()函数等。我们以输出csv文件为例：\nimport camelot\n\n# 从PDF文件中提取表格\ntables = camelot.read_pdf('E://eg.pdf', pages='1', flavor='stream')\n\n# 将表格数据转化为csv文件\ntables[0].to_csv('E://eg.csv')\n得到的csv文件如下：\n\n例2\n  在例2中，我们将提取PDF页面中的某一区域的表格的数据。PDF文件的页面（部分）如下：\n\n为了提取整个页面中唯一的表格，我们需要定位表格所在的位置。PDF文件的坐标系统与图片不一样，它以左下角的顶点为原点，向右为x轴，向上为y轴，可以通过以下Python代码输出整个页面的文字的坐标情况：\nimport camelot\n\n# 从PDF中提取表格\ntables = camelot.read_pdf('G://Statistics-Fundamentals-Succinctly.pdf', pages='53', \\\n                          flavor='stream')\n\n# 绘制PDF文档的坐标，定位表格所在的位置\ntables[0].plot('text')\n输出结果为：\nUserWarning: No tables found on page-53 [stream.py:292]\n整个代码没有找到表格，这是因为stream方法默认将整个PDF页面当作表格，因此就没有找到表格。但是绘制的页面坐标的图像如下：\n\n仔细对比之前的PDF页面，我们不难发现，表格对应的区域的左上角坐标为（50,620），右下角的坐标为（500,540）。我们在read_pdf()函数中加入table_area参数，完整的Python代码如下：\nimport camelot\n\n# 识别指定区域中的表格数据\ntables = camelot.read_pdf('G://Statistics-Fundamentals-Succinctly.pdf', pages='53', \\\n                          flavor='stream', table_area=['50,620,500,540'])\n\n# 绘制PDF文档的坐标，定位表格所在的位置\ntable_df = tables[0].df\n\nprint(type(table_df))\nprint(table_df.head(n=6))\n输出的结果为：\n<class 'pandas.core.frame.DataFrame'>\n         0               1                2           3\n0  Student  Pre-test score  Post-test score  Difference\n1        1              70               73           3\n2        2              64               65           1\n3        3              69               63          -6\n4        …               …                …           …\n5       34              82               88           6\n总结\n  在具体识别PDF页面中的表格时，除了指定区域这个参数，还有上下标、单元格合并等参数，详细地使用方法可参考camelot官方文档网址：https://camelot-py.readthedoc...。\n注意：本人现已开通微信公众号： Python爬虫与算法（微信号为：easy_web_scrape）， 欢迎大家关注哦~~\n参考文献\n\ncamelot模块的官方文档：https://camelot-py.readthedoc...\n\nCamelot：一个从pdf抽取表格数据的Python库：https://blog.csdn.net/qq_4092...\n\n\n\n                ", "mainLikeNum": ["1 "], "mainBookmarkNum": "1"}