{"title": "python_bomb----有趣的微信聊天机器人 - python太阳花 ", "index": "python", "content": "Python 模块(Module)\n是一个 Python 文件，以 .py 结尾，包含了 Python 对象定义和Python语句\n\n模块让你能够有逻辑地组织你的 Python 代码段。\n把相关的代码分配到一个模块里能让你的代码更好用，更易懂。\n模块能定义函数，类和变量，模块里也能包含可执行的代码\n\n模块导入\nimport导入模块执行的操作\n\n产生一个新的名称空间\n在新建的名称空间里面，执行模块(.py)内容\n拿到了一个模块名指向模块文件产生的名称空间\n\n方法\n\nimport\nimport .... as....   #对于导入模块重命名\nfrom .... import .... #从模块里面导入某一功能（函数、变量、装饰器......）\n\n模块分类\n\n内置模块\n自定义模块\n第三方模块\n\n如何快速安装第三方模块\n\npip3 insatll 模块名称\n通过pycharm安装\n\n玩转机器人\n统计微信男女比例\nimport itchat    #导入itchat模块\n\nitchat.auto_login()    #自动登陆\n\nitchat.send('hello',toUserName='filehelper')    #给微信助手发送'hello'\n#itchat.send_file('/etc/passwd',toUserName='filehelper')\n\nfriends = itchat.get_friends()  #统计好友信息，类似字典\ninfo ={}\nfor friend in friends[1:]:\n    if friend['Sex']== 1:   #男性\n        info['male'] = info.get('male',0)+1\n    elif friend['Sex']== 2: #女性\n        info['female'] = info.get('female',0)+1\n    else:\n        info['other'] = info.get('other',0)+1\n\nprint(info)\n\n生成二维码\nimport qrcode\n\nimg=qrcode.make('此后，是平庸是惊世是绚丽是落魄，祝福你')\nimg.save('happy.png')\n\n\n\n聊天机器人\n首先，我们需要在图灵机器人官网上注册一个机器人，可以选择不同用途的机器人获取到apikey\nimport random\nimport  requests\nimport itchat\nimport time\n\ndef get_tuling_response(_info): #图灵机器人聊天函数\n    print(_info)\n    # 图灵机器人的网址\n    api_url = \"http://www.tuling123.com/openapi/api\"\n    data = {\n        'key': '49f783cdeef84fc2bec444339f7bXXXX',    #这里使用申请好的机器人api，笔者把自己的api后四位隐藏了\n        'info': _info,\n        'userid':'wechat-robot'\n    }\n    # 发送数据到执行网址\n    res = requests.post(api_url, data).json()\n    # print(res, type(res))\n    # 给用户返回数据\n    print(res['text'])\n    return res['text']\n\n@itchat.msg_register(itchat.content.TEXT,isGroupChat=True)\ndef text_reply(msg):\n\n    #获取好友发送的消息\n    content =  msg['Content']\n    #将好友消息发送给机器人，处理结果返回给好友\n    returnContent = get_tuling_response(content)\n    #time.sleep(random.randint(2))\n    return returnContent\n\nif __name__ =='__main__':\n    itchat.auto_login(hotReload=True)\n    itchat.run()\n\n微信实现命令控制\n#os模块\nimport os\nimport time\nimport itchat\nimport random\nimport requests #网络请求处理库\n#兼容性\n\n#系统目录间的分隔符\n#linux : /var/log/messages\n#win:C:\\\\Progjct\\hello.py\nprint(os.path.sep)  #显示路径分隔符\n#在linux里面，执行shell命令\n#   1.第一种方式，可以判断命令是否执行成功\n#返回值为0，执行成功\n#否则，执行失败\nres =os.system('hostname')\nprint('res:',res)\n#   第二种方法：用来保存命令的执行结果\nres = os.popen('hostname')\nprint('res:',res.read())\n\n@itchat.msg_register(itchat.content.TEXT)\ndef text_reply(msg):\n    #获取文件助手发来的消息，执行发送内容\n    #   1.执行成功，显示执行成功：执行结果\n    #   2.反之，显示执行失败\n    print(msg)\n    if msg['ToUserName']=='filehelper': #如果是文件传输助手法来消息，执行代码\n        command =  msg['Content']\n        if os.system(command) ==0:\n            res =os.popen(command).read()   #os.popen() 方法用于从一个命令打开一个管道,command -- 使用的命令。\n            result =  \"命令执行成功，执行结果：\" +res\n            itchat.send(result,'filehelper')\n        else:\n            result =  \"命令执行失败\"\n            itchat.send(result,'filehelper')\n            #shutdown -h 1  #一秒后执行关机命令\n\n    return 'hello'\n\n\nif __name__ =='__main__':\n    itchat.auto_login(hotReload=True)\n    itchat.run()\n\n\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "0"}