{"title": "python实现成语找一找 - 个人文章 ", "index": "python", "content": "网上经常有些从N个字里面找成语的小游戏，那么怎么用python把成语组合找出来呢？\n准备词典\n从网上下载一个成语的词典、每行一个成语，保存成 word.txt。\n代码实现\n1.构建一个首字-成语的字典模型 predict.model\nimport pickle\nfrom pathlib import Path\n\nseq = Path('word.txt').read_text().split('\\n')\npredict = {}\nfor word in seq:\n    pre = list(word)[0]\n    predict.setdefault(pre, [])\n    predict[pre].append(word)\n    \nwith open('predict.model', 'wb') as f:\n    f.write(pickle.dumps(predict))\n2.实现成语查找的类\nimport pickle\n\nclass Idiom(object):\n    def __init__(self, model_path='predict.model'):\n        self.predict = pickle.loads(Path(model_path).read_bytes())\n        \n    def find(self, text):\n        # 生成单字集合\n        chas = set(text)\n        for cha in chas:\n            # 获取单字对应的备选成语\n            words = self.predict.get(cha, [])\n            if not words:\n                continue\n            for word in words:\n                # 检查备选成语的字是否在单字集合中\n                for i in word:\n                    if i not in chas:\n                        break\n                # for循环执行完即备选成语由单字集合中的字组成\n                else:\n                     print(word)\n3.现在就可以开始找成语啦\n# 网上一般的成语游戏的备选字比这里少很多\ns = '''月光如流水一般，静静地泻在这一片叶子和花上。\n       薄薄的青雾浮起在荷塘里。\n       叶子和花仿佛在牛乳中洗过一样；又像笼着轻纱的梦。\n       虽然是满月，天上却有一层淡淡的云，所以不能朗照；\n       但我以为这恰是到了好处——酣眠固不可少，小睡也别有风味的。\n       月光是隔了树照过来的，高处丛生的灌木，落下参差的斑驳的黑影，峭楞楞如鬼一般；\n       弯弯的杨柳的稀疏的倩影，却又像是画在荷叶上。\n       塘中的月色并不均匀；但光与影有着和谐的旋律，如梵婀玲上奏着的名曲。''')\nobj = Idiom()\nobj.find(s)\n找出来的成语有：\n一天一地、别有风味、别有天地、恰到好处、落花流水、水流花落、\n水天一色、流水落花、风轻云淡、月黑风高、高高在上、云淡风轻、\n能上能下、不上不落、不上不下、不以为然、不差上下、名高天下、\n名满天下、天下为笼、天高地下、参差不一\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "0"}