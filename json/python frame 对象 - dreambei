{"title": "python frame 对象 - dreambei ", "index": "python", "content": "import sys\n\ndef one():\n    two()\n\ndef two():\n    three()\n\ndef three():\n    for num in range(3):\n        frame = sys._getframe(num)\n        show_frame(num, frame)\n\ndef show_frame(num, frame):\n    print frame\n    print \"  frame     = sys._getframe(%s)\" % num\n    print \"  funname   = %s()\" % frame.f_code.co_name\n    print \"  file/line = %s:%s\" % (frame.f_code.e, frame.f_lineno)\n\none()\n\n\nOutput\n\n<frame object at 0x606c50>\n  #返回当前stack frame\n  frame     = sys._getframe(0)\n  funname   = three()\n  file/line = stack.py:12\n<frame object at 0x180be10>\n  #返回当前stack 的上层stack frame \n  frame     = sys._getframe(1)\n  funname   = two()\n  file/line = stack.py:7\n<frame object at 0x608d30>\n  frame     = sys._getframe(2)\n  funname   = one()\n  file/line = stack.py:4\n\n\nsys._getframe([depth]) -> frameobject\n\n\n  Return a frame object from the call stack.  If optional integer depth is\n  given, return the frame object that many calls below the top of the stack.\n  If that is deeper than the call stack, ValueError is raised.  The default\n  for depth is zero, returning the frame at the top of the call stack.\n\n\nframeobject 属性\n\nf_back -> frameobject\n\nf_builtins -> dict  key:python的内置函数名\n\nf_code -> 代码对象\n\ndef test():\n    pass\n\nprint dir(test)\n\ntest.func_code #即是code object \n\n\nf_globals -> dict 全局对象 可以修改全局对象\n\nf_locals  -> dict 同上\n\nf_lineno\n\n通过pdb inspect current frame\n\nimport sys, pdb\n\ndef test():\n    frame = sys._current_frames()\n    a = \"lmy\"\n    pdb.set_trace()\n\ndef aFunction():\n    a = 1\n    b = 'hello'\n    c = (12, 3.45)\n    test()\n    d = \"This won't show up in the frame\"\n\naFunction()\n\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "0"}