{"title": "Flask编写API的核心思想 - 这里是Py交易 ", "index": "flask,python", "content": "这篇文章，是我的自言自语\nQ: 为什么需要API\nA: 当客户端与服务器端分离时, 需要通过API传递资源\nQ: 什么是资源\nA: 即数据库中的数据\nQ: 如何表示资源\nA: 使用json的方式表示, 以键值的方式表示一个资源, 每一个键代表资源的一个属性; 使用数组(列表)表示资源的集合, 例如\n[\n    {\n        'id': 1,\n        'username': 'neo1218'\n    },\n    {\n        'id': 2,\n        'username': 'zxc0328'\n    }\n]\n\nQ: 如何使用HTTP的方式对资源进行操作\nA: 涉及HTTP方法映射: 如下表\nGET ------> 获取(集合,特定资源)\nPOST -----> 创建(特定资源)\nPUT ------> 更新(特定资源)\nDELETE ---> 删除(特定资源)\n\nQ: 那么flask编写API的核心是什么?\nA: <br/>\n1. 提供资源\nflask需要把数据库资源通过json的形式提供出去, 所以需要在数据库Model中定义to_json方法, 以json的形式表示数据库数据, 以User类为例\nclass User(db.Model):\n    ......\n    def to_json(self):\n        json_user = {\n            'id': self.id,\n            'username': self.username\n        }\n        return json_user\n    ......\n\n2. 接受json数据\nflask需要接受客户端发送的json数据从而用于创建资源,所以需要在数据库Model中定义from_json方法\nclass User(db.Model):\n    ......\n    @staticmethod\n    def from_json(json_data):\n        user = User(\n            username = json_data.get('username'),\n            password = json_data.get('password')\n        )\n        return user\n    ......\n\n并在API代码中搭配[request.get_json()]()使用\n/api/users.py\n\nfrom flask import request\n\n@api.route('/users/', methods=['POST'])\ndef create_user():\n    user = User.from_json(request.get_json())\n    db.session.add(user)\n    db.session.commit()\n\nHTTP方法与操作对应\n还是以用户资源为例:\n@api.route('/users/', methods=['GET'])\ndef get_users():\n    \"\"\"获取用户资源集合\"\"\"\n    pass\n\n@api.route('/users/<int:id>/', methods=['GET'])\ndef get_id_users(id):\n    \"\"\"获取特定id用户资源\"\"\"\n    pass\n\n@api.route('/users/', methods=['GET', 'POST'])\ndef create_user():\n    \"\"\"创建用户资源\"\"\"\n    pass\n\n@api.route('/users/<int:id>/', methods=['GET', 'PUT'])\ndef update_id_user(id):\n    \"\"\"更新特定id用户资源\"\"\"\n    pass\n\n@api.route('/users/<int:id>/', methods=['GET', 'DELETE'])\ndef delete_id_user(id):\n    \"\"\"删除特定id用户\"\"\"\n    pass\n\nQ: 所以说flask编写API的核心思想就是以json的方式表示和接收资源并将相应操作映射到http方法上从而操纵资源, 是吗?\nA: 你这不是废话吗....\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "8"}