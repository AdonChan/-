{"title": "识别图片中的文字 - Tesseract 和 百度云OCR的对比 - Python测试开发 ", "index": "tesseract,python,ocr", "content": "当今时代人工智能都已经是烂大街的词了，OCR应该也很多人都知道。\nOCR （Optical Character Recognition，光学字符识别）是指电子设备（例如扫描仪或数码相机）检查纸上打印的字符，通过检测暗、亮的模式确定其形状，然后用字符识别方法将形状翻译成计算机文字的过程。\n本文主要记录了通过Python使用OCR的两次尝试。\nTesseract\nTesseract，一款由HP实验室开发由Google维护的开源OCR（Optical Character Recognition , 光学字符识别）引擎，特点是开源，免费，支持多语言，多平台。\n项目地址：https://github.com/tesseract-...\n安装使用\nTesseract的安装比较简单，在mac可以通过brew安装。\nbrew install --with-training-tools tesseract\n在windows可以通过exe安装包安装，下载地址可以从GitHub项目中的wiki找到。安装完成后记得将Tesseract 执行文件的目录加入到PATH中，方便后续调用。\n另外，默认安装会包含英文语言训练包，如果需要支持简体中文或者繁体中文，需要在安装时勾选。\n\n或者安装结束后到项目地址下载：https://github.com/tesseract-...\n下载好的语言包放入到安装目录中的testdata下即可。在windows系统你还需要将testdata目录也加入环境变量。\nTESSDATA_PREFIX=C:\\Program Files (x86)\\Tesseract-OCR\\tessdata\n如果一切就绪，你在命令行中就可以使用Tesseract命令。\n# tesseract\nUsage:\n  tesseract --help | --help-psm | --help-oem | --version\n  tesseract --list-langs [--tessdata-dir PATH]\n  tesseract --print-parameters [options...] [configfile...]\n  tesseract imagename|stdin outputbase|stdout [options...] [configfile...]\n\nOCR options:\n  --tessdata-dir PATH   Specify the location of tessdata path.\n  --user-words PATH     Specify the location of user words file.\n  --user-patterns PATH  Specify the location of user patterns file.\n  -l LANG[+LANG]        Specify language(s) used for OCR.\n  -c VAR=VALUE          Set value for config variables.\n                        Multiple -c arguments are allowed.\n  --psm NUM             Specify page segmentation mode.\n  --oem NUM             Specify OCR Engine mode.\nNOTE: These options must occur before any configfile.\n通过命令行你就可以完成简单的图片文字识别任务。\ntesseract test.png outfile -l chi_sim\n通过Python调用\nTesseract安装完成后可以很方便的被Python调用，你需要安装两个包。\npip install pillow\npip install pytesseract\n一个简单的图片转文字的函数实现如下。\nfrom PIL import Image\nimport pytesseract\n\nclass Languages:\n    CHS = 'chi_sim'\n    CHT = 'chi_tra'\n    ENG = 'eng'\n\ndef img_to_str(image_path, lang=Languages.ENG):\n    return pytesseract.image_to_string(Image.open(image_path), lang)\n  \nprint(img_to_str('image/test1.png', lang=Languages.CHS))\nprint(img_to_str('image/test2.png', lang=Languages.CHS))\n测试图片- test1.png：\n\n识别结果：\nprocess image file \"image/test1.png\" in 1.4782530478747697 seconds\n\n8 所 调 人 , 在 - 方 。\n深 从 久 , 定 中 央\n。 所 澈 伊 人 , 圭 水 淳\n。 淇 渡 从 之 , 定 圭 北 中 坂 。\n。 所 澈 伊人 , 圭 水 浩\n从 丿 , 定 圭 水 中 沥 。\n测试图片 - test2.png\n\n识别结果：\nprocess image file \"image/test2.png\" in 1.2131140296607923 seconds\n\n清 明 时 节 雨 纷 纷 , 路 上 行 人 欲 断 魂\n信 问 酒 家 何 处 有 , 牧 奕 通 指 枪 花 村 。\n小结\nTesseract在识别清晰的标准中文字体效果还行，稍微复杂的情况就很糟糕，而且花费的时间也很多，我个人觉得唯一的优点就是免费了。如果你不介意多花时间，可以考虑使用它提供的训练功能自定义你的语言库，那样在特定场景下识别率应该能上一个台阶。\n百度云OCR\n这是偶然的发现，百度云提供了一定额度的免费的OCR API，目前是每日500次，做做研究或者小应用还勉强够用，本文主要为了测试其效果。\n文档地址：https://cloud.baidu.com/doc/O...\n安装使用\n首先你需要注册一个百度云BCE账号，然后从控制面板新建一个文字识别应用。\n之后你就可以获得调用API需要的 AppID，API Key 和 Secret Key。后面只要根据官方文档一步一步走就可以了。\npip install baidu-aip\n封装和调用\n参考文档： https://cloud.baidu.com/doc/O...\nfrom aip import AipOcr\n\nconfig = {\n    'appId': 'your-id',\n    'apiKey': 'your-key',\n    'secretKey': 'your-secret-key'\n}\n\nclient = AipOcr(**config)\n\ndef get_file_content(file):\n    with open(file, 'rb') as fp:\n        return fp.read()\n\ndef img_to_str(image_path):\n    image = get_file_content(image_path)\n    result = client.basicGeneral(image)\n    if 'words_result' in result:\n        return '\\n'.join([w['words'] for w in result['words_result']])\n测试图片- test1.png：\n\n识别结果：\nprocess image file \"image/test1.png\" in 0.6331169034812572 seconds\n\n蒹葭\n先秦:佚名\n蒹葭苍苍,白露为霜。所谓伊人,在水一方。\n溯洄从之,道阻且长。溯游从之,宛在水中央。\n蒹葭萋萋,白露未晞。所谓伊人,在水之湄。\n溯洄从之,道阳且跻。溯游从之,宛在水中坻。\n蒹葭采采,白露未已。所谓伊人,在水之涘。\n溯洄从之,道阻且右。溯游从之,宛在水中沚。\n测试图片 - test2.png\n\n识别结果：\nprocess image file \"image/test2.png\" in 0.6621812639450142 seconds\n\n清明时节雨纷纷,路上行人欲断魂。\n借问酒家何处有,牧童遥指杏花村。\n小结\n测试结果很明显，我只能说百度云这个OCR真是挺厉害的，一个错别字都没有，不服不行。论中文，还是百度比谷歌更懂一点。而且百度OCR提供了更多的参数让你更灵活的处理图片，比如自定义旋转，返回可信度，特定类型证件识别等等。\n更多的OCR\n除了本文提到的OCR，其实还是有不少其他选择。有一些直接提供Demo页面，你直接上传一张图片就可以直接看到识别效果，比如：\n\n微软Azure 图像识别：https://azure.microsoft.com/z...\n\n有道智云文字识别：http://aidemo.youdao.com/ocrdemo\n\n阿里云图文识别：https://www.aliyun.com/produc...\n\n腾讯OCR文字识别： https://cloud.tencent.com/pro...\n\n\n你有没有发现所有的大公司都有这样的服务？以后我们买买买就行，花大力气去发明轮子就没多大意义了。\n关于作者：Python技术爱好者，目前从事测试开发相关工作，转载请注明原文出处。欢迎关注我的博客 https://betacat.online，你可以到我的公众号中去当吃瓜群众。\n\n\n                ", "mainLikeNum": ["12 "], "mainBookmarkNum": "59"}