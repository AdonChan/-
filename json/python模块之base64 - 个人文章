{"title": "python模块之base64 - 个人文章 ", "index": "base64,python", "content": "base64模块提供了在二进制数据和可打印ASCII字符间编解码的功能，包括RFC3548中定义的Base16, Base32, Base64, Ascii85, Base85等编码。\nRFC3548中定义的编码适用于将二进制数据编码后，在邮件、URL、HTTP POST请求中安全地传递数据。编码算法不同于uuencode program??\npython3.4及之后的版本支持两种接口：\n\n将类字节对象编码为由ASCII可打印字符表示的bytes\n将类字节对象或纯ASCII字符组成的Unicode字符串解码为bytes\n\nbase64.b64encode(s, altchars=None)\n对类字节对象s进行Base64编码，返回编码后的字节序列。\n可选参数altchars必须是2个长度的类字节对象，分别替换编码结果中的'+'和'/'字符。可应用于生成安全的URL或文件系统Base64编码场景中。\nbase64.b64decode(s, altchars=None, validate=False)\n对使用Base64编码生成的类字节对象或纯ASCII字符组成的Unicode字符串s进行Base64解码，返回解码后的字节序列。\n可选参数altchars必须是2个长度的类字节对象或纯ASCII字符组成的Unicode字符串，分别将s中对应的字符替换为'+'和'/'。\n如果s未能正确填充(s的长度必须是4的整数倍数)，抛出binascii.Error.\n如果validate的值是False，s中的非法字符(既不是标准base-64码表中的字符，又不是某些允许的可选字符)将在填充检查前丢弃。如果validate的值是True，s存在非法字符将抛出binascii.Error.\nbase64.standard_b64encode(s)\n对类字节对象s进行标准Base64编码，返回编码后的字节序列。等同于b64encode(s)\nbase64.standard_b64decode(s)\n对类字节对象或纯ASCII字符组成的Unicode字符串s进行标准Base64解码，返回解码后的字节序列。等同于b64decode(s)\nbase64.urlsafe_b64encode(s)\n对类字节对象s进行安全的URL及文件系统Base64编码，替换标准Base64编码中的'+'为'-', '/'为'_'，返回编码后的字节序列\nbase64.urlsafe_b64decode(s)\n对类字节对象或纯ASCII字符组成的Unicode字符串s进行URL及文件系统Base64解码，返回解码后的字节序列\n\nbase64.b32encode(s)\nbase64.b32decode(s, casefold=False, map01=None)\nbase64.b16encode(s)\nbase64.b16decode(s, casefold=False)\nbase64.a85encode(b, *, foldspaces=False, wrapcol=0, pad=False, adobe=False)\nbase64.a85decode(b, *, foldspaces=False, adobe=False, ignorechars=b' \\t\\n\\r\\v')\nbase64.b85encode(b, pad=False)\nbase64.b85decode(b)\n基于RFC2045的旧接口\n\nbase64.decode(input, output)\nbase64.decodebytes(s)\nbase64.encode(input, output)\nbase64.encodebytes(s)\n\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "0"}