{"title": "flask-admin 快速打造博客 系列一  - 个人文章 ", "index": "flask-admin,flask,python", "content": "前言：\n我想分享flask+flask-admin快速打造博客的详细教程，可是发现网易课堂已经有相应的免费课堂了，所以就不打算一点一滴的在这里做笔记，分享这些东西了。所以我主要集中在flask-admin使用上的讲解。如果有需要flask可以去参考一下网易的flask课程，其实想弄一个讲堂的视频教程，可是没有足够好的设备，而且录制视频更像是在表演，感觉一下子适应不过来。可我还是录了一套视频效果不是很好，稍后想分享给大家。\n1，准备知识\nFlask-admin是基于flask框架的，所以你必须先对flask有一个整体的认识和学习，至少需要知道怎么使用请求，模板响应，数据库使用等等。1）route 请求的路由规则2）sqlalchemy 或者其他数据框架的增删改3）jinja2框架 模板响应的使用\n2，依赖库，工具的安装\npython 3.6+版本以上,具体的依赖都放在requirements.txt里面，通过pip3进行安装即可使用pycharm工具，可以直接官网下载Pycharm非常简单易用，但需要注册码，直接百度搜索：pycharm注册码2017然后选择一个注册码，就可以激活；或者输入激活的url路径也可以\n3，搭建flask web\n1）我们来搭建一个flask的使用框架，如果还没有入门的同学，可以借此入一下门。新建一个项目：file->new project….. 在控制台输入：python cleanblog.py 启动服务\n2)目录结构改造首先，我们建立apps的python包，在apps里面在建一个blog的python包，这样设置的目的就是把所以功能模块都放在apps下面；其次，把static和template目录拉到apps目录下；在根目录，增加config.py 是配置文件，用于配置环境变量的gendb.py是基于flask-sqlalchemy来生成数据库表的\n3）整合改造\n3.1 整合blueprint蓝图相当于命名空间，前端路由过来的请求就会被蓝图的地址多映射到不同的处理函数上去。在blog目录下的__init__.py 文件输入：\nfrom flask import Blueprint\nblog = Blueprint('main', __name__)\nfrom . import views\n\n然后再apps的__init__.py里注册蓝图：\n# 蓝图\nfrom .blog import blog as main_blueprint\napp.register_blueprint(main_blueprint)\n\n其实蓝图的注册是 app.register_blueprint(main_blueprint, url_prefix='/XXXX')这里的XXXX是请求到该模块下的路径前缀。弄个测试例子：blog 目录下的views.py有个函数：\n# coding:utf-8\n#views.py\nfrom . import blog\n\n@blog.route(\"/baseinfo\",methods=['GET'])\ndef getbaseinfo():\n    return \"zhe是 测试页面\"\n那么请求路径就是 www.mxxx.com/XXXX/baseinfo\n3.2 国际化国际化使用的babelx，一个比较老的库，不是很理想，如果自定义后台页面也许就不需要这么一个库；而且现在babelx的版本要跟flask对得上，不然会有各种异常的需要在config.py 配置：BABEL_DEFAULT_LOCALE = 'zh_hans_CN'然后在apps的__init__.py里注册:\n#国际化\nfrom flask_babelex import Babel\nbabel = Babel(app)\n3.3 本地日期渲染使用flask_moment 来渲染模板的日期，需要注册到app：moment.init_app(app)\n然后再模板就可以使用:\n{% block scripts %}\n    {{ super() }}\n    {{ moment.include_moment() }}　　//在前端中通过方法引用moment.js文件\n    {{ moment.locale('zh-cn') }}　　//将moment.js本地化，否则渲染出来的时间日期都是英文的\n{% endblock %}\n\n{% block page_content %}\n    {{ super() }}\n    <h3>Time now is {{ moment(current_time).format('LLL') }}</h3><hr>\n{% endblock %}\n可参考：https://www.cnblogs.com/frank...\n4.5 整合sqlalchemy 这是我们的一个重点：第一步：注册：db = SQLAlchemy() 然后注册到app里：db.init_app(app)第二步：定义model在apps目录建立一个models.py文件，就可以在里面定义模型了：\n#coding: utf-8\nimport hashlib\nfrom datetime import datetime\nfrom . import db\n\n#用户表\nclass User(db.Model):\n    id = db.Column(db.Integer, primary_key=True)\n    email = db.Column(db.String(64), unique=True, nullable=False)\n    username = db.Column(db.String(64), unique=True, nullable=False)\n    role = db.Column(db.String(64), nullable=True)\n    password_hash = db.Column(db.String(128))\n    head_img = db.Column(db.String(128), unique=False, nullable=True)\n    create_time  = db.Column(db.DateTime, nullable=True,default=datetime.now)\n\n    def verity_password(originPassword, password):\n        from apps.util import common\n        newpassword = common.md5(originPassword)\n        return password == newpassword\n\n\n    def __repr__(self):\n        return '<User %r>' % self.username\n第三步：生成表gendb.py 主要是生成数据库表脚本的，可以不用，你直接去数据库生成也可以的\nfrom flask_script import Manager\nfrom flask_migrate import Migrate, MigrateCommand\nfrom apps import  create_app\n#app.config.from_object('app.config')\n\n# configuration\n# SQLALCHEMY_DATABASE_URI = 'mysql://root:123456@117.48.202.102/flaskAdmin'\n# app.config['SQLALCHEMY_DATABASE_URI'] = SQLALCHEMY_DATABASE_URI\n# app.config['SQLALCHEMY_TRACK_MODIFICATIONS'] = True\n\n\napp = create_app('config.py')\n\nfrom apps.models import  db\n#db.init_app(app)\nmigrate = Migrate(app,db)\nmanager = Manager(app)\nmanager.add_command('db',MigrateCommand)\n\nif __name__ == '__main__':\n    manager.run()\n\n\"\"\"\npython  gendb.py db init\npython  gendb.py db migrate\npython  gendb.py db upgrade\n\"\"\"\n其实这个文件是可以通过，然后直接在cmd控制台输入：Python gendb.py db init (仅第一次使用的时候需要，生成migrations的目录包)python  gendb.py db migrate （生成数据表）python  gendb.py db upgrade （同步到数据库）\n第一版就先搭建到这里，接下来我们进入整合flask-admin\ngithub地址 ：https://github.com/minsons/xi... 另外，微信也可以打开我的免费视频，效果不怎么样，其实看我文档也够了：\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "1"}