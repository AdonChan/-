{"title": "在 CentOS 5.8 上安装 Graphite - yexiaoxiaobai ", "index": "carbon,监控,python,graphite,centos", "content": "在 CentOS 5.8 上安装 Graphite\n\n标签（空格分隔）： 监控 monitor CentOS 5.8 Graphite\n\n\n首先说一句，在 CentOS 5.8 上安装真的很坑爹。。。\n\n基础环境\n\n\n操作系统内核\n\nuname -a\n\nLinux cloud-test-slave-001 2.6.18-308.el5 #1 SMP Tue Feb 21 20:06:06 EST 2012 x86_64 x86_64 x86_64 GNU/Linux\n\n\n\n操作系统版本\n\n[root@cloud-test-slave-001 ~]# cat /etc/redhat-release \nCentOS release 5.8 (Final)\n\n\n\nPython 版本\n\n[root@cloud-test-slave-001 ~]# python  --version\nPython 2.7\n\n\n必备软件\n\n按照 Graphite 官方文档的要求，需要如下软件：\n\npython2.4 或者更高版本（必选）【建议 2.6 或 2.7 版本】\npycairo (需要 PNG 包支持，即 libpng)（必选）\nmod_python（必选）\ndjango（必选，需要 django 1.4 版本，为什么必须 django 1.4 在后面会说明）\npython-ldap (可选 - needed for ldap-based webapp authentication)\npython-memcached (可选 - needed for webapp caching, big performance boost)\npython-sqlite2 (可选 - a django-supported database module is required)\nbitmap and bitmap-fonts required on some systems, 尤其是在 Red Hat 系统上\n\n\n下面是我目前安装的一些涉及到的软件的版本（可能有多余的，是因为我在虚拟环境安装，没有安装好，只好混装，所以拉出来的有点多）\n\n执行命令 pip freeze 拉出如下清单：\n\nDjango==1.4\nDozer==0.4\nJinja2==2.7.3\nMarkupSafe==0.23\nPyYAML==3.10\nSQLAlchemy==0.9.7\nTwisted==14.0.2\nWebOb==1.4\nWerkzeug==0.9.6\nalembic==0.6.5\nconfigobj==5.0.6\ncroniter==0.3.3\ncssselect==0.9.1\ndaemonize==2.3.1\ndagobah==0.2.3\ndistribute==0.6.49\ndjango-filter==0.7\ndjango-tagging==0.3.1\nlxml==3.3.5\nmicawber==0.3.0\nparamiko==1.11.0\npeewee==2.2.5\npremailer==1.13\npycrypto==2.6.1\npysqlite==2.6.3\npython-dateutil==2.2\npython-memcached==1.53\ntxAMQP==0.6.2\nuWSGI==2.0.7\nvirtualenv==1.11.6\nwhisper==0.9.12\nwsgiref==0.1.2\nzope.interface==4.1.1\n\n\n开始安装\n\n\n\n安装 yum EPEL 源\n\nwget \"http://mirrors.ustc.edu.cn/fedora/epel/5/i386/epel-release-5-4.noarch.rpm\"\nrpm -Uvh epel-release-5-4.noarch.rpm\n\n\n\n安装依赖包\n\nyum install gcc bitmap bitmap-fonts zope\n\n\nyum install openldap openldap24-libs openldap-clients openldap-devel openssl-devel\n\n\npip install pyOpenSSL python-memcached pycrypto  python-ldap  pysqlite uwsgi nginx\n\n\n\n  注：因为我这个目前是测试，所以 nginx 就直接 yum 安装了，版本比较低，只有 0.8，如果是生产，建议源码安装最新的稳定版本。\n\n\npip install django==1.4\n\n\n安装 django-tagging ，默认的 pip install tagging 的这个不行，版本是 0.2.1 ，会报错。\n\npip install django-tagging==0.3.1 或 pip install tagging==0.3.1\n\n\n如果上面这个方法无法安装 django-tagging=0.3.1 那就用源码安装的方法。\n\nwget https://pypi.python.org/packages/source/d/django-tagging/django-tagging-0.3.1.tar.gz --no-check-certificate\ntar -zxvf django-tagging-0.3.1.tar.gz \ncd django-tagging-0.3.1\npython setup.py install\n\n\n\n安装 pycairo\n\n开始好几次就死在安装 pycairo 这个上面，python 2.7 版本的通过 pip   install pycairo 命令安装的不行，对应 python 2.7 版本的 pycairo   包的名字叫做 py2cairo。\n\n安装 py2cairo 包的方法如下：\n\n1）下载 py2cairo 包:\n\nwget http://www.cairographics.org/releases/py2cairo-1.10.0.tar.bz2\ntar -xvf py2cairo-1.10.0.tar.bz2\n\n\n如果上面的版本不行就用下面的方式获取源码包：\n\n git clone git://git.cairographics.org/git/py2cairo\n\n\n要安装 py2cairo 必须要 cairo   包，而且这个包的版本有规定，我这边下载的是 cairo-1.12.2。\n\nwget http://cairographics.org/releases/cairo-1.12.2.tar.xz\n\n\n\ncairo 依赖 libpng 和 pixman，所以需要安装这两个\n\nyum -y install libpng*  pixman*\n\n\n\n  注，有可能这样安装的 pixman 的版本不对，需要需要源码安装\n\n\n源码安装 pixman：\n\nwget http://cairographics.org/releases/pixman-0.22.0.tar.gz\ntar -zxvf pixman-0.22.0.tar.gz\n./configure --prefix=/usr/local\nmake && make install\n\n\n\n  注：这里 pixman 的安装必需要加个    prefix=/usr/local，不然的话，cairo 会找不到再次表示蛋疼。\n\n\n安装 cairo 的正确姿势：\n\ntar -zxvf cairo-1.12.2.tar.xz\ncd cairo-1.12.2\n./configure\nmake && make install\n\n\n安装 py2cairo 的正确姿势：\n\n安装的时候需要明确下 pkgconfig 的位置和 Python 的包路径：\n\ncd py2cairo\nexport PKG_CONFIG_PATH=/usr/local/lib/pkgconfig:$PKG_CONFIG_PATH\nPYTHONPATH=\"/usr/local/lib/python2.7/site-packages/:$PYTHONPATH\"\nLDFLAGS=\"-lm -ldl -lutil\" ./waf configure --prefix=/usr/local\n./waf build\n./waf install\n\n\n经历九九八十一难，终于安装完成。\n\n\n  注：真的是最麻烦的就是 py2cairo 这个家伙，开始折腾了我一天没有安装好，没有安装好就无法出图。。。\n\n\n\n安装 Graphite 三大件\n\npip install whisper carbon graphite-web\n\n\n\n安装数据采集工具 Diamond\n\ngit clone https://github.com/BrightcoveOS/Diamond\ncd Diamond\n\n\n修改 Diamond 的配置文件：\n\ncd Diamond\ncp conf/diamond.conf.example conf/diamond.conf\n\n\ndiamond.conf 配置文件如下：\n\n#\n#Diamond Configuration File\n### Options for the server\n[server]\n# Handlers for published metrics.\nhandlers = diamond.handler.graphite.GraphiteHandler, diamond.handler.archive.ArchiveHandler\n# User diamond will run as\n# Leave empty to use the current user\nuser =\n# Group diamond will run as\n# Leave empty to use the current group\ngroup =\n# Pid file\npid_file = /var/run/diamond.pid\n# Directory to load collector modules from\n# 这个和你的 Diamond 安装路径有关\ncollectors_path = /root/Diamond/src/collectors/\n# Directory to load collector configs from\n# 这个和你的 Diamond 安装路径有关\ncollectors_config_path = /root/Diamond/src/collectors/\n# Directory to load handler configs from\n# 这个和你的 Diamond 安装路径有关\nhandlers_config_path = /root/Diamond/src/diamond/handler\nhandlers_path = /root/Diamond/src/diamond/handler\n# Interval to reload collectors\ncollectors_reload_interval = 3600\n### Options for handlers\n[handlers]\n# daemon logging handler(s)\nkeys = rotated_file\n### Defaults options for all Handlers\n[[default]]\n[[ArchiveHandler]]\n# File to write archive log files\n#需要创建 /var/log/diamond/ 目录\nlog_file = /var/log/diamond/archive.log\n# Number of days to keep archive log files\ndays = 7\n[[GraphiteHandler]]\n### Options for GraphiteHandler\n# Graphite server host\nhost = 127.0.0.1\n# Port to send metrics to\nport = 2003\n# Socket timeout (seconds)\ntimeout = 15\n# Batch size for metrics\nbatch = 1\n[[GraphitePickleHandler]]\n## Options for GraphitePickleHandler\n# Graphite server host\nhost = 127.0.0.1\n# Port to send metrics to\nport = 2004\n# Socket timeout (seconds)\ntimeout = 15\n# Batch size for pickled metrics\nbatch = 256\n[[MySQLHandler]]\n### Options for MySQLHandler\n# MySQL Connection Info\nhostname    = 127.0.0.1\nport        = 3306\nusername    = root\npassword    =\ndatabase    = diamond\ntable       = metrics\n# INT UNSIGNED NOT NULL\ncol_time    = timestamp\n# VARCHAR(255) NOT NULL\ncol_metric  = metric\n# VARCHAR(255) NOT NULL\ncol_value   = value\n[[StatsdHandler]]\nhost = 127.0.0.1\nport = 8125\n[[TSDBHandler]]\nhost = 127.0.0.1\nport = 4242\ntimeout = 15\n[[LibratoHandler]]\nuser = user@example.com\napikey = abcdefghijklmnopqrstuvwxyz0123456789abcdefghijklmnopqrstuvwxyz01\n[[HostedGraphiteHandler]]\napikey = abcdefghijklmnopqrstuvwxyz0123456789abcdefghijklmnopqrstuvwxyz01\ntimeout = 15\nbatch = 1\n# And any other config settings from GraphiteHandler are valid here\n[[HttpPostHandler]]\n### Urp to post the metrics\nurl = http://localhost:8888/\n### Metrics batch size\nbatch = 100\n### Options for collectors\n[collectors]\n[[default]]\n### Defaults options for all Collectors\n# Uncomment and set to hardcode a hostname for the collector path\n# Keep in mind, periods are seperators in graphite\n# hostname = my_custom_hostname\n# If you prefer to just use a different way of calculating the hostname\n# Uncomment and set this to one of these values:\n# smart             = Default. Tries fqdn_short. If that's\nlocalhost, uses hostname_short\n# fqdn_short        = Default. Similar to hostname -s\n# fqdn              = hostname output\n# fqdn_rev          = hostname in reverse (com.example.www)\n# uname_short       = Similar to uname -n, but only the first part\n# uname_rev         = uname -r in reverse (com.example.www)\n# hostname_short    = `hostname -s`\n# hostname          = `hostname`\n# hostname_rev      = `hostname` in reverse (com.example.www)\n# shell             = Run the string set in hostname as a shell command and use its\n#                     output(with spaces trimmed off from both ends) as the hostname.\n# hostname_method = smart\n# Path Prefix and Suffix\n# you can use one or both to craft the path where you want to put metrics\n# such as: %(path_prefix)s.$(hostname)s.$(path_suffix)s.$(metric)s\n# path_prefix = servers\n# path_suffix =\n# Path Prefix for Virtual Machines\n# If the host supports virtual machines, collectors may report per\n# VM metrics. Following OpenStack nomenclature, the prefix for\n# reporting per VM metrics is \"instances\", and metric foo for VM\n# bar will be reported as: instances.bar.foo...\n# instance_prefix = instances\n# Default Poll Interval (seconds)\n# interval = 300\n### Options for logging\n# for more information on file format syntax:\n# http://docs.python.org/library/logging.config.html#configuration-file-format\n[loggers]\nkeys = root\n# handlers are higher in this config file, in:\n# [handlers]\n# keys = ...\n[formatters]\nkeys = default\n[logger_root]\n# to increase verbosity, set DEBUG\nlevel = INFO\nhandlers = rotated_file\npropagate = 1\n[handler_rotated_file]\nclass = handlers.TimedRotatingFileHandler\nlevel = DEBUG\nformatter = default\n# rotate at midnight, each day and keep 7 days\nargs = ('/var/log/diamond/diamond.log', 'midnight', 1, 7)\n[formatter_default]\nformat = [%(asctime)s] [%(threadName)s] %(message)s\ndatefmt =\n### Options for config merging\n# [configs]\n# path = \"/etc/diamond/configs/\"\n# extension = \".conf\"\n#Example:\n# /etc/diamond/configs/net.conf\n# [collectors]\n#\n# [[NetworkCollector]]\n# enabled = True\n\n\n启动 Diamond：\n\npython diamond -c ../conf/diamond.conf\n\n\n\n启动 Grapgite 三大件\n\n初始化 Graphite 数据库：\n\ncd /opt/graphite/webapp/graphite\nmv local_settings.py.example local_settings.py\n\n\n修改 local_settings.py 里面的数据库配置，把下面一段的注释取消：\n\nDATABASES = {\n    'default': {\n        'NAME': '/opt/graphite/storage/graphite.db',\n        'ENGINE': 'django.db.backends.sqlite3',\n        'USER': 'root',\n        'PASSWORD': '123456',\n        'HOST': '',\n        'PORT': ''\n    }\n}\n\n\n初始化 Graphite 数据库：\n\npython manage.py syncdb\n\n\n\n  注：在这个初始化的过程中就可能遇到的错误是 tagging 版本太低，或者是 django 的版本问题，所以才有前面的 django 的版本必须为 1.4，tagging 的版本必须为 0.3.1\n\n\n启动 carbon-cache：\n\ncd /opt/graphite/bin\n./carbon-cache.py start\n\n\n\n  注：这个在启动过程中，可能遇到如下错误：\n\n\nfrom carbon.util import run_twistd_plugin\nFile “/opt/graphite/lib/carbon/util.py”, line 19, in <module>\nfrom twisted.scripts._twistd_unix import daemonize\nImportError: cannot import name daemonize\n\n\n解决方法是修改 /opt/graphite/lib/carbon/util.py 文件，把其 from twisted.scripts._twistd_unix import daemonize 替换成 import daemonize\n\n\n  注：需要安装 daemonize，pip install daemonize\n\n\n然后再次启动即可\n\n启动 graphite，使用 wsgi 启动，在 /opt/graphite/webapp 下新建一个文件 wsgi.py 和一个配置文件 django.xml：\n\nwsgi.py\n\nimport os,sys\n\nif not os.path.dirname(__file__) in sys.path[:1]:\n    sys.path.insert(0, os.path.dirname(__file__))\nos.environ['DJANGO_SETTINGS_MODULE'] = 'settings'\n\nfrom django.core.handlers.wsgi import WSGIHandler\napplication = WSGIHandler()\n\n\ndjango.xml\n\n<uwsgi>\n    <socket>ip:port</socket>\n        <chdir>/opt/graphite/webapp/graphite</chdir> \n        <pythonpath>..</pythonpath>\n    <module>wsgi</module>\n</uwsgi>\n\n\n启动：\n\nuwsgi -x django.xml\n\n\n现在可以愉快的访问了 http://ip:port\n\n\n  建议：不作死就不会死，要安装这个还是不要用 CentOS 5.8 了，太痛苦。。使用 Python 的 virtualenv 环境也会遇到很多问题。\n\n\n比如使用 virtualenv 最新版本的时候，会遇到这个错误：\n\n  OSError: Command /Users/bgbb/Developer/django/vnv/bin/python -c \"import sys, pip;   sys...d\\\"] + sys.argv[1:]))\" setuptools pip failed with error code 2\n\n\n解决办法是降级到  virtualenv 1.10.1 版本：\n\n  pip uninstall virtualenv\n  wget  https://pypi.python.org/packages/source/v/virtualenv/virtualenv-1.10.1.tar.gz --no-check-certificate\n  python setup.py install\n\n\n如果大家安装过程中遇到问题，欢迎交流！\n\n\n  注：该安装方法适用于 CentOS 5.8，其他的版本应该不会遇到我这么多问题。\n\n\n参考资料\n\n\nhttp://blog.chinaunix.net/uid-28769783-id-3652037.html\nhttp://www.dongwm.com/archives/shi-yong-grafanahe-diamondgou-jian-graphitejian-kong-xi-tong/\nhttp://www.linuxsysadmintutorials.com/install-graphite-on-a-centosrhel-server\nhttp://blog.csdn.net/crazyhacking/article/details/8464235\nhttp://viewsby.wordpress.com/2014/05/13/carbon-cache-py-cannot-import-name-daemonize\nhttp://www.tecmint.com/how-to-enable-epel-repository-for-rhel-centos-6-5/\nhttp://graphite.wikidot.com/\n\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "5"}