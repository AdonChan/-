{"title": "两数相除——不允许使用高级运算 - leetcode ", "index": "leetcode,算法,python", "content": "两数相除——不允许使用高级运算\nDivide Two Integers\n\n实现两整数相除，不允许使用乘法、除法、和取余运算。\n如果结果溢出（int范围为-2147483648 ~ 2147483647），返回MAX_INT\n\n题目原文:\n\nDivide two integers without using multiplication, division and mod operator.\nIf it is overflow, return MAX_INT..\n\nexample \ninput: 1001, 2\noutput: 500\n\n思路\n\n利用减法，将被除数减去除数，减去的次数累计即为最后结果\n为了解决效率问题，可以减去除数的倍数，利用位运算，每次除数左移一位（2倍），次数相应加对应的倍数。\n如果左移一位的除数过大，除数还原。\n注意处理除法运算中正负号的问题。\n\n代码\nclass Solution(object):\n    def divide(self, dividend, divisor):\n        \"\"\"\n        :type dividend: int\n        :type divisor: int\n        :rtype: int\n        \"\"\"\n        pos = (dividend < 0) is (divisor < 0)\n        dividend, divisor = abs(dividend), abs(divisor)\n        result = 0\n        while dividend >= divisor:\n            tmp, i = divisor, 1\n            while dividend - tmp >= 0:\n                dividend -= tmp\n                result += i\n                i <<= 1\n                tmp <<= 1\n        if not pos:\n            result = -result\n        return min(2147483647, max(result, -2147483648))\n本题以及其它leetcode题目代码github地址: github地址\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "0"}