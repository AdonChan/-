{"title": "通过deb包安装Python库时怎么生成pyc文件？ - Coffee, Coke and Code ", "index": "pyc,python,deb", "content": "问题\n\n使用Ubuntu系统或者其他基于deb包管理器系统的人，经常通过apt-get install命令来安装Python的库。不知道你们是否注意到，通过这个命令安装Python库后，也会自动生成对应的.pyc文件。但是通过synaptic程序或者dpkg -L package-name显示安装已安装文件就会发现，deb包中只包含了.py文件，并没有包含.pyc文件。那么这些.pyc文件是从哪里来的呢？\n\n答案\n\n我们以python3-bs4包为例来说明。如果你安装过这个包，那么你可能可以从系统的/var/cache/apt/archives中找到python3-bs4*.deb文件。如果找不到，你可以用下面的命令下载一个：\n\napt-get download python3-bs4\n\n\n下载后，使用系统自带的Archive Manager打开这个这个deb文件来查看内容，如下图所示：\n\n其中，要安装的文件是usr目录，安装包的元信息在DEBIAN目录下。我们进入到DEBIAN目录下来看看：\n从上图可以看出，这里免包含了deb包的很多控制文件，我们要关注的是postinst这个文件，这个文件是安装完包的内容之后要执行的脚本，来看下内容：postinst文件就是一个shell脚本，主要工作是执行py3compile这个命令，该命令是一个Python脚本，专门用于在安装deb包格式的Python库的过程中生成对应的.pyc文件。也就是说，在deb包安装时，在post-install-script脚本执行过程中堆刚安装的Python脚本进行了编译，生成了.pyc文件。\n\n题外话\n\ndeb包的内容也可以通过如下命令来查看，这里直接给出示例：\n\n~/tmp/deb$ ls\npython3-bs4_4.3.2-1ubuntu1_all.deb\n~/tmp/deb$ ar vx python3-bs4_4.3.2-1ubuntu1_all.deb\nx - debian-binary\nx - control.tar.gz\nx - data.tar.xz\n~/tmp/deb$ ll\ntotal 128\n-rw-r--r-- 1 diabloneo diabloneo  1709 Dec 17 22:21 control.tar.gz\n-rw-r--r-- 1 diabloneo diabloneo 58368 Dec 17 22:21 data.tar.xz\n-rw-r--r-- 1 diabloneo diabloneo     4 Dec 17 22:21 debian-binary\n-rw-rw-r-- 1 diabloneo diabloneo 60270 Jun  5  2014 python3-bs4_4.3.2-1ubuntu1_all.deb\n~/tmp/deb$ tar -tf control.tar.gz\n./\n./postinst\n./prerm\n./md5sums\n./control\n\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "0"}