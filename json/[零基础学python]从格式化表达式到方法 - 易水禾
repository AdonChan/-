{"title": "[零基础学python]从格式化表达式到方法 - 易水禾 ", "index": "零基础,python", "content": "上一讲，主要介绍了用%表达的一种输出格式化表达式。在那一讲最后又拓展了一点东西，拓展的那点，名曰：格式化方法。因为它知识上是使用了str的format方法。\n\n现在我们就格式化方法做一个详细一点的交代。\n\n基本的操作\n\n所谓格式化方法，就是可以先建立一个输出字符串的模板，然后用format来填充模板的内容。\n\n>>> #先做一个字符串模板\n>>> template = \"My name is {0}. My website is {1}. I am writing {2}.\"\n\n>>> #用format依次对应模板中的序号内容\n>>> template.format(\"qiwsir\",\"qiwsir.github.io\",\"python\")\n'My name is qiwsir. My website is qiwsir.github.io. I am writing python.'\n\n\n当然，上面的操作如果你要这样做，也是可以的：\n\n>>> \"My name is {0}. My website is {1}. I am writing {2}.\".format(\"qiwsir\",\"qiwsir.github.io\",\"python\")\n'My name is qiwsir. My website is qiwsir.github.io. I am writing python.'\n\n\n这些，跟用%写的表达式没有什么太大的区别。不过看官别着急，一般小孩子都区别不到，长大了才有区别的。慢慢看，慢慢实验。\n\n除了可以按照对应顺序（类似占位符了）填充模板中的位置之外，还能这样，用关键字来指明所应该田中的内容。\n\n>>> template = \"My name is {name}. My website is {site}\"\n>>> template.format(site='qiwsir.github.io', name='qiwsir')\n'My name is qiwsir. My website is qiwsir.github.io'\n\n\n关键词所指定的内容，也不一定非是str，其它的数据类型也可以。此外，关键词和前面的位置编号，还可以混用。比如：\n\n>>> \"{number} is in {all}. {0} are my number.\".format(\"seven\",number=7,all=[1,2,3,4,5,6,7,8,9,0])\n'7 is in [1, 2, 3, 4, 5, 6, 7, 8, 9, 0]. seven are my number.'\n\n\n是不是开始感觉有点意思了？看输出结果，就知道，经过format方法得到是一个新的str。\n\n序列对象的偏移量\n\n有这样一个要求：在输出中，显示出一个单词的第一个字母和第三个个字母。比如单词python，要告诉看官，第一字母是p，第三个字母是t。\n\n这个问题并不难。实现方法也不少，这里主要是要展示一下偏移量在format中的应用。\n\n>>> template = \"First={0[0]}, Third={0[2]}\"\n>>> template.format(word)\n'First=p, Third=t'\n\n\nlist也是序列类型的，其偏移量也可。\n\n>>> word_lst = list(word)\n>>> word_lst\n['p', 'y', 't', 'h', 'o', 'n']\n>>> template\n'First={0[0]}, Third={0[2]}'\n>>> template.format(word_lst)\n'First=p, Third=t'\n\n\n对上面的综合一下，稍微啰嗦一点的实验：\n\n>>> template = \"The word is {0}, Its first is {0[0]}. Another word is {1}, Its second is {1[1]}.\"\n>>> template.format(\"python\",\"learn\")\n'The word is python, Its first is p. Another word is learn, Its second is e.'\n\n>>> \"{name}\\'s first is {name[0]}\".format(name=\"qiwsir\")    #指定关键词的值的偏移量\n\"qiwsir's first is q\"\n\n\n值得注意的是，偏移量在序列类型的数据中，因为可以是负数，即能够从右边开始计数。\n\n>>> word\n'python'\n>>> word[-1]\n'n'\n>>> word[-2]\n'o'\n\n\n但是，在模板中，无法使用负数的偏移量。\n\n>>> \"First={0[0]}, End={0[-1]}\".format(word) #报错\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\nTypeError: string indices must be integers, not str\n\n>>> \"First={0[0]}, End={0[5]}\".format(word)  #把-1改为5就可以了。\n'First=p, End=n'\n\n\n当然，放到模板外面是完全可行的。这样就好了：\n\n>>> \"First={0}, End={1}\".format(word[0],word[-1])\n'First=p, End=n'\n\n\ndictionary的键\n\n直接上实验，先观察，再得结论\n\n>>> myinfo\n{'website': 'qiwsir.github.io', 'name': 'qiwsir', 'room': 703}\n>>> template = \"I am {0[name]}\"\n>>> template.format(myinfo)\n'I am qiwsir'\n>>> template = \"I am {0[name]}. My QQ is {qq}\"\n>>> template.format(myinfo,qq=\"26066913\")\n'I am qiwsir. My QQ is 26066913'\n\n\n位置后面跟键，就能得到format的参数中字典的键对应的值。太罗嗦了吧，看例子就明白了。出了根据位置得到，还能够根据关键词得到：\n\n>>> myinfo\n{'website': 'qiwsir.github.io', 'name': 'qiwsir', 'room': 703}\n>>> \"my website is {info[website]}, and I like {0}\".format(\"python\",info=myinfo)    #关键词info引用的是一个字典\n'my website is qiwsir.github.io, and I like python'\n\n\n模板中添加属性\n\n看标题不懂在说什么。那就看实验吧。\n\n>>> import math\n>>> \"PI is {PI.pi}\".format(PI=math)\n'PI is 3.14159265359'\n\n\n这是用关键词，下面换个稍微复杂点，用位置的。\n\n>>> import sys,math\n>>> 'PI is {0.pi}. My lptop runs {1.platform}'.format(math,sys)\n'PI is 3.14159265359. My lptop runs linux2' \n\n\n看官理解了吧。\n\n其它进制\n\n在这个世界上的数学领域，除了有我们常常用到的十进制、十二进制（几点了，这是你我常用到的，钟表面就是12进制）、六十进制（这个你也熟悉的）外，还有别的进制，比如二进制、八进制、十六进制等等。此处不谈进制问题，有兴趣详细了解，请各自google。不过，进制的确在计算机上很重要的。因为机器在最底层是用二进制的。\n\n这里只是说明一下输出时候的进制问题。\n\n>>> \"{0:X}, {1:o}, {2:b}\".format(255,255,255)\n'FF, 377, 11111111'\n\n\n\nX:十六进制,Hex\no:八进制,octal\nb:二进制,binary\n\n顺便补充，对于数的格式化方法输出和格式化表达式一样，就不赘述了。\n\n在格式化方法中，还能够指定字符宽度，左右对齐等简单排版格式，不过，在我的经验中，这些似乎用的不怎么多。如果看官需要，可以google或者到官方文档看看即可。\n\n关于格式化表达式和格式化方法，有的人进行了不少比较，有的人说用这个，有的人倾向用那个。我的建议是，你用哪个顺手就用哪个。切忌门派之见呀。不过，有人传说格式化表达式可能在将来某个版本中废除。那是将来的事情，将来再说好了。现在，你就捡着顺手的用吧。\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "4"}