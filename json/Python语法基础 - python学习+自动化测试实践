{"title": "Python语法基础 - python学习+自动化测试实践 ", "index": "python", "content": "\n今天做下搬运工，把jianshu的直接搬过来调整下jianshu地址：[Python语法基础[1]: https://www.jianshu.com/p/311...\n\n写在最前头：Python 程序对大小写是敏感的！！！\n一、数据类型\n\n\n整数：可以处理任意大小的正负整数；\n\n浮点数：浮点数运算可能会引入四舍五入的误差；\n\n字符串：可以是单引号or双引号括起来的任意文本，但是不包括单引号or双引号本身。   ps：如果字符串本身里含有单引号or双引号，怎么办呢？嘻嘻~   可以使用转义字符“”来进行标识。例如 ' I'm \"ok\"  '  -> I'm \"ok\"\n\n布尔值：只有True、False两种值。在Python中，可以直接使用True、False表示布尔值（注意大小写）   布尔值可以用and 、or 和not进行运算，即数学里的“与或非”。\n\n空值：用None表示。None不能理解为0，因为0是有意义的，但是None是一个特殊的空值。\n\n二、变量\n\n变量不仅可以是数字，还可以是任意数据类型。\n变量名必须是大小写英文、数字和“_”的组合，且不能用数字、空格开头。\n在Python中，等号“=”是赋值语句。“=”代表什么意思。例如：a = 'ABC’  （1）在内存中创建了一个 ’ABC‘ 的字符串；  （2）在内存中创建了一个名为a的变量，并指向’ABC‘。可以把任意数据类型赋值给变量，同一个变量可以反复赋值，而且可以是不同类型的变量。例如：\n\n\n>>> a = 124    # a 是整型 \n>>> print(a) \n124 \n>>> a = 'str'    # a 为字符串 \n>>> print(a) \nstr \nPython是门动态语言：在声明变量时，不需要声明变量的类型，而是在首次指定时就会记录。对于静态语言而言，在定义时则必须制定变量的类型，如果赋值的时候类型不匹配，则会报错。\n三、转义字符 \\\n转义字符表（转）\n\n\n在字符串前加上'r'，则表示接下来的字符串中不进行转义，强制原型输出。   例如：print(r'\\t\\')\n转义符“”，在行末，则表示下一行的内容接着这行继续显示。\n\n四、常量\n\n不能变的量就叫常量。\n在Python中，通常用全部大写的变量名表示常量。   例如：PI=3.1415926   but，这个值也是可以修改的，因为Python没有提供任何机制来保证PI不会被改变。\n\n五、运算符\n运算符表（转）\n\n\n几点要注意“/”：浮点数除法，计算结果是浮点数，即使结果是整数，也表示成浮点数。“//”：地板除，只取计算结果的整数部分。%：除法取余数。\n数组与字符串的 and|or|not 运算\n在python中空字符串为假， 非空字符串为真。 非零的数为真。 研究一下数字和字符串之间、 字符串之间的逻辑操作规律。 \n首先看and操作符：只要左边的表达式为真， 整个表达式返回的值是右边表达式的值。 否则，返回左边表达式的值。\n>>> 9 and \"OK\"\n’OK’\n>>> \"OK\" and 9\n9\n>>> \"OK\" and \"ME\"\n’ME’\n>>> 0 and \"OK\"\n0\nor操作符的规则是：只要两边的表达式都为真， 整个表达式的结果是左边表达式的值； 如果是一真一假， 返回真值表达式的值。 特别注意的是空值和0的情况，这时候返回的是右边的0或空值。\n>>> \"\" or 0\n0\n>>> 0 or \"\"\n''\nnot的情况比较简单：\n>>> not 0\n1\n>>> not ''\n1\n六、I/O\n输入：input()，读取用户的输入，返回的数据类型是str。输出：print()ps：在Python2.* 中，输入输出分别对应为：raw_input()、print “要输出的内容”\n\n❤ thanks for watching, keep on updating...\n\n                ", "mainLikeNum": ["1 "], "mainBookmarkNum": "0"}