{"title": "更pythonic的使用dictionary--Python提高班 - 扑克 ", "index": "python", "content": "下面介绍跟字典相关的一些代码的写法\n\n我们先定义一个dictionary\n\nmydict = {'a': 1,'b': 2, 'c': 3}\n\n\n1. 判断是否包含元素\n\n常见到的写法\n\nmydict.has_key('a')\n\n\n推荐更pythonic写法\n\n'a' in mydict\n\n\n2. 判断是否不包含元素\n\n常见到的写法\n\nnot 'a' in mydict\n\n\n推荐更pythonic写法\n\n'a' not in mydict\n\n\n3. 元素不存在的时候返回默认值\n\n常见到的写法\n\nif 'd' not in mydict:\n    mydict['d'] = 0\nreturn mydict['d']\n\n\n推荐更pythonic写法\n\nreturn mydict.get('d', 0)\n\n\n4. 元素的默认值\n\nprint mydict.setdefault('e', [])\n\n\nsetdefault方法会返回mydict['e']的值如果'e'元素存在, 如果不存在, 则会把mydict['e']设置为[], 然后返回\n\nmydict = defaultdict(list)\nfor x in ['a', 'b']:\n    mydict[x].append(100)\n\n\ndefaultdicy(list)生成的mydict的每个元素的默认值都是空的list\n\n5. 元素的排列顺序\n\nmydict = {'a': 1,'b': 2, 'c': 3}\nfor k, v in mydict.iteritems():\n    print k\n\n\n像上面这段代码输出结果是什么?  是 a b c ?\n\n答案是不一定, 不相信你可以重复试几次, 有可能是a c b之类的结果\n\n所以for in遍历dictionary的时候, 遍历顺序不一定跟定义字典的时候元素排列顺序一致\n\n至于为什么, 跟CPyhon的实现有关, 稍后我再详细解释\n\n如果你需要一致的顺序, 请使用OrderedDict\n\n                ", "mainLikeNum": ["1 "], "mainBookmarkNum": "3"}