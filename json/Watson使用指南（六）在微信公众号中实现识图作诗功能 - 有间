{"title": " Watson使用指南（六）在微信公众号中实现识图作诗功能 - 有间 ", "index": "python,微信公众平台,ibm", "content": "本文章主要是写一下这个项目开发的过程及之间遇到的问题，作为记录，也希望以此为契机认识志同道合的朋友，一起学习交流。\n目录：\n\n概述\n环境准备及相关账号申请\n部署Python Flask应用到Bluemix\n通过Bluemix认证公众微信号\n识图作诗相关功能开发\n总结\n\n概述\n本文将从一个开发人员角度，介绍如何使用Bluemix平台开发和部署Python Flask应用，如何通过Bluemix进行微信公众号认证，最后结合相关Watson服务，实现用户向公众号发送图片，后台识别图片并返回诗文的功能。\nBluemix\nBLuemix是IBM公司推出的一个云平台服务，通过它不仅可以部署本地应用到云端，还可以调用BLuemix本身自带的强大的一系列服务来实现很多功能。\nWatson\nWatson是IBM公司推出的一系列认知计算服务，包括自然语言分类，情感分析，图像识别等等，我在本系列的前几期已经完成了可用Python实现部分的文档翻译，详见\n微信公众平台\n作为一个程序员，使用微信公众号，关注点就不仅仅是发送推文消息了，通过自己开发，来实现一些有趣的功能，做不同于一般的公众号才是我想要的。\n环境准备及相关账号申请\n注册BLuemix账号\n申请地址：http://www.bluemix.net 在页面右上角点击注册，填写相关信息提交申请，Bluemix 会发一封确认邮件到注册邮箱，需要手工进入注册邮箱点击确认，才能成功注册。第一次登陆 Bluemix 控制台的时候，会要求创建工作空间，建议创建在悉尼或英国（虽然访问都很慢）。\n安装CloudFoundry工具\n通过该工具，可以在命令行使用CF相关命令进行与BLuemix之间的交互，包括部署，更新，查询。详见：http://docs.cloudfoundry.org/...\n注册微信公众号\n这个很简单，而且网上一搜很多，我在这里就不说了。\n部署Python Flask应用到Bluemix\nPython Flask\nPython Flask 是基于Python的一种轻量级网络框架，便捷易用。这个应用中Flask仅仅起到传递参数的作用，对于Flask本身的使用不是很多。这就是说，你同样可以仅仅使用Python，因为Python本身也可以提供网络服务。\n创建应用\n在Bluemix首页点击创建应用，新的页面中会显示很多可创建的应用案例，下拉菜单找到Flask，创建，根据提示填写域名等信息。创建后根据页面提示下载模板代码到本地。\n要想在bluemix下成功运行应用，至少需要有manifest.yml，requirements.txt，runtime.txt和app.py这四个文件。\nmanifest.yml\n这是应用程序的基本配置信息，包括域名和主机名。是下载源码后默认的，不需要更改。\nrequirements.txt\n这个文件中包含应用所需要的第三方依赖，比如我的应用里是这样的：\nFlask\nwatson_developer_cloud\nlxml\nflask是Python网络框架。watson_developer_cloud用于调用Watson服务。lxml包用来爬取网络信息。\nruntime.txt\n该文件用来指定需要的Python版本\napp.py\nPython应用的脚本或源代码文件，我会在“识图作诗相关功能开发”做详细说明\n部署应用\n在本地进行应用的开发，并且本地调试和运行成功后就可以部署代码了。在bluemix上点击应用程序，在应用程序菜单选择“入门”，根据提示在本地命令行使用cf命令就可以成功push到BLuemix上。如果过程中遇到问题，可以通过\ncf logs 应用程序名 --recent\n来查看错误\n创建并绑定服务\n在Bluemix应用程序界面找到创建新服务，同创建应用程序一样，新界面会有很多服务可供选择。这里，我选择的是Visual Recognition服务来进行图片识别。创建新服务后，点击连接到现有应用程序，就OK了。关于服务的创建，具体参见Watson使用指南（五）\n通过Bluemix认证公众微信号\n在微信公众号页面打开开发者页面，进行服务器配置。需要注意的是令牌自己随意填写就好。新建auth.py,根据微信官方的文档,获取相关参数：\n\n        token = '微信页面填写的令牌'   \n        signature = request.args.get('signature', '')  \n        echostr = request.args.get('echostr', '')  \n        timestamp = request.args.get('timestamp', '')  \n        nonce = request.args.get('nonce', '')  \n        tmp = [timestamp, nonce, token]  \n        tmp.sort()  \n        tmp = ''.join(tmp)  \n        if ( hashlib.sha1(tmp).hexdigest() == signature ):    \n            return make_response(echostr)\npush代码到Bluemix，在微信页面点击提交，显示提交成功，就完了通过Bluemix认证微信号。\n识图作诗相关功能开发\n顾名思义，识图作诗，就包括识图和作诗两个部分。用到三个文件，visual.py,translate.py,poem.py\nvisual.py\n调用Watson服务，返回的是嵌套字典信息，可以转换成JSON格式然后提取信息。这里直接操作字典提取：\ndef VisualContent(url):\n  visualRecognition = VisualRecognitionV3('2016-05-20', api_key='创建服务后系统返回的api_key')\n\n  content = visualRecognition.classify(images_url = url)\n\n  images = content.get(\"images\")\n  classifiers = images[0].get(\"classifiers\")\n  classes = classifiers[0].get(\"classes\")\n  res = classes[0].get(\"class\")\n  \n\n  return res\ntranslate.py\nWatson服务中有翻译服务，但是不支持英汉互译。而获取到的图片信息都是英文，显然不能直接去用英文来搜索相关诗文。于是我写了这个模块，直接在有道翻译的网页中获取翻译。\n def Translate(word):\n  url = 'http://fanyi.youdao.com/translate?smartresult=dict&smartresult=rule&smartresult=ugc&sessionFrom=http://www.youdao.com/'\n  key = word\n\n  data = {}\n  data['type'] = 'AUTO'\n  data['i'] = key\n  data['doctype'] = 'json'\n  data['xmlVersion'] = '1.6'\n  data['keyfrom'] = 'fanyi.web'\n  data['ue'] = 'UTF-8'\n  data['typoResult'] = 'true'\n\n  data = urllib.parse.urlencode(data).encode(\"utf-8\")\n  content = urllib.request.urlopen(url, data).read().decode(\"utf-8\")\n  json_content = json.loads(content)\n  res = json_content[\"translateResult\"][0][0]['tgt'][:2]\n\n  return res\npoem.py最后一个部分，就是根据图片内容获得诗文信息了，简单的爬虫，用xpath直接获得网页内容。\ndef MakePoem(word):\n  url_base = \"地址\"\n  key = word\n  url = url_base+key\n  res = requests.get(url)\n  res.encoding = 'utf-8'\n  #print(res.text)\n  root = etree.HTML(res.content)\n  items = root.xpath('//div[@class=\"sons\"][2]/p[@style=\"margin-bottom:0px;\"]')[0]\n  item = items.xpath('string(.)')\n  \n  content = item.replace('\\n','').replace(' ','')\n  length = len(content)\n  answer = content[:length-1]\n\n  return answer\n其他值得一提的是，微信公众号中的消息处理都是以xml格式封装的，所以在获取用户消息中，需要解析格式获取消息内容；同样，返回消息时，也要对内容封装后再返回用户。\n总结\n通过这几天微信后台的反馈来看，服务器不稳定，识别内容类别较少，爬取信息不稳定这三个因素经常导致用户会收到“暂时停止服务”的消息。后期添加异常处理模块希望能使错误信息得到人性化反馈。\n这是我的公众号，欢迎关注\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "2"}