{"title": "python中sys，os，time模块的使用（包括时间格式的各种转换） - python技术的魅力 ", "index": "datetime,time,python", "content": "sys模块\nsys.argv: 实现从程序外部向程序传递参数。\n位置参数argv[0]代表py文件本身，运行方法 python xx.py 参数1，参数2 。。\nself = sys.argv[0]\nname = sys.argv[1]\nage = sys.argv[2]\nprint self, name, age\nsys.getdefaultencoding(): 获取系统当前编码，一般默认为ascii。\nprint sys.getdefaultencoding()\nsys.setdefaultencoding(): 设置系统默认编码，\n执行dir（sys）时不会看到这个方法，在解释器中执行不通过，可以先执行reload(sys)，在执行 setdefaultencoding('utf8')，此时将系统默认编码设置为utf8。（python2.7中可能需要这么做）\nreload(sys)\nsys.setdefaultencoding('utf8')\nsys.path: 获取指定模块搜索路径的字符串集合\nsys.path\nsys.platform: 获取当前系统平台。\nprint sys.platform\nsys.exit()\n功能：执行到主程序末尾，解释器自动退出，但是如果需要中途退出程序，可以调用sys.exit函数，带有一个可选的整数参数返回给调用它的程序，表示你可以在主程序中捕获对sys.exit的调用。（0是正常退出，其他为异常）'''\nfor i in range(1, 10):\n    print '第%s次:' % i, i\n    if i == 5:\n        print '第五次退出'\n        sys.exit(0)\nos模块\n1. os.name()——判断现在正在实用的平台，Windows 返回 ‘nt'; Linux 返回’posix'\nprint os.name()\n2. os.getcwd()——得到当前工作的目录。\nprint os.getcwd()\n3. os.listdir()——指定所有目录下所有的文件和目录名。\nprint os.listdir('.')\n4. os.remove()——删除指定文件\nos.remove('aaa.txt')\n5. os.rmdir()——删除指定目录\nos.rmdir('C://Users/xiaoxinsoso/Desktop/aaa')\n6. os.mkdir()——创建目录,注意：这样只能建立一层，要想递归建立可用：os.makedirs()\nos.makedirs('aaa/aaa')\n7. os.path.isfile()——判断指定对象是否为文件。是返回True, 否则False\nprint os.path.isfile('ccc.txt')\nprint os.path.isfile('aaa')\n8. os.path.isdir()——判断指定对象是否为目录。是True, 否则False。例：\nprint os.path.isdir('aaa')\nprint os.path.isdir('ccc.txt')\n9. os.path.exists()——检验指定的对象是否存在。是True, 否则False.例：\nprint os.path.exists('bbb')\nprint os.path.exists('aaa')\nprint os.path.exists('ccc.txt')\n10. os.path.split()——返回路径的目录和文件名。例：\nprint os.path.split('C://Users/xiaoxinsoso/Desktop/aaa/ccc.txt')\n11. os.getcwd()——获得当前工作的目录\nprint os.getcwd()\n12. os.system()——执行shell命令。\n注意：此处运行shell命令时，如果要调用python之前的变量，可以用如下方式：\nvar = 123\nos.environ['var'] = str(var) # 注意此处[]内得是 “字符串”\nos.system('echo $var')\n\nos.system('dir')\n13. os.chdir()——改变目录到指定目录\n14. os.path.getsize()——获得文件的大小，如果为目录，返回0\nprint os.path.getsize('ccc.txt')\n15. os.path.abspath()——获得绝对路径。例：\nprint os.path.abspath('.')\n16. os.path.join(path, name)——连接目录和文件名。例：\nprint os.path.join('c://user/xiaoxinsoso/', 'wenjian.txt')\n17. os.path.basename(path)——返回文件名\nprint os.path.basename('ccc.txt')\n18. os.path.dirname(path)——返回文件路径\nprint os.path.dirname('C://Users/xiaoxinsoso/Desktop/aaa/ccc.txt')\n19. 获得程序所在的实际目录\nif __name__ == \"__main__\":\n    print os.path.realpath(sys.argv[0])\n    print os.path.split(os.path.realpath(sys.argv[0]))\n    print os.path.split(os.path.realpath(sys.argv[0]))[0]\ntime模块\nticks = time.time()\nprint \"当前时间戳为:\", ticks\n获取当前时间\nlocaltime = time.localtime(time.time())\nprint \"本地时间为 :\", localtime\n获取格式化的时间\nlocaltime = time.asctime(time.localtime(time.time()))\nprint \"本地时间为 :\", localtime\n格式化日期\n格式化成2017-01-22 16:36:27形式\nprint time.strftime(\"%Y-%m-%d %H:%M:%S\", time.localtime())\n格式化成Sun Jan 22 16:36:27 2017形式\nprint time.strftime(\"%a %b %d %H:%M:%S %Y\", time.localtime())\n将格式字符串转换为时间戳\na = \"Sat Mar 28 22:24:24 2016\"\nprint time.mktime(time.strptime(a, \"%a %b %d %H:%M:%S %Y\"))\n获取某月日历\ncal = calendar.month(2017, 1)\nprint \"以下输出2016年1月份的日历:\"\nprint cal\n\ndatetime模块\ndatetime类型时间\nnow = datetime.datetime.now()\nprint now\nnow = date time.datetime.now()\nyes_time = now + date time.timedelta(days=-1)    # 前一天的时间\n\ndatetime转string\nstrdatetime = now.strftime(\"%Y-%m-%d %H:%M:%S\")     # 以字符串形式显示时间，显示全部\nstrdatetime1= now.strftime(\"%Y-%m-%d\")     # 以字符串形式显示时间，只显示日期\nprint strdatetime\nprint strdatetime1\n\nstring转datetime\ndatetime1 = datetime.datetime.strptime(strdatetime1, \"%Y-%m-%d\")\nprint datetime1\n\ndatetime转时间戳\ntime_time = time.mktime(datetime1.timetuple())\nprint time_time\n\n时间戳转string\ntime1 = time.strftime('%Y-%m-%d',time.localtime(time_time))\nprint time1\n\ndate转datetime\ndate1 = datetime.date(2012, 11, 19)\ndate = datetime.date.today()\nprint date\nprint datetime.datetime.strptime(str(date),'%Y-%m-%d') #将date转换为str，在由str转换为datetime\nprint datetime.datetime.strptime(str(date1),'%Y-%m-%d') #将date转换为str，在由str转换为datetime\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "1"}