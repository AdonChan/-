{"title": "Ubuntu下使用Django搭建前后端分离的全栈项目 - 个人文章 ", "index": "linux,django,python,vue.js,django-rest-framework", "content": "README\nUbuntu16.04；Python3.6.2；Django1.11；开发工具使用了pycharm（Ubuntu）；\n其他详情配置请见GitHub（https://github.com/pythonyang...）；\n2017-12-08：更新到留言板\n第一步，在Linux环境中搭建Django项目\n//一开始我们会先使用静态文件做配载，随着项目进行我们将会逐步展现前后端分离的做法，并使用vue搭建一个完整的电商网站！\n//本文将不概述环境的搭配，以及Linux下环境开发，我认为你已经了解，并可以使用基本的操作，基于以上信息，下面让我们开始吧！\n\n1.目录下执行— — django-admin.py startproject + ‘你的Django项目名称’；创建Django项目\n2.cd 进入项目目录下 ，执行— — django-admin.py startapp + ‘你的Django应用名称’；创建Django应用\n3.如果您已经下载并配置好了pymysql ，请执行：\n\n#1. 在项目根目录（settings同级目录下的）__init__.py  文件中配置，做数据库关联：\n\n        import pymysql\n\n        pymysql.install_as_MySQLdb()\n\n#2.settings.py中设置 \n    \n     DATABASES = {\n    \n            'default': {\n    \n            'ENGINE': 'django.db.backends.mysql',\n    \n            'NAME': '数据库名称',\n    \n            'USER': '数据库管理名字',\n    \n            'PASSWORD': '密码'\n    \n            # 'HOST': 'IP地址',\n    \n            # 'PORT': '端口',\n    \n        }\n    \n    }\n    \n#3.在MySQL中创建数据库，并授权：\n    1.进入root权限：\n        MySQL -u root -p;\n        #输入密码：进入数据库\n    2. 创建数据库：\n        mysql>CREATE DATABASE testDB DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci;\n    3. 将数据库授权给一个用户，并设置权限：\n        grant all privileges on testDB.* to test@localhost identified by '1234';\n    4. 数据库权限刷新：\n        flush privileges;//刷新系统权限表\n    5.（这里只做最基础的配置解说，如果您有其他需要，请关注我的MySQL方向文章或者百度）\n    \n在settings 中管理我们的app\n4.（在项目的初级阶段，我们并没有上vue的时候，先使用template做静态资源配载）在文件目录中创建文件夹 template\n\n//请注意这里：1.请在pycharm中的template文件夹的右键点击\n【Mark Directory as】> 选择Template Folder\n2.请在pycharm中右键点击\n【Mark Directory as】> 选择 Sources Root\n以上配置是为了编译器可以直接找到相应路径，避免可以import 包但是 IDE中报错的bug\n5.运行Django项目（测试是否可以运行）\n在有manage.py文件的目录下执行—— \n                                Python manage.py runserver \n    在这里可以会提示您更新数据库，先测试是否运行后您可以选择更新。\n    如果您是强迫症，先更新之后在运行本地服务开启Django项目也可以...\n    \n#1. 创建更改的文件\n    python manage.py makemigrations\n#2. 将生成的py文件应用到数据库\n    python manage.py migrate\n\n\n6.打开本地服务，查看Django运行情况：\n好的，到这里Django以及可以初步运行啦~\n\n第二步，基本的Django项目目录：\n1.项目目录结构：\n//注解\n1.创建apps 应用管理包收纳Django项目应用2.创建log文件夹用于收集log日志，进行日志管理3.创建media文件夹用于管理用户上传的图片等信息\n2.将项目的两个重要的地方设置（settings & manage.py）与apps应用管理包做关联\n//注解\n1.将apps >【Mark Directory as】> 选择 Sources Root；2.将之前（用于示例的users取消）Sources Root 模式，让apps管理所有应用3.在manage.py中设置默认views视图导入路径\n\n第三步，通过单页面来研究Django从请求到响应的流程\n1.先准备html 和 css 文件\n2.准备配置项目路由\n先设置views视图以驱动url\n再到url里设置我们的相关路径\n\n检测settings 是否设置了template 根目录默认索引\n\nOK，进入项目根目录 （有manage.py文件） 开启本地服务 终端输入 ： Python manage.py runserver\n打开浏览器 ，输入相应的url\n你应该在输入8000 端口后 /form 点击跳转后，才可以看得到哦\nOK 至此我们已经大致了解了 Django是 通过url 去调用views 视图中的逻辑，从而获取静态文件的（具体配置是通过 settings 实现的）接下来我们来搞一些有趣的东西吧\n\n                ", "mainLikeNum": ["2 "], "mainBookmarkNum": "7"}