{"title": "Item Pipeline - Scrapy详解 ", "index": "网页爬虫,scrapy,python", "content": "Item Pipeline\n当Item在Spider中被收集之后，它将会被传递到Item Pipeline，这些Item Pipeline组件按定义的顺序处理Item。\n每个Item Pipeline都是实现了简单方法的Python类，比如决定此Item是丢弃而存储。以下是item pipeline的一些典型应用：\n\n验证爬取的数据(检查item包含某些字段，比如说name字段)\n查重(并丢弃)\n将爬取结果保存到文件或者数据库中\n\n编写item pipeline\n编写item pipeline很简单，item pipiline组件是一个独立的Python类，其中process_item()方法必须实现:\nimport something\n\nclass SomethingPipeline(object):\n    def __init__(self):    \n        # 可选实现，做参数初始化等\n        # doing something\n\n    def process_item(self, item, spider):\n        # item (Item 对象) – 被爬取的item\n        # spider (Spider 对象) – 爬取该item的spider\n        # 这个方法必须实现，每个item pipeline组件都需要调用该方法，\n        # 这个方法必须返回一个 Item 对象，被丢弃的item将不会被之后的pipeline组件所处理。\n        return item\n\n    def open_spider(self, spider):\n        # spider (Spider 对象) – 被开启的spider\n        # 可选实现，当spider被开启时，这个方法被调用。\n\n    def close_spider(self, spider):\n        # spider (Spider 对象) – 被关闭的spider\n        # 可选实现，当spider被关闭时，这个方法被调用\n启用一个Item Pipeline组件\n为了启用Item Pipeline组件，必须将它的类添加到 settings.py文件ITEM_PIPELINES 配置，就像下面这个例子:\n# Configure item pipelines\n# See http://scrapy.readthedocs.org/en/latest/topics/item-pipeline.html\nITEM_PIPELINES = {\n    #'mySpider.pipelines.SomePipeline': 300,\n    \"mySpider.pipelines.ItcastJsonPipeline\":300\n}\n\n分配给每个类的整型值，确定了他们运行的顺序，item按数字从低到高的顺序，通过pipeline，通常将这些数字定义在0-1000范围内（0-1000随意设置，数值越低，组件的优先级越高）\n重新启动爬虫\n将parse()方法改为入门简介中最后思考中的代码，然后执行下面的命令：\nscrapy crawl itcast\n\n查看当前目录是否生成teacher.json\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "0"}