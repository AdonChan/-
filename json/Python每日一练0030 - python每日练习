{"title": "Python每日一练0030 - python每日练习 ", "index": "python", "content": "问题\n如何判断一个list包含另一个list\n例如我有两个list\nList1 = ['a','c','c']\nList2 = ['x','b','a','x','c','y','c']\n如何判断list2包含了list1\n解决方案\n如果元素的数量不重要，也就是说只判断list1里的所有种类在list2都有出现过，那么使用set()即可\n>>> List1 = ['a','c','c']\n>>> List2 = ['x','b','a','x','c','y','c']\n>>> set(List1) < set(List2)\nTrue\n如果元素的数量也需要考虑，即list1里的元素必须全部在list2里出现并且不重复，那么可以考虑使用Counter\nfrom collections import Counter\n\ndef counterSubset(list1, list2):\n    counter1 = Counter(list1)\n    counter2 = Counter(list2)\n    for k, v in counter1.items():\n        if v > counter2[k]:\n            return False\n    return True\n\nList1 = ['a', 'c', 'c']\nList2 = ['x', 'b', 'a', 'x', 'c', 'y', 'c']\nprint(counterSubset(List1, List2))\n我们还可以使用all()来简化代码\n>>> from collections import Counter\n>>> List1 = ['a', 'c', 'c']\n>>> List2 = ['x', 'b', 'a', 'x', 'c', 'y', 'c']\n>>> counter1 = Counter(List1)\n>>> counter2 = Counter(List2)\n>>> print(all(v <= counter2[k] for k, v in counter1.items()))\nTrue\n讨论\n对于set类型，Python提供了一些操作符来描述两个集合的关系（包含、真包含等等）。而<操作符描述的是，一个集合是否是另一个集合的真子集\nall()接受一个可迭代对象作为参数，并且判断这个可迭代对象的所有元素是否全部为True。相应的，还有any() 函数，用来判断是否存在一个True。\n来源\nStack Overflow\n关注\n欢迎关注我的微信公众号：python每日一练\n\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "0"}