{"title": "Python每日一练0025 - python每日练习 ", "index": "python", "content": "问题\n如何列举一个目录下的所有文件\n解决方案\n使用os.listdir()\n>>> import os\n>>> os.listdir('.')\n['.android', '.BigNox', '.CLion2017.3', '.PyCharm2017.3', '.swt', '3D Objects', 'AppData', 'Application Data']\n如果只需要文本文件的话，就结合os.path.isfile进行过滤\n>>> [f for f in os.listdir('.') if os.path.isfile(f)]\n['inittk.ini', 'inst.ini', 'NTUSER.DAT', 'ntuser.dat.LOG1', 'ntuser.dat.LOG2']\n如果对文件有匹配需求的话，比如只需要某个目录的txt文件，那么可以使用glob模块，例如：\nimport glob\nprint(glob.glob(\"/home/adam/*.txt\"))\n讨论\nos.listdir()会返回一个列表，包含目录下的所有文件，但不会包含.和..，即使他们是存在的。\n而glob提供了Unix风格的路径名匹配，支持*、?、[]匹配，并且glob函数还包含一个可选的参数recursive决定是否递归搜索，下面是一个glob函数的例子\n>>> import glob\n>>> glob.glob('./[0-9].*')\n['./1.gif', './2.txt']\n>>> glob.glob('*.gif')\n['1.gif', 'card.gif']\n>>> glob.glob('?.gif')\n['1.gif']\n>>> glob.glob('**/*.txt', recursive=True)\n['2.txt', 'sub/3.txt']\n>>> glob.glob('./**/', recursive=True)\n['./', './sub/']\n来源\nStack Overflow\n关注\n欢迎关注我的微信公众号：python每日一练\n\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "0"}