{"title": "阿拉伯数字转换成罗马数字 - leetcode ", "index": "leetcode,算法,python", "content": "阿拉伯数字转换成罗马数字\nInteger to Roman\n\n给出一个阿拉伯数字，返回此数字的罗马数字表示\nGiven an integer, convert it to a roman numeral.\nInput is guaranteed to be within the range from 1 to 3999.\n\nexample 1\ninput: CCCLXXXIX\noutput: 389\n思路\n\n用表记录关键的罗马数字和阿拉伯数字，将输入循环除以1000，900，500 ... 这些关键数字，余数为y，将对应的罗马字符串加y次\n看到大神的思路，也是查表，但更加精妙，将数字分解为千位，百位，十位和个位，然后查表将字符串相加，很神奇的思路，刚看到的时候惊叹了一下，代码如下\n\n代码\nclass Solution(object):\n    # 思路1\n    def intToRoman1(self, num):\n        \"\"\"\n        :type num: int\n        :rtype: str\n        \"\"\"\n        arabic = [1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1]\n        roman = ['M', 'CM', 'D', 'CD', 'C', 'XC', 'L', 'XL', 'X', 'IX', 'V', 'IV', 'I']\n        ret = ''\n        i = 0\n        while num:\n            yu = num // arabic[i]\n            ret += roman[i] * yu\n            num = num - yu * arabic[i]\n            i += 1\n        return ret\n\n    # 神奇的思路2\n    def intToRoman2(self, num):\n        M = ['', 'M', 'MM', 'MMM'] #0, 1000, 2000, 3000\n        C = ['', 'C', 'CC', 'CCC', 'CD', 'D', 'DC', 'DCC', 'DCCC', 'CM'] #0, 100, 200, ... , 900\n        X = ['', 'X', 'XX', 'XXX', 'XL', 'L', 'LX', 'LXX', 'LXXX', 'XC'] #0, 10, 20, ... , 90\n        I = ['', 'I', 'II', 'III', 'IV', 'V', 'VI', 'VII', 'VIII', 'IX'] #0, 1, 2, ... , 9\n        return M[num // 1000] + C[(num % 1000) // 100] + X[(num % 100) // 10] + I[num % 10]\n本题以及其它leetcode题目代码github地址: github地址\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "0"}