{"title": "opencv python 背景减法 - 个人文章 ", "index": "opencv-python,opencv,python", "content": "Background Subtraction\nBackgroundSubtractorMOG\nMOG算法，即高斯混合模型分离算法，它使用一种通过K高斯分布的混合来对每个背景像素进行建模的方法(K = 3-5）\nimport numpy as np\nimport cv2\nimport matplotlib.pyplot as plt\n\ncap = cv2.VideoCapture('test.mp4')\nfgbg = cv2.bgsegm.createBackgroundSubtractorMOG()\n\nwhile(1):\n    ret, frame = cap.read()\n\n    fgmask = fgbg.apply(frame)\n\n    cv2.imshow('frame',fgmask)\n    k = cv2.waitKey(30) & 0xff\n    if k == 27:\n        break\n\ncap.release()\ncv2.destroyAllWindows()\n\nBackgroundSubtractorMOG2\nMOG2算法，也是高斯混合模型分离算法，是MOG的改进算法,该算法的一个重要特征是 它为每个像素选择适当数量的高斯分布，它可以更好地适应不同场景的照明变化等.\nimport numpy as np\nimport cv2\nimport matplotlib.pyplot as plt\n\ncap = cv2.VideoCapture('test.mp4')\nfgbg = cv2.createBackgroundSubtractorMOG2()\n\nwhile(1):\n    ret, frame = cap.read()\n\n    fgmask = fgbg.apply(frame)\n\n    cv2.imshow('frame',fgmask)\n    k = cv2.waitKey(30) & 0xff\n    if k == 27:\n        break\n\ncap.release()\ncv2.destroyAllWindows()\n\nBackgroundSubtractorGMG\n该算法结合统计背景图像估计和每像素贝叶斯分割,该算法使用前几个（默认为120）帧进行后台建模。它采用概率前景分割算法，使用贝叶斯推理识别可能的前景对象.在前几帧图像中会得到一个黑色窗口.\nimport numpy as np\nimport cv2\nimport matplotlib.pyplot as plt\n\ncap = cv2.VideoCapture('test.mp4')\nkernel = cv2.getStructuringElement(cv2.MORPH_ELLIPSE,(3,3))\nfgbg = cv2.bgsegm.createBackgroundSubtractorGMG()\n\nwhile(1):\n    ret, frame = cap.read()\n\n    fgmask = fgbg.apply(frame)\n    fgmask = cv2.morphologyEx(fgmask, cv2.MORPH_OPEN, kernel)\n\n    cv2.imshow('frame',fgmask)\n    k = cv2.waitKey(30) & 0xff\n    if k == 27:\n        break\n\ncap.release()\ncv2.destroyAllWindows()\n\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "0"}