{"title": "NetworkX之输入文件GML - 我们俩 ", "index": "python,networkx", "content": "之前看过networkx,igraph都说支持GML格式文件输入形式，直到今天想再Nepidemix load进文件进行分析，发现Nepidemix　对load输入文件要求是GML和gpickle，其余的不支持。所以查阅了下GML究竟是什么。\n\nGML(Graph Modelling Language):\nThere are many different programs that work with graphs but almost all of them use their own file format. As a consequence, exchanging graphs between different programs is almost impossible. Simple tasks like exchange of data, externally reproducible results or a common benchmark suite are much harder than neccessary.\nTherefore, we have developed a new file format for the Graphlet system: GML. GML supports attaching arbitrary information to graphs, nodes and edges, and is therefore able to emulate almost every other format.原文链接 可以看出GML 是网络数据的一个统一标准，相当于度量衡的作用。GML支持关于图，点，边的任意数据的附加，因此可以仿真任意格式的数据。\nnetworkx 提供了函数 可以读GML格式的数据 或者将你load进去的普通网络转换成GML格式的文件。链接请click\n\nread_gml(path,[,encoding, relabel]) 读GML\nwrite_gml(G,path)写网络G进GML文件\nparse_gml(lines[,relael]) 从字符串中解析GML图\ngenerate_gml(G)  Generate a single entry of the graph G in GML format\n\n\n举个栗子：\n我的原始数据是这样，存在一个GML.txt里a 1a 2b 1c 2d 3b 3\n这样构成了一个二分网络，我想提取出第二列网络，即投影。然后将第二列数据的投影网络，用GML数据保\n代码：\n\nG = nx.Graph()   \nf = open('GML.txt')\ni = 0\nfor line in f:\n    i = i+1\n    print i\n    cell = line.split() \n    G.add_edge(cell[0],cell[1])\n\nf.close()\n\nNSet = nx.bipartite.sets(G) \n\nUser = nx.project(G,NSet[1])\nnx.write_gml(User,'Project_Gml')\n\n\n结果：投影的GML文件是这样：\n\ngraph [\n  node [\n    id 0\n    label \"1\"\n  ]\n  node [\n    id 1\n    label \"3\"\n  ]\n  node [\n    id 2\n    label \"2\"\n  ]\n  edge [\n    source 0\n    target 1\n  ]\n  edge [\n    source 0\n    target 2\n  ]\n]\n\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "0"}