{"title": "Python 入门继续用tkinter实现股票查询 - 我的python成长之路 ", "index": "python", "content": "继续练习tkinter，顺便学习如何抓取网页内容。\n使用urllib和requests都能得到url中的内容，有一丁点儿的区别。代码思路：通过Entry获取输入内容（股票代码），然后通过Add按键添加，Del按键删除，添加在列表中的代码都能通过查询按钮获取到最新的股票信息。唯一的遗憾是没有实现手动选择更新频率。与上一篇内容有惊人的相似。\n获取网页内容之前做的工作：1.分析需要获取的网页2.打开chrome浏览器，点击右键查看，网页代码中找到Network，可以看到出现的链接及协议3.决定获取的方式，可以根据对网页的分析结果，采用匹配策略\nimport urllib.request\n#import requests\nimport tkinter\nfrom tkinter import *\n\n\nclass StockParser():\n    def __init__(self,code_data,edit):\n        self.stock_data = code_data\n        self.edit=edit\n        \n        if self.stock_data.split('\"')[1] =='': \n            pass\n        else:\n            print(self.stock_data.split('\"')[1])\n            self.stock_data=self.stock_data.split('\"')[1]\n            name = self.stock_data.split(',')[0]\n            opening_price = float(self.stock_data.split(',')[1])\n            closing_price = float(self.stock_data.split(',')[2])\n            price = float(self.stock_data.split(',')[3])\n            high = float(self.stock_data.split(',')[4])\n            low = float(self.stock_data.split(',')[5])\n            \n            self.edit.insert(END,[name,opening_price,closing_price,high,low,price,])\n    \n\n\nclass Window:\n    def __init__(self, root):\n        self.root = root      # 创建组件\n        self.entryUrl = tkinter.Entry(root,width = 30)\n        self.entryUrl.place(x = 65, y = 15)\n        self.get = tkinter.Button(root,text = '查询', command = self.Get)\n        self.get.place(x = 350, y = 15)\n        self.add = tkinter.Button(root,text = '添加', command = self.Add)\n        self.delete = tkinter.Button(root,text = '删除', command = self.Del)\n        self.add.place(x = 80, y = 55)\n        self.delete.place(x=120,y=55)    \n        #添加布局框 下面的self.edit, self.scrollbar是插入在frame中的哦    \n        self.frame = tkinter.Frame(root, bd=2)\n        self.frame.place(x=200,y = 90)\n        self.scrollbar = tkinter.Scrollbar(self.frame)\n        self.edit = tkinter.Listbox(self.frame,yscrollcommand = self.scrollbar.set,\n                width = 50, height = 22)  \n        self.scrollbar.config(command=self.edit.yview)\n          \n        self.edit.grid(row=1,column=2)#这里用了grid，可以学习一下它的用法\n        self.scrollbar.grid(row=1,column=3,sticky='ew')\n        \n        self.indicate=tkinter.Label(root,text='(Please input stock code:sh000000)',fg='red') #这里是完全没有改动，沿用上一节\n        self.indicate.place(x=65,y=35)\n        self.StockList=[]\n    def ListUpdate(self):\n        self.lb=tkinter.Listbox(self.root,selectmode = BROWSE)\n        for code in self.StockList:\n            self.lb.insert(END,code)\n        self.lb.pack()\n        self.lb.place(x=50,y=90)    \n    def Add(self):\n        code = self.entryUrl.get()    \n        if re.match(r'\\w{2}\\d{6}$',code) and code not in self.StockList:\n            self.StockList.append(code) \n        else:\n            pass\n        self.ListUpdate()\n\n    def Del(self):\n        code=self.entryUrl.get()\n        if code in self.StockList:\n            self.StockList.remove(code)\n        self.ListUpdate()\n\n    def Get(self):\n        if self.edit.get(0):\n            print(self.edit.get(0))\n            self.edit.delete(0,END)\n        self.edit.insert(END,['名 字','开盘价','闭盘价','最高','最低','当前价格'])\n        for code in self.StockList: \n            url='http://hq.sinajs.cn/list=%s' % (code,)\n            page=urllib.request.urlopen(url) #为什么urllib不行呢？\n            html= page.read() #记住这样得到的是html，必要是需要用HTMLParser解析，或者手动解析。\n            stock_data=html.decode('gb2312')\n            #r = requests.get(url)#当然使用requests也是没问题哒               \n            #stock_data= r.text  #text直接得到的就是str格式的\n            #stock_content=r.content.decode('gb2312')#content则需要转换格式\n            hp = StockParser(stock_data,self.edit)\n\ndef main():\n\n    root = tkinter.Tk()\n    root.title('简易股票查询')\n    window = Window(root)\n    root.minsize(600,500)\n    root.maxsize(600,500)\n    root.mainloop()\n\nif __name__ =='__main__':\n    main()\n\n不足之处请见谅\n\n                ", "mainLikeNum": ["1 "], "mainBookmarkNum": "2"}