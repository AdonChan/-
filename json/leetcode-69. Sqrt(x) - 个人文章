{"title": "leetcode-69. Sqrt(x) - 个人文章 ", "index": "python", "content": "题目：\nImplement int sqrt(int x).\nCompute and return the square root of x, where x is guaranteed to be a non-negative integer.\nSince the return type is an integer, the decimal digits are truncated and only the integer part of the result is returned.\nExample 1:\n    Input: 4\n    Output: 2\n    Example 2:\n\n    Input: 8\n    Output: 2\nExplanation: The square root of 8 is 2.82842..., and since\n    the decimal part is truncated, 2 is returned.\n\n思路：\n牛顿迭代法， 导数方程 f'(x)*x'=y'，  任何函数f(x)=y，求解某个y=n,均可以转化为 f(x)-n=0,\n        此后就可以用牛顿迭代法，不断逼近实际待求x值。\n        牛顿迭代共识：f'(x_pre)x_pre+x_pre=x_cur\n应用: 迭代思想，类似于 动态规划思想，pre==>cur，进行动态推断处理\n\nclass Solution:\n    def mySqrt(self, x):\n        \"\"\"\n        :type x: int\n        :rtype: int\n        \"\"\"\n        r=x/2+1\n        while r*r-x>1e-10:\n            r=(r+x/r)/2\n            # print(r*r-x)\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "0"}