{"title": "openpyxl学习——基础篇 - RICERCAR ", "index": "python", "content": "【未完成】欢迎添加问题openpyxl能做到什么。更系统的文档。有没有覆盖的函数。创建新行、新列、统计有多少行、多少列，中文编码问题，单元格为空的问题。既然是处理excel的，excel自身的特点，比如excel函数、图表、合并，等等的特性\n简介\n官方文档 写的不太好，大致就是入门的一些操作和比较有特点的地方。源代码 包含各个类和函数的代码，比较有用。\n创建\n创建workbook:\nfrom openpyxl import Workbook\nwb=Workbook()\n\n创建sheet:\n1,默认表，在创建wb时默认就创建了sheet，使用\nws=wb.active得到\n2,创建新表\nws1=wb.create_sheet(title,index) #插入到结尾\nws2=wb.create_sheet(0)#插入到开头\nwsn=wb.create_sheet(n)#插入到第n个位置   \n创建新行:\n这个方法openpyxl没有给定函数，overstackflow有相关函数，请见：[添加行][3]\n创建新列\n这个方法openpyxl没有给定函数，overstackflow有相关函数，请见：[添加列][4]\n\n保存\nwb.save(file)\n\n\n读\n读workbook 文档\n    使用:\n    from openpyxl import load_workbook\n    wb=load_workbook(filename)\n来源于：openpyxl.reader.excel.load_workbook(filename, read_only=False, use_iterators=False, keep_vba=False, guess_types=False, data_only=False)\n注：filename是路径+文件名*read_only:只读模式，会使得读取更快use_iterators:该lazy模式，默认采用只读模式，所有的worksheet将openpyxl.worksheet.iter_worksheet.IterableWorksheet类型的它的特点是跳过empty cells\n\n读worksheet\nws=wb[sheetname]\nws=wb.get_sheet_by_name(sheetname)\n\n想要知道sheet名可以用wb.get_sheet_names()得到\n\n逐行读\nws.iter_rows(range_string=None, row_offset=0, column_offset=0)\n\nrange-string(string)-单元格的范围：例如('A1:C4')row_offset-添加行column_offset-添加列 返回一个生成器,注意取值时要用value,例如：\nfor var in ws.iter_rows():\n    print var[0].value\n\n读指定行、指定列\nrows=ws.rows#row是可迭代的columns=ws.columns#column是可迭代的\n打印第n行所有数据print rows[n]#不需要用.valueprint columns[n]#不需要用.value\n\n\n读连续单元格\ncell_range = ws['A1':'C2']\n\n\n读指定的单元格\nws.cell('B12').value   ws.cell(row=12,column=2).value\n\n\n读所有单元格数据\nget_cell_collection()\n\n\n写\n写一行源代码和解释\nws.append(iterable)\n\n添加一行到当前sheet的最底部iterable必须是list,tuple,dict,range,generator类型的。1,如果是list,将list从头到尾顺序添加。2，如果是dict,按照相应的键添加相应的键值。\nappend([‘This is A1’, ‘This is B1’, ‘This is C1’])\nappend({‘A’ : ‘This is A1’, ‘C’ : ‘This is C1’})\nappend({1 : ‘This is A1’, 3 : ‘This is C1’})\n\n\n写一列\n\n写一格\nws['A4'] = 4\n\n\n\n                ", "mainLikeNum": ["2 "], "mainBookmarkNum": "9"}