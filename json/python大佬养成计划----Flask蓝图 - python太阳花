{"title": "python大佬养成计划----Flask蓝图 - python太阳花 ", "index": "linux,redhat,mysql,python", "content": "蓝图\n之前我们已经通过代码了解了一些Flask基本的用法，现在出现一个问题，我们要做的功能越来越多，路由是不是都要放在run文件中呢？例如我们在不同的文件都定义了一些路由，如果想要访问他们，是不是要开启很多个不同的服务呢？\nFlask中提供了蓝图，专门用作Flask的模块化。\nFlask使用蓝图的概念来制作应用程序组件和支持应用程序内部或跨应用程序的通用模式。蓝图可以大大简化大型应用程序的工作方式，并为Flask扩展提供了在应用程序上注册操作的中心手段。Blueprint对象的工作方式与Flask应用程序对象类似，但实际上它不是一个应用程序。相反，它是如何构造或扩展应用程序的蓝图。\n总之，蓝图可以使我们的程序更加模块化，不同功能的路由可以放在不同的模块下，最后集中到启动类中。\n首先，新建一个flask项目文件，建立文件结构如下图所示：\n主运行文件\nfrom app.movie.view import movie as movie_bp\nfrom app.tag.view import tag as tag_bp\nfrom flask import Flask\n\n\nif __name__ == '__main__':\n    app = Flask(__name__)\n    app.register_blueprint(tag_bp,url_prefix='/tag')\n    app.register_blueprint(movie_bp,url_prefix='/movie')\n    app.run(port=9099)\n\n模块一：标签\n所有的路由和视图函数依旧单独写在一个文件里面，这里起名view.py\nfrom flask import Blueprint\n\n\ntag = Blueprint('tag',__name__)\n@tag.route('/')\ndef index():\n    return 'ok'\n\n@tag.route('/add/')\ndef add():\n    return 'tag add'\n模块二：电影\n所有的路由和视图函数依旧单独写在一个文件里面，这里起名view.py\nfrom flask import Blueprint\n\n\nmovie = Blueprint('movie',__name__)\n@movie.route('/')\ndef index():\n    return 'ok'\n\n@movie.route('/add/')\ndef add():\n    return 'movie add'\n运行结果\n\n                ", "mainLikeNum": ["1 "], "mainBookmarkNum": "1"}