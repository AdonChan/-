{"title": "Windows 命令行下解决python utf-8中文输出的终极解决方案 - debug小屋 ", "index": "python", "content": "代码参考了这里：http://wiki.python.org/moin/P...\n上文对各种系统无法输出奇葩编码的字符做了总结，本文中只针对windows cmd下GBK编码（cp936）但想执行utf-8编码的Python文件进行修改。\n原理就是：\nAnother is to put an intercept between sys.stdout, and the text wrapper.\n更多还是看参考文章吧，这里直接贴代码：\n[python] view plain copy\n-- coding: utf-8 --\nimport sys  \nclass UnicodeStreamFilter:\ndef __init__(self, target):  \n    self.target = target  \n    self.encoding = 'utf-8'  \n    self.errors = 'replace'  \n    self.encode_to = self.target.encoding  \ndef write(self, s):  \n    if type(s) == str:  \n        s = s.decode(\"utf-8\")  \n    s = s.encode(self.encode_to, self.errors).decode(self.encode_to)  \n    self.target.write(s)  \n      \nif sys.stdout.encoding == 'cp936':\nsys.stdout = UnicodeStreamFilter(sys.stdout)  \n\nif name == \"__main__\":\na = \"你好\"  \nb = u\"你好\"  \nprint a  \nprint b  \n保存成一个py文件，直接import即可。\n这样就实现了linux下和windows下兼容了~\n当然如果不知道原来是什么编码，但想转成utf-8编码的话，将上面的if条件删掉即可。\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "3"}