{"title": "轻松将sqlAlchemy中的对象转换为dict - wangdai ", "index": "sqlalchemy,python", "content": "在用sqlAlchemy写web应用的时候，经常会用json进行通信，跟json最接近的对象就是dict，有时候操作dict也会比操作ORM对象更为方便，毕竟不用管数据库session的状态了。\n\n假设数据库里有一张post表，其中一种方法就是\n\np = session.query(Post).first()\np.__dict__\n\n\n但由于p是sqlAlchemy的对象，所以p.__dict__中会有一些其他的属性比如_sa_instance这种我们不需要关注的\n\n那么我们可以给model的基类加一个方法，假设models.py中原来是这样\n\nBase = sqlalchemy.ext.declarative.declarative_base()\n\nclass Post(Base):\n    __tablename__ = 'post'\n    id = Column(Integer, primary_key=True)\n    title = Column(String)\n\n\n那么我们可以加一个to_dict()方法到Base类中\n\ndef to_dict(self):\n    return {c.name: getattr(self, c.name, None) for c in self.__table__.columns}\n\nBase.to_dict = to_dict\n\n\n这样就可以\n\np = session.query(Post).first()\np.to_dict()\n\n\n当然，如果model没有和table绑定的话model里是没有__table__的信息的，可能也会出问题，不过我目前觉得这样最方便了\n\n                ", "mainLikeNum": ["1 "], "mainBookmarkNum": "2"}