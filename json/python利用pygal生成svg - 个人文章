{"title": "python利用pygal生成svg - 个人文章 ", "index": "python", "content": "python生成SVG图片\npython 读取mysql数据，生成svg图片\n工具\n\npygal\nMySQLdb：\n\n安装：pip install mysql-python\n下载：这里下载\n\n\n祭出全部代码：\n# coding=utf-8\nimport pygal\nimport MySQLdb\n\ndef get_data():\n    db=MySQLdb.connect(host='localhost',user='root',passwd='***',db='movie',charset='utf8')\n    cursor = db.cursor()\n    cursor.execute('select grade,count(2) from movie_info group by grade;')\n    datas=cursor.fetchall()\n    count=[]\n    for data in datas:\n        count.append(int(data[1]))\n        #grade=data[0]\n        #count=data[1]\n    return count\ndef main():\n    a=range(81,97)\n    grade = []\n    for b in range(81,97):\n        c=b/10.0\n        grade.append(c)\n    chart_count=get_data()\n    #for chart_count in chart_data:\n    movie_chart=pygal.Line()\n    movie_chart.title='movie chart'\n    movie_chart.x_labels=map(str, grade)\n    movie_chart.add('count',chart_count)\n    movie_chart.render_to_file(r'C:\\Users\\legolas\\Desktop\\movie_chart.svg')\nif __name__ == '__main__':\n    main()\n\n\n开始分析代码\n操作数据库\n\n在我上一篇文章中生成过爬虫数据库，你们可以先看下，在这里，先用MySQLdb模块的connect方法创建链接对象，接着创建一个cursor光标对象.\n注意：链接/光标模式是数据库编程中常用的模式\n\n链接模式除了要链接数据库之外，还要发送数据库信息，处理回滚操作，创建新的光标对象，等等。\n一个光标跟踪一种状态信息，比如跟踪数据库的使用状态，当有多个数据库，正好需要向所有数据库写内容，就需要多个光标来处理，光标内包含最后一次的查询结果，所以可以使用 fetchone() 方法获取一条数据，一个连接可以用多个光标。\n\n\n处理数据库数据\n通过datas=cursor.fetchall()获取到tuple格式的数据，先定义一个空的list用来装数据。用for遍历读出数据。select grade,count(2) from movie_info group by grade;查询评分，并统计各个评分的数量，按评分高低排序。\n主程序\n分析豆瓣电影top250，可以看出，分数在8.1至9.7之间，为了方便，直接通过→\nfor b in range(81,97):\n        c=b/10.0\n生成`8.1,8.2,8.3,8.4......9.7数组movie_chart=pygal.Line()生成折线图....诶，扯不下去了，结贴睡觉。\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "1"}