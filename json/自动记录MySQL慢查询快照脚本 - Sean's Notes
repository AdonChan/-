{"title": "自动记录MySQL慢查询快照脚本 - Sean's Notes ", "index": "python,mysql", "content": "Python完成的一个小程序，用于杀掉 MySQL 上的异常线程，如慢查询、处于Sleep状态的。项目地址：https://github.com/seanlook/m...  \n写这个脚本的初衷是在使用阿里云RDS的过程中，数据库出现异常，需要快速恢复。网上有许多类似的kill脚本，都是通过 mysqladmin 实现的。然而 Ali-RDS 环境有以下限制：\n\n不提供 SUPER 权限的用户，也就是用户只能 kill 自己的线程\n当连接数暴增时，外部用户无法登陆，包括控制台\n\n为了解决上午2大问题，该 python 脚本通过在db实例上，使用多线程的方式，为每个用户保留一个连接，并实时读取指令配置文件 mysqk.ini，发现有 kill 需求时，利用对应用户已有连接找到 information_schema.processlist 中符合条件的线程，并 kill 。\n说明：该脚本在9月份做过一次重写，7月份的版本（分支 old_0.5.0）是每实例每用户，对应一个线程，db实例一多线程数也太多，看得始终不太优雅，于是改成了一个db实例一个线程，维护同时维护多个用户的会话。同时新版也加入了更多的功能，如按时间窗口检查，包含或排除特定连接，邮件通知，配置项覆盖。\n特性\n\n始终通过 mysql ping 维持一个长连接，并有断开自动重来机制，解决没有连接可用的尴尬局面\n每个db实例有自己的线程，避免需要单独登陆个别用户去kill的繁复操作。如果你具有 SUPER 权限，也可以简化配置做到兼容\n\n能够分开应对需要杀死线程的场景：\n\n长时间运行超过 N 秒的\nSleep 状态的事务 （一般不建议，但有时候kill它，可以快速释放连接给管理员使用）\n排除一些线程不能kill，如 Binlog dump\n包含特定关键字的线程要kill\n\n\n出现符合条件的线程时，会对当时的processlist, engine status，lock_wait 做一个快照，并邮件发出\n有试运行dry_run模式，即执行所有的检查过程但不真正kill\n支持只在时间窗口内运行，考虑到晚上一些长任务不检查\n密码加密\n\n<!-- more -->\n快速使用\n需要pip安装MySQL-python和pycrypto两个库，只在python 2.7上有测试。\n在 settings.py 里面设置连接的用户名和密码信息。这里假设同一批db的要check的认证信息是一样的，指定的用户既用于登录认证，也用于告知脚本哪些用户需要被检查。密码要通过 prpcryptec.py 加密，加密的密钥需写入脚本本身的 KEY_DB_AUTH变量。（担心泄露的话，把mysqk.py编译成 pyc 来跑）\n在 mysqk.ini 主配置文件里面\n\ndb_info 节设置需要被检查的数据库地址，如 db01=10.0.200.100:3306\n可分别 db01等指定需要kill thread的选项。[id_db01] 则默认复用 [db_commkill] 的选项\ndb_comconfig 节设置 db_puser 为能查看到所有processlist的权限用户，且在 settings.py 的DB_AUTH中已指定\n只想执行检查，并不想真正kill异常线程，确认 dry_run不等于0\n\nHere we go!\n配置项说明\nmysqk.ini：\nmail_config\n邮件通知相关设置，smtp服务地址和认证信息。mail_receiver= 设置空，表示不发邮件\ndb_info\n设置要检查kill哪些数据库实例.格式：<dbid>=<host>:<port>，dbid是唯一表示db实例的，后面设置各db需要被kill的选项，小节配置名就是 id_<dbid>；端口必需指定。\n在这里出现的db实例都会被执行检查，可用 ; 注释，但需要重启脚本。\ndb_comconfig\n检查用公共配置，实时生效。\n\ndb_puser：指定一个用户名用于 show processlist，需要的权限：PROCESS、information_schema库查看。可以认为是一个代表用户，检查异常thread，把结果提供给有该thread杀掉权限用户。\n\nrun_max_count：执行检查的次数，是一个全局控制开关。每次修改这个值都会重新开始检查，即一个 clean start，让刚修改的配置生效。\n\n为 0 表示脚本不进行任何检查，只简单维护与数据库的连接存活。存活检查频率在 settings.py 由 CHECK_CONFIG_INTERVAL × CHECK_PING_MULTI决定\n为 999 表示会在后台一致检查连接线程（但不一定有符合kill条件的），检查的频率在 settings.py 里面 CHECK_CONFIG_INTERVAL 指定\n为其它值时，表示检查次数满后停止检查\n\n\ndry_run：是否开启试运行模式，为0表示真实kill，为1或其它值表示试运行。试运行模式可用于监控慢查询并告警。注意同一会话线程ID只告警一次\nrun_time_window：运行的检查的时间窗口，格式如 08:00-22:00，在这个时间以外不执行检查，留空表示不限制。主要考虑晚上一些统计任务可能出现“异常”线程。\n\ndb_commkill\nkill用公共配置，实时生效，会被 id_<dbid> 节的选项覆盖。\nk_user：很关键的一个选项，表示你要检查并kill哪些数据库用户，多个用逗号分隔（不要带引号）。    为 all 时，表示要检查 settings.py 里 DB_AUTH 指定的所有用户\n为 none 时，表示不kill任何异常线程，效果与设置了 dry_run 模式相当\n\nk_longtime：执行超过设定值的sql则认为异常。一般大于 CHECK_CONFIG_INTERVAL\nk_sleep：Sleep超过设定秒的sql则认为异常，为 0 表示不杀掉sleep状态的线程\nk_exclude：排除掉那些特定关键字的线程，比如复制线程、管理员的连接等\nk_include：包含这些特定关键字的线程，需要被kill。注意，它作用在满足 k_user 和 k_exclude 的前提之下。    k_exclude与k_include 的值是支持python re模块正则的格式，不要带引号\n\nid_dbid\n这部分区域的配置项与 db_commconfig 相同，用于针对个别db的kill选项。\n使用建议\n两种组合模式：\n\n设置 dry_run=0，默认 k_user=none，当数据库出现异常时，主动修改对应db的k_user值，动态kill\n设置 dry_run=1，默认 k_user=all，相当于运行在daemon模式，有慢查询则邮件通知，并且记录下当时的信息\n\n当然你也可以dry_run=0，k_user=all，让程序一直在后台跑并kill，但生产环境极不推荐。\n有日志和快照文件可以查看。\n配置文件示例\nmysqlk.ini :\n[mail_config]\nmail_host=smtp.exmail.qq.com\nmail_user=xxx@ecqun.com\nmail_pass=xxxxxx\n\nmail_receiver=\n\n[db_info]\ncrm0=192.168.1.125:3306\ncrm1=192.168.1.126:3306\ncrm2=192.168.1.127:3306\ncrm3=192.168.1.128:3306\nbase=10.0.200.142:3306\n\n[db_commconfig]\ndb_puser=ecuser\n\n; how many kill times once this config file changed\n; 0: DISABLE all kill\n; 999: always kill threads that meet kill conditions\n; default: 1\n; can not be inherit\nrun_max_count=999\ndry_run=1\nrun_time_window=08:00-22:00\n\n\n[db_commkill]\nk_user=all\nk_longtime=10\nk_lock=1\nk_sleep=0\n\nk_exclude=Binlog|ecdba|Daemon\nk_include=select sleep\\(17\\)\n\n\n[id_crm0]\n; k_user: who's threads to be killed. use comma to separate\n;         none: do not kill anyone's threads\n;         all: kill all user's threads (with other where conditions)\n; default: none\nk_user=all\n\n; k_longtime: filter the threads who's running time is longer than this\n;             0: ignore the time > x  condition\n; default: 10\nk_longtime=10\n\n; k_sleep: whether kill sleepd threads or not\n;          0: do not kill command='Sleep' threads from processlist\n;          when it set to 1, usually it's subset of k_longtime condition\n; default: 0\nk_sleep=0\n\n[id_crm1]\nk_user=ecuser\nk_longtime=10\nk_sleep=0\n\n[id_crm2]\nk_user=all\nk_longtime=10\nk_sleep=0\n\n[id_crm3]\n\n原文链接地址：http://seanlook.com/2016/09/2...\n\n\n                ", "mainLikeNum": ["1 "], "mainBookmarkNum": "0"}