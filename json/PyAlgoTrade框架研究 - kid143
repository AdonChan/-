{"title": "PyAlgoTrade框架研究 - kid143 ", "index": "python", "content": "最近研究量化交易，看了几个回测的框架，最后盯上PyAlgoTrade这个项目。感觉很不错，支持\n策略回测和实盘交易，提供全面的技术分析接口，算是python的量化交易框架里比较出色的作品。所以对这个框架进行了一番研究。\n\n程序化交易系统的编程范式：事件驱动的编程\n\n量化交易，一般是采用统计学和数学工具，对资产的各个方面进行定量分析，并制订程序化的交易策略严格执行来获得收益。这里面有两大核心任务，\n一个是数据分析，一个是程序化交易。\n\n与纯粹的数据分析不同，因为有交易动作的存在，同时，在实盘交易中，还要实时更新价格、成交量等数据。这里面可以很明显的看到系统的结构：\n\n数据分析模块----行情接口和数据源----交易订单管理模块----交易下单API\n\n这几个模块之间还存在状态一致性的维护。因此，交易系统的设计，一般采用事件驱动的设计。比如MetaTrader 4的设计，MQL也是采用事件回调来计算指标或者进行EA交易。PyAlgoTrade也是基于这个理念开发的。PyAlgoTrade自己封装了一套事件分发机制，具体的实现可以参考：observer和dispatcher这两个模块\n\n数据结构的取舍\n\n量化交易中的数据以资产价格或者成交量的时间序列为主，这类序列化数据的分析框架有很多。大部分的科学计算框架，比如：Numpy、SciPy、statsmodels、scikit-learn等等，都支持序列或者Array的分析。在Python的科学计算框架体系中，Numpy是核心，其核心的ndarray数据结构也被广泛使用于其他数据分析框架之中。但是尽管ndarray适用于分析领域，在程序化交易中，仍然希望数据结构内的变化依然能有一个对外的通知，需要一个带有事件支持的数据结构。因此PyAlgoTrade并没有采用ndarray或者pandas的dataframe作为基础数据结构，而是自行封装了一个DataSeries结构，以及针对每个K线或者蜡烛图的Bar结构。\n\n与数据分析框架的整合方式\n\n尽管因为需求的原因，需要单独实现一套数据结构，但是要使用主流的分析框架，依然需要使用ndarray这样的数据结构。这里就存在一个数据转换的问题。同时，由于实盘交易的原因，PyAlgoTrade策略实现上，以复写onBars方法（其意义与MQL中的onTick方法类似）为主，因此也是需要每次更新Tick数据就进行一次计算。\n这里就涉及到一个移动窗口问题。PyAlgoTrade也对此做了一定的封装。这里可以参考：technical.EventWindow这个类。\n而talibext.indicator模块中包含了talib的封装。\n\n                ", "mainLikeNum": ["1 "], "mainBookmarkNum": "18"}