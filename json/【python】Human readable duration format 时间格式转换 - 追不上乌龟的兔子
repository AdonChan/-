{"title": "【python】Human readable duration format 时间格式转换 - 追不上乌龟的兔子 ", "index": "算法,python", "content": "背景\nCodeWar上的一道原题，通过格式划字符串精简了代码结构，省去了很多条件判断语句。\n题目描述\nYour task in order to complete this Kata is to write a function which formats a duration, given as a number of seconds, in a human-friendly way.\nThe function must accept a non-negative integer. If it is zero, it just returns \"now\". Otherwise, the duration is expressed as a combination of years, days, hours, minutes and seconds.\nIt is much easier to understand with an example:\nformat_duration(62)    # returns \"1 minute and 2 seconds\"  format_duration(3662)  # returns \"1 hour, 1 minute and 2 seconds\"\nNote that spaces are important.\nDetailed rules\nThe resulting expression is made of components like 4 seconds, 1 year, etc. In general, a positive integer and one of the valid units of time, separated by a space. The unit of time is used in plural if the integer is greater than 1.\nThe components are separated by a comma and a space (\", \"). Except the last component, which is separated by \" and \", just like it would be written in English.\nA more significant units of time will occur before than a least significant one. Therefore, 1 second and 1 year is not correct, but 1 year and 1 second is.\nDifferent components have different unit of times. So there is not repeated units like in 5 seconds and 1 second.\nA component will not appear at all if its value happens to be zero. Hence, 1 minute and 0 seconds is not valid, but it should be just 1 minute.\nA unit of time must be used \"as much as possible\". It means that the function should not return 61 seconds, but 1 minute and 1 second instead. Formally, the duration specified by of a component must not be greater than any valid more significant unit of time.\nFor the purpose of this Kata, a year is 365 days and a day is 24 hours.\n解题思路\n题目是很简单的，关键是如何优雅地完成是否在当前时间单位后添加's'和','或者'and'，我的代码里运用了很多\ntrue_value if condition else false_value\n语句。\n代码\ndef format_duration(seconds):\n    if seconds == 0: return \"now\"\n    origin = seconds\n    dic = {\n        'year': 60 * 60 * 24 * 365,\n        'day': 60 * 60 * 24,\n        'hour': 60 * 60,\n        'minute': 60,\n        'second': 1\n    }\n    spent = {}\n    ans = \"\"\n    for x in ['year','day','hour','minute','second']:\n        spent[x] = seconds // dic[x]\n        ans += \"{}{} {}{}\".format('' if seconds == origin else ' and ' if seconds % dic[x] == 0 else ', ',spent[x],x,'s' if spent[x] > 1 else '') if spent[x] > 0 else ''\n        seconds %= dic[x]\n    return  ans\n感想\nif else 表达式真是一个神器。\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "0"}