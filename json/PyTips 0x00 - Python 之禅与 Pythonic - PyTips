{"title": "PyTips 0x00 - Python 之禅与 Pythonic - PyTips ", "index": "pytips,python", "content": "Python 之禅与 Pythonic\nPython 之禅是 Python 语言的设计哲学与所倡导的编程理念，Pythonic 则是指基于 Python 理念编写更加符合 Python 语法习惯（idiomatic Python）的代码，这也是本项目所追求的目标，因此以本篇作为开头。\nimport this\nThe Zen of Python, by Tim Peters\n\nBeautiful is better than ugly.\nExplicit is better than implicit.\nSimple is better than complex.\nComplex is better than complicated.\nFlat is better than nested.\nSparse is better than dense.\nReadability counts.\nSpecial cases aren't special enough to break the rules.\nAlthough practicality beats purity.\nErrors should never pass silently.\nUnless explicitly silenced.\nIn the face of ambiguity, refuse the temptation to guess.\nThere should be one-- and preferably only one --obvious way to do it.\nAlthough that way may not be obvious at first unless you're Dutch.\nNow is better than never.\nAlthough never is often better than *right* now.\nIf the implementation is hard to explain, it's a bad idea.\nIf the implementation is easy to explain, it may be a good idea.\nNamespaces are one honking great idea -- let's do more of those!\n\nPython 之禅，by Tim Peters\n优美胜于丑陋\n明确胜于隐晦\n简单胜于复杂\n复杂胜于凌乱\n扁平胜于嵌套\n稀疏胜于紧凑\n可读性至关重要\n即便特例，也需服从以上规则\n除非刻意追求，错误不应跳过\n面对歧义条件，拒绝尝试猜测\n解决问题的最优方法应该有且只有一个\n尽管这一方法并非显而易见（除非你是Python之父）\n动手胜于空想\n空想胜于不想\n难以解释的实现方案，不是好方案\n易于解释的实现方案，才是好方案\n命名空间是个绝妙的理念，多多益善！\n参考\n\n《Python之禅》的翻译和解释\nWhat is Pythonic?\n\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "4"}