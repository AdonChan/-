{"title": "Django安装配置mysql - 个人文章 ", "index": "mysql,django,python", "content": "安装mysql\n首先安装pymysql\npip install pymysql\n然后安装mysqlclient\npip install mysqlclient\n在安装过程中可能会报类似以下错误（因为我的已经安装成功了，找了类似的图）：\n在window下安装python的包会出现各种问题，https://www.lfd.uci.edu/~gohl...这个网站就是专门用于解决window下python安装的问题。你可以去下载对应的文件进行安装。\n搜索mysqlclient找到对应的文件，我使用的是python3.6电脑是64位的，就找到对应的whl文件下载到本地。\npip install c://mysqlclient-1.3.13-cp36-cp36m-win_amd64.whl\n这样就大功告成了。\n配置\n找到Django下/项目名/settings.py文件,配置一下\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.mysql',//数据库类型\n        'NAME': 'demo', //数据库名称\n        'HOST':'localhost', //域名\n        'PORT':'3306', //端口号\n        'USER':'root', //用户名\n        'PASSWORD':'123456' //密码\n    }\n}\n这样配置就完成了。\n改变数据库\n现在我们来尝试下是否已经能够正常操作数据库。  先生成一个app，举例叫做Person\npython manage.py startapp Person\n然后在models.py文件中创建数据库表\nfrom django.db import models\n\nclass Person(models.Model):\n    first_name = models.CharField(max_length=30)\n    last_name = models.CharField(max_length=30)\n只做示例，随手建了两个字段。既然数据库表都有了，现在尝试是否能够改变数据库！\npython manage.py migarte//为改动创建迁移记录\n\npython manage.py migarte//把记录同步到数据库，做修改数据库的操作\n命令行显示内容如上，基本就问题不大，再看一下数据库大功告成啦！\n\n                ", "mainLikeNum": ["2 "], "mainBookmarkNum": "0"}