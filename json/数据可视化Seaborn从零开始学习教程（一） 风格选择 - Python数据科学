{"title": "数据可视化Seaborn从零开始学习教程（一） 风格选择 - Python数据科学 ", "index": "seaborn,python", "content": "作者：xiaoyu微信公众号：Python数据科学知乎：python数据分析师\n\n最近在做几个项目的数据分析，每次用到seaborn进行可视化绘图的时候总是忘记具体操作。虽然seaborn的官方网站已经详细的介绍了使用方法，但是毕竟是英文，而且查找不是很方便。因此博主想从零开始将seaborn学习一遍，做一个总结，也希望供大家使用参考。\nSeaborn简介\nseaborn同matplotlib一样，也是Python进行数据可视化分析的重要第三方包。但seaborn是在 matplotlib的基础上进行了更高级的API封装，使得作图更加容易，图形更加漂亮。\n博主并不认为seaborn可以替代matplotlib。虽然seaborn可以满足大部分情况下的数据分析需求，但是针对一些特殊情况，还是需要用到matplotlib的。换句话说，matplotlib更加灵活，可定制化，而seaborn像是更高级的封装，使用方便快捷。\n应该把seaborn视为matplotlib的补充，而不是替代物。\nSeaborn学习内容\nseaborn的学习内容主要包含以下几个部分：\n\n\n风格管理\n\n绘图风格设置\n颜色风格设置\n\n\n\n绘图方法\n\n数据集的分布可视化\n分类数据可视化\n线性关系可视化\n\n\n\n结构网格\n数据识别网格绘图\n\n\n本次将主要介绍风格管理的使用。\n风格管理 - 绘图风格设置\n除了各种绘图方式外，图形的美观程度可能是我们最关心的了。将它放到第一部分，因为风格设置是一些通用性的操作，对于各种绘图方法都适用。\n让我们先看一个例子。\n%matplotlib inline\nimport numpy as np\nimport matplotlib as mpl\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nnp.random.seed(sum(map(ord, \"aesthetics\")))\n我们定义了一个简单的方程来绘制一些偏置的正弦波，用来帮助我们查看不同的图画风格是什么样子的。\ndef sinplot(flip=1):\n    x = np.linspace(0, 14, 100)\n    for i in range(1, 7):\n        plt.plot(x, np.sin(x + i * .5) * (7 - i) * flip)\nmatplotlib默认参数下绘制结果是这样的：\nsinplot()\n\n转换为seaborn默认绘图，可以简单的用set()方法。\nsns.set()\nsinplot()\n\nSeaborn 将 matplotlib 的参数划分为两个独立的组合。第一组是设置绘图的外观风格的，第二组主要将绘图的各种元素按比例缩放的，以至可以嵌入到不同的背景环境中。\n操控这些参数的接口主要有两对方法：\n\n控制风格：axes_style(), set_style()\n\n缩放绘图：plotting_context(), set_context()\n\n\n每对方法中的第一个方法（axes_style(), plotting_context()）会返回一组字典参数，而第二个方法（set_style(), set_context()）会设置matplotlib的默认参数。\nSeaborn的五种绘图风格\n有五种seaborn的风格，它们分别是：darkgrid, whitegrid, dark, white, ticks。它们各自适合不同的应用和个人喜好。默认的主题是darkgrid。\nsns.set_style(\"whitegrid\")\ndata = np.random.normal(size=(20, 6)) + np.arange(6) / 2\nsns.boxplot(data=data);\n\nsns.set_style(\"dark\")\nsinplot()\n\nsns.set_style(\"white\")\nsinplot()\n\nsns.set_style(\"ticks\")\nsinplot()\n\n移除轴脊柱\nwhite 和 ticks两个风格都能够移除顶部和右侧的不必要的轴脊柱。通过matplotlib参数是做不到这一点的，但是你可以使用seaborn的despine()方法来移除它们：\nsinplot()\nsns.despine()\n\n一些绘图也可以针对数据将轴脊柱进行偏置，当然也是通过调用despine()方法来完成。而当刻度没有完全覆盖整个轴的范围时，trim参数可以用来限制已有脊柱的范围。\nf, ax = plt.subplots()\nsns.violinplot(data=data)\nsns.despine(offset=10, trim=True);\n\n你也可以通过despine()控制哪个脊柱将被移除。\nsns.set_style(\"whitegrid\")\nsns.boxplot(data=data, palette=\"deep\")\nsns.despine(left=True)\n\n临时设置绘图风格\n虽然来回切换风格很容易，但是你也可以在一个with语句中使用axes_style()方法来临时的设置绘图参数。这也允许你用不同风格的轴来绘图：\nwith sns.axes_style(\"darkgrid\"):\n    plt.subplot(211)\n    sinplot()\nplt.subplot(212)\nsinplot(-1)\n\n覆盖seaborn风格元素\n如果你想定制化seaborn风格，你可以将一个字典参数传递给axes_style()和set_style()的参数rc。而且你只能通过这个方法来覆盖风格定义中的部分参数。\n如果你想要看看这些参数都是些什么，可以调用这个方法，且无参数，这将会返回下面的设置：\nsns.axes_style()\n{'axes.axisbelow': True,\n 'axes.edgecolor': '.8',\n 'axes.facecolor': 'white',\n 'axes.grid': True,\n 'axes.labelcolor': '.15',\n 'axes.linewidth': 1.0,\n 'figure.facecolor': 'white',\n 'font.family': [u'sans-serif'],\n 'font.sans-serif': [u'Arial',\n  u'DejaVu Sans',\n  u'Liberation Sans',\n  u'Bitstream Vera Sans',\n  u'sans-serif'],\n 'grid.color': '.8',\n 'grid.linestyle': u'-',\n 'image.cmap': u'rocket',\n 'legend.frameon': False,\n 'legend.numpoints': 1,\n 'legend.scatterpoints': 1,\n 'lines.solid_capstyle': u'round',\n 'text.color': '.15',\n 'xtick.color': '.15',\n 'xtick.direction': u'out',\n 'xtick.major.size': 0.0,\n 'xtick.minor.size': 0.0,\n 'ytick.color': '.15',\n 'ytick.direction': u'out',\n 'ytick.major.size': 0.0,\n 'ytick.minor.size': 0.0}\n然后，你可以设置这些参数的不同版本了。\nsns.set_style(\"darkgrid\", {\"axes.facecolor\": \".9\"})\nsinplot()\n\n绘图元素比例\n有一套的参数可以控制绘图元素的比例。首先，让我们通过set()重置默认的参数：\nsns.set()\n有四个预置的环境，按大小从小到大排列分别为：paper, notebook, talk, poster。其中，notebook是默认的。\nsns.set_context(\"paper\")\nsinplot()\n\nsns.set_context(\"talk\")\nsinplot()\n\nsns.set_context(\"poster\")\nsinplot()\n\n你可以通过使用这些名字中的一个调用set_context()来设置参数，并且你可以通过提供一个字典参数值来覆盖参数。当改变环境时，你也可以独立的去缩放字体元素的大小。\nsns.set_context(\"notebook\", font_scale=1.5, rc={\"lines.linewidth\": 2.5})\nsinplot()\n\n同样的，你可以通过嵌入with语句临时的控制绘图的比例。\n总结\n介绍了Seaborn的5中绘图风格\n\n移除轴脊柱\n临时设置绘图风格\n覆盖Seaborn风格元素\n绘图元素比例缩放\n\n下一节将会介绍颜色风格的使用。\n\n关注微信公众号Python数据科学，获取 120G 人工智能 学习资料。\n\n\n\n                ", "mainLikeNum": ["7 "], "mainBookmarkNum": "9"}