{"title": "python基础知识之列表 ", "index": "python", "content": "列表\n表现形式为[]，里面的元素之间用逗号隔开，元素可以是任意类型，相比于字符串，列表可以存储各种数据类型，而且可以存储大量数据列表的主要操作就是增删改查：\n增：append insert extend\n首先创建一个列表：lis = [1,'a',(1,2,3),'hello']\n\nappend会在列表末尾处添加指定元素\nlis.append('aaa')\nprint(lis)\n输出:[1, 'a', (1, 2, 3), 'hello', 'aaa']\n\ninsert会在指定索引处插入新元素\nlis.insert(1,'插入')\nprint(lis)\n输出：[1, '插入', 'a', (1, 2, 3), 'hello']\n\n当指定的索引超出列表长度时 并不会报错，此时会在末尾处插入元素\nlis.insert(100,'越界不报错')\nprint(lis)\n输出：[1, 'a', (1, 2, 3), 'hello', '越界不报错']\n\nextend会以迭代的方式插入元素，就是把要插入的内容拆分成单个元素再插入\nlis.extend('abc')\nprint(lis)\n输出：[1, 'a', (1, 2, 3), 'hello', 'a', 'b', 'c']\n\n但是只会拆分第一级元素，从下面可以看出'hello'本身并没有被拆分\nlis.extend(['a','bc','hello'])\nprint(lis)\n输出：[1, 'a', (1, 2, 3), 'hello', 'a', 'bc', 'hello']\n删： pop remove del clear\nlis = [1,'a',(1,2,3),'hello']\n\npop会按索引去删除，并返回被删除的元素，如果不给索引则默认删除最后一个\nres = lis.pop()\n\n输出：[1, 'a', (1, 2, 3)]\n\nremove会按照元素值去删除，没有返回值,如果元素不存爱则会报错\nlis.remove('a')\nprint(lis)\n输出：[1, (1, 2, 3), 'hello']\n\ndel 和pop类似，也是按照索引删除元素，但是del可以直接删除整个列表\ndel lis[3]\nprint(lis)\n输出：[1, 'a', (1, 2, 3)]\n\ndel还可以用切片的方式删除元素，注意灵活运用\ndel lis[0:3:2]\nprint(lis)\n输出：['a', 'hello']\n\nclear 方法则会清空列表\nlis.clear()\n改：列表的修改方式很简单，直接按索引修改\nlis = [1,'a',(1,2,3),'hello']\n\nlis[2] = '修改后的元素'\nprint(lis)\n输出：[1, 'a', '修改后的元素', 'hello']\n\n还可以按切片修改,如果用切片的方式修改列表时，会删除指定索引的元素并且将新的值拆分成元素再添加到该位置\nlis[1:3] = 'test' \nprint(lis)\n输出：[1, 't', 'e', 's', 't', 'hello']\n\n但是拆分时只会拆分第一级元素\nlis[1:3] = [[1,2],1,'a']\nprint(lis)\n输出：[1, [1, 2], 1, 'a', 'hello']\n\n查： 列表的查询除了可以用索引和切片的方式外还可以用for循环的方式\nlis = [1,'a',(1,2,3),'hello']\nfor i in lis:\n    print(i,end=' ')\n输出：1 a (1, 2, 3) hello     \n列表的其他常用方法:\n\nlis.count() 统计指定元素在列表中出现的次数\nlis.index()返回列表中第一次出现给定值的索引位置没有则会报错\nlis.reverse()将列表中的元素反转\nlis.sort() 对列表中的元素进行排序，但如果元素之间无法比较则会报错\n\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "0"}