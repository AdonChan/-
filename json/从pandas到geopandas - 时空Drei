{"title": "从pandas到geopandas - 时空Drei ", "index": "python,gis,pandas", "content": "(欢迎转载，需要保留文末的个人微信公众号二维码)\npandas简介\nPandas是Python的一个结构化数据分析的利器。其中，DataFrame是比较常用的处理数据的对象，类似于一个数据库里的table或者excel中的worksheet，可以非常方便的对二维数据读取（xls，csv，hdf等）、增删改查、基本绘图等。pandas应该是用python做数据分析必不可少的工具。\n看一个dataframe的实例\n\ngeopandas简介\nDataFrame相当于GIS数据中的一张属性表，为了将pandas的特性用到空间数据，就有了geopandas。其目标是使得在python中操作地理数据更方便。\nPandas is an open source project to make working with geospatial data in python easier. GeoPandas extends the datatypes used by pandas to allow spatial operations on geometric types. Geometric operations are performed by shapely. Geopandas further depends on fiona for file access and descartes and matplotlib for plotting.\ngeopandas结合了pandas和shapely的功能，扩展了pandas在空间数据操作方面的能力，从而使得你可以轻松的用python实现空间数据分析。\n看一个geodataframe的实例\n\n与dataframe相对，直观的区别是多了一个geometry的字段。\n安装\npip install geopandas\n# or\nconda install -c conda-forge geopandas\n官网示例\n先直接照搬一个官网上的例子\np1 = Polygon([(0, 0), (1, 0), (1, 1)])\np2 = Polygon([(0, 0), (1, 0), (1, 1), (0, 1)])\np3 = Polygon([(2, 0), (3, 0), (3, 1), (2, 1)])\ng = gpd.GeoSeries([p1, p2, p3])\ng.plot()\n\n可以非常方便的计算面积和缓冲区\nprint g.area\ng.buffer(0.5).plot()\n\n还有其他空间数据分析的功能，有兴趣可以去官网了解下。\n示例2. 构建geodataframe对象\ngepandas提供了多个读取矢量空间数据的接口，支持包括shapefile，geojson等。也支持直接从已有的dataframe对象生成geodataframe，示例如下：\ndf = pd.DataFrame(np.random.randn(50, 3),columns=['X', 'Y', 'Z'])\ngeom = [shapely.geometry.Point(xy) for xy in zip(df.X, df.Y)]\ngdf = geopandas.GeoDataFrame(df, geometry=geom)\nprint type(gdf)\n输出为\n<class 'geopandas.geodataframe.GeoDataFrame'>\n示例3. osm路网\n下面这个例子，首先获取一个城市（如青岛）的空间范围，根据这个范围下载openstreetmap的道路数据存入geodataframe对象，然后绘制出来。\n1. 获取空间范围\n这里用之前提到的geocoder这个工具，网友也提到这些地理编码获取的坐标并不准确，我们暂且先不考虑精度的问题。\nimport geocoder\nfrom shapely.geometry import Polygon\n\ng = geocoder.arcgis(u\"青岛\")\nmin_lat = g.bbox.get('southwest')[0]\nmin_lon = g.bbox.get('southwest')[1]\nmax_lat = g.bbox.get('northeast')[0]\nmax_lon = g.bbox.get('northeast')[1]\n\nboundary = Polygon([(min_lon, min_lat),(min_lon,max_lat),(max_lon,max_lat), (max_lon, min_lat)])\n这样获取到的青岛市的空间范围（外接矩形）为\n{'northeast': [36.209606, 120.482939], 'southwest': [35.987606, 120.260939]}\n2. 下载osm数据\n这里用到geopandas_osm这个工具，安装命令为\npip install git+https://github.com/jwass/geopandas_osm.git\n将空间范围的polygon对象作为参数即可，可以查看一下对象类型和投影参数：\nimport geopandas_osm.osm\ndf = geopandas_osm.osm.query_osm('way', boundary, recurse='down', tags='highway')\n\nprint type(df)\nprint df.crs\n输出为\n<class 'geopandas.geodataframe.GeoDataFrame'>\n{'init': 'epsg:4326', 'no_defs': True}\n直接获取到的osm数据比较乱，做进一步筛选：\nway = df[df.type == 'LineString'][['highway', 'name', 'geometry']]\nway.head()\n\n可以计算道路的长度，这里只是示意。直接计算length并不对，应该先投影到平面坐标系。\ndf.ix[0].geometry.length\n输出为\n0.0014679943869086182\n3. 绘制路网\n可以直接用plot命令，绘制出来：\nway.plot(column=\"name\",colormap=cm.coolwarm_r)\n\n代码下载\n如果对本文中的代码(.ipynb文件)感兴趣，百度网盘链接：http://pan.baidu.com/s/1mh8FghE， 密码请在关注个人微信公众号stdrei后，输入口令‘pandas2geo’自动获取。\n\n\n                ", "mainLikeNum": ["1 "], "mainBookmarkNum": "0"}