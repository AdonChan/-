{"title": "小程序开发：上传图片到腾讯云 - 古寺比的寺 ", "index": "腾讯云,小程序,javascript,python", "content": "这是小程序开发第二篇，主要介绍如何上传图片到腾讯云，之所以选择腾讯云，是因为腾讯云免费空间大?\n准备工作\n上传图片主要是将图片上传到腾讯云对象存储（COS）。\n要使用对象存储 API，需要先执行以下步骤：\n\n购买腾讯云对象存储（COS）服务\n在腾讯云 对象存储控制台 里创建一个 Bucket\n在控制台 个人 API 密钥 页面里获取 AppID、SecretID、SecretKey 内容\n编写一个请求签名算法程序（或使用任何一种服务端 SDK）\n计算签名，调用 API 执行操作\n\n所以我们要做的准备工作有：\n\n进入腾讯云官网，注册帐号\n登录云对象存储服务（COS）控制台，开通COS服务，创建资源需要上传的Bucket\n在小程序官网上配置域名信息（否则无法在小程序中发起对该域名的请求）\n\n\n这些配置过程这里就不做说明了，接下来主要介绍步骤4、5。\n小程序上传图片到 cos 流程如下图：\n\n在这个过程中我们需要实现的是，鉴权服务器返回签名的步骤以及小程序的相关步骤。\nCOS鉴权服务\n使用对象存储服务 COS 时，可通过 RESTful API 对 COS 发起 HTTP 匿名请求或 HTTP 签名请求，对于签名请求，COS 服务器端将会进行对请求发起者的身份验证。\n\n匿名请求：HTTP 请求不携带任何身份标识和鉴权信息，通过 RESTful API 进行 HTTP 请求操作。\n签名请求：HTTP 请求时添加签名，COS服务器端收到消息后，进行身份验证，验证成功则可接受并执行请求，否则将会返回错误信息并丢弃此请求。腾讯云COS对象存储，基于密钥 HMAC (Hash Message Authentication Code) 的自定义 HTTP 方案进行身份验证。\n\n上传图片是一个签名请求，需要进行签名验证。之所以我们\n签名流程\n客户通过对 HTTP 请求进行签名，并将签名后的请求发送至腾讯云进行签名验证，具体流程如下图所示。\n\n我们使用 sdk 开发，这个流程大致了解下就行，签名的实现 sdk 已经包含，只需要调用方法即可。\n通过签名流程我们可以知道，签名需要 SecretId 和 SecretKey，这两个信息不适合存放在客户端中，这也是我们单独部署一个鉴权服务器的主要原因。\n签名生成 API\n上一篇[小程序开发：python sanic 实现小程序登录注册]() 我们介绍过，服务端使用 sanic 框架 + swagger_py_codegen 生成 rest-api。\n添加签名生成 api 我们需要先在文档中添加 API 的相关描述。文档代码：https://github.com/gusibi/Metis/blob/master/docs/v1.yml\n    /qc_cos/config:\n        get:\n            summary: 腾讯云配置\n            description: 腾讯云配置\n            tags: [Config]\n            operationId: get_qc_cos_config\n            parameters:\n                - $ref: '#/parameters/AccessToken'\n                - $ref: '#/parameters/qcos_path_in_query'\n            responses:\n                200:\n                    schema:\n                        $ref: '#/definitions/QCOSConfig'\n                default:\n                    description: Unexpected error\n                    schema:\n                        $ref: '#/definitions/Error'\n            security:\n                - OAuth2: [open]\n这个接口我们要求登录才能调用。\n文档定义完成之后，调用\nswagger_py_codegen -s  docs/v1.yml . -p apis -tlp sanic\n生成代码模板，API 代码实现如下：\n    from qcloud_cos.cos_auth import Auth\n    \n    async def get(self, request):\n        auth = Auth(appid=Config.QCOS_APPID,\n                    secret_id=Config.QCOS_SECRET_ID,\n                    secret_key=Config.QCOS_SECRET_KEY)\n        expired = time() + 3600 # 签名有效时间 3600 秒\n        # 上传到 cos bucket 的目录\n        dir_name = request.raw_args.get('cos_path', '/xrzeti')\n        # 生成签名\n        sign = auth.sign_more(Config.QCOS_BUCKET_NAME,\n                              cos_path=dir_name,\n                              expired=expired)\n        return {\"sign\": sign}, 200\n由于 腾讯云COSv4 的Python SDK 只支持 python2，而 sanic 需要 python3.5+ 所以，这里我 fork 出来一份添加了 python3 的支持。\nhttps://github.com/gusibi/cos-python-sdk-v4。使用 python3 环境的可以使用这个版本。\n上传图片到 cos\n选择图片\nwx.chooseImage(OBJECT)\n从本地相册选择图片或使用相机拍照。\n调用这个方法，小程序会把选择的图片放到临时路径（在小程序本次启动期间可以正常使用，如需持久保存，需在主动调用 wx.saveFile，在小程序下次启动时才能访问得到），我们只能将临时路径的文件上传。\n核心代码如下：\n    uploadToCos: function () {\n        var that = this;\n\n        // 选择上传的图片\n        wx.chooseImage({\n            sizeType: ['original', 'compressed'], // 图片类型 original 原图，compressed 压缩图，默认二者都有\n            success: function (res) {\n\n                // 获取文件路径\n                var file = res.tempFiles[0];\n                console.log(file.size);\n\n                // 获取文件名\n                var fileName = file.path.match(/(wxfile:\\/\\/)(.+)/)\n                fileName = fileName[2]\n\n                // 获取到图片临时路径后，指定文件名 上传到cos\n                upload(file.path, fileName, that);\n            }\n        })\n    }\n    \n这里图片选择成功后，我们取原图上传到 cos。\n上传图片\ncos 上传图片的URL由 cos_region，appid，bucket_name和 cos_dir_name 拼接而成。把以下字段配置成自己的cos相关信息，详情可看API文档\ncosUrl = \"https://\" + REGION + \".file.myqcloud.com/files/v2/\" + APPID + \"/\" + BUCKET_NAME + DIR_NAME;\nREGION: cos上传的地区APPID: 账号的appidBUCKET_NAME: cos bucket的名字DIR_NAME: 上传的文件目录\nvar config = require('../config.js');\n// 先确定上传的 URL\nvar cosUrl = \"https://\" + config.cos_region + \".file.myqcloud.com/files/v2/\" + config.cos_appid + \"/\" + config.cos_bucket_name + config.cos_dir_name;\n\n//填写自己的鉴权服务器地址\nvar cosSignatureUrl = config.host + '/v1/qc_cos/config?cos_path=' + config.cos_dir_name;\n\n/**\n * 上传方法\n * filePath: 上传的文件路径\n * fileName： 上传到cos后的文件名\n * that: 小程序所在当前页面的 object\n */\nfunction upload(filePath, fileName, that) {\n    var data;\n\n    // 鉴权获取签名\n    wx.request({\n        url: cosSignatureUrl,\n        header: {\n            Authorization: 'JWT' + ' ' + that.data.jwt.access_token\n        },\n        success: function (cosRes) {\n            // 获取签名\n            var signature = cosRes.data.sign;\n\n            // 头部带上签名，上传文件至COS\n            var uploadTask = wx.uploadFile({\n                url: cosUrl + '/' + fileName,\n                filePath: filePath,\n                header: {\n                    'Authorization': signature\n                },\n                name: 'filecontent',\n                formData: {\n                    op: 'upload'\n                },\n                success: function (uploadRes) {\n                    // 上传成功后的操作\n                    var upload_res = JSON.parse(uploadRes.data)\n                    var files = that.data.files;\n                    files.push(upload_res.data.source_url);\n                    that.setData({\n                        upload_res: upload_res,\n                        files: files,\n                        test_image: upload_res.data.source_url\n                    })\n                },\n                fail: function (e) {\n                    console.log('e', e)\n                }\n            });\n            // 上传进度条\n            uploadTask.onProgressUpdate((res) => {\n                that.setData({\n                    upload_progress: res.progress\n                })\n                if (res.progress === 100){\n                    that.setData({\n                        upload_progress: 0\n                    })\n                }\n            })\n        }\n    })\n    return data\n}\n小程序提供了 uploadTask.onProgressUpdate() 来获取图片的上传进度，这里我将图片的上传进度显示了出来。\n完整代码参考：metis-wxapp: https://github.com/gusibi/Metis-wxapp\n参考链接\nWeCOS-UGC-DEMO——微信小程序用户资源上传COS示例\n\n最后，感谢女朋友支持。\n\n\n欢迎关注(April_Louisa)\n请我喝芬达\n\n\n\n\n\n\n\n                ", "mainLikeNum": ["7 "], "mainBookmarkNum": "24"}