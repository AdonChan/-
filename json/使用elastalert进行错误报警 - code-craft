{"title": "使用elastalert进行错误报警 - code-craft ", "index": "monitor,python", "content": "关于elastalert\nelastalert是yelp出品的一个基于elasticsearch的报警服务，使用python编写。整体的思路还是基于轮询的方法，规则的话，内置frequency、spike、flatline、blacklist/whitelist、any、change。报警的话，提供了Email、HipChat、Slack、Telegram等。\ndockerfile\n# Elastalert Docker image running on ubuntu\n# Based off of ivankrizsan/elastalert:latest .\nFROM ubuntu:14.04\n\nMAINTAINER Tom Ganem\nENV SET_CONTAINER_TIMEZONE false\nENV ELASTALERT_VERSION 0.0.95\nENV CONTAINER_TIMEZONE Asia/Shanghai\nENV ELASTALERT_URL https://github.com/Yelp/elastalert/archive/v${ELASTALERT_VERSION}.tar.gz\nENV ELASTALERT_DIRECTORY_NAME elastalert\nENV ELASTALERT_HOME /opt/${ELASTALERT_DIRECTORY_NAME}\nENV RULES_DIRECTORY /opt/${ELASTALERT_DIRECTORY_NAME}/rules\n\n\nWORKDIR /opt\n\nRUN apt-get update && \\\n    apt-get install tar curl python-dev tzdata -y\n\nRUN curl -Lo get-pip.py https://bootstrap.pypa.io/get-pip.py && \\\n    python get-pip.py && \\\n    rm get-pip.py\n\nRUN mkdir -p ${ELASTALERT_HOME}\n\nRUN curl -Lo elastalert.tar.gz ${ELASTALERT_URL} && \\\n    tar xvf *.tar.gz -C ${ELASTALERT_HOME} --strip-components 1 && \\\n    rm *.tar.gz\n\nWORKDIR ${ELASTALERT_HOME}\n\nRUN mkdir -p ${RULES_DIRECTORY}\nRUN sed -i -e \"s|'elasticsearch'|'${ELASTALERT_VERSION_CONSTRAINT}'|g\" setup.py\nRUN python setup.py install && \\\n    pip install -e .\nRUN pip install elasticsearch\n\nCOPY ./docker-entrypoint.sh ${ELASTALERT_HOME}/docker-entrypoint.sh\nENTRYPOINT [\"/opt/elastalert/docker-entrypoint.sh\"]\nCMD [\"python\", \"elastalert/elastalert.py\", \"--verbose\"]\n关于docker-entrypoint.sh\n#!/bin/sh\n\nrules_directory=${RULES_FOLDER:-/opt/elastalert/rules}\nes_port=${ELASTICSEARCH_PORT:-9200}\n\n# Render rules files\nfor file in $(find . -name '*.yaml' -or -name '*.yml');\ndo\n    cat $file | sed \"s|es_host: [[:print:]]*|es_host: ${ELASTICSEARCH_HOST}|g\" | sed \"s|es_port: [[:print:]]*|es_port: $es_port|g\" | sed \"s|rules_folder: [[:print:]]*|rules_folder: $rules_directory|g\" > config\n    cat config > $file\n    rm config\ndone\n\necho \"Creating Elastalert index in Elasticsearch...\"\nelastalert-create-index --index elastalert_status --old-index \"\" --no-auth;\n\nexec \"$@\"\n主要是从环境变量替换config文件里头的相关变量。\n配置文件\nrules_folder: /opt/elastalert/rules\nrun_every:\n  minutes: 1\n\n# ElastAlert will buffer results from the most recent\n# period of time, in case some log sources are not in real time\nbuffer_time:\n  minutes: 15\n\n# The elasticsearch hostname for metadata writeback\n# Note that every rule can have it's own elasticsearch host\nes_host: 192.168.99.101\nes_port: 9200\n\nsmtp_host: smtp.126.com\nsmtp_port: 25\nsmtp_auth_file: /opt/elastalert/smtp_cfg.yaml\nfrom_addr: XXXX@126.com\n\nuse_ssl: False\n\n# Option basic-auth username and password for elasticsearch\n#es_username: someusername\n#es_password: somepassword\n\nwriteback_index: elastalert_status\n\n# If an alert fails for some reason, ElastAlert will retry\n# sending the alert until this time period has elapsed\nalert_time_limit:\n  days: 2\nrules\n# Alert when the rate of events exceeds a threshold\n\n# (Optional)\n# Elasticsearch host\n# es_host: elasticsearch.example.com\n\n# (Optional)\n# Elasticsearch port\n# es_port: 14900\n\n# (OptionaL) Connect with SSL to elasticsearch\n#use_ssl: True\n\n# (Optional) basic-auth username and password for elasticsearch\n#es_username: someusername\n#es_password: somepassword\n\n# (Required)\n# Rule name, must be unique\nname: Example rule\n\n# (Required)\n# Type of alert.\n# the frequency rule type alerts when num_events events occur with timeframe time\ntype: frequency\n\n# (Required)\n# Index to search, wildcard supported\nindex: logstash-*\n\n# (Required, frequency specific)\n# Alert when this many documents matching the query occur within a timeframe\nnum_events: 50\n\n# (Required, frequency specific)\n# num_events must occur within this amount of time to trigger an alert\ntimeframe:\n  hours: 4\n\n# (Required)\n# A list of elasticsearch filters used for find events\n# These filters are joined with AND and nested in a filtered query\n# For more info: http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/query-dsl.html\nfilter:\n- query:\n    query_string:\n      query: \"field: value\"\n\n# (Required)\n# The alert is use when a match is found\nalert:\n- \"email\"\n\n# (required, email specific)\n# a list of email addresses to send alerts to\nemail:\n- \"elastalert@example.com\"\n启动\ndocker run -e \"ELASTICSEARCH_HOST=192.168.99.101\" -e \"ELASTICSEARCH_PORT=9200\" -e \"RULES_FOLDER=/opt/elastalert/rules\" -v $PWD/rules:/opt/elastalert/rules -v $PWD/smtp_cfg.yaml:/opt/elastalert/smtp_cfg.yaml -v $PWD/config.yaml:/opt/elastalert/config.yaml -it esalert /bin/bash\n关于smtp的550错误\n是用户被锁定，需要在网易邮箱里头设置开启smtp，同时设定授权码，然后用授权码替换密码发邮件\ndocs\n\nelastalert-docs\nyelp-elastalert\nAlerting with the ELK Stack and Elastalert\nsmtp-550\ndocker-elastalert\n\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "1"}