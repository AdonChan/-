{"title": "python语言编写的php laravel项目发布脚本(生产环境实测) - notnull ", "index": "laravel,python,php", "content": "python语言编写的php laravel项目发布脚本(生产环境实测)\n使用\n全部执行:./deploy.py --all \n优化系统:./deploy.py --optimize\ncomposer:./deploy.py --composer\n使用帮助:./deploy.py --help\n代码如下:\n#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\nimport subprocess, sys\n\ndef execute( args = [], runAll = False ):\n    # composer必须是优先执行的\n    if '--composer' in args:\n        args.remove( '--composer' )\n        args.insert( 0, '--composer' )\n\n    if True == runAll:\n        cmdList = getCommands( 'all' )\n    else:\n        cmdList = []\n        for arg in args:\n            cmdList += getCommands( arg )\n\n    if ( 0 == len( cmdList ) ):\n        if ( 1 < len( args ) ):\n            showHelp()\n        else:\n            cmdList = getCommands( '--optimize' )\n\n    for cmd in cmdList:\n        subprocess.call( cmd, shell = True )\n\n    print '发布成功!'\n    sys.exit(0)\n\ndef showHelp():\n    print '\\n可用参数:'\n    print '--optimize       更新配置缓存、更新路由缓存, 新增路由至数据库'\n    print '--composer       更新composer依赖关系'\n    print '';\n    sys.exit(0)\n\ndef getCommands( option ):\n\n    if 'all' == option:\n        cmdList = []\n        # 分多行时注意行尾加 \"\\\"\n        cmdList += getCommands( '--composer' ) \\\n        + getCommands( '--optimize' )\n\n        return cmdList\n    elif '--optimize' == option:\n        return [\n            'php artisan cache:clear',\n            'php artisan config:cache',\n            'php artisan route:cache',\n        ]\n    elif '--composer' == option:\n        return [\n            'composer update'\n        ]\n    else:\n        return []\n\nif __name__ == '__main__':\n    args = sys.argv\n    if '--help' in args:\n        showHelp()\n    elif '--all' in args:\n        execute(args, True)\n    else:\n        execute(args)\n\n\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "6"}