{"title": "Yet Another shell can run anywhere Python exists. - From SICP to Lisp ", "index": "hacker,shell,python", "content": "PySh\nAnother shell can run anywhere Python exists.\nWhy another shell\nBecause it's fun.\nSupported shell feature\nCommon shell features can be found here. Pysh already have:\n\n|, Pipe output\n$var, Use value for variable\n\" \", double quote (allows variable and command expansion)\n\nUsage\ngit clone https://github.com/jiacai2050/pysh.git\ncd pysh\npython -m pysh.shell\n\n## Demo\n> ls\n.git\n.gitignore\n.pre-commit-config.yaml\nassets\npysh\nREADME.md\n\n> echo $HOME\n/Users/liujiacai\n\n> echo ${JAVA_HOME}\n/Library/Java/JavaVirtualMachines/jdk1.8.0_40.jdk/Contents/Home\n\n> pwd\n/Users/liujiacai/codes/python/pysh\n\n> cd ..\n/Users/liujiacai/codes/python\n\n> pwd\n/Users/liujiacai/codes/python\n\n> cat /etc/hosts | grep 127.0.0.1\n127.0.0.1       localhost\n\n> grep 127.0.0.1 /etc/hosts\n127.0.0.1       localhost\nSupported commands can be found here.\nMore commands are on the way. PR welcomed !\nHave fun ?\nHow PySh work\nA shell in unix box is a bridge bewteen user and the kernel through system call.\n\nAs we can see from above picture (taken from here), some commands (eg ls, cat) are passed to other programs, while built-in commands (eg cd, exit) are executed inside shell. This way can keep shell small in size and strong in function.\nIn order to let PySh run anywhere (hi, Windows, I mean you), PySh implmented all commands in its core, so there is no differences bewteen builtins and one that is not, also you can say all commands are builtins.\nOne thing I should mention here is:\nPipelines between different commands are supported by generator in Python.\nSo, every command should yield something, this is like s-expression in Lisp world, where every s-expression should return a value.\nHow to contribute\nPySh use pre-commit to ensure code quality, so you should install it before contribute.\nFork and PR ?\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "0"}