{"title": "python爬虫解决网页重定向问题 - 个人文章 ", "index": "重定向,网页爬虫,python", "content": "笔者编写的搜索引擎爬虫在爬取页面时遇到了网页被重定向的情况，所谓重定向(Redirect)就是通过各种方法（本文提到的为3种）将各种网络请求重新转到其它位置（URL）。每个网站主页是网站资源的入口，当重定向发生在网站主页时，如果不能正确处理就很有可能会错失这整个网站的内容。\n以下列出遇到的3种重定向情况（使用python2.7+requests编写爬虫）：\n\n1.服务器端重定向\n\n在服务器端完成，一般来说爬虫可以自适应，是不需要特别处理的，如响应代码301（永久重定向）、302（暂时重定向）等。具体来说，可以通过requests请求得到的response对象中的url、status_code两个属性来判断。当status_code为301、302或其他代表重定向的代码时，表示原请求被重定向；当response对象的url属性与发送请求时的链接不一致时，也说明了原请求被重定向且已经自动处理。\n2.meta refresh\n\n即网页中的<meta>标签声明了网页重定向的链接，这种重定向由浏览器完成，需要编写代码进行处理。例如，某一重定向如下面的html代码第三行中的注释所示，浏览器能够自动跳转，但爬虫只能得到跳转前的页面，不能自动跳转。\n<html>\n<head>\n<meta http-equiv=\"refresh\" content=\"0.1;url=http://www.redirectedtoxxx.com/\"><!--本网页会在0.1秒内refresh为url所指的网页-->\n</head>\n</html>\n解决办法是通过得到跳转前的页面源码，从中提取出重定向url信息（上述代码第三行中的url属性值）。具体的操作：使用xpath('//meta[@http-equiv=\"refresh\" and @content]/@content')提取出content的值 或者使用正则表达式提取出重定向的url值。\n3.js 重定向\n\n通过JavaScript代码形式进行重定向。如下面JavaScript代码\n<script language=javascript>window.location.href='http://www.redirectedtoxxx.com'</script>\n\n对于这种方式的跳转，由于可以实现该功能的JavaScript语句有多种形式，不能再使用正则表达式提取url，只能考虑加载JavaScript代码来进行解决，例如使用selenium  无头浏览器phantomJS 模拟浏览器操作 关于phantomJS的一些简单操作语法可以在我这篇phantomJS中看下\n\n                ", "mainLikeNum": ["1 "], "mainBookmarkNum": "1"}