{"title": "python+requests+Excel+Jenkins接口自动化 - 个人文章 ", "index": "python,测试自动化", "content": "总结大部分人做接口自动化的流程后，发现基本上都是：python + requests做接口请求；Excel用来存储用例；HTMLTestRunner生成测试报告；Jenkins完成定时任务。\n其实在完成这个流程的过程中，代码编写只占用了一小部分的时间，大部分的时间都浪费在搭建环境和用例编写上。这里我记录一些遇到的问题。\n一、接口请求（1）配置请求方法：get 和 post 方法简单封装，header中参数设置\n# _*_coding:utf-8 _*\nimport requests\n\n#get请求\ndef get(url,querystring):\n    headers = requestHeader()\n    response = requests.request(\"GET\", url, headers=headers, params=querystring)\n    # print response.url\n    return response\n\n#post请求\ndef post(url,payload,querystring):\n    headers = requestHeader()\n    response = requests.request(\"POST\", url, data=payload, headers=headers, params=querystring)\n    # print response.url\n    return response\n\n#设置请求的header\ndef requestHeader():\n    headers = {\n    'Content-Type': \"application/json\",\n    'Cache-Control': \"no-cache\"\n    }\n    return headers\n（2）针对post请求的body，开始时使用的时text的dict去请求，请求错误总是返回：\"请求参数错误\"，后来使用postman进行调试，直接复制已经转换成json格式的body传参进行请求，终于成功。\n可以通过这个方式去转换一些有问题的body。\n（3）body转换为json的另一种方式：通过ast模块进行转换（推荐）\nimport ast\ncaseParams         =     ast.literal_eval(caseParams)\n(4)通过openpyxl模块获取用例Excel\n#用例名\ncaseName     =     caseFile.getCellVaule(ws,rowIndex,1)\n#url\ncaseUrl     =     caseFile.getCellVaule(ws,rowIndex,3)\n#请求方式\ncaseMethod     =     caseFile.getCellVaule(ws,rowIndex,4)\n#参数\ncaseParams     =     caseFile.getCellVaule(ws,rowIndex,5)\n备注：在获取用例信息的过程中，需要对一些参数进行容错A：是否有参数，若无参数，需传空；B：get参数和post body需要分开处理：get的参数是以 '&param'形式明文拼接在url中；\n#将请求参数转换为json格式\ncaseParams     =     ast.literal_eval(caseParams)\nkeys         =     dict(caseParams).keys()\nvalues         =     dict(caseParams).values()\nfor x in xrange(0,len(keys)):\n  tempQuery[keys[x]] = values[x]\npost的body需要放在dict中进行传参；\ncaseParams         =     ast.literal_eval(caseParams)\n（5）分割所需的参数，将结果写入到文件内\n#请求返回的内容，转换为json格式\ntext             =     json.loads(response.text)\n                caseFile.setCellValue(ws,rowIndex,6,response.text)\n\n#URL请求耗时\nspendTime         =     response.elapsed.total_seconds()\n                caseFile.setCellValue(ws,rowIndex,7,spendTime)\n\n#请求结果状态\nstatue             =     response.status_code\n                caseFile.setCellValue(ws,rowIndex,8,statue)\nself.assertEqual(statue, 200)\n（6）将请求结果写入html文件，并展示\n（7）配置到Jenkins，定时执行查看接口的可达性\n\n\n\n                ", "mainLikeNum": ["3 "], "mainBookmarkNum": "1"}