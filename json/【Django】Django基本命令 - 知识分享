{"title": "【Django】Django基本命令 - 知识分享 ", "index": "python,django,python3.x", "content": "1. 创建一个Django 项目\ndjango-admin.py startproject <项目名称>\n例：\ndjango-admin.py startproject myproject\n当前目录下会生成myproject的工程，目录结构如下：\nmyproject\n|----manage.py\n|____myproject\n        |----__init__.py\n        |----settings.py\n        |----urls.py\n        |----wsgi.py\n        \nmanage.py：Django项目里面的工具，通过它可以调用django shell和数据库等;settings.py：包含了项目的默认设置，包括数据库信息，调试标志以及其他一些工作的变量;urls.py：负责把URL模式映射到应用程序.\n2. 在myproject项目中创建一个应用\npython manage.py startapp <应用名称>\n例：\npython manage.py startapp myblog\n当前目录下会生成myblog目录，目录结构如下：\nmyblog\n|----__init__.py\n|----admin.py\n|----apps.py\n|----migrations\n|       |---__init__.py\n|----models.py\n|----tests.py\n|----views.py\n3. 启动Django项目\npython manage.py runserver <web端口号>\n例：\npython manage.py runserver 8080\n启动后web访问地址+端口就可以了 ~\n4. 数据库操作\n同步更改数据库表或字段\npython manage.py syncdb\n \n注意：Django 1.7.1 及以上的版本需要用以下命令\npython manage.py makemigrations\npython manage.py migrate\n这种方法可以创建表，当你在models.py中新增了类时，运行它就可以自动在数据库中创建表了，不用手动创建\n清空数据库\npython manage.py flush\n此命令会询问是 yes 还是 no, 选择 yes 会把数据全部清空掉，只留下空表。\n创建超级管理员\npython manage.py createsuperuser\n \n# 按照提示输入用户名和对应的密码就好了邮箱可以留空，用户名和密码必填\n \n# 修改 用户密码可以用：\npython manage.py changepassword username\nDjango 基础命令汇总\n# 1. 创建一个项目：django-admin.py startproject <项目名称>\ndjango-admin.py startproject myproject\n\n# 2. 创建一个应用：python manage.py startapp <应用名称>\npython manage.py startapp myblog\n\n# 3. 启动项目：python manage.py runserver <web端口号>\npython manage.py runserver 8080\n\n# 4. 同步更改数据库表或字段\npython manage.py syncdb\n \n注意：Django 1.7.1 及以上的版本需要用以下命令\npython manage.py makemigrations\npython manage.py migrate\n\n# 5. 清空数据库\npython manage.py flush\n\n# 6. 创建超级管理员\npython manage.py createsuperuser\n\n# 7. 修改用户密码\npython manage.py changepassword username\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "5"}