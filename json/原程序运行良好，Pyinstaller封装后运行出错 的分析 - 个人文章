{"title": "原程序运行良好，Pyinstaller封装后运行出错 的分析 - 个人文章 ", "index": "python,封装", "content": "前言\n昨天决定分享一下最近写的exhentai爬虫程序，参考了这篇文章，看了下里面几个常见打包软件的简介表格（可惜没nuitka）因为是给小白用户使用，做成单个文件形式，只能在Pyinstaller和py2exe之间选择去各自官网看了下，发现py2exe很久没更新了，对python3新版本的支持也不是太好，就决定用Pyinstaller来封装/打包这里略过Pyinstaller的安装和使用，重点说明症状，分析过程，解决办法和教训\n症状\n\n打包成功\n运行程序时出现如下报错\n\nC:\\Users\\xoxo\\PycharmProjects\\Hentai_Spider>main\nTraceback (most recent call last):\n  File \"main.py\", line 6, in <module>\n    from config import args\n  File \"<frozen importlib._bootstrap>\", line 2237, in _find_and_load\n  File \"<frozen importlib._bootstrap>\", line 2226, in _find_and_load_unlocked\n  File \"<frozen importlib._bootstrap>\", line 1200, in _load_unlocked\n  File \"<frozen importlib._bootstrap>\", line 1129, in _exec\n  File \"C:\\Python34\\lib\\site-packages\\PyInstaller\\loader\\pyimod03_importers.py\",\n line 631, in exec_module\n    exec(bytecode, module.__dict__)\n  File \"config.py\", line 11, in <module>\n    parser.add_argument('-sd', '--savedir', default=config['ARGS']['SAVEDIR'])\n  File \"configparser.py\", line 936, in __getitem__\nKeyError: 'ARGS'\n[7836] Failed to execute script main\n\nC:\\Users\\xoxo\\PycharmProjects\\Hentai_Spider>\n分析过程\n0 . StackOverflow搜了下发现没啥经验可供参考……1 . main.py程序是完全可以跑通的，从未出现过这个报错，所以确定问题出在封装过程中2 . 报错信息上看，是（封装后的程序）执行config.py时出了问题3 . 通过控制变量排除法（过程比较繁琐，不一一列举），确定是在读取config.ini时出的错，把赋值config_path这里改成确定的路径即可正常运行\n代码如下：\nconfig = configparser.ConfigParser()\nconfig_path = os.path.join(os.path.dirname(__file__), CONFIG_FILE)\nconfig.read(config_path)\n顺便解释一下，我的设计意图是让config.py去读取其所在目录下的配置文件，main.py和config.py在同一目录\n4 . 由于CONFIG_FILE是常量（文件名），那最终就怀疑到os.path.dirname(__file__)部分5 . 在赋值config_path =这句后加上print(os.path.dirname(__file__)，看看封装后这里的file会到哪个目录，发现变成了C:\\Users\\xoxo\\AppData\\Local\\Temp\\_MEI92882\nC:\\Users\\xoxo\\PycharmProjects\\Hentai_Spider>main\nC:\\Users\\xoxo\\AppData\\Local\\Temp\\_MEI92882\nTraceback (most recent call last):\n  File \"main.py\", line 6, in <module>\n    from config import args\n  File \"<frozen importlib._bootstrap>\", line 2237, in _find_and_load\n  File \"<frozen importlib._bootstrap>\", line 2226, in _find_and_load_unlocked\n  File \"<frozen importlib._bootstrap>\", line 1200, in _load_unlocked\n  File \"<frozen importlib._bootstrap>\", line 1129, in _exec\n  File \"C:\\Python34\\lib\\site-packages\\PyInstaller\\loader\\pyimod03_importers.py\",\n line 631, in exec_module\n    exec(bytecode, module.__dict__)\n  File \"config.py\", line 12, in <module>\n    parser.add_argument('-sd', '--savedir', default=config['ARGS']['SAVEDIR'])\n  File \"configparser.py\", line 936, in __getitem__\nKeyError: 'ARGS'\n[9296] Failed to execute script main\n\nC:\\Users\\xoxo\\PycharmProjects\\Hentai_Spider>\n6 . 可以看到config.py虽然封装前和main.py在一个文件夹下，但被封装后，执行时就处于临时文件夹，这时候取其自身所在目录的动作就有问题\n解决方案\nmain.py来抓目录信息，再传给config.py（中函数）\n教训\n\n封装程序没有聪明到能理解设计意图，所以写代码的得更聪明点\n如果某项目可能会被封装，让被封装的那个程序来抓取目录信息并传递\n\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "0"}