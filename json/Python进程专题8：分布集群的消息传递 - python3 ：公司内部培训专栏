{"title": "Python进程专题8：分布集群的消息传递 - python3 ：公司内部培训专栏 ", "index": "python", "content": "上一篇文章：Python进程专题7：托管对象下一篇文章：Python进程专题9：关于进程的实用工具函数\n\n使用multiprocessing模块的程序不仅可以于运行在同一计算机的其它程序进行消息传递，还可以于位于不到计算机的远程系统程序进行消息传递。其中的multiprocessing.connection子模块包含该目的的函数和类：\nconnections.Client(address,family,authenticate,authkey)\n连接到另一个进程，此进程必须已经正在监听地址address。\naddress:代表网络地址的元组(hostname,port),或者代表UNIX域套接字的文件名，或者代表\nr'\\\\servername\\pipe\\pipename'形式的字符串，代表远程系统servername(本地计算机的servername为'.')上的一条Windows命名管道。\n\nfamily:表示地址格式的字符串。一般是'AF_INET'、'AF_UNIX'、或'AF_PIPE'.如果省略此参数，将从address的格式退出它的值。\n\nbacklog:是一个整数，当address参数指定了一个网络连接时，对应于传递给套接字的listen()方法的值，backlog默认为1。\n\nauthenticate:一个布尔标志，指定是否使用摘要身份验证。\nauthkey:包含身份验证密钥的字符串，如果忽略此参数，将使用current_process().authkey的值。\n\n此函数的返回值是Connection对象，管道中有讲过。\nconnections.Listener(address,family,backlog,authenticate,authkey)\n实现了一台服务器，用于侦听和处理Client()函数发送的连接。\n如果省略address参数，将选择默认地址，如果同时省略address和family两个参数，将选择本地系统上速度最快的可用通信模式。\nListener实例listener支持一下方法和属性。\n\n\n属性或方法名\n介绍\n\n\n\nlistener.accept()\n接受一个新连接，并返回一个Connetion对象。如果身份验证失败，将引发Authentication-Error异常\n\n\nlistener.address\n侦听器正在使用的地址\n\n\nlistener.close()\n关闭侦听器正在使用的管道或套接字\n\n\nlistener.last_accepted\n接受的最后一个客户端的地址。\n\n\n\n实例：服务器端与客户端发送消息\n服务器端代码：\n#服务器端，负责监听客户端并实现简单的远程操作\nfrom multiprocessing.connection import Listener\nserv=Listener(('',11111),authkey='123456'.encode())\nwhile True:\n    conn=serv.accept()\n    while True:\n        try:\n            x,y=conn.recv()\n        except EOFError:\n            print(\"出错了\")\n            break\n        result=x+y\n        conn.send(result)\n    conn.close()\n\n客户端代码：\n#客户端，向服务器端发送消息\nfrom multiprocessing.connection import Client\nconn=Client(('localhost',11111),authkey='123456'.encode())\nconn.send((5,6))\nr=conn.recv()\nprint(r)\n\n\nconn.send((\"mark\",\"帅哥\"))\nr=conn.recv()\nprint(r)\nconn.close()\n客户端打印结果：\n11\nmark帅哥\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "0"}