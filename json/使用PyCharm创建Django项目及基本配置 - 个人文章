{"title": "使用PyCharm创建Django项目及基本配置 - 个人文章 ", "index": "python", "content": "pycharm是个很不错的python开发工具，大大缩短了python项目的创建时间以及调试时间在使用python写脚本一段时间后，想尝试使用Django来编写一个python项目，现做以下记录备忘：\n1、创建项目\n如果本地没有安装与所选python版本对应Django版本，pycharm会自动下载相应的版本：\n\n创建后运行项目，默认页面为http://127.0.0.1:8000/，打开后：\n出现上面的页面，则正面项目创建成功\n目录结构：\n\n2、创建APP\n在Django项目中可以包含多个APP，相当于一个大型项目中的分系统、子模块、功能部件等，相互之间比较独立，但也有联系，所有APP共享项目资源\n输入：python manage.py startapp myapp生成myapp文件夹\n3、视图和url配置\nmyapp/views.py文件代码：\nfrom django.http import HttpResponse         #需要导入HttpResponse模块\n\ndef hello(request):                          #request参数必须有，名字类似self的默认规则，可以修改，它封装了用户请求的所有内容\n    return HttpResponse(\"Hello world ! \")    #不能直接字符串，必须是由这个类封装，此为Django规则\ntestDjango/urls.py文件代码：\nfrom myapp import views                      #首先需要导入对应APP的views\n\nurlpatterns = [\n    url(r'^admin/', admin.site.urls),        #admin后台路由\n    url(r'^hello$', views.hello),            #你定义的路由，第一个参数为引号中的正则表达式，第二个参数业务逻辑函数（当前为views中的hello函数）\n]\n运行项目：命令行的方式是：python manage.py runserver 127.0.0.1:8000但是在pycharm中可以使用如下方法：\n\n\n\n\n4、Django模板\n修改views文件：\ndef hello(request):\n    # return HttpResponse(\"Hello world ! \")\n    context = {}\n    context['hello'] = 'Hello World!'                #数据绑定\n    return render(request, 'hello.html', context)    #将绑定的数据传入前台\n被继承的模板：\n{#base.html#}\n<!DOCTYPE html>\n<html>\n<head>\n<meta charset=\"utf-8\">\n<title>模板测试</title>\n</head>\n<body>\n    <h1>{{ hello }}</h1>\n    <p>Django模板测试</p>\n    {% block mainbody %}\n       <p>original</p>\n    {% endblock %}\n</body>\n</html>\nhello.html 中继承 base.html，并替换特定 block，hello.html 修改后的代码如下：\n{#hello.html#}\n{% extends \"base.html\" %}\n \n{% block mainbody %}<p>继承了 base.html 文件</p>\n{% endblock %}\n重新访问地址 http://127.0.0.1:8000/hello，输出结果如下：\n\n5、引入静态文件\n需要将一些静态资源引入项目，新建一个static目录，可以将js、css等文件放入这个目录中：\n\n需要让Django找到这个目录，需要在setting文件中进行配置：\n\n在html文件中引入静态资源：\n{% load staticfiles %}\n{#base.html#}\n<!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"{% static 'css/mypage.css' %}\">\n    <script src=\"{% static 'js/jquery-1.11.1.js' %}\"></script>\n<title>模板测试</title>\n</head>\n    <body>\n        <h1>{{ hello }}</h1>\n        <p>Django模板测试</p>\n        {% block mainbody %}\n           <p>original</p>\n        {% endblock %}\n    </body>\n</html>\n第一行引入静态文件路径{% load staticfiles %}，在<head>...</head>里加入CSS网链和js文件\n\n                ", "mainLikeNum": ["1 "], "mainBookmarkNum": "2"}