{"title": "一个关于 Django Rest Framework 的梦 - 个人文章 ", "index": "django-rest-framework,django,python", "content": "Django Rest Framework 这个框架的相关资料确实少，碰到问题比较难以解决，连睡觉都在思考解决的问题。\n最近有一个关于 Django Rest Framework 的问题一直困扰我，在使用视图集 ViewSet 的时候，有时候序列化模型的读写不一定完全一样，这时候该如何输出呢？\n所谓日有所思，夜有所梦。昨晚做了一个奇怪的梦。\n梦的大概是这样的：\n我发现了 Django Rest Framework 在 Response 的时候可以定义一个 Response Serializer Model，这样就可以省去一些不必要显示的字段。\n我将信将疑，今天进它的官网查找了一下到底有没有这个 API，发现确实.......果然.........没有。\n不过按这个思路还是给了我解决方法，可能这个解决方法有些糙。\n比如用户信息的注册和获取，包含以下字段：\n\nusername\npassword\n\n注册的时候需要 username 、 password，然而获取的时候只需要 username 不需要 password，而 serializer 的 fields 又是定义了 username 、 password，这样很矛盾。\n解决方法是创建了一个额外的 serializer 模型，fields 里包含 username 字段。然后重写 create 方法，在 Response 之前将原先的序列化模型转换成自定义的序列化模型，然后 Response。\n具体解决方法\n定义两个 User 序列化模型，一个用于注册，一个用于显示\nclass RegisterSerializer(serializers.ModelSerializer):\n\n    class Meta:\n        model = User\n        fields = ('id', 'username', 'password')\n\nclass DisplaySerializer(serializers.ModelSerializer):\n\n    class Meta:\n        model = User\n        fields = ('id', 'username')\n重写 create 方法，注册后返回用户的基本信息，而不包含密码\ndef create(self, request, *args, **kwargs):\n        serializer = self.get_serializer(data=request.data)\n        serializer.is_valid(raise_exception=True)\n        self.perform_create(serializer)\n        headers = self.get_success_headers(serializer.data)\n        display_serializer = DisplaySerializer(data=serializer.data)\n        display_serializer.is_valid(raise_exception=False)\n        return Response(droider_serializer.data, status=status.HTTP_201_CREATED, headers=headers)\ndisplay_serializer 的 is_valid() 方法里 raise_exception 必须为 False， 因为 self.perform_create() 方法已经创建了用户，所以再次验证的时候会抛出 用户已存在 的异常，所以用 False 忽略这个异常。\n返回结果\nPOST data\n{\n    \"username\": \"username\",\n    \"password\": \"password\"\n}\nresponse data\n{\n    \"username\": \"username\"\n}\n其他方法也同理。\n原文地址：一个关于 Django Rest Framework 的梦我的博客：时空路由器\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "4"}