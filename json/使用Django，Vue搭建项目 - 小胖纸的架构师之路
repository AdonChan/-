{"title": "使用Django，Vue搭建项目 - 小胖纸的架构师之路 ", "index": "python,django,django-rest-framework,vue.js", "content": "写在前面\n为了解决后端人员不足又招聘不到的问题，决定用前后端分离的方式写项目，于是尝试用django-rest-framework跟Vue.js搭建一个项目。\n基础搭建项目的参考了一下教程使用Django + Vue.js快速而优雅地构建前后端分离项目整体来说教程写的还可以，但是实际搭完之后，其实还是有很多问题需要解决。\n首先，看一下我搭建的前端跟项目的结构。\n结构\n\n\nweb pack.config.js\nvar path = require('path')\nvar webpack = require('webpack')\n\nmodule.exports = {\n  entry:{\n    build:'./src/main.js',\n    index:'./src/index.js',\n    foot:'./src/foot.js',\n    login:'./src/login.js',\n    about_us:'./src/about_us.js',\n    sideList:'./src/sideList.js',\n  },\n  output: {\n    path: path.resolve(__dirname, './dist/'),\n    publicPath: '/dist/',\n    filename: 'static/js/[name].js'\n  },\n  module: {\n    rules: [\n      {\n        test: /\\.vue$/,\n        loader: 'vue-loader',\n        options: {\n          loaders: {\n            // Since sass-loader (weirdly) has SCSS as its default parse mode, we map\n            // the \"scss\" and \"sass\" values for the lang attribute to the right configs here.\n            // other preprocessors should work out of the box, no loader config like this necessary.\n            'scss': 'vue-style-loader!css-loader!sass-loader',\n            'sass': 'vue-style-loader!css-loader!sass-loader?indentedSyntax'\n          }\n          // other vue-loader options go here\n        }\n      },\n      {\n        test:/\\.css$/,\n        loader:'style-loader!css-loader'\n      },\n      {\n        test: /\\.js$/,\n        loader: 'babel-loader',\n        exclude: /node_modules/\n      },\n      {\n        test: /\\.(png|jpg|gif|svg)$/,\n        loader: 'file-loader',\n        options: {\n          name: 'static/img/[name].[ext]?[hash]'\n        }\n      }\n    ]\n  },\n  resolve: {\n    alias: {\n      'vue$': 'vue/dist/vue.esm.js'\n    }\n  },\n  devServer: {\n    historyApiFallback: true,\n    noInfo: true\n  },\n  performance: {\n    hints: false\n  },\n  devtool: '#eval-source-map'\n}\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports.devtool = '#source-map'\n  // http://vue-loader.vuejs.org/en/workflow/production.html\n  module.exports.plugins = (module.exports.plugins || []).concat([\n    new webpack.DefinePlugin({\n      'process.env': {\n        NODE_ENV: '\"production\"'\n      }\n    }),\n    new webpack.optimize.UglifyJsPlugin({\n      sourceMap: true,\n      compress: {\n        warnings: false\n      }\n    }),\n    new webpack.LoaderOptionsPlugin({\n      minimize: true\n    })\n  ])\n}\n\n我把Django的static文件直接指向了dist.在settings.py中设置。STATIC_URL = '/fontend/dist/static/'STATIC_ROOT = os.path.join(PROJECT_ROOT, \"../fontend/dist/static\")\nVue实现单页面渲染，把单个页面的css都压缩到js中，index.html页面代码直接引用一个js即可。\n<body>\n    <div id=\"app\"></div>\n    <script src=\"/dist/static/js/index.js\"></script>\n</body>\n有个问题需要解决，就是这种目录结构下，vue的根目录是从dist开始，索引不到fontend,而django是从fontend开始，所以上述路径/dist/static/js/index.js，vue是可以访问到的，而django访问不到，想让django访问到，就在访问静态文件时改写静态文件的路径。在urls.py中加入这样一行\nfrom django.views.static import serve\nfrom mainsys import settings\n\nurl(r'^(?P<path>.*)$', serve, {'document_root': settings.DOCUMENT_ROOT, 'show_indexes': True}),\n其中settings.py设置。DOCUMENT_ROOT = os.path.join(BASE_DIR, 'fontend/')\n先写这么多，以后遇到坑的时候再更新。\n\n                ", "mainLikeNum": ["3 "], "mainBookmarkNum": "10"}