{"title": "【译】Seaborn教程（二）选择配色方案 - Lemil ", "index": "seaborn,python", "content": "原文：http://web.stanford.edu/~mwaskom/software/seaborn/tutorial/color_palettes.html\n选择配色方案\n配色是图表设计里最重要的方面之一，因为如果配色方案好，它可以清晰展现数据的模式和规律，否则就会把这些规律和模式隐藏起来。有非常多学习可视化配色的小技巧的资源，我只讨论了series of blog posts的一部分。详情可以看Rob Simmon的more technical paper。matplotlib的文档也有一份讲述了建立彩图的各项感性属性的精彩文档。\nSeaborn让选择和使用配色方案变得简单且适用于你工作的数据种类和你想要达到的可视化目标。\n%matplotlib inline    \n\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt    \n\nsns.set(rc={\"figure.figsize\": (6, 6)})\nnp.random.seed(sum(map(ord, \"palettes\")))\n\n使用color_palette()建立配色方案\n管理不同的配色方案所使用的重要函数是color_palette()。这个函数提供一个到多数（尽管不是全部）生成颜色的可行方式的接口，并且它在任意有palette变量的函数内部使用（在某些情况下如果需要复数的色彩，color变量也需要）\ncolor_palette()将接收任何seaborn调色板和matplotlib彩图（jet除外，你永远都不应该使用它）的名字作为参数。它也可以接收一系列在任意有效的matplotlib格式（RGB tuples, hex color codes, or HTML color names）下设置好的颜色。它的返回值通常是一个RGB元组的list。\n最后，调用无参数调用color_palette()会返回当前的缺省颜色集。\n一个对应的函数set_palette()，能接收同样的参数，并且会为所有的布局设置缺省颜色集。你也可以通过在with语句里使用color_palette()来临时设置本色方案。（如下）\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "3"}