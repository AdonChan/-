{"title": "java判断百度云分享链接是否失效 - python+java+c专栏 ", "index": "网盘,百度云,java,python", "content": "我不知道现在有多少人在用网盘搜索引擎，但就去转盘网来说本人倾注了很多的心血，现在使用的人数也还可以，网盘资源都有个通病，那就是资源可能失效，但很多引擎都没有做失效判断，尤其是一些google自定义的引擎，技术含量不高，站长也就花心思赚钱，很少考虑用户体验。这篇文章是本人又一篇技术公开博客，之前本人已经公开了去转盘\n网的几乎所有的技术细节，这一篇继续补充：\n首先做个回顾：百度网盘爬虫  java分词算法 数据库自动备份 代理服务器爬取 邀请好友注册\ning:utf-8\n\"\"\"\n@author:haoning\n@create time:2015.8.5\n\"\"\"\nfrom __future__ import division  # 精确除法\nfrom Queue import Queue\nfrom __builtin__ import False\nfrom _sqlite3 import SQLITE_ALTER_TABLE\nfrom collections import OrderedDict\nimport copy\nimport datetime\nimport json\nimport math\nimport os\nimport random\nimport platform\nimport re\nimport threading, errno, datetime\nimport time\nimport urllib2\nimport MySQLdb as mdb\n\n\nDB_HOST = '127.0.0.1'\nDB_USER = 'root'\nDB_PASS = 'root'\n\n\ndef gethtml(url):\n    try:\n        print \"url\",url\n        req = urllib2.Request(url)\n        response = urllib2.urlopen(req,None,8) #在这里应该加入代理\n        html = response.read()\n        return html\n    except Exception,e:\n        print \"e\",e\n\nif __name__ == '__main__':\n\n   while 1:\n       #url='http://pan.baidu.com/share/link?uk=1813251526&shareid=540167442'\n       url=\"http://pan.baidu.com/s/1qXQD2Pm\"\n       html=gethtml(url)\n       print html\n结果：e HTTP Error 403: Forbidden，这就是说，度娘他是反爬虫的，之后看了很多网站，一不小心试了下面的链接：\nhttp://pan.baidu.com/share/li...\nif __name__ == '__main__':\n\n   while 1:\n       url='http://pan.baidu.com/share/link?uk=1813251526&shareid=540167442'\n       #url=\"http://pan.baidu.com/s/1qXQD2Pm\"\n       html=gethtml(url)\n       print html\n结果：<title>百度云 网盘-链接不存在</title>，你懂的，有这个的必然已经失效，看来度娘没有反爬虫，好家伙。\n其实百度网盘的资源入口有两种方式：\n一种是：http://pan.baidu.com/s/1qXQD2Pm,最后为短码。\n另一种是：http://pan.baidu.com/share/li...，关键是shareId+uk 前者已知道反爬虫，后者目前没有，所以用python测试后，本人又将代码翻译成了java，因为去转盘是用java写的，直接上代码：\npackage com.tray.common.utils;\n\nimport static org.junit.Assert.*;\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.net.HttpURLConnection;\nimport java.net.MalformedURLException;\nimport java.net.URL;\nimport java.util.HashMap;\nimport java.util.Iterator;\nimport java.util.Map;\nimport java.util.Properties;\nimport java.util.Random;\nimport java.util.Set;\n\nimport org.jsoup.Jsoup;\nimport org.jsoup.nodes.Document;\nimport org.jsoup.select.Elements;\nimport org.junit.Test;\n\n/**\n * 资源校验工具\n * \n * @author hui\n * \n */\npublic class ResourceCheckUtil {\n    private static Map<String, String[]> rules;\n    static {\n        loadRule();\n    }\n\n    /**\n     * 加载规则库\n     */\n    public static void loadRule() {\n        try {\n            InputStream in = ResourceCheckUtil.class.getClassLoader()\n                    .getResourceAsStream(\"rule.properties\");\n            Properties p = new Properties();\n            p.load(in);\n            Set<Object> keys = p.keySet();\n            Iterator<Object> iterator = keys.iterator();\n            String key = null;\n            String value = null;\n            String[] rule = null;\n            rules = new HashMap<String, String[]>();\n            while (iterator.hasNext()) {\n                key = (String) iterator.next();\n                value = (String) p.get(key);\n                rule = value.split(\"\\\\|\");\n                rules.put(key, rule);\n            }\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n\n    public static String httpRequest(String url) {\n        try {\n            URL u = new URL(url);\n            Random random = new Random();\n            HttpURLConnection connection = (HttpURLConnection) u\n                    .openConnection();\n            connection.setConnectTimeout(3000);//3秒超时\n            connection.setReadTimeout(3000); \n            connection.setDoOutput(true);\n            connection.setDoInput(true);\n            connection.setUseCaches(false);\n            connection.setRequestMethod(\"GET\");\n            \n            String[] user_agents = {\n                    \"Mozilla/5.0 (Windows; U; Windows NT 5.1; it; rv:1.8.1.11) Gecko/20071127 Firefox/2.0.0.11\",\n                    \"Opera/9.25 (Windows NT 5.1; U; en)\",\n                    \"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR 1.1.4322; .NET CLR 2.0.50727)\",\n                    \"Mozilla/5.0 (compatible; Konqueror/3.5; Linux) KHTML/3.5.5 (like Gecko) (Kubuntu)\",\n                    \"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.0.12) Gecko/20070731 Ubuntu/dapper-security Firefox/1.5.0.12\",\n                    \"Lynx/2.8.5rel.1 libwww-FM/2.14 SSL-MM/1.4.1 GNUTLS/1.2.9\",\n                    \"Mozilla/5.0 (X11; Linux i686) AppleWebKit/535.7 (KHTML, like Gecko) Ubuntu/11.04 Chromium/16.0.912.77 Chrome/16.0.912.77 Safari/535.7\",\n                    \"Mozilla/5.0 (X11; Ubuntu; Linux i686; rv:10.0) Gecko/20100101 Firefox/10.0 \"\n            };\n            int index=random.nextInt(7);\n            /*connection.setRequestProperty(\"Content-Type\",\n                    \"text/html;charset=UTF-8\");*/\n            connection.setRequestProperty(\"User-Agent\",user_agents[index]);\n            /*connection.setRequestProperty(\"Accept-Encoding\",\"gzip, deflate, sdch\");\n            connection.setRequestProperty(\"Accept-Language\",\"zh-CN,zh;q=0.8\");\n            connection.setRequestProperty(\"Connection\",\"keep-alive\");\n            connection.setRequestProperty(\"Host\",\"pan.baidu.com\");\n            connection.setRequestProperty(\"Cookie\",\"\");\n            connection.setRequestProperty(\"Upgrade-Insecure-Requests\",\"1\");*/\n            InputStream in = connection.getInputStream();\n\n            BufferedReader br = new BufferedReader(new InputStreamReader(in,\n                    \"utf-8\"));\n            StringBuffer sb = new StringBuffer();\n            String line = null;\n            while ((line = br.readLine()) != null) {\n                sb.append(line);\n            }\n            return sb.toString();\n\n        } catch (MalformedURLException e) {\n            e.printStackTrace();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n\n        return null;\n    }\n\n     @Test\n     public void test7() throws Exception {\n         System.out.println(isExistResource(\"http://pan.baidu.com/s/1jGjBmyq\",\n         \"baidu\"));\n         System.out.println(isExistResource(\"http://pan.baidu.com/s/1jGjBmyqa\",\n         \"baidu\"));\n        \n         System.out.println(isExistResource(\"http://yunpan.cn/cQx6e6xv38jTd\",\"360\"));\n         System.out.println(isExistResource(\"http://yunpan.cn/cQx6e6xv38jTdd\",\n         \"360\"));\n        \n         System.out.println(isExistResource(\"http://share.weiyun.com/ec4f41f0da292adb89a745200b8e8b57\",\"weiyun\"));\n         System.out.println(isExistResource(\"http://share.weiyun.com/ec4f41f0da292adb89a745200b8e8b57dd\",\n         \"360\"));\n        \n         System.out.println(isExistResource(\"http://cloud.letv.com/s/eiGLzuSes\",\"leshi\"));\n         System.out.println(isExistResource(\"http://cloud.letv.com/s/eiGLzuSesdd\",\n         \"leshi\"));\n     }\n\n    /**\n     * 获取指定页面上标签的内容\n     * \n     * @param url\n     * @param tagName\n     *            标签名称\n     * @return\n     */\n    private static String getHtmlContent(String url, String tagName) {\n        String html = httpRequest(url);\n        if(html==null){\n            return \"\";\n        }\n        Document doc = Jsoup.parse(html);\n        //System.out.println(\"doc======\"+doc);\n        Elements tag=null;\n        if(tagName.equals(\"<h3>\")){ //针对微云\n            tag=doc.select(\"h3\");\n        }\n        else if(tagName.equals(\"class\")){ //针对360\n            tag=doc.select(\"div[class=tip]\");\n        }\n        else{\n            tag= doc.getElementsByTag(tagName);\n        }\n        //System.out.println(\"tag======\"+tag);\n        String content=\"\";\n        if(tag!=null&&!tag.isEmpty()){\n            content = tag.get(0).text();\n        }\n        return content;\n    }\n\n    public static int isExistResource(String url, String ruleName) {\n        try {\n            String[] rule = rules.get(ruleName);\n            String tagName = rule[0];\n            String opt = rule[1];\n            String flag = rule[2];\n            /*System.out.println(\"ruleName\"+ruleName);\n            System.out.println(\"tagName\"+tagName);\n            System.out.println(\"opt\"+opt);\n            System.out.println(\"flag\"+flag);\n            System.out.println(\"url\"+url);*/\n            String content = getHtmlContent(url, tagName);\n            //System.out.println(\"content=\"+content);\n            if(ruleName.equals(\"baidu\")){\n                if(content.contains(\"百度云升级\")){ //升级作为不存在处理\n                    return 1;\n                }\n            }\n            String regex = null;\n            if (\"eq\".equals(opt)) {\n                regex = \"^\" + flag + \"$\";\n            } else if (\"bg\".equals(opt)) {\n                regex = \"^\" + flag + \".*$\";\n            } else if (\"ed\".equals(opt)) {\n                regex = \"^.*\" + flag + \"$\";\n            } else if (\"like\".equals(opt)) {\n                regex = \"^.*\" + flag + \".*$\";\n            }else if(\"contain\".equals(opt)){\n                if(content.contains(flag)){\n                    return 0;\n                }\n                else{\n                    return 1;\n                }\n            }\n            if(content.matches(regex)){\n                return 1;\n            }\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n        return 0;\n    }\n\n    // public static void main(String[] args)throws Exception {\n    // final Path p = Paths.get(\"C:/Users/hui/Desktop/6-14/\");\n    // final WatchService watchService =\n    // FileSystems.getDefault().newWatchService();\n    // p.register(watchService, StandardWatchEventKinds.ENTRY_MODIFY);\n    // new Thread(new Runnable() {\n    //\n    // public void run() {\n    // while(true){\n    // System.out.println(\"检测中。。。。\");\n    // try {\n    // WatchKey watchKey = watchService.take();\n    // List<WatchEvent<?>> watchEvents = watchKey.pollEvents();\n    //\n    // for(WatchEvent<?> event : watchEvents){\n    // //TODO 根据事件类型采取不同的操作。。。。。。。\n    // System.out.println(\"[\"+p.getFileName()+\"/\"+event.context()+\"]文件发生了[\"+event.kind()+\"]事件\");\n    // }\n    // watchKey.reset();\n    //\n    // } catch (Exception e) {\n    // e.printStackTrace();\n    // }\n    // }\n    // }\n    // }).start();\n    // }\n    \n//    @Test\n//    public void testName() throws Exception {\n//        System.out.println(new String(\"\\u8BF7\\u8F93\\u5165\\u63D0\\u53D6\\u7801\".getBytes(\"utf-8\"), \"utf-8\"));\n//    }\n\n}\n注意代码本生要用来兼容360，微盘等网盘的，但有些网盘倒了，大家都知道，不过代码还是得在，这才是程序猿该有的思路，那就是可宽展，注意代码有个配置文件，我也附上吧：\n360=class|contain|u5206u4EABu8005u5DF2u53D6u6D88u6B64u5206u4EABbaidu=title|contain|u94FEu63A5u4E0Du5B58u5728weiyun=<h3>|contain|u5206u4EABu8D44u6E90u5DF2u7ECFu5220u9664leshi=title|ed|u63D0u53D6u6587u4EF6\nsorry，unicode编码，麻烦你自己转下码吧，不会请百度：unicode转码工具\n到此，去转盘网链接是否失效的验证，代码我已经完全公开，喜欢这篇博客的孩子请收藏并关注下。\n本人建个qq群，欢迎大家一起交流技术， 群号：512245829 喜欢微博的朋友关注：转盘娱乐即可\n\n                ", "mainLikeNum": ["0 "], "mainBookmarkNum": "5"}